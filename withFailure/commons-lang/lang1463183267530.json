{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":0,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":1,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":4,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":2,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":5,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":3},"transformations":[{"failures":[],"tindex":"188d6660-1965-11e6-8de8-a3f03681b8db","series":0,"name":"replace","transplant":{"toString":"wait()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:307","type":"CtInvocationImpl","sourcecode":"wait()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (suffix == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtIfImpl","sourcecode":"if (suffix == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} "},"status":-2},{"failures":[],"tindex":"188d8d71-1965-11e6-8de8-dbfae36c6d3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Arguments cannot both be null\")","position":"org.apache.commons.lang3.ArrayUtils:4013","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Arguments cannot both be null\")"},"status":-2},{"failures":[],"tindex":"188d8d72-1965-11e6-8de8-333ccac94a32","series":0,"name":"replace","transplant":{"toString":"if (type instanceof java.lang.Class<?>) {\n    final java.lang.Class<?> clazz = ((java.lang.Class<?>)(type));\n    return clazz.isArray() ? clazz.getComponentType() : null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1345","type":"CtIfImpl","sourcecode":"if (type instanceof java.lang.Class<?>) {\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n    return clazz.isArray() ? clazz.getComponentType() : null;\n} "},"variableMap":{"type":"type"},"type":"adrStmt","transplantationPoint":{"toString":"if (type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType p = ((java.lang.reflect.ParameterizedType)(type));\n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> parameterizedTypeArguments;\n    if ((p.getOwnerType()) == null) {\n        parameterizedTypeArguments = typeArguments;\n    } else {\n        parameterizedTypeArguments = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(typeArguments);\n        parameterizedTypeArguments.putAll(org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(p));\n    }\n    final java.lang.reflect.Type[] args = p.getActualTypeArguments();\n    for (int i = 0 ; i < (args.length) ; i++) {\n        final java.lang.reflect.Type unrolled = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(parameterizedTypeArguments, args[i]);\n        if (unrolled != null) {\n            args[i] = unrolled;\n        } \n    }\n    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(p.getOwnerType(), ((java.lang.Class<?>)(p.getRawType())), args);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1371","type":"CtIfImpl","sourcecode":"if (type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n    if ((p.getOwnerType()) == null) {\n        parameterizedTypeArguments = typeArguments;\n    } else {\n        parameterizedTypeArguments = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(typeArguments);\n        parameterizedTypeArguments.putAll(org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(p));\n    }\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = p.getActualTypeArguments();\n    for (int int = 0 ; i < (args.int) ; i++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(parameterizedTypeArguments, args[i]);\n        if (unrolled != null) {\n            args[i] = unrolled;\n        } \n    }\n    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(p.getOwnerType(), ((java.lang.Class<?>)(p.getRawType())), args);\n} "},"status":0},{"failures":[0,1],"tindex":"188ddb93-1965-11e6-8de8-8db35ed6cd33","series":0,"name":"replace","transplant":{"toString":"min = array[i]","position":"org.apache.commons.lang3.math.NumberUtils:865","type":"CtAssignmentImpl","sourcecode":"min = array[i]"},"variableMap":{"min":"tmp","array":"array","i":"i"},"type":"adrStmt","transplantationPoint":{"toString":"array[i] = tmp","position":"org.apache.commons.lang3.ArrayUtils:1618","type":"CtAssignmentImpl","sourcecode":"array[i] = tmp"},"status":-1},{"failures":[],"tindex":"188ddb94-1965-11e6-8de8-2d1cfc22d89e","series":0,"name":"replace","transplant":{"toString":"return joinedArray","position":"org.apache.commons.lang3.ArrayUtils:3800","type":"CtReturnImpl","sourcecode":"return joinedArray"},"variableMap":{"joinedArray":"destination"},"type":"adrStmt","transplantationPoint":{"toString":"return destination","position":"org.apache.commons.lang3.text.StrBuilder:398","type":"CtReturnImpl","sourcecode":"return destination"},"status":-3},{"failures":[2,3],"tindex":"188e9ee5-1965-11e6-8de8-fb838919eded","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final char element : array) {\n    append(element);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:660","type":"CtForEachImpl","sourcecode":"for (final char char : array) {\n    append(element);\n}"},"status":-1},{"failures":[],"tindex":"188e9ee6-1965-11e6-8de8-2df735250929","series":0,"name":"add","transplant":{"toString":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:1046","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")"},"status":-2},{"failures":[],"tindex":"188e9ee7-1965-11e6-8de8-db823ddd805e","series":0,"name":"replace","transplant":{"toString":"int result = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl","sourcecode":"int int = 73 << 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int start = 0","position":"org.apache.commons.lang3.StringUtils:3085","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[4],"tindex":"188eed08-1965-11e6-8de8-4196d98d96dd","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.lang3.text.StrBuilder.this","position":"org.apache.commons.lang3.text.StrBuilder:1081","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return insert(index, java.lang.String.valueOf(value))","position":"org.apache.commons.lang3.text.StrBuilder:1624","type":"CtReturnImpl","sourcecode":"return insert(index, java.lang.String.valueOf(value))"},"status":-1},{"failures":[],"tindex":"188eed09-1965-11e6-8de8-773aaf36ebec","series":0,"name":"replace","transplant":{"toString":"if (len < (size)) {\n    delete(len, size);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2054","type":"CtIfImpl","sourcecode":"if (len < (int)) {\n    delete(len, int);\n} "},"variableMap":{"len":"boundary","size":"boundary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < boundary ; i++) {\n    p[i] = i;\n}","position":"org.apache.commons.lang3.StringUtils:6926","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < boundary ; i++) {\n    p[i] = i;\n}"},"status":-3},{"failures":[5],"tindex":"188f141a-1965-11e6-8de8-d9971cdbbdb1","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2656","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"188f141b-1965-11e6-8de8-cfdd9d73ef1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\")","position":"org.apache.commons.lang3.RandomUtils:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\")"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":12,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}