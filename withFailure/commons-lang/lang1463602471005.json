{"failureDictionary":{"org.apache.commons.lang3.exception.ExceptionUtilsTest.testRemoveCommonFrames_ListList":5,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":7,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOf":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":2,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":8,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup_nullMap":1,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":13,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":3,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":9,"org.apache.commons.lang3.text.StrLookupTest.testNoneLookup":0,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfWithStartIndex":12,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":10,"org.apache.commons.lang3.ArrayUtilsTest.testReverseIntRange":14},"transformations":[{"failures":[0,1],"tindex":"2158d285-1d35-11e6-ac9f-b1267b4963a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((map) == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:162","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.String, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"215920a6-1d35-11e6-ac9f-a5054c3a7f57","series":0,"name":"replace","transplant":{"toString":"if (((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) > 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) > 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:692","type":"CtIfImpl","sourcecode":"if (((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) > 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) > 0)) {\n    break;\n} "},"variableMap":{"len":"length","srcChars":"buffer","start":"offset","removeLen":"length"},"type":"adrStmt","transplantationPoint":{"toString":"if ((pos > offset) && ((chars[(pos - 1)]) == escape)) {\n    buf.deleteCharAt((pos - 1));\n    chars = buf.buffer;\n    lengthChange--;\n    altered = true;\n    bufEnd--;\n} else {\n    final int startPos = pos;\n    pos += startMatchLen;\n    int endMatchLen = 0;\n    int nestedVarCount = 0;\n    while (pos < bufEnd) {\n        if (substitutionInVariablesEnabled && ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0)) {\n            nestedVarCount++;\n            pos += endMatchLen;\n            continue;\n        } \n        endMatchLen = suffMatcher.isMatch(chars, pos, offset, bufEnd);\n        if (endMatchLen == 0) {\n            pos++;\n        } else {\n            if (nestedVarCount == 0) {\n                java.lang.String varNameExpr = new java.lang.String(chars , (startPos + startMatchLen) , ((pos - startPos) - startMatchLen));\n                if (substitutionInVariablesEnabled) {\n                    final org.apache.commons.lang3.text.StrBuilder bufName = new org.apache.commons.lang3.text.StrBuilder(varNameExpr);\n                    substitute(bufName, 0, bufName.length());\n                    varNameExpr = bufName.toString();\n                } \n                pos += endMatchLen;\n                final int endPos = pos;\n                java.lang.String varName = varNameExpr;\n                java.lang.String varDefaultValue = null;\n                if (valueDelimMatcher != null) {\n                    final char[] varNameExprChars = varNameExpr.toCharArray();\n                    int valueDelimiterMatchLen = 0;\n                    for (int i = 0 ; i < (varNameExprChars.length) ; i++) {\n                        if ((!substitutionInVariablesEnabled) && ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length)) != 0)) {\n                            break;\n                        } \n                        if ((valueDelimiterMatchLen = valueDelimMatcher.isMatch(varNameExprChars, i)) != 0) {\n                            varName = varNameExpr.substring(0, i);\n                            varDefaultValue = varNameExpr.substring((i + valueDelimiterMatchLen));\n                            break;\n                        } \n                    }\n                } \n                if (priorVariables == null) {\n                    priorVariables = new java.util.ArrayList<java.lang.String>();\n                    priorVariables.add(new java.lang.String(chars , offset , length));\n                } \n                checkCyclicSubstitution(varName, priorVariables);\n                priorVariables.add(varName);\n                java.lang.String varValue = resolveVariable(varName, buf, startPos, endPos);\n                if (varValue == null) {\n                    varValue = varDefaultValue;\n                } \n                if (varValue != null) {\n                    final int varLen = varValue.length();\n                    buf.replace(startPos, endPos, varValue);\n                    altered = true;\n                    int change = substitute(buf, startPos, varLen, priorVariables);\n                    change = (change + varLen) - (endPos - startPos);\n                    pos += change;\n                    bufEnd += change;\n                    lengthChange += change;\n                    chars = buf.buffer;\n                } \n                priorVariables.remove(((priorVariables.size()) - 1));\n                break;\n            } else {\n                nestedVarCount--;\n                pos += endMatchLen;\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl","sourcecode":"if ((pos > offset) && ((chars[(pos - 1)]) == escape)) {\n    buf.deleteCharAt((pos - 1));\n    chars = buf.char[];\n    lengthChange--;\n    altered = true;\n    bufEnd--;\n} else {\n    final int int = pos;\n    pos += startMatchLen;\n    int int = 0;\n    int int = 0;\n    while (pos < bufEnd) {\n        if (substitutionInVariablesEnabled && ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0)) {\n            nestedVarCount++;\n            pos += endMatchLen;\n            continue;\n        } \n        endMatchLen = suffMatcher.isMatch(chars, pos, offset, bufEnd);\n        if (endMatchLen == 0) {\n            pos++;\n        } else {\n            if (nestedVarCount == 0) {\n                java.lang.String java.lang.String = new java.lang.String(chars , (startPos + startMatchLen) , ((pos - startPos) - startMatchLen));\n                if (substitutionInVariablesEnabled) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(varNameExpr);\n                    substitute(bufName, 0, bufName.length());\n                    varNameExpr = bufName.toString();\n                } \n                pos += endMatchLen;\n                final int int = pos;\n                java.lang.String java.lang.String = varNameExpr;\n                java.lang.String java.lang.String = null;\n                if (valueDelimMatcher != null) {\n                    final char[] char[] = varNameExpr.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; i < (varNameExprChars.int) ; i++) {\n                        if ((!substitutionInVariablesEnabled) && ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.int)) != 0)) {\n                            break;\n                        } \n                        if ((valueDelimiterMatchLen = valueDelimMatcher.isMatch(varNameExprChars, i)) != 0) {\n                            varName = varNameExpr.substring(0, i);\n                            varDefaultValue = varNameExpr.substring((i + valueDelimiterMatchLen));\n                            break;\n                        } \n                    }\n                } \n                if (priorVariables == null) {\n                    priorVariables = new java.util.ArrayList<java.lang.String>();\n                    priorVariables.add(new java.lang.String(chars , offset , length));\n                } \n                checkCyclicSubstitution(varName, priorVariables);\n                priorVariables.add(varName);\n                java.lang.String java.lang.String = resolveVariable(varName, buf, startPos, endPos);\n                if (varValue == null) {\n                    varValue = varDefaultValue;\n                } \n                if (varValue != null) {\n                    final int int = varValue.length();\n                    buf.replace(startPos, endPos, varValue);\n                    altered = true;\n                    int int = substitute(buf, startPos, varLen, priorVariables);\n                    change = (change + varLen) - (endPos - startPos);\n                    pos += change;\n                    bufEnd += change;\n                    lengthChange += change;\n                    chars = buf.char[];\n                } \n                priorVariables.remove(((priorVariables.size()) - 1));\n                break;\n            } else {\n                nestedVarCount--;\n                pos += endMatchLen;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"21596ec7-1d35-11e6-ac9f-c571f03037c0","series":0,"name":"replace","transplant":{"toString":"start = len","position":"org.apache.commons.lang3.StringUtils:4949","type":"CtAssignmentImpl","sourcecode":"start = len"},"variableMap":{"len":"i","start":"srcPos"},"type":"adrStmt","transplantationPoint":{"toString":"shift = (i * 1) + srcPos","position":"org.apache.commons.lang3.Conversion:1663","type":"CtAssignmentImpl","sourcecode":"shift = (i * 1) + srcPos"},"status":-2},{"failures":[],"tindex":"215995d8-1d35-11e6-ac9f-23b7dd97afbe","series":0,"name":"replace","transplant":{"toString":"return typeArguments.clone()","position":"org.apache.commons.lang3.reflect.TypeUtils:184","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type[].clone()"},"variableMap":{"typeArguments":"result"},"type":"adrStmt","transplantationPoint":{"toString":"return result","position":"org.apache.commons.lang3.reflect.TypeUtils:1417","type":"CtReturnImpl","sourcecode":"return result"},"status":-3},{"failures":[],"tindex":"215995d9-1d35-11e6-ac9f-4bdb27c407ba","series":0,"name":"replace","transplant":{"toString":"if (fieldSeparator == null) {\n    fieldSeparator = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtIfImpl","sourcecode":"if (fieldSeparator == null) {\n    fieldSeparator = \"\";\n} "},"variableMap":{"fieldSeparator":"message"},"type":"adrStmt","transplantationPoint":{"toString":"if (chars == null) {\n    throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n} ","position":"org.apache.commons.lang3.Validate:394","type":"CtIfImpl","sourcecode":"if (chars == null) {\n    throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n} "},"status":-2},{"failures":[],"tindex":"215995da-1d35-11e6-ac9f-190991c94211","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"u = -t","position":"org.apache.commons.lang3.math.Fraction:615","type":"CtAssignmentImpl","sourcecode":"u = -t"},"status":-2},{"failures":[],"tindex":"2159bceb-1d35-11e6-ac9f-c1e3a25afb05","series":0,"name":"replace","transplant":{"toString":"if (tmp < ret) {\n    ret = tmp;\n} ","position":"org.apache.commons.lang3.StringUtils:1983","type":"CtIfImpl","sourcecode":"if (tmp < ret) {\n    ret = tmp;\n} "},"variableMap":{"ret":"pos","tmp":"quoteLen"},"type":"adrStmt","transplantationPoint":{"toString":"if ((quoteLen > 0) && (isQuote(srcChars, pos, len, quoteStart, quoteLen))) {\n    quoting = true;\n    pos += quoteLen;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:786","type":"CtIfImpl","sourcecode":"if ((quoteLen > 0) && (isQuote(srcChars, pos, len, quoteStart, quoteLen))) {\n    quoting = true;\n    pos += quoteLen;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"2159bcec-1d35-11e6-ac9f-3f15924a573a","series":0,"name":"add","transplant":{"toString":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:602","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[2],"tindex":"2159bced-1d35-11e6-ac9f-2322c5ce2808","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"lengthChange += change","position":"org.apache.commons.lang3.text.StrSubstitutor:859","type":"CtOperatorAssignmentImpl","sourcecode":"lengthChange += change"},"status":-1},{"failures":[3,4],"tindex":"2159bcee-1d35-11e6-ac9f-2dffba9df778","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.lang3.tuple.Triple:112","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"2159e3ff-1d35-11e6-ac9f-c9c58a5e0848","series":0,"name":"replace","transplant":{"toString":"size = length","position":"org.apache.commons.lang3.text.StrBuilder:204","type":"CtAssignmentImpl","sourcecode":"int = length"},"variableMap":{"size":"startIndex","length":"length"},"type":"adrStmt","transplantationPoint":{"toString":"startIndex = (array.length) - 1","position":"org.apache.commons.lang3.ArrayUtils:2659","type":"CtAssignmentImpl","sourcecode":"startIndex = (array.int) - 1"},"status":-3},{"failures":[5],"tindex":"2159e400-1d35-11e6-ac9f-13081e27eeb7","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.CompareToBuilder:326","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"The List must not be null\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:552","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The List must not be null\")"},"status":-1},{"failures":[6,7,8,9],"tindex":"2159e401-1d35-11e6-ac9f-1936a17a2c74","series":0,"name":"add","transplant":{"toString":"timeZone = java.util.TimeZone.getDefault()","position":"org.apache.commons.lang3.time.FormatCache:74","type":"CtAssignmentImpl","sourcecode":"timeZone = java.util.TimeZone.getDefault()"},"variableMap":{"timeZone":"tz"},"type":"adrStmt","transplantationPoint":{"toString":"tz = java.util.TimeZone.getTimeZone(value)","position":"org.apache.commons.lang3.time.FastDateParser:787","type":"CtAssignmentImpl","sourcecode":"tz = java.util.TimeZone.getTimeZone(value)"},"status":-1},{"failures":[10],"tindex":"215a0b12-1d35-11e6-ac9f-03d015a04bb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"diffs.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long>(fieldName) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Long getLeft() {\n        return java.lang.Long.valueOf(lhs);\n    }\n\n    @java.lang.Override\n    public java.lang.Long getRight() {\n        return java.lang.Long.valueOf(rhs);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:641","type":"CtInvocationImpl","sourcecode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long>(fieldName) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Long getLeft() {\n        return java.lang.Long.valueOf(lhs);\n    }\n\n    @java.lang.Override\n    public java.lang.Long getRight() {\n        return java.lang.Long.valueOf(rhs);\n    }\n})"},"status":-1},{"failures":[],"tindex":"215c5503-1d35-11e6-ac9f-3d68d0926877","series":0,"name":"replace","transplant":{"toString":"if (startIndex < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2782","type":"CtIfImpl","sourcecode":"if (startIndex < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n} "},"variableMap":{"startIndex":"loopIndex"},"type":"adrStmt","transplantationPoint":{"toString":"if ((separator != null) && (loopIndex > 0)) {\n    append(separator);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1321","type":"CtIfImpl","sourcecode":"if ((separator != null) && (loopIndex > 0)) {\n    append(separator);\n} "},"status":-2},{"failures":[11,12],"tindex":"215d6674-1d35-11e6-ac9f-a5d863d802ed","series":0,"name":"replace","transplant":{"toString":"return startIndex","position":"org.apache.commons.lang3.text.StrBuilder:2346","type":"CtReturnImpl","sourcecode":"return startIndex"},"variableMap":{"startIndex":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((array[i]) == null) {\n    return i;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1964","type":"CtIfImpl","sourcecode":"if ((array[i]) == null) {\n    return i;\n} "},"status":-1},{"failures":[],"tindex":"215d8d85-1d35-11e6-ac9f-699b2a726020","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw ex","position":"org.apache.commons.lang3.AnnotationUtils:204","type":"CtThrowImpl","sourcecode":"throw ex"},"status":0},{"failures":[],"tindex":"215d8d86-1d35-11e6-ac9f-354efe7b01aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle.this.setContentStart(\"[\")","position":"org.apache.commons.lang3.builder.ToStringStyle:2265","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle.this.setContentStart(\"[\")"},"status":0},{"failures":[],"tindex":"215d8d87-1d35-11e6-ac9f-2d8354b53809","series":0,"name":"add","transplant":{"toString":"final java.util.EnumSet<E> condensed = java.util.EnumSet.noneOf(enumClass)","position":"org.apache.commons.lang3.EnumUtils:226","type":"CtLocalVariableImpl","sourcecode":"final java.util.EnumSet<E> java.util.EnumSet<E> = java.util.EnumSet.noneOf(enumClass)"},"variableMap":{"enumClass":"enumClass"},"type":"adrStmt","transplantationPoint":{"toString":"final java.util.EnumSet<E> results = java.util.EnumSet.noneOf(org.apache.commons.lang3.EnumUtils.asEnum(enumClass))","position":"org.apache.commons.lang3.EnumUtils:268","type":"CtLocalVariableImpl","sourcecode":"final java.util.EnumSet<E> java.util.EnumSet<E> = java.util.EnumSet.noneOf(org.apache.commons.lang3.EnumUtils.asEnum(enumClass))"},"status":-2},{"failures":[],"tindex":"215d8d88-1d35-11e6-ac9f-5bde728310f5","series":0,"name":"add","transplant":{"toString":"return new java.lang.StringBuilder(str).reverse().toString()","position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder(str).reverse().toString()"},"variableMap":{"str":"org.apache.commons.lang3.StringUtils.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.lang3.StringUtils.EMPTY","position":"org.apache.commons.lang3.StringUtils:3567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String"},"status":-2},{"failures":[13,14],"tindex":"215db499-1d35-11e6-ac9f-a509bdd4f4fc","series":0,"name":"replace","transplant":{"toString":"pos += ignoredLen","position":"org.apache.commons.lang3.text.StrTokenizer:795","type":"CtOperatorAssignmentImpl","sourcecode":"pos += ignoredLen"},"variableMap":{"ignoredLen":"j","pos":"j"},"type":"adrStmt","transplantationPoint":{"toString":"j--","position":"org.apache.commons.lang3.ArrayUtils:1759","type":"CtUnaryOperatorImpl","sourcecode":"j--"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":21,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}