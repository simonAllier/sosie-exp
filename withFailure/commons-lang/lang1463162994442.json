{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":10,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":8,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":3,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":11,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":9,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":5,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullInput":1,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":4,"org.apache.commons.lang3.SerializationUtilsTest.testPrimitiveTypeClassSerialization":2,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":7,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":6,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":12,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":0},"transformations":[{"failures":[0],"tindex":"e4d8994b-1935-11e6-9b03-b76e102a3e52","series":0,"name":"replace","transplant":{"toString":"if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1327","type":"CtIfImpl","sourcecode":"if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} "},"variableMap":{"nBytes":"index","srcPos":"index"},"type":"adrStmt","transplantationPoint":{"toString":"validateIndex(index)","position":"org.apache.commons.lang3.text.StrBuilder:1548","type":"CtInvocationImpl","sourcecode":"validateIndex(index)"},"status":-1},{"failures":[1],"tindex":"e4d8e76c-1935-11e6-9b03-15750ecc13e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:1010","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")"},"status":-1},{"failures":[],"tindex":"e4d8e76d-1935-11e6-9b03-a9b372dd66cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"appendSummary(buffer, fieldName, ((double[])(value)))","position":"org.apache.commons.lang3.builder.ToStringStyle:533","type":"CtInvocationImpl","sourcecode":"appendSummary(buffer, fieldName, ((double[])(value)))"},"status":0},{"failures":[],"tindex":"e4d8e76e-1935-11e6-9b03-872443b509ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.INSTANCE_NO_COLON","position":"org.apache.commons.lang3.time.FastDatePrinter:268","type":"CtAssignmentImpl","sourcecode":"rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule"},"status":-2},{"failures":[2],"tindex":"e4d8e76f-1935-11e6-9b03-f7663d277f0c","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"byte\", byte.class)","position":"org.apache.commons.lang3.SerializationUtils:300","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"byte\", byte.byte.java.lang.Class)"},"variableMap":{"byte.class":"short.class","org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.primitiveTypes":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.primitiveTypes"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"short\", short.class)","position":"org.apache.commons.lang3.SerializationUtils:301","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"short\", short.short.java.lang.Class)"},"status":-1},{"failures":[],"tindex":"e4d90e80-1935-11e6-9b03-8330bdc13b41","series":0,"name":"add","transplant":{"toString":"return (ch >= '0') && (ch <= '9')","position":"org.apache.commons.lang3.CharUtils:517","type":"CtReturnImpl","sourcecode":"return (ch >= '0') && (ch <= '9')"},"variableMap":{"ch":"c2"},"type":"adrStmt","transplantationPoint":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:209","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"e4d90e81-1935-11e6-9b03-618fef2d0b47","series":0,"name":"add","transplant":{"toString":"if ((org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject()) == null) {\n    return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStyle().getNullText();\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:684","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject()) == null) {\n    return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStyle().getNullText();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.lang3.StringUtils:5412","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"e4d93592-1935-11e6-9b03-f92566faa043","series":0,"name":"replace","transplant":{"toString":"java.lang.Class<?> testClass","position":"org.apache.commons.lang3.builder.EqualsBuilder:338","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.Class<?> cls = target.getClass()","position":"org.apache.commons.lang3.reflect.FieldUtils:793","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = target.getClass()"},"status":-2},{"failures":[3,4,5,6,7,8],"tindex":"e4d93593-1935-11e6-9b03-db9d4b633820","series":0,"name":"replace","transplant":{"toString":"if ((((nHex - 1) * 4) + dstPos) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:942","type":"CtIfImpl","sourcecode":"if ((((nHex - 1) * 4) + dstPos) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} "},"variableMap":{"dstPos":"fmtCount","nHex":"fmtCount"},"type":"adrStmt","transplantationPoint":{"toString":"while ((pos.getIndex()) < (pattern.length())) {\n    switch (c[pos.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.QUOTE :\n            appendQuotedString(pattern, pos, stripCustom, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.START_FE :\n            fmtCount++;\n            seekNonWs(pattern, pos);\n            final int start = pos.getIndex();\n            final int index = readArgumentIndex(pattern, next(pos));\n            stripCustom.append(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FE).append(index);\n            seekNonWs(pattern, pos);\n            java.text.Format format = null;\n            java.lang.String formatDescription = null;\n            if ((c[pos.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT)) {\n                formatDescription = parseFormatDescription(pattern, next(pos));\n                format = getFormat(formatDescription);\n                if (format == null) {\n                    stripCustom.append(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT).append(formatDescription);\n                } \n            } \n            foundFormats.add(format);\n            foundDescriptions.add((format == null ? null : formatDescription));\n            org.apache.commons.lang3.Validate.isTrue(((foundFormats.size()) == fmtCount));\n            org.apache.commons.lang3.Validate.isTrue(((foundDescriptions.size()) == fmtCount));\n            if ((c[pos.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.END_FE)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + start));\n            } \n        default :\n            stripCustom.append(c[pos.getIndex()]);\n            next(pos);\n    }\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:157","type":"CtWhileImpl","sourcecode":"while ((pos.getIndex()) < (pattern.length())) {\n    switch (c[pos.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            appendQuotedString(pattern, pos, stripCustom, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            fmtCount++;\n            seekNonWs(pattern, pos);\n            final int int = pos.getIndex();\n            final int int = readArgumentIndex(pattern, next(pos));\n            stripCustom.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(index);\n            seekNonWs(pattern, pos);\n            java.text.Format java.text.Format = null;\n            java.lang.String java.lang.String = null;\n            if ((c[pos.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                formatDescription = parseFormatDescription(pattern, next(pos));\n                format = getFormat(formatDescription);\n                if (format == null) {\n                    stripCustom.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(formatDescription);\n                } \n            } \n            foundFormats.add(format);\n            foundDescriptions.add((format == null ? null : formatDescription));\n            org.apache.commons.lang3.Validate.isTrue(((foundFormats.size()) == fmtCount));\n            org.apache.commons.lang3.Validate.isTrue(((foundDescriptions.size()) == fmtCount));\n            if ((c[pos.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + start));\n            } \n        default :\n            stripCustom.append(c[pos.getIndex()]);\n            next(pos);\n    }\n}"},"status":-1},{"failures":[],"tindex":"e4d983b4-1935-11e6-9b03-c5147bc9da82","series":0,"name":"replace","transplant":{"toString":"return getObject()","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:81","type":"CtReturnImpl","sourcecode":"return getObject()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return collection","position":"org.apache.commons.lang3.Validate:692","type":"CtReturnImpl","sourcecode":"return collection"},"status":-2},{"failures":[9,10],"tindex":"e4d983b5-1935-11e6-9b03-e78c4eb9db24","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false)","position":"org.apache.commons.lang3.text.StrTokenizer:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)"},"variableMap":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.commaMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.commaMatcher())"},"status":-1},{"failures":[],"tindex":"e4d983b6-1935-11e6-9b03-8b248d7d914f","series":0,"name":"replace","transplant":{"toString":"final double[] subarray = new double[newSize]","position":"org.apache.commons.lang3.ArrayUtils:1129","type":"CtLocalVariableImpl","sourcecode":"final double[] double[] = new double[newSize]"},"variableMap":{"newSize":"length"},"type":"adrStmt","transplantationPoint":{"toString":"final double[] result = new double[array.length]","position":"org.apache.commons.lang3.ArrayUtils:3325","type":"CtLocalVariableImpl","sourcecode":"final double[] double[] = new double[array.int]"},"status":-2},{"failures":[11],"tindex":"e4d9aac7-1935-11e6-9b03-c5cb7518cf6b","series":0,"name":"replace","transplant":{"toString":"u /= 2","position":"org.apache.commons.lang3.math.Fraction:597","type":"CtOperatorAssignmentImpl","sourcecode":"u /= 2"},"variableMap":{"u":"endIndexExclusive"},"type":"adrStmt","transplantationPoint":{"toString":"endIndexExclusive = array.length","position":"org.apache.commons.lang3.ArrayUtils:1082","type":"CtAssignmentImpl","sourcecode":"endIndexExclusive = array.int"},"status":-1},{"failures":[],"tindex":"e4d9aac8-1935-11e6-9b03-b32e029db1b7","series":0,"name":"replace","transplant":{"toString":"if ((org.apache.commons.lang3.time.StopWatch.this.runningState) != (org.apache.commons.lang3.time.StopWatch.State.UNSTARTED)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch already started. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:181","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.lang3.time.StopWatch.this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch already started. \");\n} "},"variableMap":{"runningState":"array","org.apache.commons.lang3.time.StopWatch.State.UNSTARTED":"array"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < length ; i++) {\n    final java.lang.Object item = java.lang.reflect.Array.get(array, i);\n    if (i > 0) {\n        buffer.append(arraySeparator);\n    } \n    if (item == null) {\n        appendNullText(buffer, fieldName);\n    } else {\n        appendInternal(buffer, fieldName, item, arrayContentDetail);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:927","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < length ; i++) {\n    final java.lang.Object java.lang.Object = java.lang.reflect.Array.get(array, i);\n    if (i > 0) {\n        buffer.append(java.lang.String);\n    } \n    if (item == null) {\n        appendNullText(buffer, fieldName);\n    } else {\n        appendInternal(buffer, fieldName, item, boolean);\n    }\n}"},"status":-3},{"failures":[12],"tindex":"e4d9d1d9-1935-11e6-9b03-1f2f5f46d350","series":0,"name":"replace","transplant":{"toString":"if ((((nHexs - 1) * 4) + srcPos) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1433","type":"CtIfImpl","sourcecode":"if ((((nHexs - 1) * 4) + srcPos) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} "},"variableMap":{"srcPos":"hash","nHexs":"hash"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.Object object : objects) {\n    int tmpHash = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n    hash = (hash * 31) + tmpHash;\n}","position":"org.apache.commons.lang3.ObjectUtils:241","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : objects) {\n    int int = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n    hash = (hash * 31) + tmpHash;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":15,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}