{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d38db2ba-1991-11e6-b355-b7d4a6da3e09","series":0,"name":"add","transplant":{"toString":"final int hours = offset / ((60 * 60) * 1000)","position":"org.apache.commons.lang3.time.FastDatePrinter:1204","type":"CtLocalVariableImpl","sourcecode":"final int int = offset / ((60 * 60) * 1000)"},"variableMap":{"offset":"mask"},"type":"adrStmt","transplantationPoint":{"toString":"int bit_pattern = mask","position":"org.apache.commons.lang3.BitField:40","type":"CtLocalVariableImpl","sourcecode":"int int = mask"},"status":-2},{"failures":[],"tindex":"d38dd9cb-1991-11e6-b355-cf656728b278","series":0,"name":"add","transplant":{"toString":"return \"StrTokenizer\" + (getTokenList())","position":"org.apache.commons.lang3.text.StrTokenizer:1111","type":"CtReturnImpl","sourcecode":"return \"StrTokenizer\" + (getTokenList())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return buf.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:540","type":"CtReturnImpl","sourcecode":"return buf.toString()"},"status":-2},{"failures":[],"tindex":"d38e00dc-1991-11e6-b355-55de4a1abb82","series":0,"name":"add","transplant":{"toString":"if (type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType wild = ((java.lang.reflect.WildcardType)(type));\n    return (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0]));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1442","type":"CtIfImpl","sourcecode":"if (type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n    return (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0]));\n} "},"variableMap":{"type":"type"},"type":"adrStmt","transplantationPoint":{"toString":"if (toType instanceof java.lang.reflect.WildcardType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.WildcardType)(toType)), typeVarAssigns);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:338","type":"CtIfImpl","sourcecode":"if (toType instanceof java.lang.reflect.WildcardType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.WildcardType)(toType)), typeVarAssigns);\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":3,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}