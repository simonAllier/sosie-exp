{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"eaba4dba-3fb4-11e6-be25-f109955ed8ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.Tailer:259","type":"CtInvocationImpl","sourcecode":"thread.setDaemon(true)"},"variableMap":{"thread":"encoding"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:232","type":"CtTryImpl","sourcecode":"try {\n    stream = new java.io.FileOutputStream(file , append);\n    if (encoding instanceof java.nio.charset.Charset) {\n        writer = new java.io.OutputStreamWriter(stream , ((java.nio.charset.Charset)(encoding)));\n    } else if (encoding instanceof java.nio.charset.CharsetEncoder) {\n        writer = new java.io.OutputStreamWriter(stream , ((java.nio.charset.CharsetEncoder)(encoding)));\n    } else {\n        writer = new java.io.OutputStreamWriter(stream , ((java.lang.String)(encoding)));\n    }\n} catch (java.io.IOException ex) {\n    org.apache.commons.io.IOUtils.closeQuietly(writer);\n    org.apache.commons.io.IOUtils.closeQuietly(stream);\n    if (fileExistedAlready == false) {\n        org.apache.commons.io.FileUtils.deleteQuietly(file);\n    } \n    throw ex;\n} catch (java.lang.RuntimeException ex) {\n    org.apache.commons.io.IOUtils.closeQuietly(writer);\n    org.apache.commons.io.IOUtils.closeQuietly(stream);\n    if (fileExistedAlready == false) {\n        org.apache.commons.io.FileUtils.deleteQuietly(file);\n    } \n    throw ex;\n}"},"status":-2},{"failures":[],"tindex":"eaba74cb-3fb4-11e6-be25-b9d7f52ff4cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtIfImpl","sourcecode":"if (path == null) {\n    throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n} "},"variableMap":{"path":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:1432","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset())"},"status":-1},{"failures":[],"tindex":"eaba74cc-3fb4-11e6-be25-b765ed4b2a1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.XmlStreamReader:515","type":"CtIfImpl","sourcecode":"if ((xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) && ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) {\n    return xmlGuessEnc;\n} "},"variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_16LE":"xmlGuessEnc","xmlEnc":"xmlGuessEnc","org.apache.commons.io.input.XmlStreamReader.UTF_16":"bomEnc","xmlGuessEnc":"xmlGuessEnc","org.apache.commons.io.input.XmlStreamReader.UTF_16BE":"bomEnc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.XmlStreamReader:429","type":"CtReturnImpl","sourcecode":"return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc)"},"status":-2},{"failures":[],"tindex":"eaba74cd-3fb4-11e6-be25-fd47410182c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.NullInputStream:96","type":"CtAssignmentImpl","sourcecode":"this.boolean = markSupported"},"variableMap":{"markSupported":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.Tailer:216","type":"CtAssignmentImpl","sourcecode":"this.boolean = end"},"status":-2},{"failures":[],"tindex":"eaba74ce-3fb4-11e6-be25-7be11c04e242","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:1202","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.copyDirectory(srcDir, new java.io.File(destDir , srcDir.getName()), true)"},"variableMap":{"srcDir":"destination","destDir":"destination"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:1490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.copyInputStreamToFile(input, destination)"},"status":-2}],"header":{"groupId":"commons-io","transformationCount":5,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}