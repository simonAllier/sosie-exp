{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"aa45fce2-1945-11e6-9e58-7bf8a52f4460","series":0,"name":"add","transplant":{"toString":"getStream().flush()","position":"org.apache.commons.io.output.ThresholdingOutputStream:143","type":"CtInvocationImpl","sourcecode":"getStream().flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"output.write(buffer, 0, n)","position":"org.apache.commons.io.IOUtils:2002","type":"CtInvocationImpl","sourcecode":"output.write(buffer, 0, n)"},"status":-2},{"failures":[],"tindex":"aa464b03-1945-11e6-9e58-c1355d462645","series":0,"name":"add","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"The suffix must not be null\")","position":"org.apache.commons.io.filefilter.SuffixFileFilter:74","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The suffix must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.io.IOException(\"Read after end of file\")","position":"org.apache.commons.io.input.NullInputStream:228","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"Read after end of file\")"},"status":-2},{"failures":[],"tindex":"aa464b04-1945-11e6-9e58-5384b53c9dc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"try {\n    beforeRead(len);\n    int n = in.read(bts, off, len);\n    afterRead(n);\n    return n;\n} catch (java.io.IOException e) {\n    handleIOException(e);\n    return -1;\n}","position":"org.apache.commons.io.input.ProxyInputStream:96","type":"CtTryImpl","sourcecode":"try {\n    beforeRead(len);\n    int int = java.io.InputStream.read(bts, off, len);\n    afterRead(n);\n    return n;\n} catch (java.io.IOException e) {\n    handleIOException(e);\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"aa467215-1945-11e6-9e58-db9a3f16d611","series":0,"name":"add","transplant":{"toString":"return !(isThresholdExceeded())","position":"org.apache.commons.io.output.DeferredFileOutputStream:197","type":"CtReturnImpl","sourcecode":"return !(isThresholdExceeded())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.io.FilenameUtils:1147","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"aa467216-1945-11e6-9e58-03ed1d8eb0d7","series":0,"name":"add","transplant":{"toString":"if (n == (-1)) {\n    close();\n} ","position":"org.apache.commons.io.input.AutoCloseInputStream:76","type":"CtIfImpl","sourcecode":"if (n == (-1)) {\n    close();\n} "},"variableMap":{"n":"c"},"type":"adrStmt","transplantationPoint":{"toString":"doMatch(entry, files[c])","position":"org.apache.commons.io.monitor.FileAlterationObserver:334","type":"CtInvocationImpl","sourcecode":"doMatch(entry, files[c])"},"status":-2},{"failures":[],"tindex":"aa467217-1945-11e6-9e58-c3e1f5cb22b9","series":0,"name":"add","transplant":{"toString":"out.close()","position":"org.apache.commons.io.FileUtils:2096","type":"CtInvocationImpl","sourcecode":"out.close()"},"variableMap":{"out":"output"},"type":"adrStmt","transplantationPoint":{"toString":"output.write(((byte)((value >> 0) & 255)))","position":"org.apache.commons.io.EndianUtils:286","type":"CtInvocationImpl","sourcecode":"output.write(((byte)((value >> 0) & 255)))"},"status":0},{"failures":[],"tindex":"aa469928-1945-11e6-9e58-012a4dd678a9","series":0,"name":"replace","transplant":{"toString":"output.write(input)","position":"org.apache.commons.io.CopyUtils:136","type":"CtInvocationImpl","sourcecode":"output.write(input)"},"variableMap":{"output":"stream","input":"data"},"type":"adrStmt","transplantationPoint":{"toString":"for (int j = index ; j < (data.length) ; j += 16) {\n    int chars_read = (data.length) - j;\n    if (chars_read > 16) {\n        chars_read = 16;\n    } \n    org.apache.commons.io.HexDump.dump(buffer, display_offset).append(' ');\n    for (int k = 0 ; k < 16 ; k++) {\n        if (k < chars_read) {\n            org.apache.commons.io.HexDump.dump(buffer, data[(k + j)]);\n        } else {\n            buffer.append(\"  \");\n        }\n        buffer.append(' ');\n    }\n    for (int k = 0 ; k < chars_read ; k++) {\n        if (((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)) {\n            buffer.append(((char)(data[(k + j)])));\n        } else {\n            buffer.append('.');\n        }\n    }\n    buffer.append(org.apache.commons.io.HexDump.EOL);\n    stream.write(buffer.toString().getBytes());\n    stream.flush();\n    buffer.setLength(0);\n    display_offset += chars_read;\n}","position":"org.apache.commons.io.HexDump:87","type":"CtForImpl","sourcecode":"for (int int = index ; j < (data.int) ; j += 16) {\n    int int = (data.int) - j;\n    if (chars_read > 16) {\n        chars_read = 16;\n    } \n    org.apache.commons.io.HexDump.dump(buffer, display_offset).append(' ');\n    for (int int = 0 ; k < 16 ; k++) {\n        if (k < chars_read) {\n            org.apache.commons.io.HexDump.dump(buffer, data[(k + j)]);\n        } else {\n            buffer.append(\"  \");\n        }\n        buffer.append(' ');\n    }\n    for (int int = 0 ; k < chars_read ; k++) {\n        if (((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)) {\n            buffer.append(((char)(data[(k + j)])));\n        } else {\n            buffer.append('.');\n        }\n    }\n    buffer.append(org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.java.lang.String);\n    stream.write(buffer.toString().getBytes());\n    stream.flush();\n    buffer.setLength(0);\n    display_offset += chars_read;\n}"},"status":0},{"failures":[],"tindex":"aa46c039-1945-11e6-9e58-97fe6e287629","series":0,"name":"replace","transplant":{"toString":"throw new java.io.IOException(\"No position has been marked\")","position":"org.apache.commons.io.input.NullInputStream:257","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"No position has been marked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(message)","position":"org.apache.commons.io.FileUtils:2328","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(message)"},"status":0},{"failures":[],"tindex":"aa46c03a-1945-11e6-9e58-3f7de1359aee","series":0,"name":"replace","transplant":{"toString":"if (len2 > len1) {\n    return 1;\n} ","position":"org.apache.commons.io.input.BOMInputStream:145","type":"CtIfImpl","sourcecode":"if (len2 > len1) {\n    return 1;\n} "},"variableMap":{"len1":"len","len2":"len"},"type":"adrStmt","transplantationPoint":{"toString":"if (len == 0) {\n    return 0;\n} ","position":"org.apache.commons.io.input.CharSequenceInputStream:121","type":"CtIfImpl","sourcecode":"if (len == 0) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"aa46c03b-1945-11e6-9e58-8d537ac536f1","series":0,"name":"replace","transplant":{"toString":"afterWrite((end - start))","position":"org.apache.commons.io.output.ProxyWriter:78","type":"CtInvocationImpl","sourcecode":"afterWrite((end - start))"},"variableMap":{"start":"count","end":"n"},"type":"adrStmt","transplantationPoint":{"toString":"while ((-1) != (n = input.read(buffer))) {\n    output.write(buffer, 0, n);\n    count += n;\n}","position":"org.apache.commons.io.CopyUtils:222","type":"CtWhileImpl","sourcecode":"while ((-1) != (n = input.read(buffer))) {\n    output.write(buffer, 0, n);\n    count += n;\n}"},"status":-2},{"failures":[],"tindex":"aa46e74c-1945-11e6-9e58-aff0b2cef618","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.io.FileUtils.cleanDirectoryOnExit(directory)","position":"org.apache.commons.io.FileUtils:2314","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.cleanDirectoryOnExit(directory)"},"variableMap":{"directory":"destDir"},"type":"adrStmt","transplantationPoint":{"toString":"if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n    throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n} ","position":"org.apache.commons.io.FileUtils:1009","type":"CtIfImpl","sourcecode":"if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n    throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n} "},"status":0},{"failures":[],"tindex":"aa46e74d-1945-11e6-9e58-71089adae464","series":0,"name":"add","transplant":{"toString":"org.apache.commons.io.FileUtils.deleteQuietly(lockFile)","position":"org.apache.commons.io.output.LockableFileWriter:278","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)"},"variableMap":{"lockFile":"lockFile"},"type":"adrStmt","transplantationPoint":{"toString":"lockFile.delete()","position":"org.apache.commons.io.output.LockableFileWriter:306","type":"CtInvocationImpl","sourcecode":"java.io.File.delete()"},"status":0},{"failures":[],"tindex":"aa46e74e-1945-11e6-9e58-a14a9b16844a","series":0,"name":"add","transplant":{"toString":"org.apache.commons.io.input.BoundedInputStream.this.propagateClose = propagateClose","position":"org.apache.commons.io.input.BoundedInputStream:228","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.io.input.BoundedInputStream.this.boolean = propagateClose"},"variableMap":{"propagateClose":"throwEofException"},"type":"adrStmt","transplantationPoint":{"toString":"this.throwEofException = throwEofException","position":"org.apache.commons.io.input.NullReader:97","type":"CtAssignmentImpl","sourcecode":"this.boolean = throwEofException"},"status":-2}],"header":{"groupId":"commons-io","transformationCount":13,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}