{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"893790d0-1eb6-11e6-9574-ddf533abfc70","series":0,"name":"replace","transplant":{"toString":"return getClass().getSimpleName()","position":"org.apache.commons.io.comparator.AbstractFileComparator:74","type":"CtReturnImpl","sourcecode":"return getClass().getSimpleName()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.io.IOUtils.toString(input, java.nio.charset.Charset.defaultCharset())","position":"org.apache.commons.io.IOUtils:759","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.IOUtils.toString(input, java.nio.charset.Charset.defaultCharset())"},"status":-2},{"failures":[],"tindex":"8937b7e1-1eb6-11e6-9574-97a7318b3702","series":0,"name":"replace","transplant":{"toString":"buffer.append(\"(\")","position":"org.apache.commons.io.filefilter.AndFileFilter:154","type":"CtInvocationImpl","sourcecode":"buffer.append(\"(\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.append(\",\")","position":"org.apache.commons.io.filefilter.AndFileFilter:158","type":"CtInvocationImpl","sourcecode":"buffer.append(\",\")"},"status":0},{"failures":[],"tindex":"8937b7e2-1eb6-11e6-9574-95d047707cb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.io.IOUtils.copy(input, output, org.apache.commons.io.Charsets.toCharset(encoding))","position":"org.apache.commons.io.IOUtils:2158","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.IOUtils.copy(input, output, org.apache.commons.io.Charsets.toCharset(encoding))"},"status":-1},{"failures":[],"tindex":"8937b7e3-1eb6-11e6-9574-97926b3640af","series":0,"name":"replace","transplant":{"toString":"if (!(hasNext())) {\n    throw new java.util.NoSuchElementException(\"No more lines\");\n} ","position":"org.apache.commons.io.LineIterator:138","type":"CtIfImpl","sourcecode":"if (!(hasNext())) {\n    throw new java.util.NoSuchElementException(\"No more lines\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"output.write(((byte)((value >> 0) & 255)))","position":"org.apache.commons.io.EndianUtils:286","type":"CtInvocationImpl","sourcecode":"output.write(((byte)((value >> 0) & 255)))"},"status":-2},{"failures":[],"tindex":"8937b7e4-1eb6-11e6-9574-e5218f5bc706","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw ex","position":"org.apache.commons.io.output.FileWriterWithEncoding:247","type":"CtThrowImpl","sourcecode":"throw ex"},"status":-1},{"failures":[],"tindex":"8937def5-1eb6-11e6-9574-df639dfea777","series":0,"name":"replace","transplant":{"toString":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException ignore) {\n} catch (java.lang.Exception ex) {\n    break;\n}","position":"org.apache.commons.io.FileUtils:1686","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException ignore) {\n} catch (java.lang.Exception ex) {\n    break;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((suffixes) != null) {\n    for (int i = 0 ; i < (suffixes.length) ; i++) {\n        if (i > 0) {\n            buffer.append(\",\");\n        } \n        buffer.append(suffixes[i]);\n    }\n} ","position":"org.apache.commons.io.filefilter.SuffixFileFilter:187","type":"CtIfImpl","sourcecode":"if ((java.lang.String[]) != null) {\n    for (int int = 0 ; i < (java.lang.String[].int) ; i++) {\n        if (i > 0) {\n            buffer.append(\",\");\n        } \n        buffer.append(java.lang.String[][i]);\n    }\n} "},"status":-2},{"failures":[],"tindex":"8937def6-1eb6-11e6-9574-25a42871169d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.exception = exception","position":"org.apache.commons.io.input.BrokenInputStream:44","type":"CtAssignmentImpl","sourcecode":"this.java.io.IOException = exception"},"status":-2},{"failures":[],"tindex":"8937def7-1eb6-11e6-9574-b9c2d79fe93e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (ch0 == '~') {\n    int posUnix = filename.indexOf(org.apache.commons.io.FilenameUtils.UNIX_SEPARATOR, 1);\n    int posWin = filename.indexOf(org.apache.commons.io.FilenameUtils.WINDOWS_SEPARATOR, 1);\n    if ((posUnix == (-1)) && (posWin == (-1))) {\n        return len + 1;\n    } \n    posUnix = posUnix == (-1) ? posWin : posUnix;\n    posWin = posWin == (-1) ? posUnix : posWin;\n    return (java.lang.Math.min(posUnix, posWin)) + 1;\n} ","position":"org.apache.commons.io.FilenameUtils:640","type":"CtIfImpl","sourcecode":"if (ch0 == '~') {\n    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 1);\n    int int = filename.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, 1);\n    if ((posUnix == (-1)) && (posWin == (-1))) {\n        return len + 1;\n    } \n    posUnix = posUnix == (-1) ? posWin : posUnix;\n    posWin = posWin == (-1) ? posUnix : posWin;\n    return (java.lang.Math.min(posUnix, posWin)) + 1;\n} "},"status":-1},{"failures":[],"tindex":"8937def8-1eb6-11e6-9574-c1e4e81d7bd3","series":0,"name":"replace","transplant":{"toString":"thresholdReached()","position":"org.apache.commons.io.output.ThresholdingOutputStream:224","type":"CtInvocationImpl","sourcecode":"thresholdReached()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"close()","position":"org.apache.commons.io.LineIterator:105","type":"CtInvocationImpl","sourcecode":"close()"},"status":-2},{"failures":[],"tindex":"89380609-1eb6-11e6-9574-d390c0de34ba","series":0,"name":"replace","transplant":{"toString":"if (i < 0) {\n    createLeftOver();\n    break;\n} ","position":"org.apache.commons.io.input.ReversedLinesFileReader:291","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    createLeftOver();\n    break;\n} "},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((newLineMatchByteCount = getNewLineMatchByteCount(data, i)) > 0) {\n    final int lineStart = i + 1;\n    int lineLengthBytes = ((currentLastBytePos) - lineStart) + 1;\n    if (lineLengthBytes < 0) {\n        throw new java.lang.IllegalStateException((\"Unexpected negative line length=\" + lineLengthBytes));\n    } \n    byte[] lineData = new byte[lineLengthBytes];\n    java.lang.System.arraycopy(data, lineStart, lineData, 0, lineLengthBytes);\n    line = new java.lang.String(lineData , encoding);\n    currentLastBytePos = i - newLineMatchByteCount;\n    break;\n} ","position":"org.apache.commons.io.input.ReversedLinesFileReader:271","type":"CtIfImpl","sourcecode":"if ((newLineMatchByteCount = getNewLineMatchByteCount(byte[], i)) > 0) {\n    final int int = i + 1;\n    int int = ((int) - lineStart) + 1;\n    if (lineLengthBytes < 0) {\n        throw new java.lang.IllegalStateException((\"Unexpected negative line length=\" + lineLengthBytes));\n    } \n    byte[] byte[] = new byte[lineLengthBytes];\n    java.lang.System.arraycopy(byte[], lineStart, lineData, 0, lineLengthBytes);\n    line = new java.lang.String(lineData , java.nio.charset.Charset);\n    int = i - newLineMatchByteCount;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"8938060a-1eb6-11e6-9574-110ac6694f5e","series":0,"name":"replace","transplant":{"toString":"return 3","position":"org.apache.commons.io.FilenameUtils:657","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.io.input.CharSequenceInputStream.this.bbuf.hasRemaining()) {\n    return (org.apache.commons.io.input.CharSequenceInputStream.this.bbuf.get()) & 255;\n} else {\n    fillBuffer();\n    if ((!(org.apache.commons.io.input.CharSequenceInputStream.this.bbuf.hasRemaining())) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.cbuf.hasRemaining()))) {\n        return -1;\n    } \n}","position":"org.apache.commons.io.input.CharSequenceInputStream:148","type":"CtIfImpl","sourcecode":"if (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining()) {\n    return (org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.get()) & 255;\n} else {\n    fillBuffer();\n    if ((!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.ByteBuffer.hasRemaining())) && (!(org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.hasRemaining()))) {\n        return -1;\n    } \n}"},"status":-2},{"failures":[],"tindex":"8938060b-1eb6-11e6-9574-47f3620b1f10","series":0,"name":"replace","transplant":{"toString":"beforeWrite(len)","position":"org.apache.commons.io.output.ProxyOutputStream:71","type":"CtInvocationImpl","sourcecode":"beforeWrite(len)"},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(bytes, 0, org.apache.commons.io.ByteOrderMark.this.bytes, 0, bytes.length)","position":"org.apache.commons.io.ByteOrderMark:78","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bytes, 0, org.apache.commons.io.ByteOrderMark.this.int[], 0, bytes.int)"},"status":-2},{"failures":[],"tindex":"89382d1c-1eb6-11e6-9574-5b0de588ac7d","series":0,"name":"add","transplant":{"toString":"java.io.File[] children = null","position":"org.apache.commons.io.monitor.FileAlterationObserver:429","type":"CtLocalVariableImpl","sourcecode":"java.io.File[] java.io.File[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.io.File[] files = new java.io.File[urls.length]","position":"org.apache.commons.io.FileUtils:920","type":"CtLocalVariableImpl","sourcecode":"java.io.File[] java.io.File[] = new java.io.File[urls.int]"},"status":-2},{"failures":[],"tindex":"89382d1d-1eb6-11e6-9574-2f94f67980e1","series":0,"name":"replace","transplant":{"toString":"if (srcFile == null) {\n    throw new java.lang.NullPointerException(\"Source must not be null\");\n} ","position":"org.apache.commons.io.FileUtils:1067","type":"CtIfImpl","sourcecode":"if (srcFile == null) {\n    throw new java.lang.NullPointerException(\"Source must not be null\");\n} "},"variableMap":{"srcFile":"file"},"type":"adrStmt","transplantationPoint":{"toString":"if (file == null) {\n    throw new java.lang.NullPointerException(\"File must not be null\");\n} ","position":"org.apache.commons.io.FileUtils:2921","type":"CtIfImpl","sourcecode":"if (file == null) {\n    throw new java.lang.NullPointerException(\"File must not be null\");\n} "},"status":0},{"failures":[],"tindex":"89382d1e-1eb6-11e6-9574-8dea370376cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"in.reset()","position":"org.apache.commons.io.input.BoundedInputStream:183","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"status":0},{"failures":[],"tindex":"89382d1f-1eb6-11e6-9574-1b158da6764c","series":0,"name":"replace","transplant":{"toString":"if (fileFilters == null) {\n    this.fileFilters = new java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>();\n} else {\n    this.fileFilters = new java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>(fileFilters);\n}","position":"org.apache.commons.io.filefilter.AndFileFilter:61","type":"CtIfImpl","sourcecode":"if (fileFilters == null) {\n    this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter> = new java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>();\n} else {\n    this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter> = new java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>(fileFilters);\n}"},"variableMap":{"fileFilters":"fileFilters"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.io.filefilter.AndFileFilter.this.fileFilters.clear()","position":"org.apache.commons.io.filefilter.AndFileFilter:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.clear()"},"status":-2}],"header":{"groupId":"commons-io","transformationCount":16,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}