{"failureDictionary":{"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":19,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":7,"com.google.gson.functional.JsonTreeTest.testToJsonTree":18,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":2,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":22,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":0,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":9,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":11,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":5,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":14,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":15,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":1,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":13,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":6,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":21,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":17,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":12,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":20,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":10,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":16,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":8,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":23,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":3,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":4},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"c73c14e7-3fb6-11e6-8355-11f70fdf4306","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtIfImpl","sourcecode":"if (name == null) {\n    throw new java.lang.NullPointerException(\"name == null\");\n} "},"variableMap":{"name":"pendingName"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:79","type":"CtInvocationImpl","sourcecode":"object.add(java.lang.String, value)"},"status":-1},{"failures":[],"tindex":"c73c8a18-3fb6-11e6-8355-a594e4c52e07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:908","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-2},{"failures":[],"tindex":"c73c8a19-3fb6-11e6-8355-8f098f92fc70","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:640","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop"},"variableMap":{"stackTop":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:365","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"c73c8a1a-3fb6-11e6-8355-991672e40375","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtIfImpl","sourcecode":"if ((indent.length()) == 0) {\n    com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n    com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n} else {\n    com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n    com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n}"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":4,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}