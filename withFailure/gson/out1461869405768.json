{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"05e7aabc-0d72-11e6-8a6a-eb44c3edb348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:495","type":"CtThrowImpl","sourcecode":"throw syntaxError(\"Unterminated object\")"},"status":-3},{"failures":[],"tindex":"05e7d1cd-0d72-11e6-8a6a-69bf3630cb35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1520","type":"CtThrowImpl","sourcecode":"throw syntaxError(\"Unterminated escape sequence\")"},"status":-3},{"failures":[],"tindex":"05e7d1ce-0d72-11e6-8a6a-e9f61d061440","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.Primitives:62","type":"CtInvocationImpl","sourcecode":"forward.put(key, value)"},"variableMap":{"forward":"backward","value":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Primitives:63","type":"CtInvocationImpl","sourcecode":"backward.put(value, key)"},"status":-3},{"failures":[],"tindex":"05e7d1cf-0d72-11e6-8a6a-053086fcbde4","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1380","type":"CtThrowImpl","sourcecode":"throw syntaxError(\"Unterminated comment\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonParser:69","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.JsonSyntaxException(e)"},"status":-3},{"failures":[],"tindex":"05e7d1d0-0d72-11e6-8a6a-5d0093a6293f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:218","type":"CtIfImpl","sourcecode":"if (com.google.gson.reflect.TypeToken.typeEquals(ptype, to, typeVarMap)) {\n    return true;\n} "},"status":-3},{"failures":[],"tindex":"05e7d1d1-0d72-11e6-8a6a-f932c6f5f475","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:352","type":"CtLocalVariableImpl","sourcecode":"int int = rightLeftHeight - rightRightHeight"},"variableMap":{"rightRightHeight":"height","rightLeftHeight":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:368","type":"CtLocalVariableImpl","sourcecode":"int int = leftLeft != null ? leftLeft.int : 0"},"status":-3},{"failures":[],"tindex":"05e7d1d2-0d72-11e6-8a6a-e10e3131b45e","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonStreamParser:82","type":"CtIfImpl","sourcecode":"if (!(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:541","type":"CtInvocationImpl","sourcecode":"java.util.Collections.reverse(factories)"},"status":-3},{"failures":[],"tindex":"05e7d1d3-0d72-11e6-8a6a-6f162e4e220a","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:673","type":"CtIfImpl","sourcecode":"if (!(fillBuffer((i + 1)))) {\n    break;\n} "},"variableMap":{"i":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:161","type":"CtIfImpl","sourcecode":"if (nearest == null) {\n    if ((comparator == (com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n        throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n    } \n    created = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(nearest , key , header , header.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n} else {\n    created = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(nearest , key , header , header.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    if (comparison < 0) {\n        nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n    } else {\n        nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n    }\n    rebalance(nearest, true);\n}"},"status":-3},{"failures":[],"tindex":"05e7f7e4-0d72-11e6-8a6a-49f90f59d4fe","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:350","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected BEGIN_ARRAY but was \" + (peek())) + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:517","type":"CtThrowImpl","sourcecode":"throw syntaxError(\"Expected name\")"},"status":-3}],"header":{"groupId":"com.google.code.gson","transformationCount":9,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}