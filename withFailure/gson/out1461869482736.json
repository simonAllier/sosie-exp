{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"33c91e0a-0d72-11e6-a340-c38435ecca34","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"count--"},"variableMap":{"count":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:703","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-3},{"failures":[],"tindex":"33c9451b-0d72-11e6-a340-7567956f19a7","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:294","type":"CtReturnImpl","sourcecode":"return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0]"},"variableMap":{"collectionType":"context"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtIfImpl","sourcecode":"if ((toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(toResolve));\n    java.lang.reflect.Type java.lang.reflect.Type = original.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, componentType);\n    return componentType == newComponentType ? original : com.google.gson.internal.$Gson$Types.arrayOf(newComponentType);\n} else if (toResolve instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(toResolve));\n    java.lang.reflect.Type java.lang.reflect.Type = original.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, componentType);\n    return componentType == newComponentType ? original : com.google.gson.internal.$Gson$Types.arrayOf(newComponentType);\n} else if (toResolve instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(toResolve));\n    java.lang.reflect.Type java.lang.reflect.Type = original.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, ownerType);\n    boolean boolean = newOwnerType != ownerType;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getActualTypeArguments();\n    for (int int = 0, int int = args.int ; t < length ; t++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, args[t]);\n        if (resolvedTypeArgument != (args[t])) {\n            if (!changed) {\n                args = args.clone();\n                changed = true;\n            } \n            args[t] = resolvedTypeArgument;\n        } \n    }\n    return changed ? com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args) : original;\n} else if (toResolve instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(toResolve));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getUpperBounds();\n    if ((originalLowerBound.int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, originalLowerBound[0]);\n        if (lowerBound != (originalLowerBound[0])) {\n            return com.google.gson.internal.$Gson$Types.supertypeOf(lowerBound);\n        } \n    } else if ((originalUpperBound.int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, originalUpperBound[0]);\n        if (upperBound != (originalUpperBound[0])) {\n            return com.google.gson.internal.$Gson$Types.subtypeOf(upperBound);\n        } \n    } \n    return original;\n} else {\n    return toResolve;\n}"},"status":-3},{"failures":[],"tindex":"33c96c2c-0d72-11e6-a340-e789181c37fe","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtIfImpl","sourcecode":"if (a instanceof java.lang.reflect.WildcardType) {\n    if (!(b instanceof java.lang.reflect.WildcardType)) {\n        return false;\n    } \n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(a));\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(b));\n    return (java.util.Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())) && (java.util.Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds()));\n} else if (a instanceof java.lang.reflect.TypeVariable) {\n    if (!(b instanceof java.lang.reflect.TypeVariable)) {\n        return false;\n    } \n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(a));\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(b));\n    return ((va.getGenericDeclaration()) == (vb.getGenericDeclaration())) && (va.getName().equals(vb.getName()));\n} else {\n    return false;\n}"},"variableMap":{"a":"o","b":"o"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:513","type":"CtIfImpl","sourcecode":"if (o instanceof java.util.Map.Entry) {\n    java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n    return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n} "},"status":-3},{"failures":[],"tindex":"33c96c2d-0d72-11e6-a340-5bf976dcc5ad","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:95","type":"CtInvocationImpl","sourcecode":"out.endArray()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:214","type":"CtInvocationImpl","sourcecode":"out.beginObject()"},"status":-3},{"failures":[],"tindex":"33c9933e-0d72-11e6-a340-35c94ab25067","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1253","type":"CtInvocationImpl","sourcecode":"skipUnquotedValue()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapters:723","type":"CtForEachImpl","sourcecode":"for (T T : classOfT.getEnumConstants()) {\n    java.lang.String java.lang.String = constant.name();\n    com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = classOfT.getField(name).getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n    if (annotation != null) {\n        name = annotation.value();\n    } \n    java.util.Map<java.lang.String, T>.put(name, constant);\n    java.util.Map<T, java.lang.String>.put(constant, name);\n}"},"status":-3},{"failures":[],"tindex":"33c9933f-0d72-11e6-a340-4976a6645a38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1310","type":"CtIfImpl","sourcecode":"if ((int) >= minimum) {\n    return true;\n} "},"status":-3},{"failures":[],"tindex":"33c99340-0d72-11e6-a340-b73e8e4dbd27","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:95","type":"CtInvocationImpl","sourcecode":"out.endArray()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapters:415","type":"CtInvocationImpl","sourcecode":"out.value((value == null ? null : value.toString()))"},"status":-3}],"header":{"groupId":"com.google.code.gson","transformationCount":7,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}