{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"18f6f7a8-0d72-11e6-878a-ddd3e5ce83d4","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:401","type":"CtInvocationImpl","sourcecode":"beforeName()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:126","type":"CtIfImpl","sourcecode":"if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n    translation.append(separator);\n} "},"status":-3},{"failures":[],"tindex":"18f71eb9-0d72-11e6-878a-8598b61a0194","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtIfImpl","sourcecode":"if (rawSupertype == toResolve) {\n    return rawType.getGenericSuperclass();\n} else if (toResolve.isAssignableFrom(rawSupertype)) {\n    return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n} "},"variableMap":{"rawType":"contextRawType","toResolve":"contextRawType","rawSupertype":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:324","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (toResolve instanceof java.lang.reflect.TypeVariable) {\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(toResolve));\n        toResolve = com.google.gson.internal.$Gson$Types.resolveTypeVariable(context, contextRawType, typeVariable);\n        if (toResolve == typeVariable) {\n            return toResolve;\n        } \n    } else if ((toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(toResolve));\n        java.lang.reflect.Type java.lang.reflect.Type = original.getComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, componentType);\n        return componentType == newComponentType ? original : com.google.gson.internal.$Gson$Types.arrayOf(newComponentType);\n    } else if (toResolve instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(toResolve));\n        java.lang.reflect.Type java.lang.reflect.Type = original.getGenericComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, componentType);\n        return componentType == newComponentType ? original : com.google.gson.internal.$Gson$Types.arrayOf(newComponentType);\n    } else if (toResolve instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(toResolve));\n        java.lang.reflect.Type java.lang.reflect.Type = original.getOwnerType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, ownerType);\n        boolean boolean = newOwnerType != ownerType;\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getActualTypeArguments();\n        for (int int = 0, int int = args.int ; t < length ; t++) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, args[t]);\n            if (resolvedTypeArgument != (args[t])) {\n                if (!changed) {\n                    args = args.clone();\n                    changed = true;\n                } \n                args[t] = resolvedTypeArgument;\n            } \n        }\n        return changed ? com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args) : original;\n    } else if (toResolve instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(toResolve));\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getLowerBounds();\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getUpperBounds();\n        if ((originalLowerBound.int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, originalLowerBound[0]);\n            if (lowerBound != (originalLowerBound[0])) {\n                return com.google.gson.internal.$Gson$Types.supertypeOf(lowerBound);\n            } \n        } else if ((originalUpperBound.int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, originalUpperBound[0]);\n            if (upperBound != (originalUpperBound[0])) {\n                return com.google.gson.internal.$Gson$Types.subtypeOf(upperBound);\n            } \n        } \n        return original;\n    } else {\n        return toResolve;\n    }\n}"},"status":-3},{"failures":[],"tindex":"18f745ca-0d72-11e6-878a-a14eb8cc48a6","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:87","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.canonicalize(parameterized.getActualTypeArguments()[0])"},"variableMap":{"parameterized":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtIfImpl","sourcecode":"if (type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(p.getOwnerType() , p.getRawType() , p.getActualTypeArguments());\n} else if (type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(type));\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(g.getGenericComponentType());\n} else if (type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(w.getUpperBounds() , w.getLowerBounds());\n} else {\n    return type;\n}"},"status":-3},{"failures":[],"tindex":"18f745cb-0d72-11e6-878a-ad0ae74235d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapters:122","type":"CtInvocationImpl","sourcecode":"in.endArray()"},"status":-3},{"failures":[],"tindex":"18f745cc-0d72-11e6-878a-05202f1cbfd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonArray:229","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-3},{"failures":[],"tindex":"18f745cd-0d72-11e6-878a-1dd697915713","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:320","type":"CtLocalVariableImpl","sourcecode":"double double = getAsNumber().doubleValue()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:244","type":"CtLocalVariableImpl","sourcecode":"double double = annotation.value()"},"status":-3},{"failures":[],"tindex":"18f76cde-0d72-11e6-878a-cfeaf0218387","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:326","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonReader.this.boolean = lenient"},"variableMap":{"lenient":"escapeHtmlChars"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:362","type":"CtAssignmentImpl","sourcecode":"com.google.gson.GsonBuilder.this.boolean = false"},"status":-3},{"failures":[],"tindex":"18f76cdf-0d72-11e6-878a-ef45427a88f7","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:174","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.google.gson.JsonPrimitive)(peekStack())).getAsDouble()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:244","type":"CtLocalVariableImpl","sourcecode":"double double = annotation.value()"},"status":-3},{"failures":[],"tindex":"18f76ce0-0d72-11e6-878a-6f22871232a5","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:291","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"in == null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonElement:285","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(getClass().getSimpleName())"},"status":-3},{"failures":[],"tindex":"18f76ce1-0d72-11e6-878a-c53e9e8d7cbc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:124","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.JsonElement com.google.gson.JsonElement = peek()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.TreeTypeAdapter:54","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in)"},"status":-3},{"failures":[],"tindex":"18f793f2-0d72-11e6-878a-5fe10a4eb16a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Primitives:46","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.Primitives.add(primToWrap, wrapToPrim, boolean.boolean.java.lang.Class, java.lang.Boolean.java.lang.Boolean.java.lang.Class)"},"status":-3},{"failures":[],"tindex":"18f793f3-0d72-11e6-878a-23c08fb2ed95","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1200","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + (peek())) + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1534","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException((\"\\\\u\" + (new java.lang.String(char[] , int , 4))))"},"status":-3},{"failures":[],"tindex":"18f793f4-0d72-11e6-878a-4519eab55e1c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtIfImpl","sourcecode":"if (!(skipTo(\"*/\"))) {\n    throw syntaxError(\"Unterminated comment\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:40","type":"CtInvocationImpl","sourcecode":"result.add(entry.getKey(), entry.getValue().deepCopy())"},"status":-3},{"failures":[],"tindex":"18f793f5-0d72-11e6-878a-0b4cbcd8c180","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonStreamParser:82","type":"CtIfImpl","sourcecode":"if (!(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:358","type":"CtIfImpl","sourcecode":"if (!changed) {\n    args = args.clone();\n    changed = true;\n} "},"status":-3},{"failures":[],"tindex":"18f793f6-0d72-11e6-878a-23b4e3dc3a8c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:291","type":"CtAssignmentImpl","sourcecode":"collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0]"},"variableMap":{"collectionType":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:327","type":"CtAssignmentImpl","sourcecode":"toResolve = com.google.gson.internal.$Gson$Types.resolveTypeVariable(context, contextRawType, typeVariable)"},"status":-3},{"failures":[],"tindex":"18f7bb07-0d72-11e6-878a-690ba738491a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:95","type":"CtInvocationImpl","sourcecode":"out.endArray()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:228","type":"CtInvocationImpl","sourcecode":"out.beginArray()"},"status":-3},{"failures":[],"tindex":"18f7bb08-0d72-11e6-878a-75cb0790fe61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:820","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.JsonSyntaxException(e)"},"status":-3},{"failures":[],"tindex":"18f7bb09-0d72-11e6-878a-2b2800e776b6","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:177","type":"CtReturnImpl","sourcecode":"return getAsNumber().toString()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:620","type":"CtReturnImpl","sourcecode":"return writer.toString()"},"status":-3},{"failures":[],"tindex":"18f7bb0a-0d72-11e6-878a-1f19c69892a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:960","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-3},{"failures":[],"tindex":"18f7bb0b-0d72-11e6-878a-292773537f7e","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:287","type":"CtInvocationImpl","sourcecode":"writeDeferredName()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:558","type":"CtIfImpl","sourcecode":"if (last < length) {\n    java.io.Writer.write(value, last, (length - last));\n} "},"status":-3},{"failures":[],"tindex":"18f7bb0c-0d72-11e6-878a-d1861bef7bb6","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:258","type":"CtReturnImpl","sourcecode":"return \"null\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1467","type":"CtReturnImpl","sourcecode":"return ((((getClass().getSimpleName()) + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())"},"status":-3},{"failures":[],"tindex":"18f7e21d-0d72-11e6-878a-6916a206b531","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:191","type":"CtIfImpl","sourcecode":"if (((int)++) > (int)) {\n    doubleCapacity();\n} "},"variableMap":{"size":"stackSize","threshold":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:574","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    checkLenient();\n} "},"status":-3},{"failures":[],"tindex":"18f7e21e-0d72-11e6-878a-2b1a36b80ae2","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:86","type":"CtInvocationImpl","sourcecode":"out.nullValue()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapters:688","type":"CtInvocationImpl","sourcecode":"out.value(primitive.getAsBoolean())"},"status":-3},{"failures":[],"tindex":"18f7e21f-0d72-11e6-878a-299081835b3b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1255","type":"CtInvocationImpl","sourcecode":"skipQuotedValue('\\'')"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1257","type":"CtInvocationImpl","sourcecode":"skipQuotedValue('\"')"},"status":-3},{"failures":[],"tindex":"18f7e220-0d72-11e6-878a-2b8eb5ab029c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:401","type":"CtInvocationImpl","sourcecode":"beforeName()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:948","type":"CtIfImpl","sourcecode":"if (p == (com.google.gson.stream.JsonReader.com.google.gson.stream.JsonReader.int)) {\n    p = doPeek();\n} "},"status":-3},{"failures":[],"tindex":"18f7e221-0d72-11e6-878a-8fc424d44ced","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:306","type":"CtSwitchImpl","sourcecode":"switch (jsonToken) {\n    case NULL :\n        in.nextNull();\n        return null;\n    case NUMBER :\n        return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n    default :\n        throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n}"},"variableMap":{"in":"in","com.google.gson.stream.JsonToken.NULL":"com.google.gson.stream.JsonToken.NULL","jsonToken":"com.google.gson.stream.JsonToken.NULL","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.NULL"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapters:290","type":"CtIfImpl","sourcecode":"if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n    in.nextNull();\n    return null;\n} "},"status":-3}],"header":{"groupId":"com.google.code.gson","transformationCount":26,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}