{"failureDictionary":{"org.grobid.core.annotations.TeiStAXParserTest.testParseDescription":19,"org.grobid.core.engines.patent.ReferenceExtractorTest.extractAllReferencesStringArticles2":24,"org.grobid.core.engines.patent.ReferenceExtractorTest.zhProcessing":26,"org.grobid.core.test.TestNameParser.testNameParserCitation":2,"org.grobid.core.test.TestCitationPatentParser.testCitationPatentParserFromText":16,"org.grobid.core.engines.SegmentationTest.testPrepareDocument_SimpleDocument_shouldWork":22,"org.grobid.core.engines.SegmentationTest.testGetAllLinesFeatures_SimpleDocument_shouldWork":23,"org.grobid.core.test.TestHeaderParser.testTrainingHeader":5,"org.grobid.core.engines.patent.ReferenceExtractorTest.extractAllReferencesStringNull":27,"org.grobid.core.test.TestCitationParser.testCitationParser2_withoutConsolidation":12,"org.grobid.core.annotations.TeiStAXParserTest.testParseDescription2":21,"org.grobid.core.test.TestHeaderParser.testSegmentationHeader":4,"org.grobid.core.annotations.TeiStAXParserTest.testParseDescriptionTagInsideP":20,"org.grobid.core.test.TestCitationParser.testCitationParser4_withConsolidation":9,"org.grobid.core.test.TestHeaderParser.testHeaderHeader":3,"org.grobid.core.test.TestFastMatcher.testLexiconMatcher":0,"org.grobid.core.test.TestAffiliationAddressParser.testParser2":6,"org.grobid.core.annotations.TeiStAXParserTest.testParseStartTEI":17,"org.grobid.core.lexicon.FastMatcherTest.testinJournalNames":31,"org.grobid.core.annotations.TeiStAXParserTest.testParserOnFullTEI":18,"org.grobid.core.engines.patent.ReferenceExtractorTest.jaProcessing":29,"org.grobid.core.test.TestCitationParser.testCitationParser1_withoutConsolidation":8,"org.grobid.core.test.TestFullTextParser.testFullTextTrainingParser":14,"org.grobid.core.test.TestNameParser.testNameParserHeader":1,"org.grobid.core.test.TestFullTextParser.testFullTextParser":13,"org.grobid.core.test.TestReferencesParser.testReferences":15,"org.grobid.core.test.TestCitationParser.testCitationParser3_withConsolidation":11,"org.grobid.core.test.TestAffiliationAddressParser.testParser":7,"org.grobid.core.engines.patent.ReferenceExtractorTest.extractAllReferencesXmlST36":30,"org.grobid.core.engines.patent.ReferenceExtractorTest.extractAllReferencesStringArticles":25,"org.grobid.core.engines.patent.ReferenceExtractorTest.krProcessing":28,"org.grobid.core.test.TestCitationParser.testCitationParser5_withoutConsolidation":10},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"60cf626c-a51c-11e6-be45-a14bf2812925","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.DocumentSource:190","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.lexicon.Lexicon:59","type":"CtIfImpl","sourcecode":"if ((org.grobid.core.lexicon.Lexicon.org.grobid.core.lexicon.Lexicon.org.grobid.core.lexicon.Lexicon) == null) {\n    if ((org.grobid.core.lexicon.Lexicon.org.grobid.core.lexicon.Lexicon.org.grobid.core.lexicon.Lexicon) == null)\n        org.grobid.core.lexicon.Lexicon.getNewInstance();\n    \n} "},"status":-1},{"failures":[],"tindex":"60cf626d-a51c-11e6-be45-177ca190123c","series":0,"name":"add","transplant":{"position":"org.grobid.core.utilities.TextUtilities:88","type":"CtLocalVariableImpl","sourcecode":"com.google.common.collect.PeekingIterator<org.grobid.core.layout.LayoutToken> com.google.common.collect.PeekingIterator<org.grobid.core.layout.LayoutToken> = com.google.common.collect.Iterators.peekingIterator(tokens.iterator())"},"variableMap":{"tokens":"toks"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.LayoutTokensUtil:29","type":"CtLocalVariableImpl","sourcecode":"com.google.common.collect.PeekingIterator<org.grobid.core.layout.LayoutToken> com.google.common.collect.PeekingIterator<org.grobid.core.layout.LayoutToken> = com.google.common.collect.Iterators.peekingIterator(toks.iterator())"},"status":-2},{"failures":[],"tindex":"60cf897e-a51c-11e6-be45-c3583c90f983","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.IOUtilities:113","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.Utilities.deleteOldies(org.grobid.core.utilities.GrobidProperties.getTempPath(), 300)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:1519","type":"CtInvocationImpl","sourcecode":"tokenizationsFigure.add(tokenizations.get(p))"},"status":0},{"failures":[],"tindex":"60cf897f-a51c-11e6-be45-7d7b0d21a0be","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.TEIFormatter:2095","type":"CtLocalVariableImpl","sourcecode":"char char = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.OPSService:36","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"60cf8980-a51c-11e6-be45-1bf0433ac3ef","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.IOUtilities:113","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.Utilities.deleteOldies(org.grobid.core.utilities.GrobidProperties.getTempPath(), 300)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:1485","type":"CtAssignmentImpl","sourcecode":"output = writeField(buffer, s1, lastTag0, s2, \"<web>\", \"<ptr type=\\\"web\\\">\", addSpace)"},"status":-2},{"failures":[],"tindex":"60cf8981-a51c-11e6-be45-29052040aeb0","series":0,"name":"replace","transplant":{"position":"org.grobid.core.layout.Block:158","type":"CtIfImpl","sourcecode":"if ((org.grobid.core.layout.BoundingBox) != null)\n    return org.grobid.core.layout.BoundingBox.getY();\nelse\n    return 0.0;\n"},"variableMap":{"boundingBox":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.layout.BoundingBox:160","type":"CtReturnImpl","sourcecode":"return dist(double, double, to.double, to.double)"},"status":-2},{"failures":[],"tindex":"60cf8982-a51c-11e6-be45-9b848fcaf044","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.CitationParser:538","type":"CtInvocationImpl","sourcecode":"journalsPositions.add(org.grobid.core.lexicon.Lexicon.inJournalNames(input))"},"variableMap":{"input":"input","journalsPositions":"publishersPositions","lexicon":"lexicon"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:89","type":"CtInvocationImpl","sourcecode":"publishersPositions.add(org.grobid.core.lexicon.Lexicon.inPublisherNames(input))"},"status":-2},{"failures":[],"tindex":"60cf8983-a51c-11e6-be45-8b72fff378c2","series":0,"name":"add","transplant":{"position":"org.grobid.core.main.LibraryLoader:129","type":"CtInvocationImpl","sourcecode":"org.grobid.core.mock.MockContext.setInitialContext()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3090","type":"CtInvocationImpl","sourcecode":"auth.addAffiliation(aff)"},"status":-2},{"failures":[],"tindex":"60cf8984-a51c-11e6-be45-f347c465138d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:87","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:264","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"60cfb095-a51c-11e6-be45-a5e28f8a0f94","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.Document:1010","type":"CtAssignmentImpl","sourcecode":"nbLarge = 1"},"variableMap":{"nbLarge":"q"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:848","type":"CtUnaryOperatorImpl","sourcecode":"q++"},"status":-2},{"failures":[],"tindex":"60cfb096-a51c-11e6-be45-25a770ca8b87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3182","type":"CtAssignmentImpl","sourcecode":"lastname = lastname.toLowerCase()"},"status":-2},{"failures":[],"tindex":"60cfb097-a51c-11e6-be45-335833a6cb7a","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.Engine:1173","type":"CtAssignmentImpl","sourcecode":"abstr = abstr.replace(\"@BULLET\", \" \u2022 \")"},"variableMap":{"abstr":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ProcessEngine:497","type":"CtAssignmentImpl","sourcecode":"result = getEngine().processAllCitationsInPatent(inputStr, articles, patents, false)"},"status":-2},{"failures":[],"tindex":"60cfb098-a51c-11e6-be45-f9b65cc3e8dc","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.ebook.BookStructureParser:289","type":"CtIfImpl","sourcecode":"if (toto.equals(\"\\n\")) {\n    endline = true;\n    endloop = true;\n} else {\n    if ((((((toto.length()) != 0) && (!(toto.startsWith(\"@IMAGE\")))) && (!(text.contains(\".pbm\")))) && (!(text.contains(\".vec\")))) && (!(text.contains(\".jpg\")))) {\n        endloop = true;\n    } \n}"},"variableMap":{"toto":"value","endline":"isName","endloop":"isName","text":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.CountryCodeSaxParser:84","type":"CtIfImpl","sourcecode":"if (value.equals(\"a2code\")) {\n    boolean = true;\n    boolean = false;\n} else if ((value.equals(\"name\")) | (value.equals(\"nameAlt\"))) {\n    boolean = false;\n    boolean = true;\n} else if (value.equals(\"a3code\")) {\n    boolean = false;\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"60cfb099-a51c-11e6-be45-59626e216bac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ebook.BookStructureParser:651","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/page>\\n\")"},"status":-2},{"failures":[],"tindex":"60cfb09a-a51c-11e6-be45-85542b73b8a1","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.Utilities:291","type":"CtAssignmentImpl","sourcecode":"abstract_ = abstract_.replace(\"@BULLET\", \" \u2022 \")"},"variableMap":{"abstract_":"resultTEI"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:728","type":"CtOperatorAssignmentImpl","sourcecode":"resultTEI += \"<\/text>\\n\""},"status":-2},{"failures":[],"tindex":"60cfb09b-a51c-11e6-be45-0308181c42d1","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.PatentDocument:72","type":"CtAssignmentImpl","sourcecode":"newPage = content.startsWith(\"@PAGE\")"},"variableMap":{"newPage":"output","content":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Segmentation:843","type":"CtAssignmentImpl","sourcecode":"output = writeField(buffer, line, s1, lastTag0, s2, \"<headnote>\", \"<note place=\\\"headnote\\\">\", addSpace, 3)"},"status":-2},{"failures":[],"tindex":"60cfb09c-a51c-11e6-be45-45863eabcf25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.OPSService:106","type":"CtIfImpl","sourcecode":"if (toRead) {\n    line = stripNonValidXMLCharacters(line);\n    sb.append(line);\n} "},"status":-2},{"failures":[],"tindex":"60cfd7ad-a51c-11e6-be45-e31c50e3933a","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.FullTextParser:1264","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/formula>\\n\\n\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:1260","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/head>\\n\\n\")"},"status":-2},{"failures":[],"tindex":"60cfd7ae-a51c-11e6-be45-3112ffd49d89","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.TEIFormatter:2263","type":"CtIfImpl","sourcecode":"if ((!(text.endsWith(\"<\/ref>\"))) && (!(text.startsWith(\"<ref\"))))\n    text = (\"<ref type=\\\"bibr\\\">\" + text) + \"<\/ref>\";\n"},"variableMap":{"text":"pathXML"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:175","type":"CtIfImpl","sourcecode":"if (pathXML.endsWith(\".gz\")) {\n    java.io.InputStream java.io.InputStream = new java.io.FileInputStream(pathXML);\n    java.util.zip.GZIPInputStream java.util.zip.GZIPInputStream = new java.util.zip.GZIPInputStream(dataInputStream);\n    java.io.DataInputStream java.io.DataInputStream = new java.io.DataInputStream(gzip);\n    dataInputStream = tmp;\n    input = new org.xml.sax.InputSource(dataInputStream);\n} else {\n    input = new org.xml.sax.InputSource(pathXML);\n}"},"status":-2},{"failures":[],"tindex":"60cfd7af-a51c-11e6-be45-75d72d6263f8","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1487","type":"CtAssignmentImpl","sourcecode":"string = string.replace(\"Categories and Subject Descriptors\", \"\").trim()"},"variableMap":{"string":"tok"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.PDF2XMLSaxHandler:698","type":"CtAssignmentImpl","sourcecode":"java.lang.String = tok"},"status":-2},{"failures":[],"tindex":"60cfd7b0-a51c-11e6-be45-01d92affa2ba","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2630","type":"CtOperatorAssignmentImpl","sourcecode":"tei += (\"\\t\\t<contributor role=\\\"editor\\\">\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(editor))) + \"<\/contributor>\\n\""},"variableMap":{"editor":"res","tei":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:222","type":"CtAssignmentImpl","sourcecode":"res = label(res)"},"status":-2},{"failures":[],"tindex":"60cfd7b1-a51c-11e6-be45-3bf6533f2df2","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.FullTextParser:1278","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/ref>\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:648","type":"CtInvocationImpl","sourcecode":"buffer.append(output)"},"status":-2},{"failures":[],"tindex":"60cfd7b2-a51c-11e6-be45-c9fc975639fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:824","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/date>\")"},"status":-2},{"failures":[],"tindex":"60cfd7b3-a51c-11e6-be45-6fe80c49babf","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:111","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.getNewInstance()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.main.batch.GrobidMain:58","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.getInstance()"},"status":-2},{"failures":[],"tindex":"60cfd7b4-a51c-11e6-be45-dd119848f2e6","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:153","type":"CtLocalVariableImpl","sourcecode":"java.io.BufferedReader java.io.BufferedReader = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.TextUtilities:743","type":"CtLocalVariableImpl","sourcecode":"java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(new java.io.InputStreamReader(is))"},"status":-2},{"failures":[],"tindex":"60cffec5-a51c-11e6-be45-c178df100766","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3690","type":"CtIfImpl","sourcecode":"if ((bibo.getYear()) != null)\n    bib.setYear(bibo.getYear());\n"},"status":-2},{"failures":[],"tindex":"60cffec6-a51c-11e6-be45-f1ea57277099","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.Date:95","type":"CtLocalVariableImpl","sourcecode":"final int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2691","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"60cffec7-a51c-11e6-be45-a9414f20a63c","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:84","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Utilities:225","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"60cffec8-a51c-11e6-be45-333bdfb3427f","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.citations.RegexReferenceSegmenter:110","type":"CtAssignmentImpl","sourcecode":"diggitReferences = org.grobid.core.engines.citations.RegexReferenceSegmenter.sanitizeCitationReferenceList(diggitReferences)"},"variableMap":{"diggitReferences":"auts"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:381","type":"CtAssignmentImpl","sourcecode":"auts = new java.util.ArrayList<java.lang.String>()"},"status":-2},{"failures":[],"tindex":"60cffec9-a51c-11e6-be45-99d2243d4c71","series":0,"name":"replace","transplant":{"position":"org.grobid.core.sax.CrossrefUnixrefSaxParser:179","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    java.lang.String = sauce;\nelse\n    java.lang.String = ((java.lang.String) + \" \") + sauce;\n"},"variableMap":{"author":"separator","sauce":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:549","type":"CtIfImpl","sourcecode":"if (reference == null) {\n    reference = separator + actual;\n    currentOffset = offset;\n    currentPatent = false;\n    currentProb = prob;\n} else {\n    if (currentPatent) {\n        referencesPatent.add(reference);\n        offsets_patent.add(currentOffset);\n        probPatent.add(new java.lang.Double(currentProb));\n        currentPatent = false;\n        reference = separator + actual;\n        currentOffset = offset;\n        currentProb = prob;\n    } else {\n        if (label.equals(\"I-<refNPL>\")) {\n            referencesNPL.add(reference);\n            offsets_NPL.add(currentOffset);\n            probNPL.add(new java.lang.Double(currentProb));\n            currentPatent = false;\n            reference = separator + actual;\n            currentOffset = offset;\n            currentProb = prob;\n        } else {\n            reference += separator + actual;\n            if (prob > currentProb) {\n                currentProb = prob;\n            } \n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"60cffeca-a51c-11e6-be45-1fb58ec69876","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:749","type":"CtIfImpl","sourcecode":"if (numb < 5841)\n    year = \"2007\";\nelse if (numb < 317884)\n    year = \"2008\";\nelse if (numb < 655475)\n    year = \"2009\";\nelse if (numb < 930166)\n    year = \"2010\";\nelse\n    year = \"2011\";\n"},"status":-2},{"failures":[],"tindex":"60cffecb-a51c-11e6-be45-8d5854ad21ec","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.BasicStructureBuilder:133","type":"CtIfImpl","sourcecode":"if (i > 5) {\n    break;\n} "},"variableMap":{"i":"org.grobid.core.document.Document.MAX_FIG_BOX_DISTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:1893","type":"CtForEachImpl","sourcecode":"for (org.grobid.core.layout.GraphicObject org.grobid.core.layout.GraphicObject : com.google.common.collect.Multimap<java.lang.Integer, org.grobid.core.layout.GraphicObject>.get(figure.getPage())) {\n    if (((go.getType()) != (org.grobid.core.layout.GraphicObjectType.org.grobid.core.layout.GraphicObjectType.org.grobid.core.layout.GraphicObjectType)) || (go.isUsed())) {\n        continue;\n    } \n    org.grobid.core.layout.BoundingBox org.grobid.core.layout.BoundingBox = org.grobid.core.layout.BoundingBox.fromPointAndDimensions(go.getPage(), go.getX(), go.getY(), go.getWidth(), go.getHeight());\n    if (!(getPage(goBox.getPage()).getMainArea().contains(goBox))) {\n        continue;\n    } \n    double double = figureBox.distanceTo(goBox);\n    if (dist > (org.grobid.core.document.Document.org.grobid.core.document.Document.int)) {\n        continue;\n    } \n    if (dist < minDist) {\n        minDist = dist;\n        bestGo = go;\n    } \n}"},"status":-2},{"failures":[],"tindex":"60d025dc-a51c-11e6-be45-f35ec6804083","series":0,"name":"add","transplant":{"position":"org.grobid.core.visualization.FigureTableVisualizer:289","type":"CtLocalVariableImpl","sourcecode":"int int = 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:1368","type":"CtLocalVariableImpl","sourcecode":"int int = stt.countTokens()"},"status":-2},{"failures":[],"tindex":"60d025dd-a51c-11e6-be45-43e7025e8636","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1227","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:207","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"((\\\\s|,|\\\\.|^|\\\\-)\""},"status":-2},{"failures":[],"tindex":"60d025de-a51c-11e6-be45-a5d54820ac7f","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidAnalyzer:120","type":"CtIfImpl","sourcecode":"if ((textTokenized == null) || ((textTokenized.size()) == 0)) {\n    return new java.util.ArrayList<java.lang.String>();\n} "},"variableMap":{"textTokenized":"sourceBib"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BibDataSet:69","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.String>"},"status":-2},{"failures":[],"tindex":"60d025df-a51c-11e6-be45-85f1763cdd65","series":0,"name":"add","transplant":{"position":"org.grobid.core.data.BiblioItem:2862","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    openurl += \"&rft_id=info:doi/\" + (java.net.URLEncoder.encode(java.lang.String, \"UTF-8\"));\n    openurl += \"&url_ctx_fmt=info:ofi/fmt:kev:mtx:ctx&rft.genre=article \";\n    return openurl;\n} "},"variableMap":{"openurl":"note","DOI":"note"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:533","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"60d025e0-a51c-11e6-be45-cf43e8ad6298","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.Document:1304","type":"CtLocalVariableImpl","sourcecode":"java.util.regex.Matcher java.util.regex.Matcher = org.grobid.core.document.Document.org.grobid.core.document.Document.java.util.regex.Pattern.matcher(localText)"},"variableMap":{"localText":"rawText","org.grobid.core.document.Document.DOIPattern":"application_pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:518","type":"CtLocalVariableImpl","sourcecode":"java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(java.lang.String)"},"status":-2},{"failures":[],"tindex":"60d025e1-a51c-11e6-be45-072b643e57e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.lexicon.FastMatcher:125","type":"CtIfImpl","sourcecode":"if ((org.grobid.core.lexicon.FastMatcher.org.grobid.core.lexicon.FastMatcher.java.lang.String.indexOf(token)) != (-1)) {\n    currentPos++;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"60d025e2-a51c-11e6-be45-0f4b1eb0e4ac","series":0,"name":"replace","transplant":{"position":"org.grobid.core.main.batch.GrobidMain:169","type":"CtInvocationImpl","sourcecode":"org.grobid.core.main.batch.GrobidMain.initProcess()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:1120","type":"CtTryImpl","sourcecode":"try {\n    java.io.OutputStream java.io.OutputStream = new java.io.FileOutputStream(file , false);\n    java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(tos , \"UTF-8\");\n    java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer();\n    content.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\");\n    if (((patents.size()) > 0) || ((articles.size()) > 0))\n        content.append(\"<citations>\\n\");\n    \n    if ((patents.size()) > 0)\n        content.append(\"<patent-citations>\\n\");\n    \n    int int = 0;\n    for (org.grobid.core.data.PatentItem org.grobid.core.data.PatentItem : patents) {\n        java.lang.String java.lang.String = (pi.getAuthority()) + (pi.getNumberEpoDoc());\n        if ((pi.getKindCode()) != null)\n            dnum += pi.getKindCode();\n        \n        content.append((((((((\"<patcit if=\\\"pcit\" + i) + \" dnum=\\\"\") + dnum) + \"\\\">\") + \"<text>\") + (pi.getContext())) + \"<\/text><\/patcit>\"));\n        content.append(\"\\n\");\n        i++;\n    }\n    if ((patents.size()) > 0)\n        content.append(\"<\/patent-citations>\\n\");\n    \n    if ((articles.size()) > 0)\n        content.append(\"<npl-citations>\\n\");\n    \n    i = 0;\n    for (org.grobid.core.data.BibDataSet org.grobid.core.data.BibDataSet : articles) {\n        content.append(((\"<nplcit if=\\\"ncit\" + i) + \"\\\">\"));\n        content.append(bds.getResBib().toTEI(i));\n        content.append(((\"<text>\" + (bds.getRawBib())) + \"<\/text><\/nplcit>\"));\n        content.append(\"\\n\");\n        i++;\n    }\n    if ((articles.size()) > 0)\n        content.append(\"<\/npl-citations>\\n\");\n    \n    if (((patents.size()) > 0) || ((articles.size()) > 0))\n        content.append(\"<\/citations>\\n\");\n    \n    writer.write(content.toString());\n    writer.close();\n    tos.close();\n} catch (java.lang.Exception e) {\n    throw new org.grobid.core.exceptions.GrobidException(\"An exception occured while running Grobid.\" , e);\n}"},"status":-2},{"failures":[],"tindex":"60d025e3-a51c-11e6-be45-33619cecf1d2","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:493","type":"CtAssignmentImpl","sourcecode":"addedOffset = 0"},"variableMap":{"addedOffset":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.LevenshteinDistanceAligment:256","type":"CtUnaryOperatorImpl","sourcecode":"i--"},"status":-2},{"failures":[],"tindex":"60d04cf4-a51c-11e6-be45-5d459f1235da","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.FullTextParser:1878","type":"CtInvocationImpl","sourcecode":"tei.append(\"\\t\\t<\/back>\\n\")"},"variableMap":{"tei":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.TEIFormatter:541","type":"CtInvocationImpl","sourcecode":"tei.append(\"\\t\\t\\t\\t\\t\\t\\t<date type=\\\"published\\\" when=\\\"\")"},"status":-2},{"failures":[],"tindex":"60d04cf5-a51c-11e6-be45-799d7c37d20f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.TextUtilities:300","type":"CtAssignmentImpl","sourcecode":"d = _d"},"status":-2},{"failures":[],"tindex":"60d04cf6-a51c-11e6-be45-813d80553ebf","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.OPSService:63","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Segmentation:734","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[],"tindex":"60d04cf7-a51c-11e6-be45-a9c1230f47d9","series":0,"name":"add","transplant":{"position":"org.grobid.core.data.BiblioItem:2880","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    openurl += \"&rft.jtitle=\" + (java.net.URLEncoder.encode(java.lang.String, \"UTF-8\"));\nelse if ((java.lang.String) != null)\n    openurl += \"&rft.btitle=\" + (java.net.URLEncoder.encode(java.lang.String, \"UTF-8\"));\n"},"variableMap":{"openurl":"org.grobid.core.utilities.GrobidProperties.FILE_ENDING_TEI_FULLTEXT","journal":"pathTEI","bookTitle":"pathTEI"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ebook.BookStructureParser:52","type":"CtTryImpl","sourcecode":"try {\n    source = org.grobid.core.document.DocumentSource.fromPdf(file);\n    org.grobid.core.document.Document org.grobid.core.document.Document = new org.grobid.core.document.Document(org.grobid.core.document.DocumentSource.fromPdf(file));\n    java.lang.String java.lang.String = file.getName();\n    doc.addTokenizedDocument(org.grobid.core.engines.config.GrobidAnalysisConfig.defaultInstance());\n    if ((doc.getBlocks()) == null) {\n        throw new java.lang.Exception(\"PDF parsing resulted in empty content\");\n    } \n    java.lang.String java.lang.String = getFulltextFeatured(doc);\n    java.util.List<org.grobid.core.layout.LayoutToken> java.util.List<org.grobid.core.layout.LayoutToken> = doc.getTokenizationsFulltext();\n    java.lang.String java.lang.String = (pathFullText + \"/\") + (PDFFileName.replace(\".pdf\", \".fulltext\"));\n    java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(new java.io.FileOutputStream(new java.io.File(outPathFulltext) , false) , \"UTF-8\");\n    writer.write((fulltext + \"\\n\"));\n    writer.close();\n    java.lang.String java.lang.String = label(fulltext);\n    java.lang.StringBuffer java.lang.StringBuffer = trainingExtraction(rese, tokenizations);\n    writer = new java.io.OutputStreamWriter(new java.io.FileOutputStream(new java.io.File(((pathTEI + \"/\") + (PDFFileName.replace(\".pdf\", org.grobid.core.utilities.GrobidProperties.org.grobid.core.utilities.GrobidProperties.java.lang.String)))) , false) , \"UTF-8\");\n    writer.write(((\"<?xml version=\\\"1.0\\\" ?>\\n<tei>\\n\\t<teiHeader>\\n\\t\\t<fileDesc xml:id=\\\"\" + id) + \"\\\"/>\\n\\t<\/teiHeader>\\n\\t<text xml:lang=\\\"en\\\">\\n\"));\n    writer.write(bufferFulltext.toString());\n    writer.write(\"\\n\\t<\/text>\\n<\/tei>\\n\");\n    writer.close();\n} catch (java.lang.Exception e) {\n    throw new org.grobid.core.exceptions.GrobidException(\"An exception occured while running Grobid.\" , e);\n} finally {\n    if (source != null) {\n        source.close(false, true);\n    } \n}"},"status":-2},{"failures":[],"tindex":"60d04cf8-a51c-11e6-be45-158f4d21c41c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ProcessEngine:520","type":"CtForEachImpl","sourcecode":"for (final java.io.File java.io.File : pdfDirectory.listFiles()) {\n    try {\n        if (currPDF.getName().toLowerCase().endsWith(\".pdf\")) {\n            java.util.List<org.grobid.core.data.BibDataSet> java.util.List<org.grobid.core.data.BibDataSet> = new java.util.ArrayList<org.grobid.core.data.BibDataSet>();\n            java.util.List<org.grobid.core.data.PatentItem> java.util.List<org.grobid.core.data.PatentItem> = new java.util.ArrayList<org.grobid.core.data.PatentItem>();\n            result = getEngine().processAllCitationsInPDFPatent((((pGbdArgs.getPath2Input()) + (java.io.File.java.io.File.java.lang.String)) + (currPDF.getName())), articles, patents, false);\n            if (currPDF.getName().endsWith(\".pdf\")) {\n                org.grobid.core.utilities.IOUtilities.writeInFile((((pGbdArgs.getPath2Output()) + (java.io.File.java.io.File.java.lang.String)) + (new java.io.File(currPDF.getAbsolutePath()).getName().replace(\".pdf\", \".tei.xml\"))), result);\n            } else if (currPDF.getName().endsWith(\".PDF\")) {\n                org.grobid.core.utilities.IOUtilities.writeInFile((((pGbdArgs.getPath2Output()) + (java.io.File.java.io.File.java.lang.String)) + (new java.io.File(currPDF.getAbsolutePath()).getName().replace(\".PDF\", \".tei.xml\"))), result);\n            } \n        } \n    } catch (final java.lang.Exception exp) {\n        org.grobid.core.engines.ProcessEngine.org.grobid.core.engines.ProcessEngine.org.slf4j.Logger.error(((\"An error occured while processing the file \" + (currPDF.getAbsolutePath())) + \". Continuing the process for the other files\"));\n    }\n}"},"status":-2},{"failures":[],"tindex":"60d04cf9-a51c-11e6-be45-61045d4077f2","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.TextUtilities:541","type":"CtIfImpl","sourcecode":"if ((input.endsWith(\")\")) && (input.startsWith(\"(\"))) {\n    input = input.substring(1, ((input.length()) - 1)).trim();\n} "},"variableMap":{"input":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Keyword:53","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    res += (\" (type:\" + (java.lang.String)) + \")\";\n} "},"status":-2},{"failures":[],"tindex":"60d04cfa-a51c-11e6-be45-9f598c34b7b8","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2862","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    openurl += \"&rft_id=info:doi/\" + (java.net.URLEncoder.encode(java.lang.String, \"UTF-8\"));\n    openurl += \"&url_ctx_fmt=info:ofi/fmt:kev:mtx:ctx&rft.genre=article \";\n    return openurl;\n} "},"variableMap":{"openurl":"tei","DOI":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioSet:179","type":"CtReturnImpl","sourcecode":"return tei"},"status":-2},{"failures":[],"tindex":"60d04cfb-a51c-11e6-be45-17c2b8c7eb27","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.AffiliationAddressParser:761","type":"CtIfImpl","sourcecode":"if ((result == null) || ((result.length()) == 0)) {\n    return null;\n} "},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:886","type":"CtTryImpl","sourcecode":"try {\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(result , \"\\n\");\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    int int = 0;\n    boolean boolean = true;\n    boolean boolean = false;\n    boolean boolean = false;\n    boolean boolean = false;\n    boolean boolean = false;\n    while (st.hasMoreTokens()) {\n        boolean boolean = false;\n        java.lang.String java.lang.String = st.nextToken().trim();\n        if ((tok.length()) == 0) {\n            continue;\n        } \n        java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(tok , \" \\t\");\n        java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        int int = 0;\n        boolean boolean = false;\n        int int = stt.countTokens();\n        while (stt.hasMoreTokens()) {\n            java.lang.String java.lang.String = stt.nextToken().trim();\n            if (i == 0) {\n                s2 = org.grobid.core.utilities.TextUtilities.HTMLEncode(s);\n                int int = p;\n                boolean boolean = false;\n                while ((!strop) && (p < (tokenizations.size()))) {\n                    java.lang.String java.lang.String = tokenizations.get(p).t();\n                    if ((tokOriginal.equals(\" \")) || (tokOriginal.equals(\"\\u00a0\"))) {\n                        addSpace = true;\n                    } else if (tokOriginal.equals(\"\\n\")) {\n                        newLine = true;\n                    } else if (tokOriginal.equals(s)) {\n                        strop = true;\n                    } \n                    p++;\n                }\n                if (p == (tokenizations.size())) {\n                    if ((p - p0) > 2) {\n                        p = p0;\n                    } \n                } \n            } else if (i == (ll - 1)) {\n                s1 = s;\n            } else {\n                if (s.equals(\"LINESTART\"))\n                    newLine = true;\n                \n                localFeatures.add(s);\n            }\n            i++;\n        }\n        if (newLine && (!start)) {\n            buffer.append(\"<lb/>\");\n        } \n        java.lang.String java.lang.String = null;\n        if (lastTag != null) {\n            if (lastTag.startsWith(\"I-\")) {\n                lastTag0 = lastTag.substring(2, lastTag.length());\n            } else {\n                lastTag0 = lastTag;\n            }\n        } \n        java.lang.String java.lang.String = null;\n        if (s1 != null) {\n            if (s1.startsWith(\"I-\")) {\n                currentTag0 = s1.substring(2, s1.length());\n            } else {\n                currentTag0 = s1;\n            }\n        } \n        boolean boolean = false;\n        if (lastTag != null) {\n            closeParagraph = org.grobid.core.engines.FullTextParser.testClosingTag(buffer, currentTag0, lastTag0, s1);\n        } \n        boolean boolean;\n        output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<other>\", \"<note type=\\\"other\\\">\", addSpace, 3, false);\n        if (!output) {\n            if (closeParagraph) {\n                output = org.grobid.core.engines.FullTextParser.writeFieldBeginEnd(buffer, s1, \"\", s2, \"<paragraph>\", \"<p>\", addSpace, 3, false);\n            } else {\n                output = org.grobid.core.engines.FullTextParser.writeFieldBeginEnd(buffer, s1, lastTag, s2, \"<paragraph>\", \"<p>\", addSpace, 3, false);\n            }\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<citation_marker>\", \"<ref type=\\\"biblio\\\">\", addSpace, 3, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<table_marker>\", \"<ref type=\\\"table\\\">\", addSpace, 3, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<section>\", \"<head>\", addSpace, 3, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<equation>\", \"<formula>\", addSpace, 4, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<figure_marker>\", \"<ref type=\\\"figure\\\">\", addSpace, 3, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<figure>\", \"<figure>\", addSpace, 3, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeField(buffer, s1, lastTag0, s2, \"<table>\", \"<table>\", addSpace, 3, false);\n        } \n        if (!output) {\n            output = org.grobid.core.engines.FullTextParser.writeFieldBeginEnd(buffer, s1, lastTag, s2, \"<item>\", \"<item>\", addSpace, 3, false);\n        } \n        lastTag = s1;\n        if (!(st.hasMoreTokens())) {\n            if (lastTag != null) {\n                org.grobid.core.engines.FullTextParser.testClosingTag(buffer, \"\", currentTag0, s1);\n            } \n        } \n        if (start) {\n            start = false;\n        } \n    }\n    return buffer;\n} catch (java.lang.Exception e) {\n    e.printStackTrace();\n    throw new org.grobid.core.exceptions.GrobidException(\"An exception occured while running Grobid.\" , e);\n}"},"status":-2},{"failures":[],"tindex":"60d0740c-a51c-11e6-be45-59aaf868be24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Utilities:155","type":"CtIfImpl","sourcecode":"if ((org.grobid.core.utilities.TextUtilities.org.grobid.core.utilities.TextUtilities.java.lang.String.indexOf(c)) == (-1))\n    new_date += c;\n"},"status":-2},{"failures":[],"tindex":"60d0740d-a51c-11e6-be45-ffe6737afb43","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:705","type":"CtOperatorAssignmentImpl","sourcecode":"resultTEI += (\"<div id=\\\"_\" + divID) + \"\\\">\\n\""},"variableMap":{"resultTEI":"strConfidence","divID":"strConfidence"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.annotations.Annotation:274","type":"CtAssignmentImpl","sourcecode":"strConfidence = org.grobid.core.utilities.TeiValues.org.grobid.core.utilities.TeiValues.java.lang.String"},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":50,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}