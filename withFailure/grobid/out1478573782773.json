{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"eee591a5-a55e-11e6-a269-1d2f73e3ea7a","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.BasicStructureBuilder:720","type":"CtLocalVariableImpl","sourcecode":"org.grobid.core.document.DocumentPointer org.grobid.core.document.DocumentPointer = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:651","type":"CtLocalVariableImpl","sourcecode":"org.grobid.core.document.DocumentPointer org.grobid.core.document.DocumentPointer = docPiece.org.grobid.core.document.DocumentPointer"},"status":-2},{"failures":[],"tindex":"eeed59d6-a55e-11e6-a269-359ef7601200","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:742","type":"CtAssignmentImpl","sourcecode":"endline = false"},"status":0},{"failures":[],"tindex":"eeed59d7-a55e-11e6-a269-bdc43805c201","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.CitationParser:818","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/author>\")"},"variableMap":{"buffer":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:487","type":"CtInvocationImpl","sourcecode":"tei.append(\"<\/TEI>\\n\")"},"status":-2},{"failures":[],"tindex":"eeed59d8-a55e-11e6-a269-5b83007b4783","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:734","type":"CtIfImpl","sourcecode":"if (currentLineLength == 0) {\n    currentLineLength = accumulated.length();\n} "},"variableMap":{"currentLineLength":"blockIndex","accumulated":"lastPlainLabel"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.BasicStructureBuilder:863","type":"CtIfImpl","sourcecode":"if (blockIndex == (docBlocks.size())) {\n    if ((!(curPlainLabel.equals(lastPlainLabel))) && (lastPlainLabel != null)) {\n        if (((pointerA.getTokenDocPos()) <= (lastPointer.getTokenDocPos())) && ((pointerA.getTokenDocPos()) != (-1))) {\n            labeledBlocks.put(lastPlainLabel, new org.grobid.core.document.DocumentPiece(pointerA , lastPointer));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"eeed80e9-a55e-11e6-a269-09bf129cba32","series":0,"name":"add","transplant":{"position":"org.grobid.core.features.FeaturesVectorDate:132","type":"CtIfImpl","sourcecode":"if (newline) {\n    newBlock = true;\n} "},"variableMap":{"newBlock":"consolidate","newline":"consolidate"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:193","type":"CtForEachImpl","sourcecode":"for (org.grobid.core.engines.citations.LabeledReferenceResult org.grobid.core.engines.citations.LabeledReferenceResult : references) {\n    org.grobid.core.data.BiblioItem org.grobid.core.data.BiblioItem = processing(org.grobid.core.utilities.TextUtilities.dehyphenize(ref.getReferenceText()), consolidate);\n    if ((bib != null) && (!(bib.rejectAsReference()))) {\n        org.grobid.core.data.BibDataSet org.grobid.core.data.BibDataSet = new org.grobid.core.data.BibDataSet();\n        bds.setRefSymbol(ref.getLabel());\n        bds.setResBib(bib);\n        bds.setRawBib(ref.getReferenceText());\n        bds.getResBib().setCoordinates(ref.getCoordinates());\n        results.add(bds);\n    } \n}"},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":5,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}