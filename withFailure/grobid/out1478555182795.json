{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"a6bedc91-a533-11e6-801f-299e3e5ca2a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ProcessEngine:109","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.IOUtilities.writeInFile(((outputPath + (java.io.File.java.io.File.java.lang.String)) + (new java.io.File(currPdf.getAbsolutePath()).getName().replace(\".PDF\", \".tei.xml\"))), result.toString())"},"status":0},{"failures":[],"tindex":"a6ef8982-a533-11e6-801f-e397cbe621c5","series":0,"name":"add","transplant":{"position":"org.grobid.core.analyzers.GrobidAnalyzer:120","type":"CtIfImpl","sourcecode":"if ((textTokenized == null) || ((textTokenized.size()) == 0)) {\n    return new java.util.ArrayList<java.lang.String>();\n} "},"variableMap":{"textTokenized":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.util.EmailSanitizer:200","type":"CtIfImpl","sourcecode":"if (result.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"a6f88a33-a533-11e6-801f-633cb78df9f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.lexicon.Lexicon:488","type":"CtThrowImpl","sourcecode":"throw new org.grobid.core.exceptions.GrobidResourceException(\"Error when compiling lexicon regular expression for locations.\" , e)"},"status":0},{"failures":[],"tindex":"a6f88a34-a533-11e6-801f-cbe0c4225fa7","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:350","type":"CtIfImpl","sourcecode":"if (tagClosed) {\n    addSpace = false;\n    addEOL = false;\n} "},"variableMap":{"addEOL":"refFound","tagClosed":"refFound","addSpace":"refFound"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.MarecSaxParser:224","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = getText();\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    try {\n        tokenizations = org.grobid.core.analyzers.GrobidAnalyzer.tokenize(content);\n    } catch (java.lang.Exception e) {\n        org.grobid.core.sax.MarecSaxParser.org.grobid.core.sax.MarecSaxParser.org.slf4j.Logger.debug(\"Tokenization for XML patent document has failed.\");\n    }\n    int int = 0;\n    for (java.lang.String java.lang.String : tokenizations) {\n        if ((((((token.trim().length()) == 0) || (token.equals(\" \"))) || (token.equals(\"\\t\"))) || (token.equals(\"\\n\"))) || (token.equals(\"\\r\"))) {\n            continue;\n        } \n        if ((i > (int)) && ((int) != (-1))) {\n            token = token.trim();\n            if ((token.length()) > 0) {\n                java.lang.StringBuffer.append(((token + \"\\t\") + \"<ignore>\\n\"));\n                java.lang.StringBuffer.append((token + \" \"));\n            } \n        } else {\n            try {\n                token = token.trim();\n                if ((token.length()) > 0) {\n                    java.lang.StringBuffer.append(((token + \"\\t\") + \"<other>\\n\"));\n                    java.lang.StringBuffer.append((token + \" \"));\n                } \n            } catch (java.lang.Exception e) {\n                throw new org.grobid.core.exceptions.GrobidException(\"An exception occured while running Grobid.\" , e);\n            }\n        }\n        i++;\n    }\n    java.lang.StringBuffer.setLength(0);\n    boolean = false;\n} "},"status":0}],"header":{"groupId":"org.grobid","transformationCount":4,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}