{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"ebcfd301-a56e-11e6-b2cf-cd8311f73350","series":0,"name":"add","transplant":{"position":"org.grobid.core.utilities.LayoutTokensUtil:70","type":"CtAssignmentImpl","sourcecode":"tok = \"\u2022\""},"variableMap":{"tok":"inst"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:994","type":"CtAssignmentImpl","sourcecode":"java.lang.String = inst"},"status":0},{"failures":[],"tindex":"ebd02122-a56e-11e6-b2cf-0f847c3c5182","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Engine:362","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = \"\";\n    java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream(((filePath.substring(0, ((filePath.length()) - 3))) + ext));\n    java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(fileIn , \"UTF-8\");\n    java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(reader);\n    java.lang.String java.lang.String;\n    int int = 0;\n    while (((line = bufReader.readLine()) != null) && (nbChar < 5000)) {\n        if ((line.length()) == 0)\n            continue;\n        \n        text += \" \" + line;\n        nbChar += line.length();\n    }\n    bufReader.close();\n    org.grobid.core.utilities.LanguageUtilities org.grobid.core.utilities.LanguageUtilities = org.grobid.core.utilities.LanguageUtilities.getInstance();\n    return languageUtilities.runLanguageId(text);\n} catch (java.io.IOException e) {\n    throw new org.grobid.core.exceptions.GrobidException(\"An exception occurred while running Grobid.\" , e);\n}"},"status":-2},{"failures":[],"tindex":"ebd04833-a56e-11e6-b2cf-1759fcb4bb58","series":0,"name":"replace","transplant":{"position":"org.grobid.core.annotations.Description:127","type":"CtAssignmentImpl","sourcecode":"org.grobid.core.annotations.Paragraph = new org.grobid.core.annotations.Paragraph()"},"variableMap":{"currParagraph":"paragraph"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.annotations.Description:209","type":"CtAssignmentImpl","sourcecode":"paragraph = getParagraphFromPointer(startPointer)"},"status":-2},{"failures":[],"tindex":"ebd04834-a56e-11e6-b2cf-751901e0121b","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:1074","type":"CtIfImpl","sourcecode":"if (numb < 78000)\n    year = \"1925\";\nelse if (numb < 158000)\n    year = \"1926\";\nelse if (numb < 244000)\n    year = \"1927\";\nelse if (numb < 330000)\n    year = \"1928\";\nelse if (numb < 418000)\n    year = \"1929\";\nelse if (numb < 506000)\n    year = \"1930\";\nelse if (numb < 584000)\n    year = \"1931\";\nelse if (numb < 650000)\n    year = \"1932\";\nelse if (numb < 705000)\n    year = \"1933\";\nelse\n    year = \"1934\";\n"},"variableMap":{"year":"resultToken","numb":"preTokenizationPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.tokenization.TaggingTokenSynchronizer:66","type":"CtWhileImpl","sourcecode":"while ((!stop) && (com.google.common.collect.PeekingIterator<org.grobid.core.layout.LayoutToken>.hasNext())) {\n    org.grobid.core.layout.LayoutToken org.grobid.core.layout.LayoutToken = com.google.common.collect.PeekingIterator<org.grobid.core.layout.LayoutToken>.next();\n    layoutTokenBuffer.add(layoutToken);\n    java.lang.String java.lang.String = layoutToken.t();\n    if (org.grobid.core.utilities.LayoutTokensUtil.spaceyToken(tokOriginal)) {\n        addSpace = true;\n    } else if (org.grobid.core.utilities.LayoutTokensUtil.newLineToken(tokOriginal)) {\n        newLine = true;\n    } else if (tokOriginal.trim().equals(resultToken)) {\n        stop = true;\n    } else if (tokOriginal.isEmpty()) {\n    } else {\n        int int = 5;\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        for (int int = java.lang.Math.max(0, ((int) - limit)) ; i < (java.lang.Math.min(((int) + limit), java.util.List<org.grobid.core.utilities.Triple<java.lang.String, java.lang.String, java.lang.String>>.size())) ; i++) {\n            org.grobid.core.utilities.Triple<java.lang.String, java.lang.String, java.lang.String> org.grobid.core.utilities.Triple<java.lang.String, java.lang.String, java.lang.String> = java.util.List<org.grobid.core.utilities.Triple<java.lang.String, java.lang.String, java.lang.String>>.get(i);\n            java.lang.String java.lang.String = i == (int) ? (\"-->\\t\\'\" + (s.getA())) + \"'\" : (\"\\t\\'\" + (s.getA())) + \"'\";\n            sb.append(str).append(\"\\n\");\n        }\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        for (int int = java.lang.Math.max(0, (preTokenizationPtr - (limit * 2))) ; i < (java.lang.Math.min((preTokenizationPtr + (limit * 2)), java.util.List<org.grobid.core.layout.LayoutToken>.size())) ; i++) {\n            org.grobid.core.layout.LayoutToken org.grobid.core.layout.LayoutToken = java.util.List<org.grobid.core.layout.LayoutToken>.get(i);\n            java.lang.String java.lang.String = i == preTokenizationPtr ? (\"-->\\t\\'\" + (s.t())) + \"'\" : (\"\\t\\'\" + (s.t())) + \"'\";\n            sb2.append(str).append(\"\\n\");\n        }\n        throw new java.lang.IllegalStateException(((((((((((\"IMPLEMENTATION ERROR: \" + \"tokens (at pos: \") + (int)) + \") got dissynchronized with tokenizations (at pos: \") + (int)) + \" )\\n\") + \"labelsAndTokens +-: \\n\") + (sb.toString())) + \"\\n\") + \"tokenizations +-: \") + sb2));\n    }\n    (int)++;\n}"},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":4,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}