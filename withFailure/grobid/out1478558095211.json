{"failureDictionary":{"org.grobid.core.test.TestDate.testDateParser":0,"org.grobid.core.test.TestHeaderParser.testHeaderHeader":5,"org.grobid.core.test.TestNameParser.testNameParserHeader":7,"org.grobid.core.test.TestFullTextParser.testFullTextParser":4,"org.grobid.core.test.TestReferencesParser.testReferences":10,"org.grobid.core.test.TestCitationParser.testCitationParser3_withConsolidation":3,"org.grobid.core.test.TestNameParser.testNameParserCitation":8,"org.grobid.core.test.TestHeaderParser.testSegmentationHeader":6,"org.grobid.core.test.TestFullTextParser.testFullTextTrainingParser":11,"org.grobid.core.test.TestCitationParser.testCitationParser5_withoutConsolidation":2,"org.grobid.core.test.TestCitationParser.testCitationParser4_withConsolidation":1,"org.grobid.core.test.TestCitationParser.testCitationParser2_withoutConsolidation":9},"transformations":[{"failures":[0,1,2,3],"tindex":"681e2193-a53a-11e6-8ba8-6f17f09d624d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.DateParser:277","type":"CtTryImpl","sourcecode":"try {\n    int int = java.lang.Integer.parseInt(yearStringBis);\n    if ((year >= 20) && (year < 100)) {\n        year = year + 1900;\n    } else if ((year >= 0) && (year < 20)) {\n        year = year + 2000;\n    } \n    date.setYear(year);\n} catch (java.lang.Exception e) {\n}"},"variableMap":{"date":"date","yearStringBis":"lastTag"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.DateParser:64","type":"CtWhileImpl","sourcecode":"while (st2.hasMoreTokens()) {\n    java.lang.String java.lang.String = st2.nextToken();\n    if ((line.trim().length()) == 0) {\n        if (date.notNull()) {\n            if (dates == null)\n                dates = new java.util.ArrayList<org.grobid.core.data.Date>();\n            \n            normalize(date);\n            dates.add(date);\n        } \n        date = new org.grobid.core.data.Date();\n        continue;\n    } \n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line , \"\\t \");\n    int int = st3.countTokens();\n    int int = 0;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    while (st3.hasMoreTokens()) {\n        java.lang.String java.lang.String = st3.nextToken().trim();\n        if (i == 0) {\n            s2 = s;\n        } else if (i == (ll - 1)) {\n            s1 = s;\n        } \n        i++;\n    }\n    if ((s1.equals(\"<year>\")) || (s1.equals(\"I-<year>\"))) {\n        {\n            if ((date.getYearString()) != null) {\n                if ((s1.equals(\"I-<year>\")) || ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<year>\"))))) {\n                    if (date.notNull()) {\n                        if (dates == null)\n                            dates = new java.util.ArrayList<org.grobid.core.data.Date>();\n                        \n                        normalize(date);\n                        dates.add(date);\n                    } \n                    date = new org.grobid.core.data.Date();\n                    date.setYearString(s2);\n                } else {\n                    if ((date.getYearString().length()) == 0)\n                        date.setYearString(s2);\n                    else if (((date.getYearString().charAt(((date.getYearString().length()) - 1))) == '-') | ((date.getYearString().charAt(((date.getYearString().length()) - 1))) == '\\''))\n                        date.setYearString(((date.getYearString()) + s2));\n                    else\n                        date.setYearString((((date.getYearString()) + \" \") + s2));\n                    \n                }\n            } else {\n                date.setYearString(s2);\n            }\n        }\n    } else if ((s1.equals(\"<month>\")) || (s1.equals(\"I-<month>\"))) {\n        {\n            if ((date.getMonthString()) != null) {\n                if ((s1.equals(\"I-<month>\")) || ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<month>\"))))) {\n                    if (date.notNull()) {\n                        if (dates == null)\n                            dates = new java.util.ArrayList<org.grobid.core.data.Date>();\n                        \n                        normalize(date);\n                        dates.add(date);\n                    } \n                    date = new org.grobid.core.data.Date();\n                    date.setMonthString(s2);\n                } else {\n                    if ((date.getMonthString().length()) == 0)\n                        date.setMonthString(s2);\n                    else if (((date.getMonthString().charAt(((date.getMonthString().length()) - 1))) == '-') | ((date.getMonthString().charAt(((date.getMonthString().length()) - 1))) == '\\''))\n                        date.setMonthString(((date.getMonthString()) + s2));\n                    else\n                        date.setMonthString((((date.getMonthString()) + \" \") + s2));\n                    \n                }\n            } else {\n                date.setMonthString(s2);\n            }\n        }\n    } else if ((s1.equals(\"<day>\")) || (s1.equals(\"I-<day>\"))) {\n        {\n            if ((date.getDayString()) != null) {\n                if ((s1.equals(\"I-<day>\")) || ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<day>\"))))) {\n                    if (date.notNull()) {\n                        if (dates == null)\n                            dates = new java.util.ArrayList<org.grobid.core.data.Date>();\n                        \n                        normalize(date);\n                        dates.add(date);\n                    } \n                    date = new org.grobid.core.data.Date();\n                    date.setDayString(s2);\n                } else {\n                    if ((date.getDayString().length()) == 0)\n                        date.setDayString(s2);\n                    else if (((date.getDayString().charAt(((date.getDayString().length()) - 1))) == '-') | ((date.getDayString().charAt(((date.getDayString().length()) - 1))) == '\\''))\n                        date.setDayString(((date.getDayString()) + s2));\n                    else\n                        date.setDayString((((date.getDayString()) + \" \") + s2));\n                    \n                }\n            } else {\n                date.setDayString(s2);\n            }\n        }\n    } \n    lastTag = s1;\n    lineCount++;\n}"},"status":-1},{"failures":[],"tindex":"682107c4-a53a-11e6-8ba8-5b40e3850393","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.CrossrefSaxParser:64","type":"CtInvocationImpl","sourcecode":"org.grobid.core.data.BiblioItem.setNumber(issue)"},"status":0},{"failures":[4],"tindex":"682107c5-a53a-11e6-8ba8-658f272f46fd","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.CitationParser:564","type":"CtInvocationImpl","sourcecode":"buffer.append(\"/t<bibl>\\n\")"},"variableMap":{"buffer":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2110","type":"CtInvocationImpl","sourcecode":"tei.append(\"\\t\")"},"status":-1},{"failures":[],"tindex":"682107c6-a53a-11e6-8ba8-3d3bd38e129b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3625","type":"CtIfImpl","sourcecode":"if (firstPage != null) {\n    try {\n        int = java.lang.Integer.parseInt(firstPage);\n    } catch (java.lang.Exception e) {\n        int = -1;\n    }\n    if ((int) != (-1))\n        java.lang.String = \"\" + (int);\n    else\n        java.lang.String = firstPage;\n    \n    if (matcher.find()) {\n        if ((matcher.groupCount()) > 0) {\n            lastPage = matcher.group(0);\n        } \n        if (lastPage != null) {\n            try {\n                int = java.lang.Integer.parseInt(lastPage);\n            } catch (java.lang.Exception e) {\n                int = -1;\n            }\n            if ((((int) != (-1)) && ((int) < (int))) && ((int) < 50)) {\n                int = (int) + (int);\n                java.lang.String += \"--\" + (int);\n            } else\n                java.lang.String += \"--\" + lastPage;\n            \n        } \n    } \n} "},"status":0},{"failures":[5,6,7,8,1,2,9],"tindex":"682107c7-a53a-11e6-8ba8-1d965d62586d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorName:44","type":"CtInvocationImpl","sourcecode":"res.append((\" \" + (org.grobid.core.utilities.TextUtilities.suffix(java.lang.String, 1))))"},"status":-1},{"failures":[],"tindex":"68212ed8-a53a-11e6-8ba8-9bf49add6cc6","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:369","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.loadPdf2XMLPath()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ProcessEngine:364","type":"CtInvocationImpl","sourcecode":"org.grobid.core.engines.ProcessEngine.inferOutputPath(pGbdArgs)"},"status":0},{"failures":[],"tindex":"68212ed9-a53a-11e6-8ba8-13ee7b189683","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1855","type":"CtAssignmentImpl","sourcecode":"meeting = meeting.replace(prefix, \"\")"},"variableMap":{"prefix":"doi","meeting":"doi"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Consolidation:219","type":"CtAssignmentImpl","sourcecode":"doi = doi.trim()"},"status":-2},{"failures":[],"tindex":"68212eda-a53a-11e6-8ba8-37d400861805","series":0,"name":"add","transplant":{"position":"org.grobid.core.data.BibDataSet:106","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.DocumentPointer:50","type":"CtReturnImpl","sourcecode":"return (((((\"DocPtr(Block No: \" + (int)) + \"; Token position in block: \") + (int)) + \"; position of token in doc: \") + (int)) + \")\""},"status":-2},{"failures":[],"tindex":"682155eb-a53a-11e6-8ba8-859fd540de38","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BibDataSet:106","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.tokenization.TaggingTokenCluster:22","type":"CtReturnImpl","sourcecode":"return \"\\n\""},"status":0},{"failures":[],"tindex":"682155ec-a53a-11e6-8ba8-4ff404d12cc8","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.TEIFormatter:1941","type":"CtAssignmentImpl","sourcecode":"coords = \"\""},"variableMap":{"coords":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Figure:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.grobid.core.utilities.TextUtilities.cleanField(java.lang.StringBuilder.toString(), false)"},"status":0},{"failures":[],"tindex":"682155ed-a53a-11e6-8ba8-d3c12795ab26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.CrossrefUnixrefSaxParser:188","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[10,4,11],"tindex":"682155ee-a53a-11e6-8ba8-25dcc38abb7e","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.TEIFormatter:852","type":"CtInvocationImpl","sourcecode":"tei.append(\"\\t<\/teiHeader>\\n\")"},"variableMap":{"tei":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorReferenceSegmenter:58","type":"CtInvocationImpl","sourcecode":"res.append(\" \").append(java.lang.String.toLowerCase())"},"status":-1},{"failures":[],"tindex":"682155ef-a53a-11e6-8ba8-93f0ddf94953","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.FullTextParser:1050","type":"CtIfImpl","sourcecode":"if (start) {\n    start = false;\n} "},"variableMap":{"start":"endloop"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:462","type":"CtIfImpl","sourcecode":"if (toto != null) {\n    if (toto.equals(\"\\n\")) {\n        endline = true;\n        endloop = true;\n    } else {\n        if (((((((toto.length()) != 0) && (!(toto.startsWith(\"@IMAGE\")))) && (!(toto.startsWith(\"@PAGE\")))) && (!(text.contains(\".pbm\")))) && (!(text.contains(\".vec\")))) && (!(text.contains(\".jpg\")))) {\n            endloop = true;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"68217d00-a53a-11e6-8ba8-9937a32b1b64","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1756","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.grobid.core.utilities.KeyGen.getKey().substring(0, 7)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.PatentItem:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[],"tindex":"68217d01-a53a-11e6-8ba8-6f6ac5ba2da4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.visualization.FigureTableVisualizer:272","type":"CtInvocationImpl","sourcecode":"org.grobid.core.visualization.AnnotationUtil.annotatePage(document, coords, (isFigure ? 1 : 2))"},"status":0},{"failures":[],"tindex":"68217d02-a53a-11e6-8ba8-2dac65893876","series":0,"name":"replace","transplant":{"position":"org.grobid.core.sax.PDF2XMLSaxHandler:464","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:1786","type":"CtLocalVariableImpl","sourcecode":"double double = originalGoBox.getX2()"},"status":-2},{"failures":[],"tindex":"6821a413-a53a-11e6-8ba8-cf630dae7386","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:1305","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[],"tindex":"6821a414-a53a-11e6-8ba8-731064f37bfe","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.AffiliationAddressParser:843","type":"CtAssignmentImpl","sourcecode":"currentTag0 = null"},"variableMap":{"currentTag0":"capitalisation"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorDate:251","type":"CtAssignmentImpl","sourcecode":"features.java.lang.String = \"INITCAP\""},"status":-2},{"failures":[],"tindex":"6821a415-a53a-11e6-8ba8-1bc53cd891e7","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.ebook.BookStructureParser:226","type":"CtAssignmentImpl","sourcecode":"filter = true"},"variableMap":{"filter":"email"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Segmentation:537","type":"CtAssignmentImpl","sourcecode":"features.boolean = true"},"status":-2},{"failures":[],"tindex":"6821a416-a53a-11e6-8ba8-6b6f9c54bc12","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.HeaderParser:838","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.layout.BoundingBox:184","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"6821a417-a53a-11e6-8ba8-359b9a1dfa34","series":0,"name":"replace","transplant":{"position":"org.grobid.core.tokenization.TaggingTokenSynchronizer:92","type":"CtInvocationImpl","sourcecode":"sb2.append(str).append(\"\\n\")"},"variableMap":{"str":"reseBody","sb2":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:1849","type":"CtAssignmentImpl","sourcecode":"tei = teiFormatter.toTEIBody(tei, reseBody, resHeader, resCitations, layoutTokenization, figures, tables, doc, config)"},"status":-2},{"failures":[],"tindex":"6821cb28-a53a-11e6-8ba8-578a7f4e3407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AuthorParser:254","type":"CtIfImpl","sourcecode":"if (s1.equals(\"I-<surname>\")) {\n    if (aut.notNull()) {\n        if (fullAuthors == null)\n            fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n        \n        fullAuthors.add(aut);\n    } \n    aut = new org.grobid.core.data.Person();\n    aut.setLastName(s2);\n} else if ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<surname>\")))) {\n    if (aut.notNull()) {\n        if (fullAuthors == null)\n            fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n        \n        fullAuthors.add(aut);\n    } \n    aut = new org.grobid.core.data.Person();\n    aut.setLastName(s2);\n} else if ((((s2.equals(\"-\")) || (s2.equals(\".\"))) || (s2.equals(\",\"))) || (s2.equals(\":\"))) {\n    aut.setLastName(((aut.getLastName()) + s2));\n} else {\n    if ((aut.getLastName().length()) == 0)\n        aut.setLastName(s2);\n    else if (((aut.getLastName().charAt(((aut.getLastName().length()) - 1))) == '-') | ((aut.getLastName().charAt(((aut.getLastName().length()) - 1))) == '\\''))\n        aut.setLastName(((aut.getLastName()) + s2));\n    else\n        aut.setLastName((((aut.getLastName()) + \" \") + s2));\n    \n}"},"status":-2},{"failures":[],"tindex":"6821cb29-a53a-11e6-8ba8-55c58ecb8c28","series":0,"name":"replace","transplant":{"position":"org.grobid.core.main.batch.GrobidMain:89","type":"CtAssignmentImpl","sourcecode":"result = false"},"variableMap":{"result":"year"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorReference:237","type":"CtAssignmentImpl","sourcecode":"featuresVector.boolean = true"},"status":-2},{"failures":[],"tindex":"6821cb2a-a53a-11e6-8ba8-dbe329c21885","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:376","type":"CtInvocationImpl","sourcecode":"fullAffiliations.add(aff)"},"status":-2},{"failures":[],"tindex":"6821f23b-a53a-11e6-8ba8-6b7dba134f9f","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.Utilities:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.System.getProperty(\"sun.arch.data.model\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:294","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = tokenizations.get(p)"},"status":-2},{"failures":[],"tindex":"6821f23c-a53a-11e6-8ba8-f141eb7fc704","series":0,"name":"replace","transplant":{"position":"org.grobid.core.visualization.FigureTableVisualizer:356","type":"CtInvocationImpl","sourcecode":"org.grobid.core.engines.Engine.getCntManager().i(\"TABLES_TEST\", \"PDF_HAS_SOME_TABLES\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:1128","type":"CtIfImpl","sourcecode":"if ((localText == null) || (localText.startsWith(\"@\"))) {\n    accumulated.append(\"\\n\");\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"6821f23d-a53a-11e6-8ba8-0101d88b8366","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.Engine:193","type":"CtIfImpl","sourcecode":"if (reference != null) {\n    reference = reference.replaceAll(\"\\\\\\\\\", \"\");\n} "},"variableMap":{"reference":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2591","type":"CtWhileImpl","sourcecode":"while (st.hasMoreTokens()) {\n    java.lang.String java.lang.String = st.nextToken();\n    if (author != null)\n        author = author.trim();\n    \n    int int = -1;\n    if ((bs.getAuthors()) != null)\n        ind = bs.getAuthors().indexOf(author);\n    \n    if (ind != (-1)) {\n        tei += \"\\t\\t<contributor role=\\\"author\\\">\\n\";\n        tei += (\"\\t\\t\\t<ptr target=\\\"#author\" + ind) + \"\\\" />\\n\";\n        tei += \"\\t\\t<\/contributor>\\n\";\n    } else {\n        tei += (\"\\t\\t<contributor role=\\\"author\\\">\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(author))) + \"<\/contributor>\\n\";\n    }\n}"},"status":-2},{"failures":[],"tindex":"68239fee-a53a-11e6-8ba8-596f733ea0d7","series":0,"name":"add","transplant":{"position":"org.grobid.core.main.LibraryLoader:100","type":"CtAssignmentImpl","sourcecode":"org.grobid.core.main.LibraryLoader.org.grobid.core.main.LibraryLoader.boolean = true"},"variableMap":{"org.grobid.core.main.LibraryLoader.loaded":"filter"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorCitation:402","type":"CtAssignmentImpl","sourcecode":"filter = true"},"status":-2},{"failures":[],"tindex":"68239fef-a53a-11e6-8ba8-1da19aba0ed3","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1601","type":"CtIfImpl","sourcecode":"if ((((java.lang.String) == null) && ((java.lang.String) == null)) && ((java.lang.String) != null)) {\n    bibtex += (\",\\nbooktitle\\t=\\t\\\"\" + (java.lang.String)) + \"\\\"\";\n} "},"variableMap":{"book_type":"digit","journal":"digit","bibtex":"digit","bookTitle":"digit"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:815","type":"CtIfImpl","sourcecode":"if (m.find()) {\n    features.java.lang.String = \"ALLDIGIT\";\n} "},"status":-2},{"failures":[],"tindex":"68239ff0-a53a-11e6-8ba8-0b412d0e5288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AuthorParser:620","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"68239ff1-a53a-11e6-8ba8-d97b2cfe7eca","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.Table:51","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.lang3.StringUtils.isEmpty(java.lang.StringBuilder)) && (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.StringBuilder))) {\n    return null;\n} "},"variableMap":{"header":"caption","caption":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Figure:219","type":"CtIfImpl","sourcecode":"if ((((java.lang.StringBuilder) == null) || ((java.lang.StringBuilder.length()) == 0)) && (((java.lang.StringBuilder) == null) || ((java.lang.StringBuilder.length()) == 0))) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"68239ff2-a53a-11e6-8ba8-d18fa4287c31","series":0,"name":"add","transplant":{"position":"org.grobid.core.sax.PatentAnnotationSaxParser:146","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\" <ref type=\\\"npl\\\">\" + context) + \"<\/ref> \""},"variableMap":{"context":"lastTag0"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:626","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = writeField(s1, lastTag0, s2, \"<title>\", \"<title level=\\\"a\\\">\", addSpace, 0)"},"status":-2},{"failures":[],"tindex":"68239ff3-a53a-11e6-8ba8-3510a2cb4862","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2876","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    openurl += \"&rft.issn=\" + (java.net.URLEncoder.encode(java.lang.String, \"UTF-8\"));\n"},"variableMap":{"openurl":"publisher","ISSN":"publisher"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2322","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    for (int int = 0 ; i < (indent + 3) ; i++) {\n        tei.append(\"\\t\");\n    }\n    tei.append(((\"<publisher>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(java.lang.String))) + \"<\/publisher>\\n\"));\n} "},"status":-2},{"failures":[],"tindex":"6823c704-a53a-11e6-8ba8-bf9348f1e433","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:1219","type":"CtIfImpl","sourcecode":"if (originalNumber == null)\n    originalNumber = number;\n"},"variableMap":{"originalNumber":"s","number":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:824","type":"CtIfImpl","sourcecode":"if ((s.equals(\"LINESTART\")) && (!start)) {\n    newLine = true;\n    start = false;\n} else if (s.equals(\"LINESTART\")) {\n    start = false;\n} "},"status":-2},{"failures":[],"tindex":"6823c705-a53a-11e6-8ba8-d7b1f8ba22bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:1513","type":"CtIfImpl","sourcecode":"if ((segmentationLabel.getLabel()) == null) {\n    java.lang.System.java.lang.System.java.io.PrintStream.println(\"segmentationLabel.getLabel()  is null\");\n} "},"status":-2},{"failures":[],"tindex":"6823c706-a53a-11e6-8ba8-9f56547bc620","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:3333","type":"CtInvocationImpl","sourcecode":"tei.append(\">\\n\")"},"variableMap":{"tei":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3290","type":"CtInvocationImpl","sourcecode":"tei.append(\"<persName>\\n\")"},"status":-2},{"failures":[],"tindex":"6823c707-a53a-11e6-8ba8-9335ce12e577","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:83","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Segmentation:836","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"status":-2},{"failures":[],"tindex":"6823c708-a53a-11e6-8ba8-ed6f5cba633b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.OPSService:74","type":"CtOperatorAssignmentImpl","sourcecode":"envelope += \"<\/exc:publication-reference>\\n\""},"status":-2},{"failures":[],"tindex":"6823ee19-a53a-11e6-8ba8-6d2b422180ca","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:425","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/label>\")"},"variableMap":{"buffer":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2022","type":"CtInvocationImpl","sourcecode":"tei.append(((\" xml:id=\\\"_\" + divID) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":"6823ee1a-a53a-11e6-8ba8-f54759942458","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:798","type":"CtAssignmentImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.org.grobid.core.utilities.GrobidProperties.java.io.File = new java.io.File(org.grobid.core.utilities.GrobidProperties.org.grobid.core.utilities.GrobidProperties.java.io.File , org.grobid.core.utilities.Utilities.getOsNameAndArch())"},"variableMap":{"org.grobid.core.utilities.GrobidProperties.pathToPdf2Xml":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.config.GrobidAnalysisConfig:97","type":"CtAssignmentImpl","sourcecode":"org.grobid.core.engines.config.GrobidAnalysisConfig.java.io.File = path"},"status":-2},{"failures":[],"tindex":"6823ee1b-a53a-11e6-8ba8-ad5ab4b3e080","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.LevenshteinDistanceAligment:256","type":"CtUnaryOperatorImpl","sourcecode":"i--"},"variableMap":{"i":"currentNumber"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.BasicStructureBuilder:118","type":"CtAssignmentImpl","sourcecode":"currentNumber = -1"},"status":-2},{"failures":[],"tindex":"6823ee1c-a53a-11e6-8ba8-c95ed7b76840","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:87","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:229","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"6823ee1d-a53a-11e6-8ba8-7b50f07f89ae","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.IOUtilities:113","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.Utilities.deleteOldies(org.grobid.core.utilities.GrobidProperties.getTempPath(), 300)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:1047","type":"CtInvocationImpl","sourcecode":"org.grobid.core.engines.FullTextParser.testClosingTag(buffer, \"\", currentTag0, s1)"},"status":-2},{"failures":[],"tindex":"6823ee1e-a53a-11e6-8ba8-7f4f825c2d91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3135","type":"CtAssignmentImpl","sourcecode":"bad = true"},"status":-2},{"failures":[],"tindex":"6824152f-a53a-11e6-8ba8-1705b2b7aa74","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1227","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.XmlUtils:57","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"68241530-a53a-11e6-8ba8-05188156079a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:502","type":"CtTryImpl","sourcecode":"try {\n    if (inputs == null)\n        return null;\n    \n    if ((inputs.size()) == 0)\n        return null;\n    \n    java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> = new java.util.ArrayList<java.util.List<org.grobid.core.utilities.OffsetPosition>>();\n    java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> = new java.util.ArrayList<java.util.List<org.grobid.core.utilities.OffsetPosition>>();\n    java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> = new java.util.ArrayList<java.util.List<org.grobid.core.utilities.OffsetPosition>>();\n    java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> java.util.List<java.util.List<org.grobid.core.utilities.OffsetPosition>> = new java.util.ArrayList<java.util.List<org.grobid.core.utilities.OffsetPosition>>();\n    for (java.lang.String java.lang.String : inputs) {\n        java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        if (input == null)\n            continue;\n        \n        java.util.List<java.lang.String> java.util.List<java.lang.String> = org.grobid.core.analyzers.GrobidAnalyzer.tokenize(input);\n        if ((tokenizations.size()) == 0)\n            return null;\n        \n        for (java.lang.String java.lang.String : tokenizations) {\n            if (tok.equals(\"\\n\")) {\n                citationBlocks.add(\"@newline\");\n            } else if (!(tok.equals(\" \"))) {\n                citationBlocks.add((tok + \" <bibl>\"));\n            } \n        }\n        citationBlocks.add(\"\\n\");\n        journalsPositions.add(org.grobid.core.lexicon.Lexicon.inJournalNames(input));\n        abbrevJournalsPositions.add(org.grobid.core.lexicon.Lexicon.inAbbrevJournalNames(input));\n        conferencesPositions.add(org.grobid.core.lexicon.Lexicon.inConferenceNames(input));\n        publishersPositions.add(org.grobid.core.lexicon.Lexicon.inPublisherNames(input));\n        java.lang.String java.lang.String = org.grobid.core.features.FeaturesVectorCitation.addFeaturesCitation(citationBlocks, journalsPositions, abbrevJournalsPositions, conferencesPositions, publishersPositions);\n        java.lang.String java.lang.String = label(ress);\n        java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(res , \"\\n\");\n        java.lang.String java.lang.String = null;\n        boolean boolean = true;\n        int int = 0;\n        boolean boolean;\n        java.lang.String java.lang.String;\n        java.lang.String java.lang.String = null;\n        while (st2.hasMoreTokens()) {\n            java.lang.String java.lang.String = st2.nextToken();\n            addSpace = false;\n            if ((line.trim().length()) == 0) {\n                buffer.append(\"/t<bibl>\\n\");\n                continue;\n            } else {\n                java.lang.String java.lang.String = tokenizations.get(q);\n                while (theTok.equals(\" \")) {\n                    addSpace = true;\n                    q++;\n                    theTok = tokenizations.get(q);\n                }\n                q++;\n            }\n            java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line , \"\\t\");\n            int int = st3.countTokens();\n            int int = 0;\n            java.lang.String java.lang.String = null;\n            java.lang.String java.lang.String = null;\n            while (st3.hasMoreTokens()) {\n                java.lang.String java.lang.String = st3.nextToken().trim();\n                if (i == 0) {\n                    s2 = org.grobid.core.utilities.TextUtilities.HTMLEncode(s);\n                } else if (i == (ll - 1)) {\n                    s1 = s;\n                } \n                i++;\n            }\n            if (start && (s1 != null)) {\n                buffer.append(\"\\t<bibl>\");\n                start = false;\n            } \n            lastTag0 = null;\n            if (lastTag != null) {\n                if (lastTag.startsWith(\"I-\")) {\n                    lastTag0 = lastTag.substring(2, lastTag.length());\n                } else {\n                    lastTag0 = lastTag;\n                }\n            } \n            if (s1 != null) {\n                if (s1.startsWith(\"I-\")) {\n                    currentTag0 = s1.substring(2, s1.length());\n                } else {\n                    currentTag0 = s1;\n                }\n            } \n            if ((lastTag0 != null) && (currentTag0 != null))\n                testClosingTag(buffer, currentTag0, lastTag0);\n            \n            java.lang.String java.lang.String = writeField(s1, lastTag0, s2, \"<title>\", \"<title level=\\\"a\\\">\", addSpace, 0);\n            if (output != null) {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            } else {\n                output = writeField(s1, lastTag0, s2, \"<other>\", \"\", addSpace, 0);\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<author>\", \"<author>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<journal>\", \"<title level=\\\"j\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<date>\", \"<date>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<booktitle>\", \"<title level=\\\"m\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<volume>\", \"<biblScope unit=\\\"volume\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<publisher>\", \"<publisher>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<location>\", \"<pubPlace>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<editor>\", \"<editor>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<pages>\", \"<biblScope unit=\\\"page\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<tech>\", \"<note type=\\\"report\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<issue>\", \"<biblScope unit=\\\"issue\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<pubnum>\", \"<idno>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<web>\", \"<ptr type=\\\"web\\\">\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<note>\", \"<note>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output == null) {\n                output = writeField(s1, lastTag0, s2, \"<institution>\", \"<orgName>\", addSpace, 0);\n            } else {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            }\n            if (output != null) {\n                buffer.append(output);\n                lastTag = s1;\n                continue;\n            } \n            lastTag = s1;\n        }\n        if (lastTag != null) {\n            if (lastTag.startsWith(\"I-\")) {\n                lastTag0 = lastTag.substring(2, lastTag.length());\n            } else {\n                lastTag0 = lastTag;\n            }\n            currentTag0 = \"\";\n            testClosingTag(buffer, currentTag0, lastTag0);\n            buffer.append(\"<\/bibl>\\n\");\n        } \n    }\n} catch (java.lang.Exception e) {\n    throw new org.grobid.core.exceptions.GrobidException(\"An exception occured while running Grobid.\" , e);\n}"},"status":-2},{"failures":[],"tindex":"68241531-a53a-11e6-8ba8-0198b6cf0180","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.IOUtilities:113","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.Utilities.deleteOldies(org.grobid.core.utilities.GrobidProperties.getTempPath(), 300)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.DateParser:111","type":"CtInvocationImpl","sourcecode":"dates.add(date)"},"status":-2},{"failures":[],"tindex":"68243c42-a53a-11e6-8ba8-b7ee3526f0da","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.Document:1024","type":"CtForImpl","sourcecode":"for (int int = 0 ; j <= i ; j++) {\n    java.lang.Integer java.lang.Integer = j;\n    if ((java.util.List<java.lang.Integer>) == null)\n        java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer>();\n    \n    if (!(java.util.List<java.lang.Integer>.contains(inte))) {\n        java.util.List<java.lang.Integer>.add(inte);\n    } \n}"},"variableMap":{"i":"k","blockDocumentHeaders":"authorsBlocks"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:384","type":"CtIfImpl","sourcecode":"if (localAuthors != null) {\n    for (org.grobid.core.data.Person org.grobid.core.data.Person : localAuthors) {\n        resHeader.addFullAuthor(pers);\n        if ((pers.getMarkers()) != null) {\n            hasMarker = true;\n        } \n        authorsBlocks.add(k);\n    }\n} "},"status":-2},{"failures":[],"tindex":"68243c43-a53a-11e6-8ba8-0dcaf4402830","series":0,"name":"replace","transplant":{"position":"org.grobid.core.annotations.Paragraph:91","type":"CtAssignmentImpl","sourcecode":"boolean = pIsAnnotated"},"variableMap":{"pIsAnnotated":"previousNewline","isAnnotated":"previousNewline"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:798","type":"CtAssignmentImpl","sourcecode":"previousNewline = true"},"status":-2},{"failures":[],"tindex":"68243c44-a53a-11e6-8ba8-41654f573683","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:561","type":"CtIfImpl","sourcecode":"if (currentFontSize == (-1)) {\n    currentFontSize = newFontSize;\n    features.java.lang.String = \"HIGHERFONT\";\n} else if (currentFontSize == newFontSize) {\n    features.java.lang.String = \"SAMEFONTSIZE\";\n} else if (currentFontSize < newFontSize) {\n    features.java.lang.String = \"HIGHERFONT\";\n    currentFontSize = newFontSize;\n} else if (currentFontSize > newFontSize) {\n    features.java.lang.String = \"LOWERFONT\";\n    currentFontSize = newFontSize;\n} "},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":50,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}