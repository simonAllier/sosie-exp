{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"b7a02cd8-a560-11e6-b72b-419b9d79d51d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.layout.GraphicObject:175","type":"CtIfImpl","sourcecode":"if ((int) != (-1)) {\n    res.append(int);\n} "},"variableMap":{"res":"jsonRef","startPosition":"totalBib"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.visualization.CitationsVisualizer:347","type":"CtForEachImpl","sourcecode":"for (org.grobid.core.layout.Page org.grobid.core.layout.Page : pages) {\n    if (pageNumber > 1)\n        jsonRef.append(\", \");\n    \n    jsonRef.append((\"{\\\"page_height\\\":\" + (page.getHeight())));\n    jsonRef.append((\", \\\"page_width\\\":\" + (page.getWidth())));\n    boolean boolean = false;\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    boolean boolean = false;\n    java.lang.String java.lang.String = teiDoc.getTei();\n    com.google.common.collect.Multimap<java.lang.String, org.grobid.core.data.BibDataSetContext> com.google.common.collect.Multimap<java.lang.String, org.grobid.core.data.BibDataSetContext> = org.grobid.core.utilities.BibDataSetContextExtractor.getCitationReferences(tei);\n    boolean boolean = true;\n    boolean boolean = true;\n    for (org.grobid.core.data.BibDataSet org.grobid.core.data.BibDataSet : teiDoc.getBibDataSets()) {\n        java.lang.String java.lang.String = cit.getResBib().getTeiId();\n        boolean boolean = false;\n        boolean boolean = true;\n        for (org.grobid.core.layout.BoundingBox org.grobid.core.layout.BoundingBox : cit.getResBib().getCoordinates()) {\n            if ((b.getPage()) == pageNumber) {\n                if (!refBibOutput) {\n                    jsonRef.append(\", \\\"refBibs\\\": [ \");\n                    refBibOutput = true;\n                } \n                if (!idOutput) {\n                    if (begin)\n                        begin = false;\n                    else\n                        jsonRef.append(\", \");\n                    \n                    jsonRef.append(\"{\\\"id\\\":\\\"\").append(teiId).append(\"\\\", \");\n                    jsonRef.append(\"\\\"pos\\\":[\");\n                    idOutput = true;\n                } \n                if (begin2)\n                    begin2 = false;\n                else\n                    jsonRef.append(\", \");\n                \n                jsonRef.append(\"{\").append(b.toJson()).append(\"}\");\n                totalBib++;\n            } \n        }\n        for (org.grobid.core.data.BibDataSetContext org.grobid.core.data.BibDataSetContext : contexts.get(teiId)) {\n            java.lang.String java.lang.String = c.getDocumentCoords();\n            for (java.lang.String java.lang.String : mrect.split(\";\")) {\n                org.grobid.core.layout.BoundingBox org.grobid.core.layout.BoundingBox = org.grobid.core.layout.BoundingBox.fromString(coords);\n                if ((b2.getPage()) == pageNumber) {\n                    if (!refMarkOutput) {\n                        jsonMark.append(\", \\\"refMarkers\\\": [\");\n                        refMarkOutput = true;\n                    } else\n                        jsonMark.append(\", \");\n                    \n                    jsonMark.append(\"{ \\\"id\\\":\\\"\").append(teiId).append(\"\\\", \");\n                    jsonMark.append(b2.toJson()).append(\" }\");\n                    totalMarkers1++;\n                } \n            }\n        }\n        if (idOutput) {\n            jsonRef.append(\"] }\");\n        } \n    }\n    for (org.grobid.core.data.BibDataSetContext org.grobid.core.data.BibDataSetContext : contexts.get(\"\")) {\n        java.lang.String java.lang.String = c.getDocumentCoords();\n        for (java.lang.String java.lang.String : mrect.split(\";\")) {\n            org.grobid.core.layout.BoundingBox org.grobid.core.layout.BoundingBox = org.grobid.core.layout.BoundingBox.fromString(coords);\n            if ((b.getPage()) == pageNumber) {\n                if (!refMarkOutput) {\n                    jsonMark.append(\", \\\"refMarkers\\\": [\");\n                    refMarkOutput = true;\n                } else\n                    jsonMark.append(\", \");\n                \n                jsonMark.append(\"{\").append(b.toJson()).append(\"}\");\n                totalMarkers2++;\n            } \n        }\n    }\n    pageNumber++;\n    if (refBibOutput) {\n        jsonRef.append(\"]\");\n    } \n    if (refMarkOutput) {\n        jsonRef.append(jsonMark.toString()).append(\"]\");\n    } \n    jsonRef.append(\"}\");\n}"},"status":-2},{"failures":[],"tindex":"b7a0a209-a560-11e6-b72b-07c438fa0e6f","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.Date:182","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"<date when=\\\"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.tokenization.TaggingTokenSynchronizer:57","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = p.getB()"},"status":-2},{"failures":[],"tindex":"b7a0a20a-a560-11e6-b72b-71befc5dc1db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorName:285","type":"CtIfImpl","sourcecode":"if (m.find()) {\n    features.java.lang.String = \"ALLDIGIT\";\n} "},"status":-2},{"failures":[],"tindex":"b7a0c91b-a560-11e6-b72b-65b956edc1af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3393","type":"CtIfImpl","sourcecode":"if ((aff.getAddressString()) != null) {\n    org.grobid.core.utilities.TextUtilities.appendN(tei, '\\t', (nbTag + 3));\n    tei.append(((\"<addrLine>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(aff.getAddressString()))) + \"<\/addrLine>\\n\"));\n} "},"status":-2},{"failures":[],"tindex":"b7a0c91c-a560-11e6-b72b-15d259b701be","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:83","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:297","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":5,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}