{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"988e3bd9-a54a-11e6-93bb-73cb159e6aed","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:585","type":"CtAssignmentImpl","sourcecode":"tokenIndex = 0"},"variableMap":{"tokenIndex":"prime"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Triple:57","type":"CtAssignmentImpl","sourcecode":"result = (prime * result) + ((B) == null ? 0 : B.hashCode())"},"status":-2},{"failures":[],"tindex":"98925a8a-a54a-11e6-93bb-a5ba12853c0b","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.CitationParser:772","type":"CtInvocationImpl","sourcecode":"buffer.append(\"<\/bibl>\\n\")"},"variableMap":{"buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.counters.impl.CntManagerGrepRepresentation:36","type":"CtInvocationImpl","sourcecode":"sb.append('\\n')"},"status":0},{"failures":[],"tindex":"98925a8b-a54a-11e6-93bb-591e9086ae57","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.HeaderParser:149","type":"CtIfImpl","sourcecode":"if ((temp.length()) > 1) {\n    if (temp.startsWith(\"1\"))\n        temp = temp.substring(1, temp.length());\n    \n    temp = temp.trim();\n} "},"variableMap":{"temp":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.visualization.FigureTableVisualizer:257","type":"CtIfImpl","sourcecode":"if (org.grobid.core.visualization.FigureTableVisualizer.org.grobid.core.visualization.FigureTableVisualizer.boolean) {\n    java.lang.System.java.lang.System.java.io.PrintStream.println(tei);\n} "},"status":-2},{"failures":[],"tindex":"9892819c-a54a-11e6-93bb-a7aed07e8013","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.ebook.BookStructureParser:157","type":"CtIfImpl","sourcecode":"if (start) {\n    newPage = true;\n    start = false;\n} "},"variableMap":{"newPage":"year","start":"year"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorSegmentation:142","type":"CtIfImpl","sourcecode":"if (boolean)\n    res.append(\" 1\");\nelse\n    res.append(\" 0\");\n"},"status":-2},{"failures":[],"tindex":"9892819d-a54a-11e6-93bb-999568412788","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.AuthorParser:57","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.grobid.core.data.Person> java.util.List<org.grobid.core.data.Person> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ProcessEngine:242","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.grobid.core.data.Person> java.util.List<org.grobid.core.data.Person> = getEngine().processAuthorsCitation(pGbdArgs.getInput())"},"status":-2},{"failures":[],"tindex":"98931dde-a54a-11e6-93bb-c1ee346b7880","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.TextUtilities:1184","type":"CtWhileImpl","sourcecode":"while ((currentLinePos < (tokenization.size())) && ((currentToken.equals(\" \")) || (currentToken.equals(\"\\n\")))) {\n    currentLinePos++;\n    currentToken = tokenization.get(currentLinePos);\n}"},"status":0},{"failures":[],"tindex":"989344ef-a54a-11e6-93bb-4dbe1a7f489d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.matching.LuceneIndexMatcher:77","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.System.java.lang.System.java.io.PrintStream.println((\"Doc added: \" + doc));\n} "},"status":-2},{"failures":[],"tindex":"989344f0-a54a-11e6-93bb-5bdd4d08647a","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:698","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + (\"<TEI xmlns=\\\"http://www.tei-c.org/ns/1.0\\\" \" + \"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:285","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[],"tindex":"989344f1-a54a-11e6-93bb-8348b0340973","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:1269","type":"CtIfImpl","sourcecode":"if ((toto.length()) > 2) {\n    if (((toto.charAt(((toto.length()) - 2))) == '.') && (java.lang.Character.isDigit(toto.charAt(((toto.length()) - 1))))) {\n        toto = toto.substring(0, ((toto.length()) - 2));\n    } \n    if (((((toto.charAt(((toto.length()) - 2))) == 'A') || ((toto.charAt(((toto.length()) - 2))) == 'B')) || ((toto.charAt(((toto.length()) - 2))) == 'C')) & (java.lang.Character.isDigit(toto.charAt(((toto.length()) - 1))))) {\n        toto = toto.substring(0, ((toto.length()) - 2));\n    } \n} "},"variableMap":{"toto":"interChunk"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:409","type":"CtIfImpl","sourcecode":"if (fitKindCode.find()) {\n    java.lang.String java.lang.String = fitKindCode.group(0);\n    int int = fitKindCode.end();\n    java.lang.String java.lang.String = interChunk.substring(posKind, interChunk.length());\n    java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(subChunk);\n    if (!(m.find())) {\n        if (((interChunk.length()) - posKind) <= 4) {\n            kindcodes.set(i, tata);\n            if ((offsets_end.get(i)) < (int)) {\n                offsets_end.set(i, ((offsets_end.get(i)) + (int)));\n            } \n            lastPositionVisited = (offsets_end.get(i)) - (int);\n            kindCodeFound = true;\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"98936c02-a54a-11e6-93bb-333e7cbeff27","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:1150","type":"CtAssignmentImpl","sourcecode":"move = 1"},"variableMap":{"move":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.TEIFormatter:2134","type":"CtAssignmentImpl","sourcecode":"indi3 = text.toLowerCase().indexOf(author2, i)"},"status":-2},{"failures":[],"tindex":"98936c03-a54a-11e6-93bb-6f2f8fc94603","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.Segmentation:221","type":"CtIfImpl","sourcecode":"if (fileImage == null) {\n    continue;\n} "},"variableMap":{"fileImage":"volume"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.CrossrefUnixrefSaxParser:114","type":"CtInvocationImpl","sourcecode":"org.grobid.core.data.BiblioItem.setVolumeBlock(volume, true)"},"status":-2},{"failures":[],"tindex":"98936c04-a54a-11e6-93bb-4367304447a0","series":0,"name":"replace","transplant":{"position":"org.grobid.core.sax.CrossrefUnixrefSaxParser:210","type":"CtIfImpl","sourcecode":"if (proc != null)\n    proc = proc.replaceAll(\" - \", \", \");\n"},"variableMap":{"proc":"firstName"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Person:175","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    res += (\"<forename type=\\\"first\\\">\" + (java.lang.String)) + \"<\/forename>\";\n"},"status":-2},{"failures":[],"tindex":"98936c05-a54a-11e6-93bb-9b6453b0445c","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.LanguageUtilities:26","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.LanguageUtilities.getNewInstance()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Affiliation:306","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.lang.String>) != null) {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        java.lang.String java.lang.String = org.grobid.core.utilities.TextUtilities.cleanField(institution, true);\n        if ((inst.length()) > 1) {\n            newInstitutions.add(inst);\n        } \n    }\n    java.util.List<java.lang.String> = newInstitutions;\n} "},"status":-2},{"failures":[],"tindex":"98939316-a54a-11e6-93bb-37ede8f0febc","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:352","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.setProps(new java.util.Properties())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Utilities:206","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (note.length()) ; i++) {\n    char char = note.charAt(i);\n    if ((org.grobid.core.utilities.Utilities.org.grobid.core.utilities.Utilities.java.lang.String.indexOf(c)) == (-1))\n        new_note += c;\n    \n}"},"status":-2},{"failures":[],"tindex":"98939317-a54a-11e6-93bb-9ffb655dc1f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:651","type":"CtIfImpl","sourcecode":"if ((!endline) && (!newline)) {\n    features.java.lang.String = \"LINEIN\";\n} else if (!newline) {\n    features.java.lang.String = \"LINEEND\";\n    previousNewline = true;\n} "},"status":-2},{"failures":[],"tindex":"98939318-a54a-11e6-93bb-ab439cb51421","series":0,"name":"replace","transplant":{"position":"org.grobid.core.lang.impl.CybozuLanguageDetectorFactory:50","type":"CtInvocationImpl","sourcecode":"org.grobid.core.lang.impl.CybozuLanguageDetectorFactory.init()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Figure:261","type":"CtIfImpl","sourcecode":"if ((graphicObject.getBoundingBox()) != null) {\n    go.addAttribute(new nu.xom.Attribute(\"coords\" , graphicObject.getBoundingBox().toString()));\n} "},"status":-2},{"failures":[],"tindex":"98939319-a54a-11e6-93bb-e9260e0b24c5","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2979","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = st.nextToken()"},"variableMap":{"st":"st3"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.DateParser:84","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = st3.nextToken().trim()"},"status":-2},{"failures":[],"tindex":"9893931a-a54a-11e6-93bb-93d308cd5934","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:1781","type":"CtInvocationImpl","sourcecode":"tokenizationsTable.add(tokenizations.get(p))"},"status":-2},{"failures":[],"tindex":"9893931b-a54a-11e6-93bb-270a34bdef92","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:749","type":"CtIfImpl","sourcecode":"if (numb < 5841)\n    year = \"2007\";\nelse if (numb < 317884)\n    year = \"2008\";\nelse if (numb < 655475)\n    year = \"2009\";\nelse if (numb < 930166)\n    year = \"2010\";\nelse\n    year = \"2011\";\n"},"variableMap":{"year":"when","numb":"month"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2264","type":"CtIfImpl","sourcecode":"if (month <= 9)\n    when += \"-0\" + month;\nelse\n    when += \"-\" + month;\n"},"status":-2},{"failures":[],"tindex":"9893931c-a54a-11e6-93bb-d9ee315a265d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:3418","type":"CtIfImpl","sourcecode":"if ((aff.getRegion()) != null) {\n    org.grobid.core.utilities.TextUtilities.appendN(tei, '\\t', (nbTag + 3));\n    tei.append(((\"<region>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(aff.getRegion()))) + \"<\/region>\\n\"));\n} "},"variableMap":{"aff":"aff","tei":"tei","nbTag":"nbTag"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3351","type":"CtIfImpl","sourcecode":"if ((aff.getLaboratories()) != null) {\n    if ((aff.getLaboratories().size()) == 1) {\n        org.grobid.core.utilities.TextUtilities.appendN(tei, '\\t', (nbTag + 2));\n        tei.append(((\"<orgName type=\\\"laboratory\\\">\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(aff.getLaboratories().get(0)))) + \"<\/orgName>\\n\"));\n    } else {\n        int int = 1;\n        for (java.lang.String java.lang.String : aff.getLaboratories()) {\n            org.grobid.core.utilities.TextUtilities.appendN(tei, '\\t', (nbTag + 2));\n            tei.append(((((\"<orgName type=\\\"laboratory\\\" key=\\\"lab\" + q) + \"\\\">\") + (org.grobid.core.utilities.TextUtilities.HTMLEncode(labo))) + \"<\/orgName>\\n\"));\n            q++;\n        }\n    }\n} "},"status":-2},{"failures":[],"tindex":"9893ba2d-a54a-11e6-93bb-c3926ee4fd32","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:83","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:255","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"9893ba2e-a54a-11e6-93bb-d3983d2be11b","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.Affiliation:337","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    java.lang.String = org.grobid.core.utilities.TextUtilities.cleanField(java.lang.String, true);\n    if ((java.lang.String.length()) < 2)\n        java.lang.String = null;\n    \n} "},"variableMap":{"postCode":"lastTag0"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Segmentation:842","type":"CtIfImpl","sourcecode":"if (!output) {\n    output = writeField(buffer, line, s1, lastTag0, s2, \"<headnote>\", \"<note place=\\\"headnote\\\">\", addSpace, 3);\n} "},"status":-2},{"failures":[],"tindex":"9893ba2f-a54a-11e6-93bb-5f220c19105e","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2673","type":"CtOperatorAssignmentImpl","sourcecode":"tei += \"\\t\\t<meeting>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(meeting))"},"variableMap":{"tei":"tei","meeting":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioSet:104","type":"CtOperatorAssignmentImpl","sourcecode":"tei += \"\\t\\t<persName>\""},"status":-2},{"failures":[],"tindex":"9893ba30-a54a-11e6-93bb-67ceab41c54c","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.AffiliationAddressParser:105","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.grobid.core.layout.LayoutToken> java.util.List<org.grobid.core.layout.LayoutToken> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ebook.BookStructureParser:63","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.grobid.core.layout.LayoutToken> java.util.List<org.grobid.core.layout.LayoutToken> = doc.getTokenizationsFulltext()"},"status":-2},{"failures":[],"tindex":"9893ba31-a54a-11e6-93bb-43f440705dd7","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.OPSService:133","type":"CtIfImpl","sourcecode":"if (res != null)\n    return res;\nelse\n    return null;\n"},"variableMap":{"res":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Affiliation:380","type":"CtIfImpl","sourcecode":"if (!(notNull())) {\n    return null;\n} else {\n    tei.append(\"<affiliation\");\n    if ((java.lang.String) != null)\n        tei.append(\" key=\\\"\").append(java.lang.String).append(\"\\\"\");\n    \n    tei.append(\">\");\n    if ((java.util.List<java.lang.String>) != null) {\n        if ((java.util.List<java.lang.String>.size()) == 1) {\n            tei.append(\"<orgName type=\\\"department\\\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(java.util.List<java.lang.String>.get(0))).append(\"<\/orgName>\");\n        } else {\n            int int = 1;\n            for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n                tei.append(\"<orgName type=\\\"department\\\" key=\\\"dep\").append(q).append(\"\\\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(depa)).append(\"<\/orgName>\");\n                q++;\n            }\n        }\n    } \n    if ((java.util.List<java.lang.String>) != null) {\n        if ((java.util.List<java.lang.String>.size()) == 1) {\n            tei.append(\"<orgName type=\\\"laboratory\\\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(java.util.List<java.lang.String>.get(0))).append(\"<\/orgName>\");\n        } else {\n            int int = 1;\n            for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n                tei.append(\"<orgName type=\\\"laboratory\\\" key=\\\"lab\").append(q).append(\"\\\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(labo)).append(\"<\/orgName>\");\n                q++;\n            }\n        }\n    } \n    if ((java.util.List<java.lang.String>) != null) {\n        if ((java.util.List<java.lang.String>.size()) == 1) {\n            tei.append(\"<orgName type=\\\"institution\\\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(java.util.List<java.lang.String>.get(0))).append(\"<\/orgName>\");\n        } else {\n            int int = 1;\n            for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n                tei.append(\"<orgName type=\\\"institution\\\" key=\\\"instit\").append(q).append(\"\\\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(inst)).append(\"<\/orgName>\");\n                q++;\n            }\n        }\n    } \n    if ((((((((getAddressString()) != null) | ((getAddrLine()) != null)) | ((getPostBox()) != null)) | ((getPostCode()) != null)) | ((getSettlement()) != null)) | ((getRegion()) != null)) | ((getCountry()) != null)) {\n        tei.append(\"<address>\");\n        if ((getAddressString()) != null) {\n            tei.append(\"<addrLine>\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getAddressString())).append(\"<\/addrLine>\");\n        } \n        if ((getAddrLine()) != null) {\n            tei.append(\"<addrLine>\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getAddrLine())).append(\"<\/addrLine>\");\n        } \n        if ((getPostBox()) != null) {\n            tei.append(\"<postBox>\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getPostBox())).append(\"<\/postBox>\");\n        } \n        if ((getPostCode()) != null) {\n            tei.append(\"<postCode>\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getPostCode())).append(\"<\/postCode>\");\n        } \n        if ((getSettlement()) != null) {\n            tei.append(\"<settlement>\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getSettlement())).append(\"<\/settlement>\");\n        } \n        if ((getRegion()) != null) {\n            tei.append(\"<region>\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getRegion())).append(\"<\/region>\");\n        } \n        if ((getCountry()) != null) {\n            org.grobid.core.lexicon.Lexicon org.grobid.core.lexicon.Lexicon = org.grobid.core.lexicon.Lexicon.getInstance();\n            java.lang.String java.lang.String = lexicon.getcountryCode(getCountry());\n            tei.append(\"<country\");\n            if (code != null)\n                tei.append(\" key=\\\"\").append(code).append(\"\\\"\");\n            \n            tei.append(\">\").append(org.grobid.core.utilities.TextUtilities.HTMLEncode(getCountry())).append(\"<\/country>\");\n        } \n        tei.append(\"<\/address>\");\n    } \n    tei.append(\"<\/affiliation>\");\n}"},"status":-2},{"failures":[],"tindex":"9893e142-a54a-11e6-93bb-61928228e4e2","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.LevenshteinDistanceAligment:68","type":"CtAssignmentImpl","sourcecode":"int = o"},"variableMap":{"offset":"i","o":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioSet:158","type":"CtUnaryOperatorImpl","sourcecode":"i++"},"status":-2},{"failures":[],"tindex":"9893e143-a54a-11e6-93bb-abd6ef01fa3d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.DocumentSource:190","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.XMLWriter:268","type":"CtTryImpl","sourcecode":"try {\n    javax.xml.stream.XMLEventWriter = javax.xml.stream.XMLOutputFactory.newInstance().createXMLEventWriter(java.io.StringWriter);\n} catch (javax.xml.stream.XMLStreamException xmlStrExp) {\n    throw new org.grobid.core.exceptions.GrobidException((\"An error occured while creating the Stax event readers: \" + (xmlStrExp.toString())));\n} catch (javax.xml.stream.FactoryConfigurationError factCongExp) {\n    throw new org.grobid.core.exceptions.GrobidException((\"An error occured while creating the Stax event readers: \" + (factCongExp.toString())));\n}"},"status":-2},{"failures":[],"tindex":"9893e144-a54a-11e6-93bb-2362353e9223","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.entities.ChemicalParser:100","type":"CtAssignmentImpl","sourcecode":"label = null"},"variableMap":{"label":"email"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.util.EmailSanitizer:210","type":"CtAssignmentImpl","sourcecode":"email = email.replace(\"(\", \"\")"},"status":-2},{"failures":[],"tindex":"9893e145-a54a-11e6-93bb-45f23ab47afe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.TextUtilities:157","type":"CtIfImpl","sourcecode":"if (lastSpaceIndex != (-1)) {\n    lastToken = section.substring((lastSpaceIndex + 1), section.length());\n} else {\n    lastToken = section.substring(0, section.length());\n}"},"status":-2},{"failures":[],"tindex":"9893e146-a54a-11e6-93bb-f5e79461138e","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.FullTextParser:1190","type":"CtAssignmentImpl","sourcecode":"lastTag0 = \"\""},"variableMap":{"lastTag0":"actual"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.entities.ChemicalParser:105","type":"CtAssignmentImpl","sourcecode":"actual = st2.nextToken()"},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":30,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}