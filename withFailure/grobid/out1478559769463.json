{"failureDictionary":{"org.grobid.core.test.TestHeaderParser.testHeaderHeader":9,"org.grobid.core.test.TestNameParser.testNameParserCitation":17,"org.grobid.core.test.TestCitationPatentParser.testCitationPatentParserFromText":0,"org.grobid.core.engines.SegmentationTest.testPrepareDocument_SimpleDocument_shouldWork":12,"org.grobid.core.engines.SegmentationTest.testGetAllLinesFeatures_SimpleDocument_shouldWork":13,"org.grobid.core.test.TestHeaderParser.testTrainingHeader":11,"org.grobid.core.test.TestFullTextParser.testFullTextTrainingParser":8,"org.grobid.core.test.TestCitationParser.testCitationParser1_withoutConsolidation":18,"org.grobid.core.test.TestCitationParser.testCitationParser2_withoutConsolidation":19,"org.grobid.core.test.TestDate.testDateParser":5,"org.grobid.core.test.TestNameParser.testNameParserHeader":16,"org.grobid.core.test.TestFullTextParser.testFullTextParser":7,"org.grobid.core.sax.PDF2XMLSaxParserTest.testParsing_pdf2XMLwithIMages_ShouldWork":15,"org.grobid.core.test.TestReferencesParser.testReferences":6,"org.grobid.core.test.TestCitationParser.testCitationParser3_withConsolidation":4,"org.grobid.core.sax.PDF2XMLSaxParserTest.testParsing_pdf2XMLwithNoIMages_ShouldWork":14,"org.grobid.core.test.TestHeaderParser.testSegmentationHeader":10,"org.grobid.core.engines.patent.ReferenceExtractorTest.krProcessing":1,"org.grobid.core.test.TestCitationParser.testCitationParser5_withoutConsolidation":3,"org.grobid.core.test.TestCitationParser.testCitationParser4_withConsolidation":2},"transformations":[{"failures":[],"tindex":"4de7a21b-a53e-11e6-b8c8-4b4749847a3d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.DocumentNode:32","type":"CtAssignmentImpl","sourcecode":"org.grobid.core.document.DocumentNode.this.java.lang.String = address"},"variableMap":{"address":"theDate"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Date:162","type":"CtOperatorAssignmentImpl","sourcecode":"theDate += int"},"status":-2},{"failures":[],"tindex":"4de7f03c-a53e-11e6-b8c8-290106a49858","series":0,"name":"replace","transplant":{"position":"org.grobid.core.visualization.CitationsVisualizer:303","type":"CtUnaryOperatorImpl","sourcecode":"totalMarkers1++"},"variableMap":{"totalMarkers1":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:648","type":"CtUnaryOperatorImpl","sourcecode":"ii++"},"status":-2},{"failures":[0,1],"tindex":"4de7f03d-a53e-11e6-b8c8-831f2b08753a","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:708","type":"CtOperatorAssignmentImpl","sourcecode":"resultTEI += \"<div type=\\\"references\\\">\\n\""},"variableMap":{"resultTEI":"authorityName"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:212","type":"CtOperatorAssignmentImpl","sourcecode":"er += (((\"|(\" + (authorityName.charAt(0))) + \"\\\\.(\\\\s)?\") + (authorityName.charAt(1))) + \")\""},"status":-1},{"failures":[],"tindex":"4de7f03e-a53e-11e6-b8c8-1d92da20e93b","series":0,"name":"replace","transplant":{"position":"org.grobid.core.annotations.TeiStAXParser:192","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.TextUtilities:1193","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[2,3,4,5],"tindex":"4de8174f-a53e-11e6-b8c8-ab3377b9a394","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.TextUtilities:646","type":"CtInvocationImpl","sourcecode":"sb.append(' ')"},"variableMap":{"sb":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorDate:51","type":"CtInvocationImpl","sourcecode":"res.append((\" \" + (java.lang.String)))"},"status":-1},{"failures":[],"tindex":"4de81750-a53e-11e6-b8c8-65f3629009ca","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.Utilities:211","type":"CtAssignmentImpl","sourcecode":"note = new_note.trim()"},"variableMap":{"note":"lastTag","new_note":"lastTag"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:768","type":"CtAssignmentImpl","sourcecode":"lastTag0 = lastTag"},"status":-2},{"failures":[],"tindex":"4de8b391-a53e-11e6-b8c8-a7e9a9d8e9ce","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:370","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.loadCrfEngine()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ProcessEngine:267","type":"CtInvocationImpl","sourcecode":"org.grobid.core.engines.ProcessEngine.inferOutputPath(pGbdArgs)"},"status":-2},{"failures":[],"tindex":"4de8daa2-a53e-11e6-b8c8-83bd145b745d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.TextUtilities:133","type":"CtIfImpl","sourcecode":"if (firstToken.contains(\"\\n\")) {\n    res += org.apache.commons.lang3.StringUtils.trim(section);\n} else {\n    res += \"-\" + (org.apache.commons.lang3.StringUtils.trim(section));\n}"},"variableMap":{"res":"xml","firstToken":"org.grobid.core.utilities.Consolidation.INSERT_CROSSREF_SQL3","section":"xml"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Consolidation:326","type":"CtTryImpl","sourcecode":"try {\n    pstmt2 = java.sql.Connection.prepareStatement(org.grobid.core.utilities.Consolidation.org.grobid.core.utilities.Consolidation.java.lang.String);\n    pstmt2.setString(1, doi);\n    pstmt2.setString(2, xml);\n    pstmt2.executeUpdate();\n    pstmt2.close();\n} catch (java.sql.SQLException se) {\n    java.lang.System.java.lang.System.java.io.PrintStream.println(\"EXCEPTION HANDLING CROSSREF UPDATE\");\n} finally {\n    try {\n        if (pstmt2 != null)\n            pstmt2.close();\n        \n    } catch (java.sql.SQLException se) {\n    }\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"4de8daa3-a53e-11e6-b8c8-ddece4c56c07","series":0,"name":"add","transplant":{"position":"org.grobid.core.visualization.BlockVisualizer:64","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.setGrobidPropertiesPath(\"grobid-home/config/grobid.properties\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.PDF2XMLSaxHandler:78","type":"CtIfImpl","sourcecode":"if (block == null)\n    org.grobid.core.sax.PDF2XMLSaxHandler.org.grobid.core.sax.PDF2XMLSaxHandler.org.slf4j.Logger.info(\"addBlock called with null block object\");\n"},"status":-1},{"failures":[],"tindex":"4de901b4-a53e-11e6-b8c8-938de81d36d9","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.CitationParser:50","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.isBlank(input)) {\n    return null;\n} "},"variableMap":{"input":"reference"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Engine:196","type":"CtReturnImpl","sourcecode":"return org.grobid.core.engines.EngineParsers.getCitationParser().processing(reference, consolidate)"},"status":-2},{"failures":[7],"tindex":"4de901b5-a53e-11e6-b8c8-7367aedac686","series":0,"name":"add","transplant":{"position":"org.grobid.core.data.BiblioItem:3319","type":"CtInvocationImpl","sourcecode":"tei.append(\"<\/persName>\\n\")"},"variableMap":{"tei":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3298","type":"CtInvocationImpl","sourcecode":"tei.append(((\"<forename type=\\\"middle\\\">\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(author.getMiddleName()))) + \"<\/forename>\\n\"))"},"status":-1},{"failures":[],"tindex":"4de901b6-a53e-11e6-b8c8-a9816b9dd2d9","series":0,"name":"replace","transplant":{"position":"org.grobid.core.main.LibraryLoader:104","type":"CtInvocationImpl","sourcecode":"org.grobid.core.mock.MockContext.destroyInitialContext()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.annotations.TeiStAXParser:310","type":"CtInvocationImpl","sourcecode":"org.grobid.core.annotations.TeiStAXParsedInfo.decrementGornIndex()"},"status":-2},{"failures":[],"tindex":"4de901b7-a53e-11e6-b8c8-4b0d2fa53c6a","series":0,"name":"replace","transplant":{"position":"org.grobid.core.tokenization.TaggingTokenSynchronizer:80","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.Date:94","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"status":-2},{"failures":[],"tindex":"4de901b8-a53e-11e6-b8c8-33dea8917771","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:867","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioSet:179","type":"CtReturnImpl","sourcecode":"return tei"},"status":-2},{"failures":[],"tindex":"4de928c9-a53e-11e6-b8c8-ab78b22ec46b","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.AffiliationAddressParser:799","type":"CtLocalVariableImpl","sourcecode":"java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(tok , \"\\t\")"},"variableMap":{"tok":"pageRange"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2723","type":"CtLocalVariableImpl","sourcecode":"java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(java.lang.String , \"--\")"},"status":-2},{"failures":[16,17,18,2,3,19,7,9,10],"tindex":"4de928ca-a53e-11e6-b8c8-d58437c24b1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AuthorParser:60","type":"CtTryImpl","sourcecode":"try {\n    for (java.lang.String java.lang.String : inputs) {\n        if (input == null)\n            continue;\n        \n        java.util.List<java.lang.String> java.util.List<java.lang.String> = org.grobid.core.analyzers.GrobidAnalyzer.tokenize(input);\n        if ((tokenizations.size()) == 0)\n            return null;\n        \n        for (java.lang.String java.lang.String : tokenizations) {\n            if (!(tok.equals(\" \"))) {\n                authorBlocks.add((tok + \" <author>\"));\n            } \n        }\n        authorBlocks.add(\"\\n\");\n    }\n    java.lang.String java.lang.String = org.grobid.core.features.FeaturesVectorName.addFeaturesName(authorBlocks);\n    org.grobid.core.engines.tagging.GenericTagger org.grobid.core.engines.tagging.GenericTagger = head ? org.grobid.core.engines.tagging.GenericTagger : org.grobid.core.engines.tagging.GenericTagger;\n    java.lang.String java.lang.String = tagger.label(header);\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(res , \"\\n\");\n    java.lang.String java.lang.String = null;\n    org.grobid.core.data.Person org.grobid.core.data.Person = new org.grobid.core.data.Person();\n    boolean boolean = false;\n    java.lang.String java.lang.String = null;\n    while (st2.hasMoreTokens()) {\n        java.lang.String java.lang.String = st2.nextToken();\n        if ((line.trim().length()) == 0) {\n            if (aut.notNull()) {\n                if (fullAuthors == null)\n                    fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                \n                fullAuthors.add(aut);\n            } \n            aut = new org.grobid.core.data.Person();\n            continue;\n        } \n        java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line , \"\\t\");\n        int int = st3.countTokens();\n        int int = 0;\n        java.lang.String java.lang.String = null;\n        java.lang.String java.lang.String = null;\n        java.lang.String java.lang.String = \"<author>\";\n        java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        while (st3.hasMoreTokens()) {\n            java.lang.String java.lang.String = st3.nextToken().trim();\n            if (i == 0) {\n                s2 = s;\n            } else if (i == (ll - 2)) {\n            } else if (i == (ll - 1)) {\n                s1 = s;\n            } else {\n                localFeatures.add(s);\n            }\n            i++;\n        }\n        if (s1.equals(\"<marker>\")) {\n            if (aut.notNull()) {\n                if (fullAuthors == null) {\n                    fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                    fullAuthors.add(aut);\n                    aut = new org.grobid.core.data.Person();\n                } else if (!(fullAuthors.contains(aut))) {\n                    fullAuthors.add(aut);\n                    aut = new org.grobid.core.data.Person();\n                } \n            } \n            if (currentMarker == null)\n                currentMarker = s2;\n            else\n                currentMarker += \" \" + s2;\n            \n            newMarker = true;\n        } else if (s1.equals(\"I-<marker>\")) {\n            if (aut.notNull()) {\n                if (fullAuthors == null)\n                    fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                \n                fullAuthors.add(aut);\n                aut = new org.grobid.core.data.Person();\n            } \n            currentMarker = s2;\n            newMarker = true;\n        } else if ((s1.equals(\"<forename>\")) || (s1.equals(\"I-<forename>\"))) {\n            if (s3.equals(\"<author>\")) {\n                if (newMarker) {\n                    aut.setFirstName(s2);\n                    newMarker = false;\n                } else if ((aut.getFirstName()) != null) {\n                    if (s1.equals(\"I-<forename>\")) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setFirstName(s2);\n                    } else if ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<forename>\")))) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setFirstName(s2);\n                    } else if ((((s2.equals(\"-\")) || (s2.equals(\".\"))) || (s2.equals(\",\"))) || (s2.equals(\":\")))\n                        aut.setFirstName(((aut.getFirstName()) + s2));\n                    else {\n                        if ((aut.getFirstName().length()) == 0)\n                            aut.setFirstName(((aut.getFirstName()) + s2));\n                        else if (((aut.getFirstName().charAt(((aut.getFirstName().length()) - 1))) == '-') | ((aut.getFirstName().charAt(((aut.getFirstName().length()) - 1))) == '\\''))\n                            aut.setFirstName(((aut.getFirstName()) + s2));\n                        else\n                            aut.setFirstName((((aut.getFirstName()) + \" \") + s2));\n                        \n                    }\n                } else {\n                    aut.setFirstName(s2);\n                }\n            } \n        } else if ((s1.equals(\"<middlename>\")) || (s1.equals(\"I-<middlename>\"))) {\n            if (s3.equals(\"<author>\")) {\n                if (newMarker) {\n                    aut.setMiddleName(s2);\n                    newMarker = false;\n                } else if ((aut.getMiddleName()) != null) {\n                    if ((((s2.equals(\"-\")) || (s2.equals(\".\"))) || (s2.equals(\",\"))) || (s2.equals(\":\")))\n                        aut.setMiddleName(((aut.getMiddleName()) + s2));\n                    else {\n                        if ((aut.getMiddleName().length()) == 0)\n                            aut.setMiddleName(((aut.getMiddleName()) + s2));\n                        else if (((aut.getMiddleName().charAt(((aut.getMiddleName().length()) - 1))) == '-') | ((aut.getMiddleName().charAt(((aut.getMiddleName().length()) - 1))) == '\\''))\n                            aut.setMiddleName(((aut.getMiddleName()) + s2));\n                        else\n                            aut.setMiddleName((((aut.getMiddleName()) + \" \") + s2));\n                        \n                    }\n                } else {\n                    aut.setMiddleName(s2);\n                }\n            } \n        } else if ((s1.equals(\"<surname>\")) || (s1.equals(\"I-<surname>\"))) {\n            if (s3.equals(\"<author>\")) {\n                if (newMarker) {\n                    aut.setLastName(s2);\n                    newMarker = false;\n                } else if ((aut.getLastName()) != null) {\n                    if (s1.equals(\"I-<surname>\")) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setLastName(s2);\n                    } else if ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<surname>\")))) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setLastName(s2);\n                    } else if ((((s2.equals(\"-\")) || (s2.equals(\".\"))) || (s2.equals(\",\"))) || (s2.equals(\":\"))) {\n                        aut.setLastName(((aut.getLastName()) + s2));\n                    } else {\n                        if ((aut.getLastName().length()) == 0)\n                            aut.setLastName(s2);\n                        else if (((aut.getLastName().charAt(((aut.getLastName().length()) - 1))) == '-') | ((aut.getLastName().charAt(((aut.getLastName().length()) - 1))) == '\\''))\n                            aut.setLastName(((aut.getLastName()) + s2));\n                        else\n                            aut.setLastName((((aut.getLastName()) + \" \") + s2));\n                        \n                    }\n                } else {\n                    aut.setLastName(s2);\n                }\n            } \n        } else if ((s1.equals(\"<title>\")) || (s1.equals(\"I-<title>\"))) {\n            if (s3.equals(\"<author>\")) {\n                if (newMarker) {\n                    aut.setTitle(s2);\n                    newMarker = false;\n                } else if ((aut.getTitle()) != null) {\n                    if (s1.equals(\"I-<title>\")) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setTitle(s2);\n                    } else if ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<title>\")))) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setTitle(s2);\n                    } else if ((((s2.equals(\"-\")) || (s2.equals(\".\"))) || (s2.equals(\",\"))) || (s2.equals(\":\"))) {\n                        aut.setTitle(((aut.getTitle()) + s2));\n                    } else {\n                        if ((aut.getTitle().length()) == 0) {\n                            aut.setTitle(((aut.getTitle()) + s2));\n                        } else if (((aut.getTitle().charAt(((aut.getTitle().length()) - 1))) == '-') | ((aut.getTitle().charAt(((aut.getTitle().length()) - 1))) == '\\'')) {\n                            aut.setTitle(((aut.getTitle()) + s2));\n                        } else {\n                            aut.setTitle((((aut.getTitle()) + \" \") + s2));\n                        }\n                    }\n                } else {\n                    aut.setTitle(s2);\n                }\n            } \n        } else if ((s1.equals(\"<suffix>\")) || (s1.equals(\"I-<suffix>\"))) {\n            if (s3.equals(\"<suffix>\")) {\n                if (newMarker) {\n                    aut.setSuffix(s2);\n                    newMarker = false;\n                } else if ((aut.getSuffix()) != null) {\n                    if (s1.equals(\"I-<suffix>\")) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setSuffix(s2);\n                    } else if ((!(s1.equals(lastTag))) && (!(lastTag.equals(\"I-<suffix>\")))) {\n                        if (aut.notNull()) {\n                            if (fullAuthors == null)\n                                fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n                            \n                            fullAuthors.add(aut);\n                        } \n                        aut = new org.grobid.core.data.Person();\n                        aut.setSuffix(s2);\n                    } else if ((((s2.equals(\"-\")) || (s2.equals(\".\"))) || (s2.equals(\",\"))) || (s2.equals(\":\"))) {\n                        aut.setSuffix(((aut.getSuffix()) + s2));\n                    } else {\n                        if ((aut.getSuffix().length()) == 0) {\n                            aut.setSuffix(((aut.getSuffix()) + s2));\n                        } else if (((aut.getSuffix().charAt(((aut.getSuffix().length()) - 1))) == '-') | ((aut.getSuffix().charAt(((aut.getSuffix().length()) - 1))) == '\\'')) {\n                            aut.setSuffix(((aut.getSuffix()) + s2));\n                        } else {\n                            aut.setSuffix((((aut.getSuffix()) + \" \") + s2));\n                        }\n                    }\n                } else {\n                    aut.setSuffix(s2);\n                }\n            } \n        } \n        lastTag = s1;\n    }\n    if (aut.notNull()) {\n        if (fullAuthors == null) {\n            fullAuthors = new java.util.ArrayList<org.grobid.core.data.Person>();\n        } \n        fullAuthors.add(aut);\n    } \n} catch (java.lang.Exception e) {\n    throw new org.grobid.core.exceptions.GrobidException(\"An exception occured while running Grobid.\" , e);\n}"},"status":-1},{"failures":[],"tindex":"4de94fdb-a53e-11e6-b8c8-bf35f4877c48","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2797","type":"CtOperatorAssignmentImpl","sourcecode":"tei += \"\\t\\t<\/imprint>\\n\""},"variableMap":{"tei":"number"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:969","type":"CtAssignmentImpl","sourcecode":"originalNumber = number"},"status":0},{"failures":[],"tindex":"4de94fdc-a53e-11e6-b8c8-2b5b41b87b19","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.TextUtilities:141","type":"CtAssignmentImpl","sourcecode":"res = res.replace(\" . \", \". \")"},"variableMap":{"res":"s2"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:637","type":"CtAssignmentImpl","sourcecode":"output = writeField(s1, lastTag0, s2, \"<author>\", \"<author>\", addSpace, 0)"},"status":0},{"failures":[],"tindex":"4de94fdd-a53e-11e6-b8c8-6d781cf4e79f","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.ebook.BookStructureParser:226","type":"CtAssignmentImpl","sourcecode":"filter = true"},"variableMap":{"filter":"isPlace"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorAffiliationAddress:140","type":"CtAssignmentImpl","sourcecode":"isPlace = false"},"status":0},{"failures":[],"tindex":"4de94fde-a53e-11e6-b8c8-f94e6f500204","series":0,"name":"replace","transplant":{"position":"org.grobid.core.lang.Language:22","type":"CtIfImpl","sourcecode":"if (langId == null) {\n    throw new org.grobid.core.exceptions.GrobidException(\"Language id cannot be null\");\n} "},"variableMap":{"langId":"cleanedString"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:1230","type":"CtIfImpl","sourcecode":"if (((currentCharacter != '-') && (currentCharacter != ' ')) && (currentCharacter != '\\''))\n    cleanedString += currentCharacter;\n"},"status":0},{"failures":[],"tindex":"4de94fdf-a53e-11e6-b8c8-f39163617cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:916","type":"CtIfImpl","sourcecode":"if (i == 0) {\n    s2 = org.grobid.core.utilities.TextUtilities.HTMLEncode(s);\n    int int = p;\n    boolean boolean = false;\n    while ((!strop) && (p < (tokenizations.size()))) {\n        java.lang.String java.lang.String = tokenizations.get(p).t();\n        if ((tokOriginal.equals(\" \")) || (tokOriginal.equals(\"\\u00a0\"))) {\n            addSpace = true;\n        } else if (tokOriginal.equals(\"\\n\")) {\n            newLine = true;\n        } else if (tokOriginal.equals(s)) {\n            strop = true;\n        } \n        p++;\n    }\n    if (p == (tokenizations.size())) {\n        if ((p - p0) > 2) {\n            p = p0;\n        } \n    } \n} else if (i == (ll - 1)) {\n    s1 = s;\n} else {\n    if (s.equals(\"LINESTART\"))\n        newLine = true;\n    \n    localFeatures.add(s);\n}"},"status":0},{"failures":[],"tindex":"4de94fe0-a53e-11e6-b8c8-5ffa535924d4","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidAnalyzer:121","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.ReferenceSegmenterParser:74","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[7,9],"tindex":"4de976f1-a53e-11e6-b8c8-b1d03599aaa5","series":0,"name":"replace","transplant":{"position":"org.grobid.core.sax.PDF2XMLSaxHandler:329","type":"CtInvocationImpl","sourcecode":"token.setText(token.getText().substring(0, ((token.getText().length()) - 1)))"},"variableMap":{"token":"token"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:934","type":"CtIfImpl","sourcecode":"if (token.getRotation())\n    features.boolean = true;\n"},"status":-1},{"failures":[],"tindex":"4de976f2-a53e-11e6-b8c8-01be9eb68cff","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.DocumentPointer:72","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.LayoutTokensUtil:89","type":"CtReturnImpl","sourcecode":"return cnt"},"status":-2},{"failures":[],"tindex":"4de976f3-a53e-11e6-b8c8-c772defc66de","series":0,"name":"replace","transplant":{"position":"org.grobid.core.analyzers.GrobidAnalyzer:121","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.entities.ChemicalParser:69","type":"CtReturnImpl","sourcecode":"return entities"},"status":-2},{"failures":[],"tindex":"4de976f4-a53e-11e6-b8c8-839e4b0ff007","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:338","type":"CtAssignmentImpl","sourcecode":"currentJournalPositions = i"},"variableMap":{"currentJournalPositions":"tokenizationsPtr","i":"tokenizationsPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.tokenization.TaggingTokenSynchronizer:102","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"4de976f5-a53e-11e6-b8c8-d70b391eb26d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.DateParser:358","type":"CtAssignmentImpl","sourcecode":"hasMonth = false"},"variableMap":{"hasMonth":"properName"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:686","type":"CtAssignmentImpl","sourcecode":"features.boolean = true"},"status":-2},{"failures":[],"tindex":"4de976f6-a53e-11e6-b8c8-97ba1e786f27","series":0,"name":"add","transplant":{"position":"org.grobid.core.sax.MarecSaxParser:256","type":"CtAssignmentImpl","sourcecode":"token = token.trim()"},"variableMap":{"token":"s1"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.HeaderParser:1081","type":"CtAssignmentImpl","sourcecode":"s1 = s"},"status":-2},{"failures":[],"tindex":"4de976f7-a53e-11e6-b8c8-3fbd4e279d97","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.Document:409","type":"CtIfImpl","sourcecode":"if (((((b.getX()) == 0) || ((b.getHeight()) < 20)) || ((b.getWidth()) < 20)) || (((b.getHeight()) * (b.getWidth())) < 3000)) {\n    continue;\n} "},"variableMap":{"b":"block"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:2027","type":"CtIfImpl","sourcecode":"if ((block.getTokens()) != null)\n    pageLength += block.getTokens().size();\n"},"status":-2},{"failures":[],"tindex":"4de99e08-a53e-11e6-b8c8-5bf513878761","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.TextUtilities:474","type":"CtAssignmentImpl","sourcecode":"input = input.replace(\", ,\", \",\")"},"variableMap":{"input":"pathXML"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:209","type":"CtAssignmentImpl","sourcecode":"org.grobid.core.document.Document.this.java.lang.String = pathXML.getAbsolutePath()"},"status":-2},{"failures":[],"tindex":"4de99e09-a53e-11e6-b8c8-b1f266601af4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.TEIFormatter:541","type":"CtInvocationImpl","sourcecode":"tei.append(\"\\t\\t\\t\\t\\t\\t\\t<date type=\\\"published\\\" when=\\\"\")"},"status":-2},{"failures":[],"tindex":"4de99e0a-a53e-11e6-b8c8-f749e588590e","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:2806","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    tei += (\"\\t\\t\\t<date>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(java.lang.String))) + \"<\/date>\\n\";\n} "},"variableMap":{"publication_date":"word","tei":"word"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorChemicalEntity:139","type":"CtIfImpl","sourcecode":"if ((word.length()) == 1) {\n    featuresVector.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"4de99e0b-a53e-11e6-b8c8-ff5579cd5efb","series":0,"name":"add","transplant":{"position":"org.grobid.core.sax.PDF2XMLSaxHandler:921","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.abs(x)"},"variableMap":{"currentX":"height","x":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.layout.Page:37","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.abs(d)"},"status":-2},{"failures":[],"tindex":"4de99e0c-a53e-11e6-b8c8-872e64e29ea2","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.PatentRefParser:875","type":"CtIfImpl","sourcecode":"if (number.startsWith(\"6/\"))\n    number = number.substring(2, number.length());\nelse\n    number = number.substring(3, number.length());\n"},"variableMap":{"number":"publication_date"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:1917","type":"CtIfImpl","sourcecode":"if ((org.grobid.core.data.Date) != null) {\n    if ((((org.grobid.core.data.Date.getDay()) != (-1)) || ((org.grobid.core.data.Date.getMonth()) != (-1))) || ((org.grobid.core.data.Date.getYear()) != (-1))) {\n        int int = org.grobid.core.data.Date.getYear();\n        int int = org.grobid.core.data.Date.getMonth();\n        int int = org.grobid.core.data.Date.getDay();\n        if (year != (-1)) {\n            java.lang.String java.lang.String = \"\";\n            if (year <= 9)\n                when += \"000\" + year;\n            else if (year <= 99)\n                when += \"00\" + year;\n            else if (year <= 999)\n                when += \"0\" + year;\n            else\n                when += year;\n            \n            if (month != (-1)) {\n                if (month <= 9)\n                    when += \"-0\" + month;\n                else\n                    when += \"-\" + month;\n                \n                if (day != (-1)) {\n                    if (day <= 9)\n                        when += \"-0\" + day;\n                    else\n                        when += \"-\" + day;\n                    \n                } \n            } \n            for (int int = 0 ; i < (indent + 3) ; i++) {\n                tei.append(\"\\t\");\n            }\n            tei.append(\"<date type=\\\"published\\\" when=\\\"\");\n            tei.append((when + \"\\\" />\\n\"));\n        } \n    } else if ((org.grobid.core.data.BiblioItem.this.getYear()) != null) {\n        java.lang.String java.lang.String = \"\";\n        if ((org.grobid.core.data.BiblioItem.this.getYear().length()) == 1)\n            when += \"000\" + (org.grobid.core.data.BiblioItem.this.getYear());\n        else if ((org.grobid.core.data.BiblioItem.this.getYear().length()) == 2)\n            when += \"00\" + (org.grobid.core.data.BiblioItem.this.getYear());\n        else if ((org.grobid.core.data.BiblioItem.this.getYear().length()) == 3)\n            when += \"0\" + (org.grobid.core.data.BiblioItem.this.getYear());\n        else if ((org.grobid.core.data.BiblioItem.this.getYear().length()) == 4)\n            when += org.grobid.core.data.BiblioItem.this.getYear();\n        \n        if ((org.grobid.core.data.BiblioItem.this.getMonth()) != null) {\n            if ((org.grobid.core.data.BiblioItem.this.getMonth().length()) == 1)\n                when += \"-0\" + (org.grobid.core.data.BiblioItem.this.getMonth());\n            else\n                when += \"-\" + (org.grobid.core.data.BiblioItem.this.getMonth());\n            \n            if ((org.grobid.core.data.BiblioItem.this.getDay()) != null) {\n                if ((org.grobid.core.data.BiblioItem.this.getDay().length()) == 1)\n                    when += \"-0\" + (org.grobid.core.data.BiblioItem.this.getDay());\n                else\n                    when += \"-\" + (org.grobid.core.data.BiblioItem.this.getDay());\n                \n            } \n        } \n        for (int int = 0 ; i < (indent + 3) ; i++) {\n            tei.append(\"\\t\");\n        }\n        tei.append(\"<date type=\\\"published\\\" when=\\\"\");\n        tei.append((when + \"\\\" />\\n\"));\n    } else {\n        for (int int = 0 ; i < (indent + 3) ; i++) {\n            tei.append(\"\\t\");\n        }\n        tei.append(((\"<date>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(java.lang.String))) + \"<\/date>\\n\"));\n    }\n} else if ((java.lang.String) != null) {\n    for (int int = 0 ; i < (indent + 3) ; i++) {\n        tei.append(\"\\t\");\n    }\n    tei.append(((\"<date>\" + (org.grobid.core.utilities.TextUtilities.HTMLEncode(java.lang.String))) + \"<\/date>\\n\"));\n} "},"status":-2},{"failures":[],"tindex":"4de9c51d-a53e-11e6-b8c8-9139572621c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.TextUtilities:696","type":"CtIfImpl","sourcecode":"if (!skip) {\n    sb.append(\"&amp;\");\n} else {\n    sb.append(\"&\");\n}"},"status":-2},{"failures":[],"tindex":"4de9c51e-a53e-11e6-b8c8-a7b915521350","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.IOUtilities:113","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.Utilities.deleteOldies(org.grobid.core.utilities.GrobidProperties.getTempPath(), 300)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:359","type":"CtInvocationImpl","sourcecode":"fullAffiliations.add(aff)"},"status":-2},{"failures":[],"tindex":"4de9c51f-a53e-11e6-b8c8-b396fa09ac8c","series":0,"name":"add","transplant":{"position":"org.grobid.core.layout.VectorGraphicBoxCalculator:48","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.grobid.core.utilities.XQueryProcessor.getQueryFromResources(\"vector-coords.xq\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.annotations.TeiStAXParser:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"4de9c520-a53e-11e6-b8c8-f17e922e00de","series":0,"name":"add","transplant":{"position":"org.grobid.core.document.BasicStructureBuilder:942","type":"CtLocalVariableImpl","sourcecode":"java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line , \"\\t\")"},"variableMap":{"line":"authors"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2494","type":"CtLocalVariableImpl","sourcecode":"java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(java.lang.String , \";\")"},"status":-2},{"failures":[],"tindex":"4de9c521-a53e-11e6-b8c8-97160b2c287a","series":0,"name":"add","transplant":{"position":"org.grobid.core.visualization.BlockVisualizer:90","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.BasicStructureBuilder:1020","type":"CtIfImpl","sourcecode":"if ((bib.getRawBib()) != null) {\n    doc.getBibDataSets().add(bib);\n    bib = new org.grobid.core.data.BibDataSet();\n} "},"status":-2},{"failures":[],"tindex":"4de9c522-a53e-11e6-b8c8-e943c8c701ca","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.TEIFormatter:1996","type":"CtIfImpl","sourcecode":"if ((secondIndex - firstIndex) > maxExpend) {\n    break;\n} "},"variableMap":{"firstIndex":"end","secondIndex":"currentJournalPositions","maxExpend":"currentJournalPositions"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:329","type":"CtIfImpl","sourcecode":"if ((journalPositions.get(currentJournalPositions).int) < posit) {\n    skipTest = true;\n} "},"status":-2},{"failures":[],"tindex":"4de9ec33-a53e-11e6-b8c8-0fd559e46b17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3103","type":"CtAssignmentImpl","sourcecode":"ind = java.lang.String.indexOf(marker, from)"},"status":-2},{"failures":[],"tindex":"4de9ec34-a53e-11e6-b8c8-7967507620f9","series":0,"name":"replace","transplant":{"position":"org.grobid.core.mock.MockContext:114","type":"CtInvocationImpl","sourcecode":"java.lang.System.clearProperty(javax.naming.Context.javax.naming.Context.java.lang.String)"},"variableMap":{"javax.naming.Context.INITIAL_CONTEXT_FACTORY":"tei"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2627","type":"CtOperatorAssignmentImpl","sourcecode":"tei += (\"\\t\\t\\t<ptr target=\\\"#editor\" + ind) + \"\\\" />\\n\""},"status":-2},{"failures":[],"tindex":"4de9ec35-a53e-11e6-b8c8-ed81f2f60ac1","series":0,"name":"replace","transplant":{"position":"org.grobid.core.process.StreamGobbler:185","type":"CtReturnImpl","sourcecode":"return avail"},"variableMap":{"avail":"write_pos"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.process.StreamGobbler:159","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (boolean)\n        throw new java.io.IOException(\"This StreamGobbler is closed.\");\n    \n    while ((int) == (int)) {\n        if ((java.io.IOException) != null)\n            throw java.io.IOException;\n        \n        if (boolean)\n            return -1;\n        \n        try {\n            java.lang.Object.wait();\n        } catch (java.lang.InterruptedException e) {\n            wasInterrupted = true;\n        }\n    }\n    int int = (int) - (int);\n    avail = avail > len ? len : avail;\n    java.lang.System.arraycopy(byte[], int, b, off, avail);\n    int += avail;\n    return avail;\n}"},"status":-2},{"failures":[],"tindex":"4de9ec36-a53e-11e6-b8c8-7baabbc379d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.DocumentSource:272","type":"CtIfImpl","sourcecode":"if (cleanAnnotations) {\n    try {\n        if (pathToXml != null) {\n            java.io.File java.io.File = new java.io.File((pathToXml + \"_annot.xml\"));\n            if (fff.exists()) {\n                success = fff.delete();\n                if (!success) {\n                    throw new org.grobid.core.exceptions.GrobidResourceException(((\"Deletion of temporary annotation file failed for file '\" + (fff.getAbsolutePath())) + \"'\"));\n                } \n            } \n        } \n    } catch (java.lang.Exception e) {\n        if (e instanceof org.grobid.core.exceptions.GrobidResourceException) {\n            throw ((org.grobid.core.exceptions.GrobidResourceException)(e));\n        } else {\n            throw new org.grobid.core.exceptions.GrobidResourceException(((\"An exception occurred while deleting an XML file '\" + pathToXml) + \"'.\") , e);\n        }\n    }\n} "},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":44,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}