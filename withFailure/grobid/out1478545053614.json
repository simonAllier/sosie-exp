{"failureDictionary":{"org.grobid.core.test.TestHeaderParser.testHeaderHeader":3,"org.grobid.service.tests.GrobidRestServiceTest.testFullyRestLessHeaderDocument":0,"org.grobid.core.test.TestFullTextParser.testFullTextParser":2,"org.grobid.service.tests.GrobidRestServiceTest.testFullyRestLessFulltextDocument":1},"transformations":[{"failures":[],"tindex":"0a90fc7c-a51c-11e6-9b3e-911044063b7f","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:367","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.initializePaths()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.visualization.FigureTableVisualizer:288","type":"CtIfImpl","sourcecode":"if (visualizeGraphicObjects) {\n    int int = 10;\n    if ((teiDoc.getFigures()) != null) {\n        for (org.grobid.core.data.Figure org.grobid.core.data.Figure : teiDoc.getFigures()) {\n            if (f == null) {\n                continue;\n            } \n            i++;\n            java.util.List<org.grobid.core.layout.GraphicObject> java.util.List<org.grobid.core.layout.GraphicObject> = f.getBoxedGraphicObjects();\n            if ((f.getTextArea()) != null) {\n                for (org.grobid.core.layout.BoundingBox org.grobid.core.layout.BoundingBox : f.getTextArea()) {\n                    org.grobid.core.visualization.FigureTableVisualizer.org.grobid.core.visualization.FigureTableVisualizer.boolean = true;\n                    org.grobid.core.visualization.AnnotationUtil.annotatePage(document, b.toString(), i, (boxedGo == null ? 1 : 2));\n                }\n            } \n            if (boxedGo != null) {\n                for (org.grobid.core.layout.GraphicObject org.grobid.core.layout.GraphicObject : boxedGo) {\n                    org.grobid.core.visualization.FigureTableVisualizer.org.grobid.core.visualization.FigureTableVisualizer.boolean = true;\n                    org.grobid.core.visualization.AnnotationUtil.annotatePage(document, org.grobid.core.visualization.AnnotationUtil.getCoordString(go.getPage(), go.getX(), go.getY(), go.getWidth(), go.getHeight()), i, 2);\n                }\n            } \n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"0a91238d-a51c-11e6-9b3e-69866a51aaa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:2666","type":"CtIfImpl","sourcecode":"if ((bs.getMeetings()) != null)\n    ind = bs.getMeetings().indexOf(meetStr);\n"},"status":0},{"failures":[0,1],"tindex":"0a91238e-a51c-11e6-9b3e-055e3094ce72","series":0,"name":"add","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:356","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.setContextExecutionServer(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:1105","type":"CtIfImpl","sourcecode":"if ((bufferAffiliation.charAt(((bufferAffiliation.length()) - 1))) == '\\n') {\n    bufferAffiliation.deleteCharAt(((bufferAffiliation.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"0a91238f-a51c-11e6-9b3e-712d581fbf1d","series":0,"name":"add","transplant":{"position":"org.grobid.core.main.LibraryLoader:129","type":"CtInvocationImpl","sourcecode":"org.grobid.core.mock.MockContext.setInitialContext()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.counters.impl.CounterImpl:36","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicLong.set(val)"},"status":-2},{"failures":[2,3],"tindex":"0a912390-a51c-11e6-9b3e-152992fcac8b","series":0,"name":"add","transplant":{"position":"org.grobid.core.main.LibraryLoader:73","type":"CtInvocationImpl","sourcecode":"java.lang.System.load(libPath)"},"variableMap":{"libPath":"localText"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:1128","type":"CtIfImpl","sourcecode":"if ((localText == null) || (localText.startsWith(\"@\"))) {\n    accumulated.append(\"\\n\");\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"0a912391-a51c-11e6-9b3e-bf9277c82226","series":0,"name":"replace","transplant":{"position":"org.grobid.core.sax.MarecSaxParser:337","type":"CtIfImpl","sourcecode":"if (name != null) {\n    if (name.equals(\"lang\")) {\n    } \n    if (name.equals(\"doc-number\")) {\n        java.lang.String = \"EP\" + value;\n    } \n    if (name.equals(\"kind\")) {\n        java.lang.String = value;\n    } \n    if (name.equals(\"date\")) {\n        java.lang.String = value;\n    } \n} "},"variableMap":{"PatentNumber":"qName","name":"qName","CodeType":"qName","PublicDate":"qName","value":"qName"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.sax.PDF2XMLAnnotationSaxHandler:99","type":"CtIfImpl","sourcecode":"if (qName.equals(\"ANNOTATION\")) {\n    int int = atts.getLength();\n    for (int int = 0 ; i < length ; i++) {\n        java.lang.String java.lang.String = atts.getQName(i);\n        java.lang.String java.lang.String = atts.getValue(i);\n        if ((name != null) && (value != null)) {\n            if (name.equals(\"subtype\")) {\n                if (value.equals(\"Link\")) {\n                    org.grobid.core.layout.PDFAnnotation = new org.grobid.core.layout.PDFAnnotation();\n                } \n            } else if (name.equals(\"pagenum\")) {\n                int int = -1;\n                try {\n                    page = java.lang.Integer.parseInt(value);\n                } catch (java.lang.Exception e) {\n                    org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.slf4j.Logger.error((\"The page number attribute for PDF annotation is not a valid integer: \" + value));\n                }\n                if (page != (-1))\n                    org.grobid.core.layout.PDFAnnotation.setPageNumber(page);\n                \n            } \n        } \n    }\n} else if ((qName.equals(\"ACTION\")) && ((org.grobid.core.layout.PDFAnnotation) != null)) {\n    int int = atts.getLength();\n    for (int int = 0 ; i < length ; i++) {\n        java.lang.String java.lang.String = atts.getQName(i);\n        java.lang.String java.lang.String = atts.getValue(i);\n        if ((name != null) && (value != null)) {\n            if (name.equals(\"type\")) {\n                if (value.equals(\"URI\")) {\n                    org.grobid.core.layout.PDFAnnotation.setType(org.grobid.core.layout.PDFAnnotation.Type.org.grobid.core.layout.PDFAnnotation.Type.org.grobid.core.layout.PDFAnnotation.Type);\n                } else if (value.equals(\"GoTo\")) {\n                    org.grobid.core.layout.PDFAnnotation.setType(org.grobid.core.layout.PDFAnnotation.Type.org.grobid.core.layout.PDFAnnotation.Type.org.grobid.core.layout.PDFAnnotation.Type);\n                } else {\n                    org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.slf4j.Logger.info((\"the link annotation type is not recognized: \" + value));\n                    org.grobid.core.layout.PDFAnnotation.setType(org.grobid.core.layout.PDFAnnotation.Type.org.grobid.core.layout.PDFAnnotation.Type.org.grobid.core.layout.PDFAnnotation.Type);\n                }\n            } \n        } \n    }\n} else if ((qName.equals(\"POINT\")) && ((org.grobid.core.layout.PDFAnnotation) != null)) {\n    int int = atts.getLength();\n    for (int int = 0 ; i < length ; i++) {\n        java.lang.String java.lang.String = atts.getQName(i);\n        java.lang.String java.lang.String = atts.getValue(i);\n        if ((name != null) && (value != null)) {\n            if (name.equals(\"x\")) {\n                double double = -1.0;\n                try {\n                    val = java.lang.Double.parseDouble(value);\n                } catch (java.lang.Exception e) {\n                    org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.slf4j.Logger.error((\"The value for x coordinate attribute is not a valid double: \" + value));\n                }\n                if (val != (-1.0))\n                    java.util.List<java.lang.Double>.add(val);\n                \n            } else if (name.equals(\"y\")) {\n                double double = -1.0;\n                try {\n                    val = java.lang.Double.parseDouble(value);\n                } catch (java.lang.Exception e) {\n                    org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.grobid.core.sax.PDF2XMLAnnotationSaxHandler.org.slf4j.Logger.error((\"The value for y coordinate attribute is not a valid double: \" + value));\n                }\n                if (val != (-1.0))\n                    java.util.List<java.lang.Double>.add(val);\n                \n            } \n        } \n    }\n} else if ((qName.equals(\"QUADRILATERAL\")) && ((org.grobid.core.layout.PDFAnnotation) != null)) {\n    java.util.List<java.lang.Double> = new java.util.ArrayList<java.lang.Double>();\n    java.util.List<java.lang.Double> = new java.util.ArrayList<java.lang.Double>();\n} "},"status":-2},{"failures":[],"tindex":"0a914aa2-a51c-11e6-9b3e-593a2bdaf508","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.document.Document:475","type":"CtForEachImpl","sourcecode":"for (java.lang.Integer java.lang.Integer : keys) {\n    java.util.Collection<org.grobid.core.layout.GraphicObject> java.util.Collection<org.grobid.core.layout.GraphicObject> = com.google.common.collect.Multimap<java.lang.Integer, org.grobid.core.layout.GraphicObject>.get(pageNum);\n    if ((elements.size()) > 10) {\n        com.google.common.collect.Multimap<java.lang.Integer, org.grobid.core.layout.GraphicObject>.removeAll(pageNum);\n        org.grobid.core.engines.Engine.getCntManager().i(org.grobid.core.data.Figure.Counters.org.grobid.core.data.Figure.Counters.org.grobid.core.data.Figure.Counters);\n    } else {\n        java.util.ArrayList<org.grobid.core.layout.GraphicObject> java.util.ArrayList<org.grobid.core.layout.GraphicObject> = glueImagesIfNecessary(pageNum, com.google.common.collect.Lists.newArrayList(elements));\n        if (res != null) {\n            com.google.common.collect.Multimap<java.lang.Integer, org.grobid.core.layout.GraphicObject>.removeAll(pageNum);\n            com.google.common.collect.Multimap<java.lang.Integer, org.grobid.core.layout.GraphicObject>.putAll(pageNum, res);\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"0a914aa3-a51c-11e6-9b3e-c5b32809d1c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:233","type":"CtAssignmentImpl","sourcecode":"expression = \"\""},"status":0}],"header":{"groupId":"org.grobid","transformationCount":8,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}