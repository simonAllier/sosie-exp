{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1b95f163-a535-11e6-b6f0-8b254606dd81","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.Date:204","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"<date>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AuthorParser:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[],"tindex":"1b963f84-a535-11e6-b6f0-055428023df0","series":0,"name":"add","transplant":{"position":"org.grobid.core.analyzers.GrobidFilterDeleteSpaceBetweenSameAlphabet:87","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.FullTextParser:247","type":"CtLocalVariableImpl","sourcecode":"int int = block.getPage().getNumber()"},"status":-2},{"failures":[],"tindex":"1b963f85-a535-11e6-b6f0-6ba42423e779","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:968","type":"CtInvocationImpl","sourcecode":"provisionals.set(i, new java.lang.Boolean(false))"},"status":0},{"failures":[],"tindex":"1b963f86-a535-11e6-b6f0-97b5c21244fe","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1596","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    bibtex += (\",\\njournal\\t=\\t\\\"\" + (java.lang.String)) + \"\\\"\";\n} "},"variableMap":{"journal":"year","bibtex":"year"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.PatentRefParser:857","type":"CtIfImpl","sourcecode":"if (numb < 140321)\n    year = \"1987\";\nelse if (numb < 292671)\n    year = \"1988\";\nelse if (numb < 459413)\n    year = \"1989\";\nelse if (numb < 636609)\n    year = \"1990\";\nelse if (numb < 815501)\n    year = \"1991\";\nelse\n    year = \"1992\";\n"},"status":-2},{"failures":[],"tindex":"1b963f87-a535-11e6-b6f0-bd3168d67ef5","series":0,"name":"add","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:359","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.getProps().load(new java.io.FileInputStream(org.grobid.core.utilities.GrobidProperties.getGrobidPropertiesPath()))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.LayoutTokensUtil:30","type":"CtWhileImpl","sourcecode":"while (tokens.hasNext()) {\n    org.grobid.core.layout.LayoutToken org.grobid.core.layout.LayoutToken = tokens.next();\n    if ((tokens.hasNext()) && (tokens.peek().getText().equals(\"\\n\"))) {\n        curToken.setNewLineAfter(true);\n    } \n    if (curToken.getText().equals(\"\\n\")) {\n        curToken.setText(\" \");\n    } \n}"},"status":-2},{"failures":[],"tindex":"1b966698-a535-11e6-b6f0-43d611fe8d33","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:1200","type":"CtReturnImpl","sourcecode":"return isInRange"},"variableMap":{"isInRange":"success"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.Utilities:72","type":"CtIfImpl","sourcecode":"if (!success) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"1b966699-a535-11e6-b6f0-591a8d4b8d82","series":0,"name":"replace","transplant":{"position":"org.grobid.core.utilities.GrobidProperties:913","type":"CtOperatorAssignmentImpl","sourcecode":"content += line + \"\\r\\n\""},"variableMap":{"line":"digit","content":"digit"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorHeader:435","type":"CtAssignmentImpl","sourcecode":"features.java.lang.String = \"CONTAINSDIGITS\""},"status":-2},{"failures":[],"tindex":"1b96669a-a535-11e6-b6f0-45310ad9919a","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.DocumentSource:83","type":"CtReturnImpl","sourcecode":"return pdf2xml"},"variableMap":{"pdf2xml":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.patent.ReferenceExtractor:809","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"failures":[],"tindex":"1b968dab-a535-11e6-b6f0-e518263c035d","series":0,"name":"replace","transplant":{"position":"org.grobid.core.data.BiblioItem:1623","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    bibtex += (\",\\naddress\\t=\\t\\\"\" + (java.lang.String)) + \"\\\"\";\n} "},"variableMap":{"location":"org.grobid.core.utilities.GrobidPropertyKeys.PROP_PROXY_PORT","bibtex":"org.grobid.core.utilities.GrobidPropertyKeys.PROP_PROXY_PORT"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.utilities.GrobidProperties:591","type":"CtInvocationImpl","sourcecode":"org.grobid.core.utilities.GrobidProperties.setPropertyValue(org.grobid.core.utilities.GrobidPropertyKeys.org.grobid.core.utilities.GrobidPropertyKeys.java.lang.String, port)"},"status":-2},{"failures":[],"tindex":"1b968dac-a535-11e6-b6f0-0502b6ac485e","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.ebook.BookStructureParser:167","type":"CtAssignmentImpl","sourcecode":"mm = 0"},"variableMap":{"mm":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.Segmentation:765","type":"CtUnaryOperatorImpl","sourcecode":"i++"},"status":-2},{"failures":[],"tindex":"1b968dad-a535-11e6-b6f0-2bc58bc75f3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.main.batch.GrobidMainArgs:160","type":"CtAssignmentImpl","sourcecode":"boolean = pRecursive"},"status":-2},{"failures":[],"tindex":"1b968dae-a535-11e6-b6f0-5f3358af71d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.mock.MockContext:44","type":"CtInvocationImpl","sourcecode":"ic.bind((\"java:comp/env/\" + (org.grobid.core.utilities.GrobidPropertyKeys.org.grobid.core.utilities.GrobidPropertyKeys.java.lang.String)), org.grobid.core.mock.MockContext.org.grobid.core.mock.MockContext.java.lang.String)"},"status":-2},{"failures":[],"tindex":"1b96b4bf-a535-11e6-b6f0-f9f25c5742ad","series":0,"name":"replace","transplant":{"position":"org.grobid.core.engines.HeaderParser:974","type":"CtIfImpl","sourcecode":"if (bufferName != null) {\n    if ((bufferName.length()) > 0) {\n        java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(new java.io.FileOutputStream(new java.io.File(((pathTEI + (java.io.File.java.io.File.java.lang.String)) + (pdfFileName.replace(\".pdf\", \".authors.tei.xml\")))) , false) , \"UTF-8\");\n        writerName.write(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");\n        writerName.write((\"\\n<tei xmlns=\\\"http://www.tei-c.org/ns/1.0\\\"\" + (\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" \" + \"xmlns:mml=\\\"http://www.w3.org/1998/Math/MathML\\\">\")));\n        writerName.write(\"\\n\\t<teiHeader>\\n\\t\\t<fileDesc>\\n\\t\\t\\t<sourceDesc>\");\n        writerName.write(\"\\n\\t\\t\\t\\t<biblStruct>\\n\\t\\t\\t\\t\\t<analytic>\\n\\n\\t\\t\\t\\t\\t\\t<author>\");\n        writerName.write(\"\\n\\t\\t\\t\\t\\t\\t\\t<persName>\\n\");\n        writerName.write(bufferName.toString());\n        writerName.write(\"\\t\\t\\t\\t\\t\\t\\t<\/persName>\\n\");\n        writerName.write(\"\\t\\t\\t\\t\\t\\t<\/author>\\n\\n\\t\\t\\t\\t\\t<\/analytic>\");\n        writerName.write(\"\\n\\t\\t\\t\\t<\/biblStruct>\\n\\t\\t\\t<\/sourceDesc>\\n\\t\\t<\/fileDesc>\");\n        writerName.write(\"\\n\\t<\/teiHeader>\\n<\/tei>\\n\");\n        writerName.close();\n    } \n} "},"variableMap":{"pathTEI":"lastTag0","bufferName":"buffer","java.io.File.separator":"currentTag0","pdfFileName":"lastTag"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.CitationParser:559","type":"CtWhileImpl","sourcecode":"while (st2.hasMoreTokens()) {\n    java.lang.String java.lang.String = st2.nextToken();\n    addSpace = false;\n    if ((line.trim().length()) == 0) {\n        buffer.append(\"/t<bibl>\\n\");\n        continue;\n    } else {\n        java.lang.String java.lang.String = tokenizations.get(q);\n        while (theTok.equals(\" \")) {\n            addSpace = true;\n            q++;\n            theTok = tokenizations.get(q);\n        }\n        q++;\n    }\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line , \"\\t\");\n    int int = st3.countTokens();\n    int int = 0;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    while (st3.hasMoreTokens()) {\n        java.lang.String java.lang.String = st3.nextToken().trim();\n        if (i == 0) {\n            s2 = org.grobid.core.utilities.TextUtilities.HTMLEncode(s);\n        } else if (i == (ll - 1)) {\n            s1 = s;\n        } \n        i++;\n    }\n    if (start && (s1 != null)) {\n        buffer.append(\"\\t<bibl>\");\n        start = false;\n    } \n    lastTag0 = null;\n    if (lastTag != null) {\n        if (lastTag.startsWith(\"I-\")) {\n            lastTag0 = lastTag.substring(2, lastTag.length());\n        } else {\n            lastTag0 = lastTag;\n        }\n    } \n    if (s1 != null) {\n        if (s1.startsWith(\"I-\")) {\n            currentTag0 = s1.substring(2, s1.length());\n        } else {\n            currentTag0 = s1;\n        }\n    } \n    if ((lastTag0 != null) && (currentTag0 != null))\n        testClosingTag(buffer, currentTag0, lastTag0);\n    \n    java.lang.String java.lang.String = writeField(s1, lastTag0, s2, \"<title>\", \"<title level=\\\"a\\\">\", addSpace, 0);\n    if (output != null) {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    } else {\n        output = writeField(s1, lastTag0, s2, \"<other>\", \"\", addSpace, 0);\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<author>\", \"<author>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<journal>\", \"<title level=\\\"j\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<date>\", \"<date>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<booktitle>\", \"<title level=\\\"m\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<volume>\", \"<biblScope unit=\\\"volume\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<publisher>\", \"<publisher>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<location>\", \"<pubPlace>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<editor>\", \"<editor>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<pages>\", \"<biblScope unit=\\\"page\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<tech>\", \"<note type=\\\"report\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<issue>\", \"<biblScope unit=\\\"issue\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<pubnum>\", \"<idno>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<web>\", \"<ptr type=\\\"web\\\">\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<note>\", \"<note>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output == null) {\n        output = writeField(s1, lastTag0, s2, \"<institution>\", \"<orgName>\", addSpace, 0);\n    } else {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    }\n    if (output != null) {\n        buffer.append(output);\n        lastTag = s1;\n        continue;\n    } \n    lastTag = s1;\n}"},"status":-2},{"failures":[],"tindex":"1b96dbd0-a535-11e6-b6f0-75ef03fbaa1b","series":0,"name":"replace","transplant":{"position":"org.grobid.core.main.LibraryLoader:104","type":"CtInvocationImpl","sourcecode":"org.grobid.core.mock.MockContext.destroyInitialContext()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.engines.AffiliationAddressParser:367","type":"CtIfImpl","sourcecode":"if (currentMarker != null)\n    aff.setMarker(currentMarker.trim());\n"},"status":-2},{"failures":[],"tindex":"1b9702e1-a535-11e6-b6f0-59c67749c06e","series":0,"name":"add","transplant":{"position":"org.grobid.core.engines.TableParser:359","type":"CtInvocationImpl","sourcecode":"sb.append((((((\"<tei>\\n\" + (\"    <teiHeader>\\n\" + \"        <fileDesc xml:id=\\\"_\")) + id) + \"\\\"/>\\n\") + \"    <\/teiHeader>\\n\") + \"    <text xml:lang=\\\"en\\\">\\n\"))"},"variableMap":{"id":"string","sb":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorCitation:64","type":"CtInvocationImpl","sourcecode":"res.append((\" \" + (org.grobid.core.utilities.TextUtilities.prefix(java.lang.String, 2))))"},"status":-2},{"failures":[],"tindex":"1b9702e2-a535-11e6-b6f0-09629932a27a","series":0,"name":"replace","transplant":{"position":"org.grobid.core.document.PatentDocument:36","type":"CtAssignmentImpl","sourcecode":"int = begin"},"variableMap":{"beginBlockPAReport":"autRank","begin":"autRank"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.data.BiblioItem:3444","type":"CtUnaryOperatorImpl","sourcecode":"autRank++"},"status":-2},{"failures":[],"tindex":"1b9702e3-a535-11e6-b6f0-7f15376d8f0e","series":0,"name":"replace","transplant":{"position":"org.grobid.core.features.FeaturesVectorAffiliationAddress:142","type":"CtInvocationImpl","sourcecode":"result.append(\"\\n \\n\")"},"variableMap":{"result":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.grobid.core.features.FeaturesVectorAffiliationAddress:53","type":"CtInvocationImpl","sourcecode":"res.append((\" \" + (org.grobid.core.utilities.TextUtilities.suffix(java.lang.String, 2))))"},"status":-2}],"header":{"groupId":"org.grobid","transformationCount":17,"projectType":"maven","artifactId":"grobid-parent","generatorVersion":"1.0","version":"0.4.2-SNAPSHOT"}}