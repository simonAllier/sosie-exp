{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":103,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":93,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":30,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":44,"org.apache.commons.codec.language.NysiisTest.testSnat":83,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":111,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":110,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":66,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":45,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":71,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":12,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":49,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":56,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":105,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":59,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":43,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":119,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":6,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":14,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":8,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":90,"org.apache.commons.codec.language.NysiisTest.testCap":72,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":124,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":28,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":114,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":24,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":125,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":50,"org.apache.commons.codec.binary.HexTest.testEncodeClassCastException":69,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":94,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":63,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":41,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":109,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":38,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":115,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":19,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":9,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":31,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":10,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":113,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":32,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":100,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":108,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":118,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":3,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":60,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":65,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":46,"org.apache.commons.codec.language.NysiisTest.testTranan":87,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":61,"org.apache.commons.codec.language.NysiisTest.testFal":75,"org.apache.commons.codec.language.NysiisTest.testSnad":82,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":96,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":117,"org.apache.commons.codec.net.RFC1522CodecTest.testNullInput":42,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":91,"org.apache.commons.codec.language.MetaphoneTest.testTCH":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":47,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":52,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":92,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":23,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":7,"org.apache.commons.codec.language.NysiisTest.testDropBy":85,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":112,"org.apache.commons.codec.binary.Base64Test.testBase64":5,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":58,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":48,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":51,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":35,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":95,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":16,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":57,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":64,"org.apache.commons.codec.language.NysiisTest.testRule2":77,"org.apache.commons.codec.language.NysiisTest.testRule1":76,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":15,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":29,"org.apache.commons.codec.language.NysiisTest.testRule7":80,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":40,"org.apache.commons.codec.language.NysiisTest.testRule6":79,"org.apache.commons.codec.language.NysiisTest.testRule5":78,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":104,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":116,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":120,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":2,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":84,"org.apache.commons.codec.language.NysiisTest.testBran":81,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":88,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":68,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":97,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":20,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":102,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":98,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":121,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":25,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":123,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":67,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":107,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":18,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":17,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":39,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":54,"org.apache.commons.codec.language.NysiisTest.testDad":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":11,"org.apache.commons.codec.language.NysiisTest.testOthers":86,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":4,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":53,"org.apache.commons.codec.language.SoundexTest.testDifference":101,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":70,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":21,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":106,"org.apache.commons.codec.language.NysiisTest.testDan":74,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":122,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":34,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"31e43955-3da4-11e6-a633-ade9b7f5f833","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:540","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-2},{"failures":[],"tindex":"31e46066-3da4-11e6-a633-63e7e8b82293","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"failures":[],"tindex":"31e46067-3da4-11e6-a633-690fef6323c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-2},{"failures":[],"tindex":"31e46068-3da4-11e6-a633-ef1d616b0a73","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:294","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len)"},"variableMap":{"b":"buffer","len":"length","context":"context","buffer":"lineSeparator","readPos":"pos","bPos":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:393","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"31e46069-3da4-11e6-a633-e7a13e31a496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"variableMap":{"inMultilineComment":"hasUnderscores"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"status":-2},{"failures":[0,1],"tindex":"31e4606a-3da4-11e6-a633-d7b1a05a7f64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)"},"variableMap":{"left":"left","right":"right","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)"},"status":-1},{"failures":[],"tindex":"31e4877b-3da4-11e6-a633-a9f83136fa7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:99","type":"CtIfImpl","sourcecode":"if (txtLength == 1) {\n    return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":-2},{"failures":[],"tindex":"31e4877c-3da4-11e6-a633-b1ff2427c093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:234","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(rulesIS , org.apache.commons.codec.CharEncoding.org.apache.commons.codec.CharEncoding.java.lang.String)"},"variableMap":{"org.apache.commons.codec.CharEncoding.UTF_8":"org.apache.commons.codec.language.bm.ResourceConstants.ENCODING","rulesIS":"langIS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:178","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(langIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"31e4877d-3da4-11e6-a633-2dd0a6c51ac3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"31e4877e-3da4-11e6-a633-c9c11e8e2998","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"variableMap":{"ibitWorkArea":"offset","pos":"length","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"len","context":"context","buffer":"b","modulus":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:85","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":-2},{"failures":[19],"tindex":"31e4877f-3da4-11e6-a633-d3a827d1ee56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:134","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine = new org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getNameType() , org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType() , concat , org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes())"},"status":-1},{"failures":[],"tindex":"31e48780-3da4-11e6-a633-b10d2664a8ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l$\", \"3\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"status":-2},{"failures":[],"tindex":"31e4ae91-3da4-11e6-a633-c5fe6be7e8a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"status":0},{"failures":[],"tindex":"31e4ae92-3da4-11e6-a633-b3f8cd89408c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"this":"result","primary":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"31e4ae93-3da4-11e6-a633-0344043cd297","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:108","type":"CtSwitchImpl","sourcecode":"switch (inwd[0]) {\n    case 'K' :\n    case 'G' :\n    case 'P' :\n        if ((inwd[1]) == 'N') {\n            local.append(inwd, 1, ((inwd.int) - 1));\n        } else {\n            local.append(inwd);\n        }\n        break;\n    case 'A' :\n        if ((inwd[1]) == 'E') {\n            local.append(inwd, 1, ((inwd.int) - 1));\n        } else {\n            local.append(inwd);\n        }\n        break;\n    case 'W' :\n        if ((inwd[1]) == 'R') {\n            local.append(inwd, 1, ((inwd.int) - 1));\n            break;\n        } \n        if ((inwd[1]) == 'H') {\n            local.append(inwd, 1, ((inwd.int) - 1));\n            local.setCharAt(0, 'W');\n        } else {\n            local.append(inwd);\n        }\n        break;\n    case 'X' :\n        inwd[0] = 'S';\n        local.append(inwd);\n        break;\n    default :\n        local.append(inwd);\n}"},"status":-1},{"failures":[34,35,36],"tindex":"31e4ae94-3da4-11e6-a633-d17872ce862b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:346","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[37,38,39],"tindex":"31e4ae95-3da4-11e6-a633-3b9293a35dbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"status":-1},{"failures":[],"tindex":"31e4ae96-3da4-11e6-a633-0d217c4def2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"org.apache.commons.codec.language.bm.RuleType.RULES","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:213","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    final java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> = new java.util.EnumMap<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.java.lang.Class);\n    for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n        final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n        final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n        for (final java.lang.String java.lang.String : ls.getLanguages()) {\n            try {\n                rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n            } catch (final java.lang.IllegalStateException e) {\n                throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n            }\n        }\n        if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n            rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n        } \n        rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n    }\n    org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(s, java.util.Collections.unmodifiableMap(rts));\n}"},"status":-2},{"failures":[40,41],"tindex":"31e4d5a7-3da4-11e6-a633-37b08579bfc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:297","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"31e4d5a8-3da4-11e6-a633-03dd6e1f7c71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)"},"variableMap":{"binaryData":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"31e4d5a9-3da4-11e6-a633-e1cea36b17dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[],"tindex":"31e4d5aa-3da4-11e6-a633-754ee47528eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"pos","len":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:343","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[42],"tindex":"31e4d5ab-3da4-11e6-a633-fd68da4c2376","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:105","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[7],"tindex":"31e4fcbc-3da4-11e6-a633-8b8461c195a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(raw))"},"variableMap":{"raw":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":-1},{"failures":[],"tindex":"31e4fcbd-3da4-11e6-a633-019fd12e1424","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} "},"status":-2},{"failures":[13,14,43,44,45,15,16,46,18,47,48,49],"tindex":"31e4fcbe-3da4-11e6-a633-ad6514e29dc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:500","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    int int = in[(inPos++)];\n    if (b < 0) {\n        b += 256;\n    } \n    context.long = ((context.long) << 8) + b;\n    if (0 == (context.int)) {\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n        if (((int) > 0) && ((int) <= (context.int))) {\n            java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n            context.int += byte[].int;\n            context.int = 0;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"31e4fcbf-3da4-11e6-a633-d55c56279a53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:444","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b]"},"status":-2},{"failures":[],"tindex":"31e4fcc0-3da4-11e6-a633-1f812c30dd73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"b","minRating":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:330","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-2},{"failures":[],"tindex":"31e4fcc1-3da4-11e6-a633-17b1bb43450d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:153","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(text.substring(from, to))"},"status":-2},{"failures":[],"tindex":"31e4fcc2-3da4-11e6-a633-b7100e5b68ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[50,51],"tindex":"31e4fcc3-3da4-11e6-a633-89669c4675be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":-1},{"failures":[52,53,54,55,56],"tindex":"31e4fcc4-3da4-11e6-a633-b9b263e1b018","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[36],"tindex":"31e4fcc5-3da4-11e6-a633-57255869f139","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"31e523d6-3da4-11e6-a633-2d7c59f4fa2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:212","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = rule.getPattern()"},"status":-2},{"failures":[],"tindex":"31e523d7-3da4-11e6-a633-735d0d4da4fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:230","type":"CtLocalVariableImpl","sourcecode":"final int int = ch - 'A'"},"variableMap":{"ch":"org.apache.commons.codec.net.RFC1522Codec.SEP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:134","type":"CtLocalVariableImpl","sourcecode":"int int = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-2},{"failures":[57,58,59,60,61,62,63,64,40,65,41,66,67,68],"tindex":"31e523d8-3da4-11e6-a633-5df1dd5d9a19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"b","org.apache.commons.codec.net.URLCodec.RADIX":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-1},{"failures":[34,35,36],"tindex":"31e523d9-3da4-11e6-a633-398ba856598a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:678","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"31e523da-3da4-11e6-a633-6b085f053def","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"variableMap":{"ascii":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"status":-2},{"failures":[],"tindex":"31e523db-3da4-11e6-a633-5b61da767e4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:533","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"31e523dc-3da4-11e6-a633-7565eb9e4e9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:310","type":"CtAssignmentImpl","sourcecode":"right = results[1]"},"status":-2},{"failures":[],"tindex":"31e523dd-3da4-11e6-a633-577ff0510985","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:137","type":"CtReturnImpl","sourcecode":"return soundex(((java.lang.String)(obj)))"},"status":-2},{"failures":[69],"tindex":"31e523de-3da4-11e6-a633-e9babdcbe075","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-1},{"failures":[],"tindex":"31e523df-3da4-11e6-a633-7fb804a45ec4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[],"tindex":"31e523e0-3da4-11e6-a633-5b02b03de5be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return value < 0 ? value + 256 : value"},"variableMap":{"value":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:337","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())))"},"status":-2},{"failures":[],"tindex":"31e523e1-3da4-11e6-a633-c92af97112cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"original","key":"original"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:263","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[],"tindex":"31e54af2-3da4-11e6-a633-ef4388c56c7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:296","type":"CtIfImpl","sourcecode":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} "},"variableMap":{"lastChar":"value","key":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:963","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} "},"status":-2},{"failures":[],"tindex":"31e54af3-3da4-11e6-a633-8fc848d20197","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"31e54af4-3da4-11e6-a633-5b3e4b260adb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:467","type":"CtInvocationImpl","sourcecode":"sb.append(\", rcon='\").append(rCon).append('\\'')"},"variableMap":{"rCon":"str","sb":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"31e54af5-3da4-11e6-a633-f166a56fc16e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":0},{"failures":[89,90,91,92],"tindex":"31e54af6-3da4-11e6-a633-09f04f1ce0ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[34,35,93],"tindex":"31e54af7-3da4-11e6-a633-f376db3fadd0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[94,95,96,97,98,99,100],"tindex":"31e54af8-3da4-11e6-a633-53e2d493040a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[101,102],"tindex":"31e54af9-3da4-11e6-a633-f9fca19caab2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:263","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":-1},{"failures":[],"tindex":"31e54afa-3da4-11e6-a633-b15eb4ab1e5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"variableMap":{"e":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:378","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[0,1],"tindex":"31e54afb-3da4-11e6-a633-0dc0613267e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"status":-1},{"failures":[46,103,18,47,48,49],"tindex":"31e54afc-3da4-11e6-a633-f9e673381650","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:354","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base32.this.byte[][b]"},"status":-1},{"failures":[104,105],"tindex":"31e54afd-3da4-11e6-a633-a774ae465707","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"status":-1},{"failures":[52,53,54,55,56],"tindex":"31e54afe-3da4-11e6-a633-2703e1fa2791","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"status":-1},{"failures":[34,106,36,93],"tindex":"31e5720f-3da4-11e6-a633-e312c79310e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:637","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[52,53,54,55,56,37,38,39],"tindex":"31e57210-3da4-11e6-a633-93d73c2258f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"variableMap":{"messageDigest":"altCtx","valueToDigest":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"31e57211-3da4-11e6-a633-2d84ef24648d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":0},{"failures":[36],"tindex":"31e57212-3da4-11e6-a633-0911393ba187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"index","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[107,108,109,110,111,112],"tindex":"31e57213-3da4-11e6-a633-b94e257f90ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:466","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : branches) {\n    sb.append(branch);\n    if ((++index) < (branches.int)) {\n        sb.append('|');\n    } \n}"},"status":-1},{"failures":[113],"tindex":"31e57214-3da4-11e6-a633-0f6710a82acb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"31e57215-3da4-11e6-a633-777a370072f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:181","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bytes.int]"},"status":-2},{"failures":[114,115,52,53,54,116,55,56,37,38,39,117],"tindex":"31e57216-3da4-11e6-a633-b3699a3a0b7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:260","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":-1},{"failures":[],"tindex":"31e57217-3da4-11e6-a633-076dd49a9749","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bitlen / 8]"},"variableMap":{"bitlen":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"status":-2},{"failures":[],"tindex":"31e57218-3da4-11e6-a633-bb7cd3657328","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>)"},"status":0},{"failures":[118,119],"tindex":"31e57219-3da4-11e6-a633-0f1e7d9f7de3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[],"tindex":"31e5721a-3da4-11e6-a633-2588be7d0f70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-2},{"failures":[],"tindex":"31e5992b-3da4-11e6-a633-1fb148dc864e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"variableMap":{"i":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-2},{"failures":[79,80,85],"tindex":"31e5992c-3da4-11e6-a633-817271d5a2fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:298","type":"CtAssignmentImpl","sourcecode":"lastChar = key.charAt(((key.length()) - 1))"},"status":-1},{"failures":[24,120],"tindex":"31e5992d-3da4-11e6-a633-f1559e5be4be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[],"tindex":"31e5992e-3da4-11e6-a633-abda6b74bc34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"alternate","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[34,35,93],"tindex":"31e5992f-3da4-11e6-a633-178f57ab17a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[121,122,123],"tindex":"31e59930-3da4-11e6-a633-a79a0da2d750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())"},"status":-1},{"failures":[],"tindex":"31e59931-3da4-11e6-a633-cd94ce85eb18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"status":-2},{"failures":[],"tindex":"31e59932-3da4-11e6-a633-75959e31dbeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[],"tindex":"31e59933-3da4-11e6-a633-a9f8c1b49faf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"salt","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:146","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[34,35,93],"tindex":"31e59934-3da4-11e6-a633-a5721e319d17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[52,53,54,55,56,37,38,39],"tindex":"31e59935-3da4-11e6-a633-6ddef19f42a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}"},"status":-1},{"failures":[],"tindex":"31e59936-3da4-11e6-a633-370ab622b75f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"maxLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:979","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int) - (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length())"},"status":-2},{"failures":[],"tindex":"31e59937-3da4-11e6-a633-a3486b7707df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"variableMap":{"messageDigest":"altCtx","valueToDigest":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-2},{"failures":[34,35,36],"tindex":"31e59938-3da4-11e6-a633-d994eb5edc98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:455","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"31e5c049-3da4-11e6-a633-a9f8e6d03f02","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"variableMap":{"code":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"status":0},{"failures":[],"tindex":"31e5c04a-3da4-11e6-a633-6b206bc4e786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:273","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"variableMap":{"str":"str","charset":"str","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:247","type":"CtTryImpl","sourcecode":"try {\n    return encode(str, getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"31e5c04b-3da4-11e6-a633-a711364b77e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[124,125],"tindex":"31e5c04c-3da4-11e6-a633-3de7337a8455","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"code = '2'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:363","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[],"tindex":"31e5c04d-3da4-11e6-a633-dfa6728a86fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[34,35,36],"tindex":"31e5c04e-3da4-11e6-a633-0f1b6bbb96b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"status":-1},{"failures":[52,53,54,55,56,37,38,39],"tindex":"31e5c04f-3da4-11e6-a633-a17263ab10b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[13,14,43,44,126,45,15,16,46,18,47,48,49],"tindex":"31e5c050-3da4-11e6-a633-1f36551a8e8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[context.int]"},"variableMap":{"pos":"encodeSize","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:445","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"31e5c051-3da4-11e6-a633-234cb1ebc0a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:963","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} "},"variableMap":{"alternate":"code","value":"symb","maxLength":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:265","type":"CtIfImpl","sourcecode":"if (!(isPreviousChar(local, n, 'C'))) {\n    code.append(symb);\n} "},"status":-2},{"failures":[34,35],"tindex":"31e5c052-3da4-11e6-a633-6571fe96c00f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[],"tindex":"31e5c053-3da4-11e6-a633-171c7070ced1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:249","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"31e5c054-3da4-11e6-a633-e9646d6d0e5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"31e5c055-3da4-11e6-a633-c99cc1bbe1e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:445","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[],"tindex":"31e5c056-3da4-11e6-a633-019d13e5eb81","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"b","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"b","rounds":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"status":-2},{"failures":[],"tindex":"31e5c057-3da4-11e6-a633-d36191560bb8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"status":-2},{"failures":[52,53,54,55,56],"tindex":"31e5c058-3da4-11e6-a633-31069db5082c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}