{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":169,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":100,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":96,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":179,"org.apache.commons.codec.language.NysiisTest.testSnat":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":180,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":60,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":17,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":15,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":16,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":37,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":85,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":18,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":103,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":151,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":150,"org.apache.commons.codec.binary.Base64Test.testTriplets":114,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":173,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":188,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":6,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":59,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":111,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":7,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":160,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData":67,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":129,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":140,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":154,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":28,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":145,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":30,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":29,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":184,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":123,"org.apache.commons.codec.language.NysiisTest.testCap":38,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":118,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":124,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":128,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":83,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":27,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":25,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt":65,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":63,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":125,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":189,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":26,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":81,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":126,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":158,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":70,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":108,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":181,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":105,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":132,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":87,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":136,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":99,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":34,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":5,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":19,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":117,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":91,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":78,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":61,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":84,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":166,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":64,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":58,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":9,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":72,"org.apache.commons.codec.language.SoundexTest.testB650":14,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":97,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":146,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":76,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":113,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":31,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":79,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":116,"org.apache.commons.codec.language.SoundexTest.testNewInstance":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":104,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":168,"org.apache.commons.codec.language.NysiisTest.testTranan":53,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":164,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":147,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":94,"org.apache.commons.codec.language.NysiisTest.testFal":41,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":80,"org.apache.commons.codec.language.NysiisTest.testSnad":48,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":73,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":68,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":171,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":82,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":55,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":110,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":142,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":157,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":11,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":131,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":12,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":13,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":1,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":141,"org.apache.commons.codec.language.NysiisTest.testDropBy":51,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":90,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":127,"org.apache.commons.codec.binary.Base64Test.testBase64":139,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":172,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":182,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":71,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":101,"org.apache.commons.codec.binary.Base64Test.testUUID":120,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":130,"org.apache.commons.codec.binary.Base64Test.testSingletons":135,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":167,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":156,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":162,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":138,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":185,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":106,"org.apache.commons.codec.binary.Base64Test.testPairs":119,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":109,"org.apache.commons.codec.language.NysiisTest.testRule2":43,"org.apache.commons.codec.language.NysiisTest.testRule1":42,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":161,"org.apache.commons.codec.language.NysiisTest.testRule7":46,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":143,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":155,"org.apache.commons.codec.language.NysiisTest.testRule6":45,"org.apache.commons.codec.language.NysiisTest.testRule5":44,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":95,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":183,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":112,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":0,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":74,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":92,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":176,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt":66,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":50,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":115,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":159,"org.apache.commons.codec.language.NysiisTest.testBran":47,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":54,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":33,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":75,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":152,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":86,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":148,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":178,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":77,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":133,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":144,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":174,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":93,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":134,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":177,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":170,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":165,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":24,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":10,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":153,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":3,"org.apache.commons.codec.digest.B64Test.testB64from24bit":69,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":62,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":163,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":57,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":186,"org.apache.commons.codec.language.NysiisTest.testDad":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":149,"org.apache.commons.codec.language.NysiisTest.testOthers":52,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":122,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":137,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":56,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull":8,"org.apache.commons.codec.language.SoundexTest.testDifference":21,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":36,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":89,"org.apache.commons.codec.language.NysiisTest.testDan":40,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":175,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":98,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":121,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":187},"transformations":[{"failures":[],"tindex":"7525adf3-3db4-11e6-84cf-3980d9eb8b75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:235","type":"CtAssignmentImpl","sourcecode":"char[][int] = chr"},"status":-2},{"failures":[],"tindex":"7525d504-3db4-11e6-84cf-6bb27e4f8566","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"status":-2},{"failures":[],"tindex":"7525d505-3db4-11e6-84cf-17a7dba13de1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"tempResult = altCtx.digest()"},"variableMap":{"tempResult":"finalb","altCtx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"finalb = ctx1.digest()"},"status":-2},{"failures":[],"tindex":"7525d506-3db4-11e6-84cf-791f78bd56ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"variableMap":{"a":"inPos","m":"inPos","n":"inPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:381","type":"CtLocalVariableImpl","sourcecode":"int int = in[(inPos++)]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"7525d507-3db4-11e6-84cf-f536f3473a68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"variableMap":{"lines":"lines"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:433","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim();\n    if (incl.contains(\" \")) {\n        throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n    } else {\n        lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n    }\n} else {\n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 4) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        try {\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2]);\n            final org.apache.commons.codec.language.bm.Rule.PhonemeExpr org.apache.commons.codec.language.bm.Rule.PhonemeExpr = org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[3]));\n            final int int = currentLine;\n            final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule = new org.apache.commons.codec.language.bm.Rule(pat, lCon, rCon, ph) {\n                private final int myLine = cLine;\n\n                private final java.lang.String loc = location;\n\n                @java.lang.Override\n                public java.lang.String toString() {\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    sb.append(\"Rule\");\n                    sb.append(\"{line=\").append(int);\n                    sb.append(\", loc='\").append(java.lang.String).append('\\'');\n                    sb.append(\", pat='\").append(pat).append('\\'');\n                    sb.append(\", lcon='\").append(lCon).append('\\'');\n                    sb.append(\", rcon='\").append(rCon).append('\\'');\n                    sb.append('}');\n                    return sb.toString();\n                }\n            };\n            final java.lang.String java.lang.String = r.java.lang.String.substring(0, 1);\n            java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = lines.get(patternKey);\n            if (rules == null) {\n                rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n                lines.put(patternKey, rules);\n            } \n            rules.add(r);\n        } catch (final java.lang.IllegalArgumentException e) {\n            throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"7525fc18-3db4-11e6-84cf-677f80e0d5aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"this":"result","alternate":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7525fc19-3db4-11e6-84cf-23a15ef1eaa4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt)"},"status":-2},{"failures":[8],"tindex":"7525fc1a-3db4-11e6-84cf-e386298d3b39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"7525fc1b-3db4-11e6-84cf-f59981c9bb7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:363","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"7525fc1c-3db4-11e6-84cf-b33c9d5da811","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:333","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(name2Char).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name2Char":"name1Char","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:332","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(name1Char).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"7526232d-3db4-11e6-84cf-07cdfd7cdae6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"pos","e1":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:394","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[],"tindex":"7526232e-3db4-11e6-84cf-9364aa8bfb08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"wdsz","y":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:194","type":"CtIfImpl","sourcecode":"if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n    code.append('K');\n} else {\n    code.append('X');\n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"7526232f-3db4-11e6-84cf-57e0e4185377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":-1},{"failures":[55,56,57,58,59,60,61,62],"tindex":"75262330-3db4-11e6-84cf-4f0f3d496797","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"75262331-3db4-11e6-84cf-29829dcf4b6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:177","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"75262332-3db4-11e6-84cf-afa6aa6b2c50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return value < 0 ? value + 256 : value"},"variableMap":{"value":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-2},{"failures":[63,64,65,60,66,61,62,67,68],"tindex":"75262333-3db4-11e6-84cf-bb3b6b08edbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"salt","key":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:543","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[],"tindex":"75264a44-3db4-11e6-84cf-694f4d61c9a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.Base64.MASK_6BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base64.MASK_6BITS","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"75264a45-3db4-11e6-84cf-fdf749e47623","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"status":-2},{"failures":[63,64,69,70,71,72,73,55,56,57,74,58,59,60,61,62,68,75,76,77,78,79],"tindex":"75264a46-3db4-11e6-84cf-ad349d7c9a52","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"org.apache.commons.codec.digest.B64.B64T"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:60","type":"CtWhileImpl","sourcecode":"while ((n--) > 0) {\n    buffer.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt((w & 63)));\n    w >>= 6;\n}"},"status":-1},{"failures":[80,81,82,83,84,85,86,87],"tindex":"75264a47-3db4-11e6-84cf-d5dda233b92f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-1},{"failures":[],"tindex":"75264a48-3db4-11e6-84cf-5bf1291be006","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"status":0},{"failures":[],"tindex":"75264a49-3db4-11e6-84cf-41329c11c581","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:378","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"75264a4a-3db4-11e6-84cf-1bf83286f6f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:280","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)"},"status":-2},{"failures":[],"tindex":"75264a4b-3db4-11e6-84cf-df115ffce1cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"7526715c-3db4-11e6-84cf-e75a19ceb37f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"org.apache.commons.codec.binary.Base32.BYTES_PER_UNENCODED_BLOCK","decodeSize":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[],"tindex":"7526715d-3db4-11e6-84cf-35e955a0a3fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:516","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.clear();\n} "},"status":0},{"failures":[],"tindex":"7526715e-3db4-11e6-84cf-533cc4477c78","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[],"tindex":"7526715f-3db4-11e6-84cf-9931a978e3b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"variableMap":{"this":"this","name1":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:132","type":"CtAssignmentImpl","sourcecode":"name = cleanName(name)"},"status":-2},{"failures":[],"tindex":"75267160-3db4-11e6-84cf-1d930349b733","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(obj instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-2},{"failures":[],"tindex":"75267161-3db4-11e6-84cf-fb543bf1a62c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:529","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","content":"bContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:559","type":"CtIfImpl","sourcecode":"if (startsWith && endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (startsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n        }\n    };\n} "},"status":0},{"failures":[14,15,23,28,29,30],"tindex":"75269872-3db4-11e6-84cf-533761693aaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"variableMap":{"java.lang.Character.MIN_VALUE":"preHWChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"75269873-3db4-11e6-84cf-57a87f723a37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:278","type":"CtIfImpl","sourcecode":"if (lineSeparator != null) {\n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n    } \n    if (lineLength > 0) {\n        this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n        this.byte[] = new byte[lineSeparator.int];\n        java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n    } else {\n        this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n        this.byte[] = null;\n    }\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[60,61,62],"tindex":"75269874-3db4-11e6-84cf-af7f8b9b3e51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97],"tindex":"75269875-3db4-11e6-84cf-fb97a3384b68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[],"tindex":"75269876-3db4-11e6-84cf-f117f12f9c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:353","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[98,99,100],"tindex":"75269877-3db4-11e6-84cf-e5c077f4e129","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:981","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"75269878-3db4-11e6-84cf-f56e482a9d7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"variableMap":{"code":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:273","type":"CtAssignmentImpl","sourcecode":"mapped = getMappingCode(str, (incount++))"},"status":-2},{"failures":[],"tindex":"7526bf89-3db4-11e6-84cf-e5e11ecaa542","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_512"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"7526bf8a-3db4-11e6-84cf-d98acefb2636","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:305","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes)"},"variableMap":{"bytes":"bigBytes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"status":-2},{"failures":[98,101,102,103,104,99,100],"tindex":"7526bf8b-3db4-11e6-84cf-e77fabe9be8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:270","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('A');\n} "},"status":-1},{"failures":[],"tindex":"7526bf8c-3db4-11e6-84cf-97b4baec3a06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":0},{"failures":[],"tindex":"7526bf8d-3db4-11e6-84cf-ddfed3b2ef74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"7526bf8e-3db4-11e6-84cf-87112d279da4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:314","type":"CtLocalVariableImpl","sourcecode":"final char char = r.java.lang.String.charAt(0)"},"status":-2},{"failures":[],"tindex":"7526bf8f-3db4-11e6-84cf-876ef071b55a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"7526bf90-3db4-11e6-84cf-5f86b148802e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:275","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(array).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset())"},"status":-2},{"failures":[],"tindex":"7526e6a1-3db4-11e6-84cf-ffa32bfa07e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"org.apache.commons.codec.binary.BaseNCodec.EOF","minRating":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:144","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"7526e6a2-3db4-11e6-84cf-d3b0c1a7bf15","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":0},{"failures":[],"tindex":"7526e6a3-3db4-11e6-84cf-f9030f1420da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:174","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-2},{"failures":[98,100],"tindex":"7526e6a4-3db4-11e6-84cf-5f558374b00d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"status":-1},{"failures":[105,106,107,108,109,110,111],"tindex":"7526e6a5-3db4-11e6-84cf-19b1b38c0986","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:50","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.updateDigest(digest, data).digest()"},"status":-1},{"failures":[112,113],"tindex":"75270db6-3db4-11e6-84cf-97aa9e0d3b12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:85","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"75270db7-3db4-11e6-84cf-d178d07817c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":-2},{"failures":[],"tindex":"75270db8-3db4-11e6-84cf-47712cc26a91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":-2},{"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"75270db9-3db4-11e6-84cf-6f818c310505","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:294","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len)"},"status":-1},{"failures":[83,87],"tindex":"75270dba-3db4-11e6-84cf-13ba6901aa21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"status":-1},{"failures":[],"tindex":"75270dbb-3db4-11e6-84cf-f5bfa78a1a05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[],"tindex":"75270dbc-3db4-11e6-84cf-7d40befc8b5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:177","type":"CtIfImpl","sourcecode":"if (digit == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index));\n} "},"status":-2},{"failures":[],"tindex":"75270dbd-3db4-11e6-84cf-8dcb793ab110","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"variableMap":{"name2":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"status":-2},{"failures":[],"tindex":"752734ce-3db4-11e6-84cf-a9e54fea5639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:464","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"752734cf-3db4-11e6-84cf-3fc580e6c790","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-2},{"failures":[],"tindex":"752734d0-3db4-11e6-84cf-853382f2318c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:212","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"variableMap":{"altCtx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = ctx1.digest()"},"status":-2},{"failures":[178],"tindex":"752734d1-3db4-11e6-84cf-23bf655e8a62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"valueToDigest","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[70,71,73,75,77,78,79],"tindex":"752734d2-3db4-11e6-84cf-4999de5b4874","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:295","type":"CtInvocationImpl","sourcecode":"ctx1.reset()"},"variableMap":{"ctx1":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"752734d3-3db4-11e6-84cf-27010b07a375","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:311","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[98,101,99],"tindex":"752734d4-3db4-11e6-84cf-1f58881d3af2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:365","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[98,101,99,100],"tindex":"752734d5-3db4-11e6-84cf-d9ab96c7c533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"75275be6-3db4-11e6-84cf-33cd77e605de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"status":-2},{"failures":[31],"tindex":"75275be7-3db4-11e6-84cf-69b446f67cca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:703","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.bm.Rule.this.java.lang.String.length()"},"variableMap":{"pattern":"es1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"status":-1},{"failures":[],"tindex":"75275be8-3db4-11e6-84cf-35d4a457c1eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"j","lineSeparator":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}"},"status":-2},{"failures":[],"tindex":"75275be9-3db4-11e6-84cf-8b9d9d945784","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"75275bea-3db4-11e6-84cf-d5108f282113","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return firstLetter + name"},"variableMap":{"name":"charset","firstLetter":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:471","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"status":-2},{"failures":[],"tindex":"75275beb-3db4-11e6-84cf-5f731ecd02bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:186","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = nextIndex < (context.length()) ? isVowel(context.charAt(nextIndex)) : false"},"status":-2},{"failures":[101],"tindex":"75275bec-3db4-11e6-84cf-2520963c5e75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars))"},"status":-1},{"failures":[],"tindex":"752782fd-3db4-11e6-84cf-f1e7e2a650bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:387","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('J');\n    index += 3;\n} else {\n    result.append(\"TK\");\n    index += 2;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}"},"status":-2},{"failures":[],"tindex":"752782fe-3db4-11e6-84cf-a5351a57e04c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest().digest(data)"},"variableMap":{"data":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"failures":[55,56,57,58,59,60,61,62],"tindex":"752782ff-3db4-11e6-84cf-1b34538d78a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"variableMap":{"keyBytes":"keyBytes","ctx":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"status":-1},{"failures":[],"tindex":"75278300-3db4-11e6-84cf-a333e119fdeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[123,124],"tindex":"75278301-3db4-11e6-84cf-c36c5eef0213","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"status":-1},{"failures":[],"tindex":"75278302-3db4-11e6-84cf-3d2c7bea2310","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"to","y":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"status":-2},{"failures":[],"tindex":"75278303-3db4-11e6-84cf-75d6122f0a66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"75278304-3db4-11e6-84cf-19f693268834","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.decodeText(value)"},"status":-2},{"failures":[179,155],"tindex":"7527aa15-3db4-11e6-84cf-7990736565cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-1},{"failures":[98,101,99,100],"tindex":"7527aa16-3db4-11e6-84cf-4f2f982c978f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[180],"tindex":"7527aa17-3db4-11e6-84cf-876cd54b9e4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"variableMap":{"urlsafe":"printable","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:278","type":"CtAssignmentImpl","sourcecode":"printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet"},"status":-1},{"failures":[],"tindex":"7527aa18-3db4-11e6-84cf-b5a265632f4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:750","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1"},"status":-2},{"failures":[55,56,57,58,59,60,61,62],"tindex":"7527aa19-3db4-11e6-84cf-0301fff5df64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"variableMap":{"lineSeparator":"altResult","lineLength":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:396","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[],"tindex":"7527aa1a-3db4-11e6-84cf-31f79a72d966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:289","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[60,61,62],"tindex":"7527aa1b-3db4-11e6-84cf-8394ad77b764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)"},"status":-1},{"failures":[98,101,103,99,100],"tindex":"7527aa1c-3db4-11e6-84cf-17428d470bf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:303","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"7527d12d-3db4-11e6-84cf-e90e669ae457","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"status":-2},{"failures":[181,182,183,184,185,186],"tindex":"7527d12e-3db4-11e6-84cf-0b143fe007ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[83],"tindex":"7527d12f-3db4-11e6-84cf-e1cf4a497821","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"status":-1},{"failures":[],"tindex":"7527d130-3db4-11e6-84cf-db34722cb04d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"variableMap":{"key":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:161","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"status":-2},{"failures":[187,188],"tindex":"7527d131-3db4-11e6-84cf-97667fd10b14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"status":-1},{"failures":[],"tindex":"7527d132-3db4-11e6-84cf-ed27378b5aed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[],"tindex":"7527d133-3db4-11e6-84cf-071379785ea8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:78","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.RFC1522Codec.this.doEncoding(text.getBytes(charset))"},"status":-2},{"failures":[60,61,62],"tindex":"7527d134-3db4-11e6-84cf-a5b17a06f851","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"status":-1},{"failures":[],"tindex":"7527f845-3db4-11e6-84cf-53ec0971a071","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-2},{"failures":[189],"tindex":"7527f846-3db4-11e6-84cf-1d618ac281ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:296","type":"CtBreakImpl","sourcecode":"break"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}