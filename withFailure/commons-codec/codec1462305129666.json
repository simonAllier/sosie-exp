{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter":106,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":18,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":151,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":180,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":123,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":5,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":40,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":187,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":186,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":85,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":86,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":90,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":183,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":87,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":88,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":121,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":189,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":44,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":65,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":167,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":103,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":43,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":184,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":78,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":142,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":101,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":150,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":181,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":117,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":68,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":194,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":135,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":179,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":112,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":120,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":95,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":133,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":136,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":161,"org.apache.commons.codec.language.NysiisTest.testDropBy":145,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":42,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":190,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":73,"org.apache.commons.codec.binary.Base64Test.testUUID":81,"org.apache.commons.codec.binary.Base64Test.testSingletons":102,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":125,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":66,"org.apache.commons.codec.binary.Base64Test.testPairs":80,"org.apache.commons.codec.binary.Base64Test.testConstructors":83,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":124,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":6,"org.apache.commons.codec.language.NysiisTest.testRule6":144,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":192,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":159,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":59,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":70,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":72,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":165,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":188,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":171,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":98,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":53,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":99,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":129,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":158,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":182,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":137,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":62,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":130,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":177,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":149,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":91,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":56,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":84,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":132,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":148,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":30,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":157,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":39,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":10,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":170,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":141,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":140,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":22,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":169,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":173,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":21,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":118,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":155,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":64,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":58,"org.apache.commons.codec.binary.Base64Test.testTriplets":75,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":74,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":11,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":28,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":26,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":29,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":160,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":100,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":54,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":92,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":57,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":115,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":193,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":23,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":14,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":168,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":172,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":162,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":163,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":175,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":185,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":191,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":96,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":60,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":166,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":45,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":138,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":37,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":110,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":27,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":33,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":153,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":139,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":46,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":116,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":131,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":128,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":127,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":147,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":195,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":107,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":67,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":17,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":89,"org.apache.commons.codec.binary.Base64Test.testBase64":109,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":0,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":93,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":143,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":119,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":3,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":176,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":178,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":156,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":113,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":61,"org.apache.commons.codec.binary.Base64Test.testCodec112":97,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":15,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":52,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":76,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":122,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":69,"org.apache.commons.codec.binary.Base64Test.testCodec68":104,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":55,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":114,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":154,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":126,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":4,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":174,"org.apache.commons.codec.language.NysiisTest.testOthers":146,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":105,"org.apache.commons.codec.language.SoundexTest.testDifference":12,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":48,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":164,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":71,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":36,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":94,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":82},"transformations":[{"failures":[0],"tindex":"859871df-1168-11e6-a84c-412c1635ee64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-1},{"failures":[1,2,3,4],"tindex":"859898f0-1168-11e6-a84c-3d68cfd02770","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"status":-1},{"failures":[5,6,7,8,9],"tindex":"8598c001-1168-11e6-a84c-f78566dd8561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:321","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-1},{"failures":[],"tindex":"8598c002-1168-11e6-a84c-0996fa3d6368","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"variableMap":{"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD2":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"status":-3},{"failures":[],"tindex":"8598c003-1168-11e6-a84c-8595f93e9e1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str)"},"status":-2},{"failures":[10,11],"tindex":"8598e714-1168-11e6-a84c-394032c04d06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[1], b, 4)"},"status":-1},{"failures":[],"tindex":"8598e715-1168-11e6-a84c-8bb21310db21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"value","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"value","text":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"status":-3},{"failures":[],"tindex":"85990e26-1168-11e6-a84c-5f20e2c9e6b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":-2},{"failures":[12],"tindex":"85990e27-1168-11e6-a84c-cd0740bbdedb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.Soundex.this, s1, s2)"},"status":-1},{"failures":[],"tindex":"85990e28-1168-11e6-a84c-71a9fbcfa656","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"org.apache.commons.codec.language.Metaphone.VOWELS","name2":"org.apache.commons.codec.language.Metaphone.VOWELS","name1":"org.apache.commons.codec.language.Metaphone.VOWELS","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"org.apache.commons.codec.language.Metaphone.VOWELS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:339","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(string.charAt(index))) >= 0"},"status":-2},{"failures":[13],"tindex":"85993539-1168-11e6-a84c-45f875b0d887","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"8599353a-1168-11e6-a84c-37359385c950","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"status":-1},{"failures":[30],"tindex":"85995c4b-1168-11e6-a84c-f932652d1277","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"status":-1},{"failures":[],"tindex":"85995c4c-1168-11e6-a84c-abe4292eae12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-2},{"failures":[31,32,33],"tindex":"85995c4d-1168-11e6-a84c-bba72b9b94e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"status":-1},{"failures":[],"tindex":"85995c4e-1168-11e6-a84c-1f9f876b18f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:232","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"8599835f-1168-11e6-a84c-7fa63d836fb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"context","name2":"context","name1":"context","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"status":-3},{"failures":[],"tindex":"85998360-1168-11e6-a84c-f9887315bcb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42],"tindex":"85998361-1168-11e6-a84c-adf81c5c1985","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"name1Size","l_ascii":"name1Char","bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"status":-1},{"failures":[],"tindex":"8599aa72-1168-11e6-a84c-053e518092b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"status":-2},{"failures":[10,43,44,11],"tindex":"8599aa73-1168-11e6-a84c-ed04f73b8f65","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:378","type":"CtAssignmentImpl","sourcecode":"schedule[(j++)] = s"},"variableMap":{"schedule":"results","s":"c","j":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[],"tindex":"8599aa74-1168-11e6-a84c-97980da80038","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"status":-2},{"failures":[],"tindex":"8599d185-1168-11e6-a84c-23372367206a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[0,45],"tindex":"8599d186-1168-11e6-a84c-a52fd03e9d6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:309","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"8599d187-1168-11e6-a84c-259c65949db3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"status":0},{"failures":[46,47,0,48,45,49],"tindex":"8599d188-1168-11e6-a84c-7faa849b8634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:637","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[47,0,49],"tindex":"8599f899-1168-11e6-a84c-3b0ec2595d51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"8599f89a-1168-11e6-a84c-5d12a787728b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:504","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[47,0],"tindex":"8599f89b-1168-11e6-a84c-e16f5271b7ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:660","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[144,145,146],"tindex":"859a1fac-1168-11e6-a84c-078b332b864d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"status":-1},{"failures":[],"tindex":"859a1fad-1168-11e6-a84c-3b7302248447","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-2},{"failures":[],"tindex":"859a1fae-1168-11e6-a84c-bb3e0bb47daa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:230","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"variableMap":{"str":"data","charset":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-2},{"failures":[],"tindex":"859a1faf-1168-11e6-a84c-8b5207c644df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"b","encodeSize":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:133","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":-3},{"failures":[],"tindex":"859a46c0-1168-11e6-a84c-1b4013ac7306","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[],"tindex":"859a46c1-1168-11e6-a84c-69a04f4f2036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:178","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(langIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"langIS":"lRulesIS","org.apache.commons.codec.language.bm.ResourceConstants.ENCODING":"org.apache.commons.codec.language.bm.ResourceConstants.ENCODING"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:137","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(lRulesIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-3},{"failures":[],"tindex":"859a46c2-1168-11e6-a84c-db6f767be40f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"variableMap":{"encodeSize":"keyLen","decodeSize":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":-3},{"failures":[],"tindex":"859a6dd3-1168-11e6-a84c-1565de149f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"variableMap":{"pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","length":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","buffer":"buffer","lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:378","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 2 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 4 :\n        context.long = (context.long) >> 4;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 5 :\n        context.long = (context.long) >> 1;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 6 :\n        context.long = (context.long) >> 6;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 7 :\n        context.long = (context.long) >> 3;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-3},{"failures":[],"tindex":"859a94e4-1168-11e6-a84c-bfb9c3f3ba1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:178","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(langIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"langIS":"rulesIS","org.apache.commons.codec.language.bm.ResourceConstants.ENCODING":"org.apache.commons.codec.CharEncoding.UTF_8"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:234","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(rulesIS , org.apache.commons.codec.CharEncoding.org.apache.commons.codec.CharEncoding.java.lang.String)"},"status":-2},{"failures":[],"tindex":"859a94e5-1168-11e6-a84c-91e8f53ba099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((chrs[index]) == (element[0])) {\n    chrs[index] = element[1];\n    break;\n} "},"status":-2},{"failures":[147,148,149,150,151,152,153,154],"tindex":"859a94e6-1168-11e6-a84c-a1a604b89649","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}"},"status":-1},{"failures":[10,43,44,11],"tindex":"859abbf7-1168-11e6-a84c-39c1eb82c783","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:250","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[47,0,155,45,49],"tindex":"859abbf8-1168-11e6-a84c-8d0488eb7cb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:302","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"859abbf9-1168-11e6-a84c-9d8c936cd1ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"status":0},{"failures":[],"tindex":"859abbfa-1168-11e6-a84c-87c7ede3661a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"offset","lineSeparator":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-3},{"failures":[],"tindex":"859abbfb-1168-11e6-a84c-593e2f758fb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"status":0},{"failures":[],"tindex":"859abbfc-1168-11e6-a84c-ff4be9b3108a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:274","type":"CtLocalVariableImpl","sourcecode":"final char char = getNextChar()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[],"tindex":"859ae30d-1168-11e6-a84c-af76a62b2042","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"status":-2},{"failures":[47,0],"tindex":"859ae30e-1168-11e6-a84c-09150e3bf73f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:361","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[5,156,6],"tindex":"859ae30f-1168-11e6-a84c-a797e1f6fca9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:363","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"859ae310-1168-11e6-a84c-b1e0ea607f1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:354","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-3},{"failures":[],"tindex":"859ae311-1168-11e6-a84c-9535e76bbdb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == '+') {\n        buffer.write(' ');\n    } else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n        }\n    } else {\n        buffer.write(b);\n    }\n}"},"status":-2},{"failures":[56,58,157,70,128,135],"tindex":"859b0a22-1168-11e6-a84c-95a510adafda","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"variableMap":{"b":"b","offset":"readLen","len":"readLen","doEncode":"doEncode","context":"context","baseNCodec":"baseNCodec"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (readLen == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(buf);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[],"tindex":"859b0a23-1168-11e6-a84c-c30c65be1b8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"variableMap":{"str":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:230","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"status":-2},{"failures":[],"tindex":"859b0a24-1168-11e6-a84c-c567cd4cd5e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[158],"tindex":"859b0a25-1168-11e6-a84c-6b739e4216e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-1},{"failures":[],"tindex":"859b0a26-1168-11e6-a84c-c322a7e9eb73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"variableMap":{"obj":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(((java.lang.String)(source)))"},"status":-2},{"failures":[],"tindex":"859b0a27-1168-11e6-a84c-1b2f52c0a43d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:232","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"859b3138-1168-11e6-a84c-316fe963d354","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"org.apache.commons.codec.net.RFC1522Codec.POSTFIX","salt":"org.apache.commons.codec.net.RFC1522Codec.POSTFIX","prefix":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"status":-2},{"failures":[],"tindex":"859b3139-1168-11e6-a84c-83e869229001","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"valueToDigest","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:420","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[159,3,4],"tindex":"859b313a-1168-11e6-a84c-21acfdf13793","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":-1},{"failures":[160],"tindex":"859b313b-1168-11e6-a84c-a118a0e415e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"status":-1},{"failures":[],"tindex":"859b584c-1168-11e6-a84c-c184ba83a7ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:530","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-2},{"failures":[47,0,161,45,49],"tindex":"859b584d-1168-11e6-a84c-db4463b9fa20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[162],"tindex":"859b584e-1168-11e6-a84c-af5935e6f67c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:447","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[163],"tindex":"859b584f-1168-11e6-a84c-859d34660ed0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[],"tindex":"859b5850-1168-11e6-a84c-4fb0a53fd81e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:292","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[164,31,32,165,166],"tindex":"859b5851-1168-11e6-a84c-9bb7b477aed5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:144","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-1},{"failures":[],"tindex":"859b5852-1168-11e6-a84c-e74f02fe9dde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:229","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.Class.getClassLoader().getResourceAsStream(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE":"languageRulesResourceName","org.apache.commons.codec.language.DaitchMokotoffSoundex.class":"org.apache.commons.codec.language.bm.Lang.class"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"status":-3},{"failures":[],"tindex":"859b5853-1168-11e6-a84c-abc9dbbbc780","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:287","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-2},{"failures":[167,168,169,170,171,172,173,174],"tindex":"859b7f64-1168-11e6-a84c-5b86cfbc9a0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:769","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int);\n}"},"status":-1},{"failures":[175,176,177,163,178,179,180],"tindex":"859b7f65-1168-11e6-a84c-37d228c4818d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-1},{"failures":[46,47,0,161,181,45,49],"tindex":"859b7f66-1168-11e6-a84c-9588d479df50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-1},{"failures":[],"tindex":"859b7f67-1168-11e6-a84c-17133e0f924a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"859b7f68-1168-11e6-a84c-77c7c0296268","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:389","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[],"tindex":"859b7f69-1168-11e6-a84c-d1039b8879ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[],"tindex":"859b7f6a-1168-11e6-a84c-57cc5b04e4fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:296","type":"CtIfImpl","sourcecode":"if ((context.int) >= (context.int)) {\n    context.byte[] = null;\n} "},"variableMap":{"pos":"c","context":"context","readPos":"c","buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-3},{"failures":[],"tindex":"859ba67b-1168-11e6-a84c-d9a136b32cb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"status":-2},{"failures":[],"tindex":"859ba67c-1168-11e6-a84c-ef0640811b60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"mappedChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-2},{"failures":[],"tindex":"859ba67d-1168-11e6-a84c-cd2dd7ab8262","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:271","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"status":-2},{"failures":[17,18,19,26,27,28,29],"tindex":"859ba67e-1168-11e6-a84c-0df9319d9a00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:111","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.size()) == 1"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.isEmpty()"},"status":-1},{"failures":[64,73,74,182,137,139,143],"tindex":"859ba67f-1168-11e6-a84c-bbd3b08bae87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[145],"tindex":"859ba680-1168-11e6-a84c-1b89bd1fd6b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (next == 'N') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n}"},"status":-1},{"failures":[],"tindex":"859ba681-1168-11e6-a84c-45848466edd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:313","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[183,184],"tindex":"859bcd92-1168-11e6-a84c-d9269deab52e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"code = '2'"},"variableMap":{"code":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"status":-1},{"failures":[],"tindex":"859bcd93-1168-11e6-a84c-412cc0379fa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:250","type":"CtIfImpl","sourcecode":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}"},"variableMap":{"ii":"ii","jj":"ii","l_ascii":"l_raw","bits":"length","raw":"l_raw","org.apache.commons.codec.binary.BinaryCodec.BITS":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-2},{"failures":[],"tindex":"859bcd94-1168-11e6-a84c-c77924e384c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return value < 0 ? value + 256 : value"},"variableMap":{"value":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}"},"status":-2},{"failures":[],"tindex":"859bcd95-1168-11e6-a84c-85de782ee885","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:515","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"859bcd96-1168-11e6-a84c-2d04de14162d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"variableMap":{"saltString":"result","org.apache.commons.codec.digest.B64.B64T":"word"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"result.append(\"-\").append(encode(word))"},"status":-3},{"failures":[],"tindex":"859bcd97-1168-11e6-a84c-a5e549849527","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"variableMap":{"encodedBlockSize":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)"},"status":-2},{"failures":[],"tindex":"859bcd98-1168-11e6-a84c-6f51fc82aaf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"variableMap":{"boxContent":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"status":0},{"failures":[],"tindex":"859bf4a9-1168-11e6-a84c-c3f85f39625d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:74","type":"CtReturnImpl","sourcecode":"return charset == null ? java.nio.charset.Charset.defaultCharset() : charset"},"status":-3},{"failures":[],"tindex":"859bf4aa-1168-11e6-a84c-df15294dc06b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"status":-2},{"failures":[185],"tindex":"859bf4ab-1168-11e6-a84c-5b03bb0316de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":-1},{"failures":[],"tindex":"859bf4ac-1168-11e6-a84c-535d7f08efdf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"variableMap":{"maxCodeLen":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"status":-2},{"failures":[],"tindex":"859bf4ad-1168-11e6-a84c-17a2a64288dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"blocksize","encodeSize":"blocksize","length":"blocksize","lineSeparator":"altResult","lineLength":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-3},{"failures":[183,186,187,188,189,190,191,184],"tindex":"859bf4ae-1168-11e6-a84c-cf168b2535f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"variableMap":{"l":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:241","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"status":-1},{"failures":[],"tindex":"859bf4af-1168-11e6-a84c-b7d2e8801be7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:301","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:209","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.get(java.lang.CharSequence.subSequence(int, ((int) + patternLength)))"},"status":-2},{"failures":[192,193,194,195],"tindex":"859bf4b0-1168-11e6-a84c-5f11398d6e90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":-1},{"failures":[],"tindex":"859c1bc1-1168-11e6-a84c-3dd8c231f1a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"combined"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:421","type":"CtReturnImpl","sourcecode":"return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\""},"status":0},{"failures":[28],"tindex":"859c1bc2-1168-11e6-a84c-05bd10460400","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:440","type":"CtInvocationImpl","sourcecode":"lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}