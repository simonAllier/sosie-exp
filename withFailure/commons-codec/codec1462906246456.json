{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":70,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":18,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":11,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":63,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":55,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":36,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":40,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":21,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":64,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":42,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":67,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":66,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":4,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":73,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":54,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":15,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":44,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":59,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":62,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":26,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":29,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":17,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":30,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":14,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":25,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":24,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":60,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":69,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":16,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":12,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":6,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":58,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":1,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":33,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":46,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":39,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":22,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":74,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":7,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":34,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":32,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":38,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":47,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":0,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":65,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":13,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":61,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":48,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":71,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":56,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":72,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":53,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":57,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":52,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":20,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":27,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":31,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":41,"org.apache.commons.codec.language.MetaphoneTest.testWhy":10,"org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":51,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":68,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":8,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":45,"org.apache.commons.codec.language.MetaphoneTest.testTCH":9,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":75,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":50,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":2},"transformations":[{"failures":[0],"tindex":"1b1ed6e8-16e0-11e6-970e-078ed8df318c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:153","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[1],"tindex":"1b1efdf9-16e0-11e6-970e-17e6d84ad484","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.binary.BaseNCodec:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"1b1efdfa-16e0-11e6-970e-7fcb42803a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"status":0},{"failures":[2,3,4],"tindex":"1b1efdfb-16e0-11e6-970e-dd321011c3a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; (i < (key.length)) && (i < (original.length)) ; i++) {\n    final int iChar = original[i];\n    key[i] = ((byte)(iChar << 1));\n}","position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":-1},{"failures":[5,6],"tindex":"1b1f250c-16e0-11e6-970e-3d24d37fdd58","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"1b1f250d-16e0-11e6-970e-0d4bb01877e0","series":0,"name":"replace","transplant":{"toString":"return \"ANY_LANGUAGE\"","position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return code.toString()","position":"org.apache.commons.codec.language.Metaphone:335","type":"CtReturnImpl","sourcecode":"return code.toString()"},"status":-1},{"failures":[],"tindex":"1b1f250e-16e0-11e6-970e-1d334aa069e7","series":0,"name":"replace","transplant":{"toString":"return rules","position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"variableMap":{"rules":"lines"},"type":"adrStmt","transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-3},{"failures":[],"tindex":"1b1f250f-16e0-11e6-970e-dd825f446e26","series":0,"name":"replace","transplant":{"toString":"final byte[] resizedBytes = new byte[bitlen / 8]","position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bitlen / 8]"},"variableMap":{"bitlen":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buf = new byte[(context.pos) - (context.readPos)]","position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"status":-2},{"failures":[],"tindex":"1b1f4c20-16e0-11e6-970e-7b31535e8ed9","series":0,"name":"replace","transplant":{"toString":"return colognePhonetic(text1).equals(colognePhonetic(text2))","position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"variableMap":{"text1":"cs1","text2":"cs1"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))","position":"org.apache.commons.codec.binary.StringUtils:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))"},"status":-2},{"failures":[22,23,24,25,26,27],"tindex":"1b1f4c21-16e0-11e6-970e-55264329e1b3","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"k+\", \"K\")","position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"d\", \"t\")","position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[28],"tindex":"1b1f4c22-16e0-11e6-970e-1fe43942c08c","series":0,"name":"replace","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.QCodec:227","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[29,30,31,32,33],"tindex":"1b1f4c23-16e0-11e6-970e-3b9ca225e505","series":0,"name":"replace","transplant":{"toString":"ii >>= 1","position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"variableMap":{"ii":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:318","type":"CtAssignmentImpl","sourcecode":"b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-1},{"failures":[34,35,36,37,38,39,40,41],"tindex":"1b1f7334-16e0-11e6-970e-e92aa070f58e","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(tempResult, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"mac.update(buffer, 0, read)","position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-1},{"failures":[],"tindex":"1b1f7335-16e0-11e6-970e-5746cba28e7e","series":0,"name":"add","transplant":{"toString":"code.append('0')","position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\", lcon='\").append(lCon).append('\\'')","position":"org.apache.commons.codec.language.bm.Rule:466","type":"CtInvocationImpl","sourcecode":"sb.append(\", lcon='\").append(lCon).append('\\'')"},"status":0},{"failures":[],"tindex":"1b1f7336-16e0-11e6-970e-09dc0c2428a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.stringEncoder = null","position":"org.apache.commons.codec.StringEncoderComparator:48","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.StringEncoder = null"},"status":-2},{"failures":[],"tindex":"1b1f7337-16e0-11e6-970e-eb40fd9b4a8d","series":0,"name":"replace","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int y = 0","position":"org.apache.commons.codec.digest.UnixCrypt:232","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1b1f9a48-16e0-11e6-970e-075458fe3211","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.charset","position":"org.apache.commons.codec.net.QuotedPrintableCodec:548","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.charset","position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"status":-2},{"failures":[],"tindex":"1b1f9a49-16e0-11e6-970e-9b31ff9578da","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"buffer","key":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"failures":[42],"tindex":"1b1f9a4a-16e0-11e6-970e-e5e18e8e3f44","series":0,"name":"replace","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.URLCodec:290","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[43,44,45,46,47,48,49],"tindex":"1b1f9a4b-16e0-11e6-970e-b9615216c4ed","series":0,"name":"add","transplant":{"toString":"java.util.Arrays.fill(tempResult, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"finalb"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[0], finalb[6], finalb[12], 4, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[0], finalb[6], finalb[12], 4, passwd)"},"status":-1},{"failures":[],"tindex":"1b1fc15c-16e0-11e6-970e-f5a81fe040c9","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length)","position":"org.apache.commons.codec.binary.Base64:374","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[50,51,52,53,54,55,56,57],"tindex":"1b1fc15d-16e0-11e6-970e-8170693295ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"altResult = ctx.digest()","position":"org.apache.commons.codec.digest.Sha2Crypt:405","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":-1},{"failures":[58,59,60],"tindex":"1b1fc15e-16e0-11e6-970e-ab571e84131b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits]","position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[],"tindex":"1b1fc15f-16e0-11e6-970e-f35397301b8a","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"why\", \"Why\")","position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"wy\", \"Wy\")","position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[],"tindex":"1b1fc160-16e0-11e6-970e-99ff2436fa25","series":0,"name":"replace","transplant":{"toString":"int u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int count = 1","position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[9,61,18],"tindex":"1b1fe871-16e0-11e6-970e-31a8269ccda0","series":0,"name":"replace","transplant":{"toString":"code.append('K')","position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd)","position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[],"tindex":"1b1fe872-16e0-11e6-970e-61592dadb8c6","series":0,"name":"replace","transplant":{"toString":"line = line.trim()","position":"org.apache.commons.codec.language.bm.Lang:159","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"variableMap":{"line":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_K.matcher(str).replaceFirst(\"C\")","position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"C\")"},"status":-2},{"failures":[62,63,64,65],"tindex":"1b1fe873-16e0-11e6-970e-33e6d67e70cc","series":0,"name":"replace","transplant":{"toString":"return n - todo","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:209","type":"CtReturnImpl","sourcecode":"return n - todo"},"variableMap":{"todo":"len","n":"len"},"type":"adrStmt","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74,75],"tindex":"1b1fe874-16e0-11e6-970e-bfbaa7f96fea","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(finalb, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"if (result >= 0) {\n    context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK);\n    context.lbitWorkArea = ((context.lbitWorkArea) << (org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE)) + result;\n    if ((context.modulus) == 0) {\n        buffer[((context.pos)++)] = ((byte)(((context.lbitWorkArea) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.lbitWorkArea) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.lbitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.lbitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)((context.lbitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    } \n} ","position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[],"tindex":"1b200f85-16e0-11e6-970e-4f4cbc41e9d4","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":30,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}