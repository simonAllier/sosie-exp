{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":121,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":214,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":119,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":17,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":182,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":180,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":181,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":149,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":183,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":4,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":85,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":147,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":59,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":80,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":200,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":21,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":192,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":194,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":193,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":39,"org.apache.commons.codec.language.NysiisTest.testCap":150,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":12,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":42,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":22,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":40,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":41,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":112,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":77,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":143,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":129,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":171,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":172,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":79,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":216,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":210,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":107,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":96,"org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull":3,"org.apache.commons.codec.language.SoundexTest.testB650":179,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":102,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":197,"org.apache.commons.codec.language.SoundexTest.testNewInstance":186,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":24,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":58,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":212,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":146,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":54,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":218,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":8,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":198,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":67,"org.apache.commons.codec.language.NysiisTest.testDropBy":163,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":106,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":221,"org.apache.commons.codec.binary.Base64Test.testUUID":35,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":91,"org.apache.commons.codec.binary.Base64Test.testSingletons":49,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":219,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":61,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":199,"org.apache.commons.codec.binary.Base64Test.testPairs":34,"org.apache.commons.codec.language.NysiisTest.testRule2":155,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":60,"org.apache.commons.codec.language.NysiisTest.testRule1":154,"org.apache.commons.codec.language.NysiisTest.testRule7":158,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":81,"org.apache.commons.codec.language.NysiisTest.testRule6":157,"org.apache.commons.codec.language.NysiisTest.testRule5":156,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":220,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":213,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":116,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":187,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":118,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":70,"org.apache.commons.codec.language.NysiisTest.testBran":159,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":166,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":84,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":202,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":76,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":6,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":47,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":98,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":48,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":68,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":128,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":188,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":175,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":142,"org.apache.commons.codec.digest.B64Test.testB64from24bit":89,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":95,"org.apache.commons.codec.language.NysiisTest.testDad":151,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":131,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":37,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":113,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":28,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":148,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":208,"org.apache.commons.codec.language.NysiisTest.testDan":152,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":18,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":136,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":133,"org.apache.commons.codec.binary.HexTest.testCustomCharset":69,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":26,"org.apache.commons.codec.language.NysiisTest.testSnat":161,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":105,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":86,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":104,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":132,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":137,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":124,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":201,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.language.RefinedSoundexTest.testLocaleIndependence":173,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":217,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":43,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":196,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":66,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":33,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":191,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":189,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":190,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":130,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":135,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":90,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":144,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":78,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":140,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":46,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":72,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":83,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":115,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":120,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":16,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":53,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":184,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":103,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":87,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":114,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":204,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":174,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":57,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":215,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":100,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":168,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":82,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":126,"org.apache.commons.codec.language.NysiisTest.testTranan":165,"org.apache.commons.codec.language.NysiisTest.testFal":153,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":5,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":195,"org.apache.commons.codec.language.NysiisTest.testSnad":160,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":92,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":139,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":93,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":167,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":51,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":176,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":177,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":178,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":73,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":209,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":109,"org.apache.commons.codec.binary.Base64Test.testBase64":52,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":31,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":44,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":205,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":29,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":141,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":127,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":145,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":27,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":65,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":211,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":32,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":162,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":203,"org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull":2,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":170,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":97,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":185,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":207,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":123,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":125,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":169,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":56,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":101,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":88,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":62,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":138,"org.apache.commons.codec.language.NysiisTest.testOthers":164,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":50,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":108,"org.apache.commons.codec.language.SoundexTest.testDifference":122,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":110,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":64,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":71,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":206,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":14,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":45,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":117,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":36},"transformations":[{"failures":[0,1],"tindex":"b17a402c-4165-11e6-b191-d9f2798f441e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:387","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 16"},"status":-1},{"failures":[],"tindex":"b17a8e4d-4165-11e6-b191-df8adf51ce96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (r > 0) {\n    final byte byte = byte[][0];\n    return b < 0 ? 256 + b : b;\n} "},"variableMap":{"r":"bAvail","singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((context.byte[]) != null) {\n    final int int = java.lang.Math.min(available(context), bAvail);\n    java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len);\n    context.int += len;\n    if ((context.int) >= (context.int)) {\n        context.byte[] = null;\n    } \n    return len;\n} "},"status":-2},{"failures":[],"tindex":"b17a8e4e-4165-11e6-b191-97e34d2ddaa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":0},{"failures":[2,3],"tindex":"b17a8e4f-4165-11e6-b191-d3fda7851bc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:178","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"b17a8e50-4165-11e6-b191-c9c6aa9e75f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"status":-2},{"failures":[],"tindex":"b17ab561-4165-11e6-b191-95c27102cd1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"pArray","ascii":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:426","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"b17ab562-4165-11e6-b191-27b4b8135cde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:339","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())))"},"status":-1},{"failures":[29],"tindex":"b17ab563-4165-11e6-b191-afe348fc5dae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:358","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang))"},"status":-1},{"failures":[],"tindex":"b17adc74-4165-11e6-b191-0561e583143e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:210","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"variableMap":{"e":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"status":-2},{"failures":[30,31],"tindex":"b17adc75-4165-11e6-b191-c3cc81da50f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"status":-1},{"failures":[],"tindex":"b17adc76-4165-11e6-b191-77c20c7676f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.language.Nysiis.CHARS_N"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"b17b0387-4165-11e6-b191-7df4ee07412b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"i","tempResult":"bytes","pBytes":"bytes","keyLen":"b","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"b17b0388-4165-11e6-b191-9522a5aa70a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"failures":[66],"tindex":"b17b0389-4165-11e6-b191-0310e1cba035","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":-1},{"failures":[],"tindex":"b17b2a9a-4165-11e6-b191-09e03c83e7ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","key":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:273","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-2},{"failures":[],"tindex":"b17b2a9b-4165-11e6-b191-f7fe69efcedb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":0},{"failures":[],"tindex":"b17b2a9c-4165-11e6-b191-4fe48fb404cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":0},{"failures":[67],"tindex":"b17b51ad-4165-11e6-b191-217c67b51eb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:497","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[68],"tindex":"b17b51ae-4165-11e6-b191-c9f591965835","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"status":-1},{"failures":[],"tindex":"b17b51af-4165-11e6-b191-ebca106433f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return value < 0 ? value + 256 : value"},"variableMap":{"value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-2},{"failures":[69,70,71,72,32,35,73],"tindex":"b17b51b0-4165-11e6-b191-a70cd6d1b1f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:91","type":"CtAssignmentImpl","sourcecode":"f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j))"},"status":-1},{"failures":[74,75,76,77,78,79],"tindex":"b17b78c1-4165-11e6-b191-91cc108288ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"status":-1},{"failures":[0,1],"tindex":"b17b78c2-4165-11e6-b191-09b59ef76c2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:387","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 16"},"status":-1},{"failures":[80,81,82,83,84],"tindex":"b17b78c3-4165-11e6-b191-d977b73d19a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        pos = 1;\n    }\n}"},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"b17b9fd4-4165-11e6-b191-f13e47da9f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt((w & 63)))"},"status":-1},{"failures":[101,102,103,104,105,106,107,108,109],"tindex":"b17b9fd5-4165-11e6-b191-a7b824aee54d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:530","type":"CtInvocationImpl","sourcecode":"nextBranch.processNextReplacement(nextReplacement, force)"},"status":-1},{"failures":[110,111,112,113,114,115],"tindex":"b17b9fd6-4165-11e6-b191-6b799068e9f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"status":-1},{"failures":[],"tindex":"b17b9fd7-4165-11e6-b191-6b9fc27fb351","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"status":-2},{"failures":[],"tindex":"b17bc6e8-4165-11e6-b191-1f20c9f33bd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:343","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[],"tindex":"b17bc6e9-4165-11e6-b191-fded3eb18574","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"chunkSeparatorLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"status":-2},{"failures":[85,93,94,95,96],"tindex":"b17bc6ea-4165-11e6-b191-d16004edbdb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"status":-1},{"failures":[],"tindex":"b17bc6eb-4165-11e6-b191-6912f24fdf93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null) {\n    java.lang.String = java.lang.StringBuilder.toString();\n} "},"variableMap":{"builder":"primary","cachedString":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:980","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"status":-2},{"failures":[],"tindex":"b17bedfc-4165-11e6-b191-e9a157c84a27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":-2},{"failures":[],"tindex":"b17bedfd-4165-11e6-b191-534244699388","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"variableMap":{"data":"buffer","length":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:794","type":"CtLocalVariableImpl","sourcecode":"int int = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int)"},"status":-2},{"failures":[],"tindex":"b17bedfe-4165-11e6-b191-49cb7a2aa84f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"status":-2},{"failures":[101,102,103,104,105,106,107,108,109,116,117,118,119],"tindex":"b17c150f-4165-11e6-b191-eb464b109d90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"patternKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    ruleMapping.put(patternKey, rules);\n} "},"status":-1},{"failures":[],"tindex":"b17c1510-4165-11e6-b191-1591df9e21f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"status":-2},{"failures":[90,91,92,97,98,99,100],"tindex":"b17c1511-4165-11e6-b191-d3f874cf829c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[80,81,82,83,84],"tindex":"b17c1512-4165-11e6-b191-1fa28cd785fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"b","decodeSize":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:290","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer)"},"status":-1},{"failures":[120,121,30,31],"tindex":"b17c3c23-4165-11e6-b191-6df632f357fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:694","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"b17c3c24-4165-11e6-b191-33d6a52b7462","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-2},{"failures":[122,123],"tindex":"b17c3c25-4165-11e6-b191-ede206894c83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:263","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":-1},{"failures":[],"tindex":"b17c3c26-4165-11e6-b191-1b407fb66ead","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.class":"org.apache.commons.codec.language.DaitchMokotoffSoundex.class","languageRulesResourceName":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:229","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.Class.getClassLoader().getResourceAsStream(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[85,86,87,88,93,94,95,96],"tindex":"b17c3c27-4165-11e6-b191-d54e970de5fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"variableMap":{"lineSeparator":"pBytes","lineLength":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"status":-1},{"failures":[],"tindex":"b17c6338-4165-11e6-b191-d75a7d44272b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"b","y":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"status":-2},{"failures":[],"tindex":"b17c6339-4165-11e6-b191-1178035a9f3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:254","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(printable, bytes, false)"},"variableMap":{"bytes":"bytes","printable":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:194","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet, bytes)"},"status":-2},{"failures":[],"tindex":"b17c633a-4165-11e6-b191-b13fbfccab04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:289","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = languages"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:87","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = java.util.Collections.unmodifiableSet(languages)"},"status":0},{"failures":[],"tindex":"b17c633b-4165-11e6-b191-577833889a7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 1 :\n        break;\n    case 2 :\n        context.int = (context.int) >> 4;\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        context.int = (context.int) >> 2;\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"variableMap":{"ibitWorkArea":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","pos":"modulus","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","context":"context","buffer":"buffer","modulus":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:438","type":"CtIfImpl","sourcecode":"if (b == (byte)) {\n    context.boolean = true;\n    break;\n} else {\n    if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n        final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n        if (result >= 0) {\n            context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n            context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n            if ((context.int) == 0) {\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            } \n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"b17c8a4c-4165-11e6-b191-f3a427f99ba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"org.apache.commons.codec.language.Nysiis.CHARS_C"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"b17c8a4d-4165-11e6-b191-eb05064bb9fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"status":-2},{"failures":[124,120,121,30,31],"tindex":"b17c8a4e-4165-11e6-b191-436ecd71f07d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[],"tindex":"b17c8a4f-4165-11e6-b191-d1e91881412d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"b17c8a50-4165-11e6-b191-7f7a38611e35","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"variableMap":{"charset":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return metaphone(str)"},"status":-2},{"failures":[],"tindex":"b17c8a51-4165-11e6-b191-fd3fa1e78437","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[125,69,126,70,127,128,72,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"b17cb062-4165-11e6-b191-b36011188614","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.binary.Hex.DIGITS_UPPER"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(data, (toLowerCase ? org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.char[] : org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.char[]))"},"status":-1},{"failures":[81,83],"tindex":"b17cb063-4165-11e6-b191-370b654547d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:296","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[0,1],"tindex":"b17cb064-4165-11e6-b191-b7c773f3518f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-1},{"failures":[],"tindex":"b17cb065-4165-11e6-b191-f3ca727d9f97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:524","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,122,186,187,188,189,190,191,192,193,194,195,196],"tindex":"b17cb066-4165-11e6-b191-3ba96a2e93b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"variableMap":{"data":"chars","start":"len","length":"count","newData":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-1},{"failures":[],"tindex":"b17cd777-4165-11e6-b191-31af6c52fa34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"b17cd778-4165-11e6-b191-352511d8902e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"pos","l_ascii":"buffer","bits":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205],"tindex":"b17cd779-4165-11e6-b191-7b0a36a7c172","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:393","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[],"tindex":"b17cd77a-4165-11e6-b191-8dc12b9cfc8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i])"},"variableMap":{"bytes":"bytes","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:202","type":"CtLocalVariableImpl","sourcecode":"int int = bytes[index]"},"status":-2},{"failures":[],"tindex":"b17cd77b-4165-11e6-b191-098ff6378fe2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"array","raw":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:275","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(array).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset())"},"status":-2},{"failures":[0,1],"tindex":"b17cfe8c-4165-11e6-b191-8f146d117640","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"variableMap":{"currentLine":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-1},{"failures":[],"tindex":"b17cfe8d-4165-11e6-b191-099b674258b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:451","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1])"},"status":-2},{"failures":[],"tindex":"b17cfe8e-4165-11e6-b191-85da0cc506a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:251","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b17cfe8f-4165-11e6-b191-2d00cedeca8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"variableMap":{"resizedBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:552","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key), valueToDigest).doFinal()"},"status":-2},{"failures":[69,70,206,71,72,32,35,73],"tindex":"b17cfe90-4165-11e6-b191-0769fb49208e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:88","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; j < len ; i++) {\n    int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4;\n    j++;\n    f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j));\n    j++;\n    out[i] = ((byte)(f & 255));\n}"},"status":-1},{"failures":[],"tindex":"b17cfe91-4165-11e6-b191-6d41f615b523","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":0},{"failures":[],"tindex":"b17d25a2-4165-11e6-b191-f7af57af7c81","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:304","type":"CtAssignmentImpl","sourcecode":"right = results[1]"},"variableMap":{"right":"b","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:410","type":"CtAssignmentImpl","sourcecode":"results[1] = b"},"status":0},{"failures":[],"tindex":"b17d25a3-4165-11e6-b191-e727587c69a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"variableMap":{"maxLength":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-2},{"failures":[],"tindex":"b17d25a4-4165-11e6-b191-1ba90bee6536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)"},"variableMap":{"left":"length","right":"length","results":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-2},{"failures":[],"tindex":"b17d25a5-4165-11e6-b191-334931df7773","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"status":-2},{"failures":[0,1],"tindex":"b17d25a6-4165-11e6-b191-517a054c5594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return index + 2"},"variableMap":{"index":"el"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"failures":[],"tindex":"b17d25a7-4165-11e6-b191-19a1ee3ac3af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"location","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:307","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n    final char char = r.java.lang.String.charAt(0);\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n    if (rules == null) {\n        rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n        ruleMapping.put(patternKey, rules);\n    } \n    rules.add(r);\n} catch (final java.lang.IllegalArgumentException e) {\n    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n}"},"status":-2},{"failures":[101,102,103,104,105,106,107,108,109],"tindex":"b17d4cb8-4165-11e6-b191-5567b08c483b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:138","type":"CtIfImpl","sourcecode":"if (append && ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int))) {\n    java.lang.StringBuilder.append(replacement);\n    if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n        java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n    } \n    java.lang.String = null;\n} "},"status":-1},{"failures":[],"tindex":"b17d4cb9-4165-11e6-b191-85b38a9f8ecd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:495","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"variableMap":{"currentLinePos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","pos":"pos","context":"context","length":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","buffer":"buffer","lineSeparator":"buffer","lineLength":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:359","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[],"tindex":"b17d4cba-4165-11e6-b191-b9bdeb0d3bb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:516","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.clear();\n} "},"status":0},{"failures":[],"tindex":"b17d4cbb-4165-11e6-b191-0969c2b3042e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.Base64.MASK_6BITS","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[207,208,209,210,211,68,212,213,214,215],"tindex":"b17d4cbc-4165-11e6-b191-1dcc5fd4c8a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[],"tindex":"b17d73cd-4165-11e6-b191-ef8daf02da9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[],"tindex":"b17d73ce-4165-11e6-b191-ed50d039f09a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[],"tindex":"b17d73cf-4165-11e6-b191-d9bb7d2d5dd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"location","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"incl","text":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"status":-2},{"failures":[216,217,218],"tindex":"b17d73d0-4165-11e6-b191-d58b80fb9cd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","ascii":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:172","type":"CtIfImpl","sourcecode":"if ((ascii == null) || ((ascii.int) == 0)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[219,220,221],"tindex":"b17d73d1-4165-11e6-b191-abf9aa096be6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:97","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[],"tindex":"b17d9ae2-4165-11e6-b191-0fad4feef2f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"status":-2},{"failures":[],"tindex":"b17d9ae3-4165-11e6-b191-81ad0dbfdd40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:336","type":"CtIfImpl","sourcecode":"if ((strA.length()) > (strB.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())));\n}"},"status":-2},{"failures":[],"tindex":"b17d9ae4-4165-11e6-b191-37ddb0fd44b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"salt","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:540","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-2},{"failures":[120,121,30,31],"tindex":"b17d9ae5-4165-11e6-b191-399f406424a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:458","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"b17d9ae6-4165-11e6-b191-132739eb2456","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[120,121,30,31],"tindex":"b17d9ae7-4165-11e6-b191-01889449975e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[],"tindex":"b17dc1f8-4165-11e6-b191-092edc9ceb4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"b17dc1f9-4165-11e6-b191-c7dcbdccc5b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:801","type":"CtIfImpl","sourcecode":"if (index != 0) {\n    return false;\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"variableMap":{"index":"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE","value":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"b17dc1fa-4165-11e6-b191-390d782f28e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"pos","cnt":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[],"tindex":"b17dc1fb-4165-11e6-b191-33058b7d7ed1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"pos","to":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n} else {\n    sb.append(c);\n}"},"status":-2},{"failures":[],"tindex":"b17de90c-4165-11e6-b191-01a044e89f9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"variableMap":{"curr":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:159","type":"CtReturnImpl","sourcecode":"return new char[]{ prev }"},"status":-2},{"failures":[],"tindex":"b17de90d-4165-11e6-b191-63bcfa527645","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"soundexMapping","soundexMapping":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:90","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[120,30,31],"tindex":"b17de90e-4165-11e6-b191-0382585e7ca6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:309","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[74,76,79],"tindex":"b17de90f-4165-11e6-b191-59fd2838595a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}