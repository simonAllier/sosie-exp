{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":37,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":28,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":3,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":44,"org.apache.commons.codec.language.NysiisTest.testSnat":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":31,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":41,"org.apache.commons.codec.language.NysiisTest.testDropBy":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":36,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":25,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":43,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":4,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":45,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":7,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":32,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":29,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":33,"org.apache.commons.codec.language.NysiisTest.testDad":9,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":27,"org.apache.commons.codec.language.NysiisTest.testRule2":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":35,"org.apache.commons.codec.language.NysiisTest.testRule1":12,"org.apache.commons.codec.language.NysiisTest.testOthers":21,"org.apache.commons.codec.language.NysiisTest.testRule7":16,"org.apache.commons.codec.language.NysiisTest.testRule6":15,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":34,"org.apache.commons.codec.language.NysiisTest.testRule5":14,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":40,"org.apache.commons.codec.language.NysiisTest.testTranan":22,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":39,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":6,"org.apache.commons.codec.language.NysiisTest.testDan":10,"org.apache.commons.codec.language.NysiisTest.testFal":11,"org.apache.commons.codec.language.NysiisTest.testCap":8,"org.apache.commons.codec.language.NysiisTest.testSnad":18,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":38,"org.apache.commons.codec.language.NysiisTest.testBran":17,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":23,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":5,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":42,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":46},"transformations":[{"failures":[],"tindex":"bb304625-122d-11e6-abba-5174674025c0","series":0,"name":"replace","transplant":{"toString":"if (replacedName.contains(dc)) {\n    final java.lang.String singleLetter = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"phonemeText","dc":"phonemeText"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (phonemeText.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication rulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(finalRules , phonemeText , subBuilder , i , maxPhonemes).invoke();\n    final boolean found = rulesApplication.isFound();\n    subBuilder = rulesApplication.getPhonemeBuilder();\n    if (!found) {\n        subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n    } \n    i = rulesApplication.getI();\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:345","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (phonemeText.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(finalRules , phonemeText , subBuilder , i , int).invoke();\n    final boolean boolean = rulesApplication.isFound();\n    subBuilder = rulesApplication.getPhonemeBuilder();\n    if (!found) {\n        subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n    } \n    i = rulesApplication.getI();\n}"},"status":-2},{"failures":[0,1,2],"tindex":"bb309446-122d-11e6-abba-8b4823ba33f0","series":0,"name":"replace","transplant":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:681","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[3,4,5],"tindex":"bb309447-122d-11e6-abba-91bd394c2fb9","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"bb30bb58-122d-11e6-abba-15b9f78e9368","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))","position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return bytes == null ? null : new java.lang.String(bytes , charset)","position":"org.apache.commons.codec.binary.StringUtils:257","type":"CtReturnImpl","sourcecode":"return bytes == null ? null : new java.lang.String(bytes , charset)"},"status":-3},{"failures":[],"tindex":"bb30bb59-122d-11e6-abba-01ce8eb99f97","series":0,"name":"replace","transplant":{"toString":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE)) {\n    return false;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index1","name2":"cs","name1":"substring"},"type":"adrStmt","transplantationPoint":{"toString":"while ((tmpLen--) > 0) {\n    char c1 = cs.charAt((index1++));\n    char c2 = substring.charAt((index2++));\n    if (c1 == c2) {\n        continue;\n    } \n    if (!ignoreCase) {\n        return false;\n    } \n    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.binary.CharSequenceUtils:58","type":"CtWhileImpl","sourcecode":"while ((tmpLen--) > 0) {\n    char char = cs.charAt((index1++));\n    char char = substring.charAt((index2++));\n    if (c1 == c2) {\n        continue;\n    } \n    if (!ignoreCase) {\n        return false;\n    } \n    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        return false;\n    } \n}"},"status":-3},{"failures":[],"tindex":"bb30e26a-122d-11e6-abba-25ff2be2f826","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))","position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"variableMap":{"encoding":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))","position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"bb30e26b-122d-11e6-abba-99dc7fcb9df1","series":0,"name":"add","transplant":{"toString":"s = (s >>> 16) | (t & -65536)","position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"index","t":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"bb31097c-122d-11e6-abba-835cda7881d5","series":0,"name":"replace","transplant":{"toString":"int patternLength = 1","position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int cmtI = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[],"tindex":"bb31097d-122d-11e6-abba-b3b1d0855d77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('#')","position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"bb31097e-122d-11e6-abba-5514a23ddb1c","series":0,"name":"add","transplant":{"toString":"local.setCharAt(0, 'W')","position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"local.setCharAt(0, 'W')"},"variableMap":{"local":"key"},"type":"adrStmt","transplantationPoint":{"toString":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} ","position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} "},"status":-1},{"failures":[],"tindex":"bb31308f-122d-11e6-abba-1b176e7b310e","series":0,"name":"replace","transplant":{"toString":"java.security.MessageDigest ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()","position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.security.MessageDigest ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)","position":"org.apache.commons.codec.digest.Sha2Crypt:160","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-2},{"failures":[24,25,26,27,28,29,30],"tindex":"bb313090-122d-11e6-abba-39a89a91801e","series":0,"name":"replace","transplant":{"toString":"ctx.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"variableMap":{"keyBytes":"finalb","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"toString":"ctx.update(finalb, 0, (ii > 16 ? 16 : ii))","position":"org.apache.commons.codec.digest.Md5Crypt:223","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb, 0, (ii > 16 ? 16 : ii))"},"status":-1},{"failures":[],"tindex":"bb313091-122d-11e6-abba-1fa8ce2d98a2","series":0,"name":"add","transplant":{"toString":"appendPrimary(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"org.apache.commons.codec.net.RFC1522Codec.PREFIX"},"type":"adrStmt","transplantationPoint":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"status":-2},{"failures":[],"tindex":"bb3157a2-122d-11e6-abba-fdb39ba2b144","series":0,"name":"add","transplant":{"toString":"if ((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))) {\n    throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\");\n} ","position":"org.apache.commons.codec.binary.Base32:308","type":"CtIfImpl","sourcecode":"if ((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))) {\n    throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\");\n} "},"variableMap":{"pad":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"bb3157a3-122d-11e6-abba-712f50589758","series":0,"name":"replace","transplant":{"toString":"j++","position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-3},{"failures":[],"tindex":"bb317eb4-122d-11e6-abba-5d848a4c0860","series":0,"name":"add","transplant":{"toString":"final char[] name2Char = name2.toCharArray()","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"final char[] inwd = txt.toUpperCase(java.util.Locale.ENGLISH).toCharArray()","position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale).toCharArray()"},"status":-2},{"failures":[31,32,33],"tindex":"bb317eb5-122d-11e6-abba-d5823d275431","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(saltBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)"},"status":-1},{"failures":[],"tindex":"bb317eb6-122d-11e6-abba-6703c9ae2cca","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(str, org.apache.commons.codec.net.QuotedPrintableCodec.this.getCharset())","position":"org.apache.commons.codec.net.QuotedPrintableCodec:487","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(str, org.apache.commons.codec.net.QuotedPrintableCodec.this.getCharset())"},"status":-2},{"failures":[],"tindex":"bb31a5c7-122d-11e6-abba-a38a8240b0fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((0 == (context.modulus)) && ((lineLength) == 0)) {\n    return ;\n} ","position":"org.apache.commons.codec.binary.Base64:339","type":"CtIfImpl","sourcecode":"if ((0 == (context.int)) && ((int) == 0)) {\n    return ;\n} "},"status":0},{"failures":[34,35,36,37],"tindex":"bb31a5c8-122d-11e6-abba-2d3225df7126","series":0,"name":"replace","transplant":{"toString":"inMultilineComment = true","position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"variableMap":{"inMultilineComment":"encode"},"type":"adrStmt","transplantationPoint":{"toString":"encode = (!(printable.get(b))) || ((i > ((bytes.length) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:320","type":"CtAssignmentImpl","sourcecode":"encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))"},"status":-1},{"failures":[],"tindex":"bb31ccd9-122d-11e6-abba-7fc2f980f3d0","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"variableMap":{"altResult":"pObject","buffer":"pObject"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(pObject instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:110","type":"CtIfImpl","sourcecode":"if (!(pObject instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\");\n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,45],"tindex":"bb31ccda-122d-11e6-abba-87949c1921d8","series":0,"name":"add","transplant":{"toString":"code = '3'","position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '0'","position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"status":-1},{"failures":[38,42],"tindex":"bb31ccdb-122d-11e6-abba-5bc428097297","series":0,"name":"replace","transplant":{"toString":"code = '1'","position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '4'","position":"org.apache.commons.codec.language.ColognePhonetic:371","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[46],"tindex":"bb31f3ec-122d-11e6-abba-c36c5fca7a73","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"finalRules can not be null\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")","position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"status":-1},{"failures":[],"tindex":"bb31f3ed-122d-11e6-abba-6b0ab7e9f130","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS.set(org.apache.commons.codec.net.QuotedPrintableCodec.TAB)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":0},{"failures":[],"tindex":"bb31f3ee-122d-11e6-abba-8f23bd88b605","series":0,"name":"replace","transplant":{"toString":"final java.lang.String replacement3 = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String lCon = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1])","position":"org.apache.commons.codec.language.bm.Rule:451","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1])"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":26,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}