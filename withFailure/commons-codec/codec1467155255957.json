{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":123,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":60,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":116,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":146,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":144,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":61,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":77,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":109,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":142,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":65,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":85,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":104,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":17,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":16,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":120,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":108,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":126,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":103,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":73,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":10,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":91,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":63,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":131,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":134,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":133,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":24,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":20,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":47,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":122,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":28,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":132,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":145,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":26,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":75,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":114,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":27,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":95,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":136,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":127,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":79,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":139,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":84,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":6,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":69,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":70,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":140,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":97,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":71,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":8,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":115,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":125,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":112,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":0,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":38,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":117,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":53,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":66,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":83,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":92,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":58,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":121,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":39,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":100,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":76,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":64,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":44,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":113,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":106,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":128,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":110,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":35,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":56,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":1,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":130,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":96,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":138,"org.apache.commons.codec.binary.Base64Test.testBase64":34,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":90,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":119,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.binary.Base64Test.testUUID":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":9,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":30,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":88,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":12,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":118,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":81,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":11,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":82,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":54,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":101,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":74,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":111,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":42,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":98,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":19,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":46,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":87,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":18,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":93,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":135,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":14,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":67,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":105,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":37,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":32,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":99,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":137,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":143,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":124,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":72,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":51,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":15,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":23,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":45,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":102,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":94,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":41,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":43,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":107},"transformations":[{"failures":[],"tindex":"1a26491f-3d85-11e6-9b8b-4156531d5a99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"1a27a8b0-3d85-11e6-9b8b-3b3a979d38fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:98","type":"CtSwitchImpl","sourcecode":"switch (value.charAt(index)) {\n    case 'A' :\n    case 'E' :\n    case 'I' :\n    case 'O' :\n    case 'U' :\n    case 'Y' :\n        index = handleAEIOUY(result, index);\n        break;\n    case 'B' :\n        result.append('P');\n        index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n        break;\n    case '\\u00c7' :\n        result.append('S');\n        index++;\n        break;\n    case 'C' :\n        index = handleC(value, result, index);\n        break;\n    case 'D' :\n        index = handleD(value, result, index);\n        break;\n    case 'F' :\n        result.append('F');\n        index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n        break;\n    case 'G' :\n        index = handleG(value, result, index, slavoGermanic);\n        break;\n    case 'H' :\n        index = handleH(value, result, index);\n        break;\n    case 'J' :\n        index = handleJ(value, result, index, slavoGermanic);\n        break;\n    case 'K' :\n        result.append('K');\n        index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n        break;\n    case 'L' :\n        index = handleL(value, result, index);\n        break;\n    case 'M' :\n        result.append('M');\n        index = conditionM0(value, index) ? index + 2 : index + 1;\n        break;\n    case 'N' :\n        result.append('N');\n        index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n        break;\n    case '\\u00d1' :\n        result.append('N');\n        index++;\n        break;\n    case 'P' :\n        index = handleP(value, result, index);\n        break;\n    case 'Q' :\n        result.append('K');\n        index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n        break;\n    case 'R' :\n        index = handleR(value, result, index, slavoGermanic);\n        break;\n    case 'S' :\n        index = handleS(value, result, index, slavoGermanic);\n        break;\n    case 'T' :\n        index = handleT(value, result, index);\n        break;\n    case 'V' :\n        result.append('F');\n        index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n        break;\n    case 'W' :\n        index = handleW(value, result, index);\n        break;\n    case 'X' :\n        index = handleX(value, result, index);\n        break;\n    case 'Z' :\n        index = handleZ(value, result, index, slavoGermanic);\n        break;\n    default :\n        index++;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"1a27a8b1-3d85-11e6-9b8b-f51ce4f24e6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"status":-2},{"failures":[6,4,5],"tindex":"1a27a8b2-3d85-11e6-9b8b-3dea5cc44495","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:306","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n    result.append('S', 'X');\n} else {\n    result.append('S');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"1a286c03-3d85-11e6-9b8b-a9a6d5626a74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-1},{"failures":[],"tindex":"1a286c04-3d85-11e6-9b8b-353174f128eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:294","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len)"},"variableMap":{"b":"b","len":"offset","context":"context","buffer":"b","readPos":"readLen","bPos":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (readLen == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(buf);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[43,44,45,46,47,48],"tindex":"1a286c05-3d85-11e6-9b8b-99bce8f59183","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"1a28ba26-3d85-11e6-9b8b-256760ba2a07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int)"},"status":-2},{"failures":[49,50],"tindex":"1a28ba27-3d85-11e6-9b8b-a18dd3029849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-1},{"failures":[51,52],"tindex":"1a28e138-3d85-11e6-9b8b-1f19658aee6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"tempResult","bigBytes":"tempResult","len":"cp","startSrc":"keyLen","startDst":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"1a28e139-3d85-11e6-9b8b-9545d755fe18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (name2.length()) - 1"},"variableMap":{"name2":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((name1.length()) + (name2.length())))"},"status":-1},{"failures":[],"tindex":"1a28e13a-3d85-11e6-9b8b-cbd95a6af88e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:569","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'H') {\n    result.append('F');\n    index += 2;\n} else {\n    result.append('P');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"P\", \"B\") ? index + 2 : index + 1;\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:410","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'H') {\n    index = handleGH(value, result, index);\n} else if ((charAt(value, (index + 1))) == 'N') {\n    if (((index == 1) && (isVowel(charAt(value, 0)))) && (!slavoGermanic)) {\n        result.append(\"KN\", \"N\");\n    } else if (((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"EY\"))) && ((charAt(value, (index + 1))) != 'Y')) && (!slavoGermanic)) {\n        result.append(\"N\", \"KN\");\n    } else {\n        result.append(\"KN\");\n    }\n    index = index + 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"LI\")) && (!slavoGermanic)) {\n    result.append(\"KL\", \"L\");\n    index += 2;\n} else if ((index == 0) && (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    result.append('K', 'J');\n    index += 2;\n} else if (((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ER\")) || ((charAt(value, (index + 1))) == 'Y')) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"E\", \"I\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"RGY\", \"OGY\")))) {\n    result.append('K', 'J');\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"status":-2},{"failures":[66,67,68,69,70],"tindex":"1a29566b-3d85-11e6-9b8b-d7bf68b1c1e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"variableMap":{"nextChar":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:192","type":"CtAssignmentImpl","sourcecode":"current = getMappingCode(str.charAt(i))"},"status":-1},{"failures":[52,71,72],"tindex":"1a297d7c-3d85-11e6-9b8b-6df097a10b6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-1},{"failures":[],"tindex":"1a297d7d-3d85-11e6-9b8b-4f12dbd6260f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"strict"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[],"tindex":"1a297d7e-3d85-11e6-9b8b-bfbc827c0eb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:85","type":"CtIfImpl","sourcecode":"if (!(source instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\");\n} "},"status":0},{"failures":[73,74],"tindex":"1a297d7f-3d85-11e6-9b8b-c198655f4533","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"status":-1},{"failures":[],"tindex":"1a297d80-3d85-11e6-9b8b-d3055c855560","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[],"tindex":"1a297d81-3d85-11e6-9b8b-8f67a4b7f885","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:241","type":"CtIfImpl","sourcecode":"if ((chars.charAt(i)) == input) {\n    return true;\n} "},"status":-2},{"failures":[6],"tindex":"1a297d82-3d85-11e6-9b8b-f37bcfba26ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"1a2a8ef3-3d85-11e6-9b8b-a33eef5cfad7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"lContext":"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[75],"tindex":"1a2a8ef4-3d85-11e6-9b8b-4b53a5dab915","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:296","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"1a2a8ef5-3d85-11e6-9b8b-edd5ad0ee324","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:176","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(ch, 16)"},"status":-2},{"failures":[],"tindex":"1a2a8ef6-3d85-11e6-9b8b-a9e789fdb573","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"variableMap":{"a":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","b":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","m":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","n":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:767","type":"CtLocalVariableImpl","sourcecode":"int int = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int)"},"status":-2},{"failures":[],"tindex":"1a2a8ef7-3d85-11e6-9b8b-2976acc4e013","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = ctx1.digest()"},"variableMap":{"ctx1":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:283","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"1a2ab608-3d85-11e6-9b8b-c74b20878ef2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:282","type":"CtIfImpl","sourcecode":"if (strict) {\n    int int = 1;\n    for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n        int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            pos = 1;\n        }\n    }\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes);\n    boolean boolean = (!(printable.get(b))) || ((org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)) && (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    } \n    for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n} else {\n    for (final byte byte : bytes) {\n        int int = c;\n        if (b < 0) {\n            b = 256 + b;\n        } \n        if (printable.get(b)) {\n            buffer.write(b);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        }\n    }\n}"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101],"tindex":"1a2ab609-3d85-11e6-9b8b-7997d801a560","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[102,103],"tindex":"1a2ab60a-3d85-11e6-9b8b-5dd06d001a22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[104,105],"tindex":"1a2ab60b-3d85-11e6-9b8b-11889edac023","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[106],"tindex":"1a2ab60c-3d85-11e6-9b8b-b57de608e084","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-1},{"failures":[],"tindex":"1a2ab60d-3d85-11e6-9b8b-d56f203de491","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"1a2ab60e-3d85-11e6-9b8b-e51c8996a35e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2},{"failures":[4,5],"tindex":"1a2add1f-3d85-11e6-9b8b-658522e08036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101],"tindex":"1a2add20-3d85-11e6-9b8b-49a313e2c7e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[107,108],"tindex":"1a2b0331-3d85-11e6-9b8b-5bbbd04ba675","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"variableMap":{"blocksize":"b","cp":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-1},{"failures":[109],"tindex":"1a2b0332-3d85-11e6-9b8b-794971c89bb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"status":-1},{"failures":[],"tindex":"1a2b0333-3d85-11e6-9b8b-a1863cf9f06d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[110,102,51,111,112,103,52,71,72,113,114,115],"tindex":"1a2b0334-3d85-11e6-9b8b-bf0e88e065c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"variableMap":{"sBytes":"sBytes","tempResult":"sBytes","saltLen":"saltLen","cp":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"status":-1},{"failures":[],"tindex":"1a2b0335-3d85-11e6-9b8b-c1bdce00253d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":-2},{"failures":[],"tindex":"1a2b0336-3d85-11e6-9b8b-c751f78ce26d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:48","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.StringEncoder = null"},"variableMap":{"stringEncoder":"stringEncoder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:58","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.StringEncoder = stringEncoder"},"status":-2},{"failures":[],"tindex":"1a2b0337-3d85-11e6-9b8b-59883869fc20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:270","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('A');\n} "},"variableMap":{"result":"result","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[6,2,4,5],"tindex":"1a2b2a48-3d85-11e6-9b8b-e5e32f7b21e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:789","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"1a2b5159-3d85-11e6-9b8b-df6b964355a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"variableMap":{"es1":"value","es2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:93","type":"CtLocalVariableImpl","sourcecode":"int int = isSilentStart(value) ? 1 : 0"},"status":-2},{"failures":[],"tindex":"1a2b515a-3d85-11e6-9b8b-31910a0bb5b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)"},"status":-2},{"failures":[],"tindex":"1a2b515b-3d85-11e6-9b8b-c136d45f1669","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase()"},"status":-2},{"failures":[110,102,51,112,103,52,71,72],"tindex":"1a2eacbc-3d85-11e6-9b8b-f3f12dcbcc27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[93,94,96,97,98,99,100,101,116,117],"tindex":"1a2ed3cd-3d85-11e6-9b8b-e1beec977488","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[4,5],"tindex":"1a2ed3ce-3d85-11e6-9b8b-e3d3da07df1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"1a2ed3cf-3d85-11e6-9b8b-4b72e391a548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"1a2ed3d0-3d85-11e6-9b8b-dd2566ff401d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0},{"failures":[],"tindex":"1a2ed3d1-3d85-11e6-9b8b-fb00eeb9b5f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"1a2ed3d2-3d85-11e6-9b8b-4522010f9bfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-2},{"failures":[],"tindex":"1a2efae3-3d85-11e6-9b8b-1df944eddb03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(((byte[])(raw)))"},"variableMap":{"raw":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"1a2efae4-3d85-11e6-9b8b-2b229cca34f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":-2},{"failures":[6,4,5],"tindex":"1a2efae5-3d85-11e6-9b8b-5fd898a14eff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:452","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"1a2f21f6-3d85-11e6-9b8b-59f7ee86abcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":0},{"failures":[],"tindex":"1a2f21f7-3d85-11e6-9b8b-019542682f8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"status":-2},{"failures":[2],"tindex":"1a2f21f8-3d85-11e6-9b8b-eddf608fb007","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:742","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"1a2f21f9-3d85-11e6-9b8b-c3a30a995935","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"cs1","suffix":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return cs1.equals(cs2)"},"status":0},{"failures":[],"tindex":"1a2f21fa-3d85-11e6-9b8b-a7fcdfe41070","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":-2},{"failures":[],"tindex":"1a2f21fb-3d85-11e6-9b8b-bf6f54e9bc82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:94","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:525","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch"},"status":-2},{"failures":[51,52],"tindex":"1a2f21fc-3d85-11e6-9b8b-d51a2d7d4753","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-1},{"failures":[110,102,51,112,103,52,71,72],"tindex":"1a2f21fd-3d85-11e6-9b8b-d97eb026a9ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-1},{"failures":[],"tindex":"1a2f21fe-3d85-11e6-9b8b-a3694fc37554","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result"},"status":-2},{"failures":[107,108],"tindex":"1a2f490f-3d85-11e6-9b8b-45fbe45bdddf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"out[1] = right"},"status":-1},{"failures":[],"tindex":"1a2f4910-3d85-11e6-9b8b-0fe91c441998","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.class":"org.apache.commons.codec.language.bm.Languages.class","languageRulesResourceName":"resName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:255","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(resName)"},"status":-2},{"failures":[118],"tindex":"1a30a8a1-3d85-11e6-9b8b-975378620dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:894","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[0,1,6,2,4],"tindex":"1a30a8a2-3d85-11e6-9b8b-035fbd5ee034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-1},{"failures":[],"tindex":"1a30a8a3-3d85-11e6-9b8b-8d69d234bfde","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-2},{"failures":[52,71,72],"tindex":"1a30cfb4-3d85-11e6-9b8b-bf3b3590057b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-1},{"failures":[],"tindex":"1a30f6c5-3d85-11e6-9b8b-23b319382775","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"variableMap":{"negate":"result","boxContent":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-2},{"failures":[119,120,121,122,123,124,125,126,127,128],"tindex":"1a30f6c6-3d85-11e6-9b8b-6d083e19a43e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-1},{"failures":[],"tindex":"1a30f6c7-3d85-11e6-9b8b-ed6787c3513d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"status":-2},{"failures":[],"tindex":"1a30f6c8-3d85-11e6-9b8b-3d50239d2df6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"1a311dd9-3d85-11e6-9b8b-8fdf6f4ac42f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-2},{"failures":[],"tindex":"1a311dda-3d85-11e6-9b8b-13137acf11c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:143","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"status":-2},{"failures":[50],"tindex":"1a311ddb-3d85-11e6-9b8b-516cce8535a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":-1},{"failures":[],"tindex":"1a3144ec-3d85-11e6-9b8b-d7cad9555ee4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:211","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"status":-2},{"failures":[],"tindex":"1a3144ed-3d85-11e6-9b8b-277f6bd5f19d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"index","decodeSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"status":0},{"failures":[],"tindex":"1a3144ee-3d85-11e6-9b8b-59ec37c56021","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"variableMap":{"negate":"inExtendedComment","boxContent":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:183","type":"CtIfImpl","sourcecode":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = true;\n    } else if ((line.length()) > 0) {\n        ls.add(line);\n    } \n}"},"status":-2},{"failures":[],"tindex":"1a31930f-3d85-11e6-9b8b-6b682319cab2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"status":-2},{"failures":[],"tindex":"1a31ba20-3d85-11e6-9b8b-35f33eddaa99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"variableMap":{"txt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"status":-2},{"failures":[],"tindex":"1a31ba21-3d85-11e6-9b8b-078ce7b67cc5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[],"tindex":"1a31ba22-3d85-11e6-9b8b-eb90436e8cca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-2},{"failures":[],"tindex":"1a31ba23-3d85-11e6-9b8b-358ace56f9d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"status":-2},{"failures":[6,4,5],"tindex":"1a31ba24-3d85-11e6-9b8b-0327ac745a01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:413","type":"CtIfImpl","sourcecode":"if (((index == 1) && (isVowel(charAt(value, 0)))) && (!slavoGermanic)) {\n    result.append(\"KN\", \"N\");\n} else if (((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"EY\"))) && ((charAt(value, (index + 1))) != 'Y')) && (!slavoGermanic)) {\n    result.append(\"N\", \"KN\");\n} else {\n    result.append(\"KN\");\n}"},"status":-1},{"failures":[110,102,51,112,103],"tindex":"1a31ba25-3d85-11e6-9b8b-8750257f4010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer)"},"status":-1},{"failures":[],"tindex":"1a31ba26-3d85-11e6-9b8b-67e4bbf9871d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = ph.indexOf(\"[\")"},"variableMap":{"ph":"accentedWord"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = accentedWord.length()"},"status":-2},{"failures":[129],"tindex":"1a31ba27-3d85-11e6-9b8b-5d089e801709","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[],"tindex":"1a31ba28-3d85-11e6-9b8b-9d8352b5886e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:181","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bytes.int]"},"status":-2},{"failures":[33,130,131,38],"tindex":"1a31ba29-3d85-11e6-9b8b-df930d94ec2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141],"tindex":"1a31ba2a-3d85-11e6-9b8b-61ad7eab2f95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:236","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"1a31ba2b-3d85-11e6-9b8b-43d74c9a2274","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:141","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n} "},"variableMap":{"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH":"patternLength","builder":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:210","type":"CtIfImpl","sourcecode":"if (rules != null) {\n    for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n        final java.lang.String java.lang.String = rule.getPattern();\n        patternLength = pattern.length();\n        if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n            break;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"1a31ba2c-3d85-11e6-9b8b-2789ae0f54c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"status":-2},{"failures":[],"tindex":"1a31ba2d-3d85-11e6-9b8b-7ff812e2d1cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"eSwap1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:288","type":"CtAssignmentImpl","sourcecode":"right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule)"},"status":-2},{"failures":[],"tindex":"1a31ba2e-3d85-11e6-9b8b-9181bf7c1cd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"status":0},{"failures":[],"tindex":"1a31e13f-3d85-11e6-9b8b-c77d2c6fce15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:261","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"MCC\")"},"status":-2},{"failures":[88,89,90,142,91,92],"tindex":"1a31e140-3d85-11e6-9b8b-998da627d720","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"status":-1},{"failures":[53,54,55,56,57,58,143,144,59,60,61,62,63,145,146,64,65],"tindex":"1a31e141-3d85-11e6-9b8b-730d7c5b3504","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"line":"name1","org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((name1.length()) + (name2.length())))"},"status":-1},{"failures":[],"tindex":"1a31e142-3d85-11e6-9b8b-1b9e042f502a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return index + 3"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}