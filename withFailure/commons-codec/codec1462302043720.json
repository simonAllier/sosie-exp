{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":56,"org.apache.commons.codec.binary.HexTest.testCustomCharset":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":52,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":84,"org.apache.commons.codec.language.NysiisTest.testDropBy":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":44,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":8,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":66,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":27,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":79,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":83,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":19,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":74,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":61,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":37,"org.apache.commons.codec.language.NysiisTest.testRule6":80,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":13,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":41,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":43,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":60,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":7,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":18,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":69,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":76,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":9,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":73,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":63,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":57,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":6,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":62,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":14,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":55,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":47,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":90,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":75,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull":92,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":35,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":59,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":65,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":72,"org.apache.commons.codec.language.NysiisTest.testOthers":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":42,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":23,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":49,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":70,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.net.RFC1522CodecTest.testNullInput":91,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":39,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":87,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":78},"transformations":[{"failures":[],"tindex":"563a9bb9-1161-11e6-86e6-97950f23c865","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":-2},{"failures":[0,1],"tindex":"563ac2ca-1161-11e6-86e6-9f28b82b0d13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:681","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-2},{"failures":[],"tindex":"563ac2cb-1161-11e6-86e6-51c19d648370","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:409","type":"CtAssignmentImpl","sourcecode":"results[0] = a"},"status":-2},{"failures":[],"tindex":"563ac2cc-1161-11e6-86e6-bb8a029f8b17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:87","type":"CtAssignmentImpl","sourcecode":"value = cleanInput(value)"},"status":-3},{"failures":[],"tindex":"563ae9dd-1161-11e6-86e6-af64a4a780d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"terminator","y":"terminator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"status":-2},{"failures":[],"tindex":"563ae9de-1161-11e6-86e6-c3a115d8c0f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"status":-2},{"failures":[],"tindex":"563ae9df-1161-11e6-86e6-53cd7f3e32aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"563ae9e0-1161-11e6-86e6-3bf39699f6f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"563b0ff1-1161-11e6-86e6-497b65fc1cff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"org.apache.commons.codec.digest.Md5Crypt.MD5_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:161","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"status":-2},{"failures":[],"tindex":"563b0ff2-1161-11e6-86e6-8d6e1d8a6978","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"i","encodeSize":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","length":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","lineSeparator":"keyBytes","lineLength":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"status":-3},{"failures":[],"tindex":"563c4873-1161-11e6-86e6-51b5429f087f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)"},"status":-2},{"failures":[2],"tindex":"563c4874-1161-11e6-86e6-79ecf8167094","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-2},{"failures":[],"tindex":"563c4875-1161-11e6-86e6-a5802c8f9ea5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"variableMap":{"hard":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:150","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":0},{"failures":[0,1],"tindex":"563c4876-1161-11e6-86e6-854bcae3cc38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-2},{"failures":[0,1],"tindex":"563c6f87-1161-11e6-86e6-db7409f8a591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-2},{"failures":[],"tindex":"563c6f88-1161-11e6-86e6-e15f8fcbfac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:366","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":-3},{"failures":[3,4,5,6,7,8,9,10],"tindex":"563c6f89-1161-11e6-86e6-79b7b3e8fa22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:302","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"563c969a-1161-11e6-86e6-bda870b39157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"563c969b-1161-11e6-86e6-4f379918f5a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"status":-1},{"failures":[0,1,54,55,56],"tindex":"563c969c-1161-11e6-86e6-e3cb21740065","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"variableMap":{"ii":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"563cbdad-1161-11e6-86e6-e739f9dbeb6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"i","l_ascii":"out","bits":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[],"tindex":"563cbdae-1161-11e6-86e6-0d7a75332a8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[80,81,82],"tindex":"563cbdaf-1161-11e6-86e6-11ce27bf54fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-1},{"failures":[1,55,56],"tindex":"563ce4c0-1161-11e6-86e6-c70bf50afb57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:990","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"563ce4c1-1161-11e6-86e6-6beb9df7604f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"n","right":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:329","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"status":-2},{"failures":[],"tindex":"563ce4c2-1161-11e6-86e6-1d2af9db0d4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"variableMap":{"name":"str","firstLetter":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)"},"status":-2},{"failures":[],"tindex":"563ce4c3-1161-11e6-86e6-f5250424cdd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"readPos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:296","type":"CtIfImpl","sourcecode":"if ((context.int) >= (context.int)) {\n    context.byte[] = null;\n} "},"status":-2},{"failures":[0,1],"tindex":"563d0bd4-1161-11e6-86e6-5b84988a10d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"status":-1},{"failures":[],"tindex":"563d0bd5-1161-11e6-86e6-9781ff1d402a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:274","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"563d0bd6-1161-11e6-86e6-e5178b6d3e02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:790","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":-2},{"failures":[83,84,85,86,87,88,89,90],"tindex":"563d32e7-1161-11e6-86e6-91bfed73bb32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"status":-1},{"failures":[],"tindex":"563d32e8-1161-11e6-86e6-43a904ab7f80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"unencodedBlockSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"status":-2},{"failures":[],"tindex":"563d32e9-1161-11e6-86e6-d5eb9e8b2de5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:74","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"563d32ea-1161-11e6-86e6-f9dfc2b1eba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:283","type":"CtIfImpl","sourcecode":"if (useHex) {\n    this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[];\n    this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[];\n} else {\n    this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[];\n    this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[];\n}"},"status":-2},{"failures":[91],"tindex":"563d59fb-1161-11e6-86e6-af8cc0665b76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:127","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"563d59fc-1161-11e6-86e6-7f5bd914db8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:559","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:182","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":-3},{"failures":[],"tindex":"563d59fd-1161-11e6-86e6-bdfd656311d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:333","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-2},{"failures":[],"tindex":"563d810e-1161-11e6-86e6-4315ad9f0fec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-3},{"failures":[92],"tindex":"563d810f-1161-11e6-86e6-e936263decf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:274","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":39,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}