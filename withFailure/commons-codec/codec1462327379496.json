{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"5386eb60-119c-11e6-a277-edb8c6e751e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"bar\", \"ben\", \"da\", \"de\", \"van\", \"von\"))))"},"variableMap":{"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES","org.apache.commons.codec.language.bm.NameType.ASHKENAZI":"org.apache.commons.codec.language.bm.NameType.SEPHARDIC"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:241","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"al\", \"el\", \"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))"},"status":0},{"failures":[],"tindex":"53873981-119c-11e6-a277-6b7c70a106e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"status":0},{"failures":[],"tindex":"53873982-119c-11e6-a277-3baa3be055cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:261","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], (((char[].int) - (org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.this.int)) + start), newData, 0, length)"},"status":-3},{"failures":[],"tindex":"53876093-119c-11e6-a277-c31a5fce3699","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:466","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : branches) {\n    sb.append(branch);\n    if ((++index) < (branches.int)) {\n        sb.append('|');\n    } \n}"},"status":0},{"failures":[],"tindex":"53876094-119c-11e6-a277-81443d853597","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:190","type":"CtReturnImpl","sourcecode":"return alternate ? result.getAlternate() : result.getPrimary()"},"status":0},{"failures":[],"tindex":"53876095-119c-11e6-a277-59bb16c38aba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:177","type":"CtInvocationImpl","sourcecode":"rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept))"},"status":0},{"failures":[],"tindex":"538787a6-119c-11e6-a277-597632d19b9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:179","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":0},{"failures":[],"tindex":"538787a7-119c-11e6-a277-8794b2279389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:350","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"538787a8-119c-11e6-a277-67719f62cc89","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"538787a9-119c-11e6-a277-7ba7216f4d63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.this.java.lang.String = charset"},"variableMap":{"charset":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[],"tindex":"5387aeba-119c-11e6-a277-37b662c10836","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"status":0},{"failures":[],"tindex":"5387aebb-119c-11e6-a277-6d1ac192a373","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"input = input.trim()"},"status":0},{"failures":[],"tindex":"5387aebc-119c-11e6-a277-79fb0b9c8db8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n        context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":0},{"failures":[],"tindex":"5387d5cd-119c-11e6-a277-3dd18c56ed39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":0},{"failures":[],"tindex":"5387d5ce-119c-11e6-a277-7b575f9a1a24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":0},{"failures":[],"tindex":"5387d5cf-119c-11e6-a277-a92bc786d35a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":0},{"failures":[],"tindex":"5387d5d0-119c-11e6-a277-2718257f8da4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:208","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = data.int"},"status":0},{"failures":[],"tindex":"5387fce1-119c-11e6-a277-35fa2c12a82b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"variableMap":{"tmp":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":0},{"failures":[],"tindex":"5387fce2-119c-11e6-a277-0db59f6b7140","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_S"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"5387fce3-119c-11e6-a277-951aad78f59d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"variableMap":{"c1":"key","c2":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"538823f4-119c-11e6-a277-83b7b97c28e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"status":0},{"failures":[],"tindex":"538823f5-119c-11e6-a277-3b9b39683384","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:59","type":"CtLocalVariableImpl","sourcecode":"int int = outLen"},"variableMap":{"outLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:167","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":0},{"failures":[],"tindex":"538823f6-119c-11e6-a277-3b4210525d53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.addAll(newPhonemes)"},"variableMap":{"newPhonemes":"newPhonemes","phonemes":"newPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:115","type":"CtInvocationImpl","sourcecode":"newPhonemes.add(join)"},"status":-3},{"failures":[],"tindex":"538823f7-119c-11e6-a277-0fc185407677","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"variableMap":{"input":"cs1","prefix":"cs1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return cs1.equals(cs2)"},"status":0},{"failures":[],"tindex":"53884b08-119c-11e6-a277-9d6062b89ec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"variableMap":{"boxContent":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":0},{"failures":[],"tindex":"53884b09-119c-11e6-a277-e927a18b8a54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:65","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(' ')"},"status":0},{"failures":[],"tindex":"53884b0a-119c-11e6-a277-89ce9336522f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"status":0},{"failures":[],"tindex":"5388721b-119c-11e6-a277-fb638467e84c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:379","type":"CtForEachImpl","sourcecode":"for (char char : input.toCharArray()) {\n    if (java.lang.Character.isWhitespace(ch)) {\n        continue;\n    } \n    ch = java.lang.Character.toLowerCase(ch);\n    if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n        ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n    } \n    sb.append(ch);\n}"},"status":0},{"failures":[],"tindex":"5388721c-119c-11e6-a277-71694cee092a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:307","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (name1Char.int) ; i++) {\n    if (i > name2Size) {\n        break;\n    } \n    name1LtRStart = name1.substring(i, (i + 1));\n    name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1));\n    name2RtLStart = name2.substring(i, (i + 1));\n    name2RtLEnd = name2.substring((name2Size - i), ((name2Size - i) + 1));\n    if (name1LtRStart.equals(name2RtLStart)) {\n        name1Char[i] = ' ';\n        name2Char[i] = ' ';\n    } \n    if (name1LtREnd.equals(name2RtLEnd)) {\n        name1Char[(name1Size - i)] = ' ';\n        name2Char[(name2Size - i)] = ' ';\n    } \n}"},"status":0},{"failures":[],"tindex":"5388992d-119c-11e6-a277-df67532062c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"status":0},{"failures":[],"tindex":"5388992e-119c-11e6-a277-29f1e8ea95c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:87","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : charsToTrim) {\n    upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String);\n}"},"variableMap":{"upperName":"pattern","charsToTrim":"parts","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:307","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n    final char char = r.java.lang.String.charAt(0);\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n    if (rules == null) {\n        rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n        ruleMapping.put(patternKey, rules);\n    } \n    rules.add(r);\n} catch (final java.lang.IllegalArgumentException e) {\n    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n}"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":31,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}