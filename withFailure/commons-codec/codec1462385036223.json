{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":53,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":45,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":6,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":32,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":52,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":39,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":28,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":8,"org.apache.commons.codec.binary.Base64Test.testBase64":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":43,"org.apache.commons.codec.binary.Base64Test.testTriplets":17,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":12,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":11,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":56,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":63,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testUUID":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":14,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":31,"org.apache.commons.codec.binary.Base64Test.testSingletons":33,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":10,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":5,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":68,"org.apache.commons.codec.binary.Base64Test.testPairs":20,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":72,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":30,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":4,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":38,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":41,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":9,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":24,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":58,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":64,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":29,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":59,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":71,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":27,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":46,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":69,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":73,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":34,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":57,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":49,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":51,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":19,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":60,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":3,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":13,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":42,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":18,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":23,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":35,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":15,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":62,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":48,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":55,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":50,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":16,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":54},"transformations":[{"failures":[],"tindex":"919d4545-1222-11e6-a00a-fdf02a38df7a","series":0,"name":"add","transplant":{"toString":"int tmpLen = length","position":"org.apache.commons.codec.binary.CharSequenceUtils:56","type":"CtLocalVariableImpl","sourcecode":"int int = length"},"variableMap":{"length":"j"},"type":"adrStmt","transplantationPoint":{"toString":"int f = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4","position":"org.apache.commons.codec.binary.Hex:89","type":"CtLocalVariableImpl","sourcecode":"int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4"},"status":-2},{"failures":[],"tindex":"919d6c56-1222-11e6-a00a-e395ab81cef9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)","position":"org.apache.commons.codec.net.BCodec:144","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"919d6c57-1222-11e6-a00a-e5037663c11d","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"patternKey","salt":"patternKey","prefix":"patternKey"},"type":"adrStmt","transplantationPoint":{"toString":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n    lines.put(patternKey, rules);\n} ","position":"org.apache.commons.codec.language.bm.Rule:474","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n    lines.put(patternKey, rules);\n} "},"status":-2},{"failures":[0,1,2],"tindex":"919d9368-1222-11e6-a00a-251259f59db1","series":0,"name":"replace","transplant":{"toString":"from = to + 1","position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1","position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"919dba79-1222-11e6-a00a-c9af2b355b55","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"buf","key":"buf"},"type":"adrStmt","transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"failures":[24,25],"tindex":"919dba7a-1222-11e6-a00a-911187b90eeb","series":0,"name":"replace","transplant":{"toString":"u >>>= 1","position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"variableMap":{"u":"len"},"type":"adrStmt","transplantationPoint":{"toString":"len--","position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"status":-1},{"failures":[],"tindex":"919de18b-1222-11e6-a00a-1bbd074a9ce8","series":0,"name":"replace","transplant":{"toString":"return isDoubleMetaphoneEqual(value1, value2, false)","position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"variableMap":{"value2":"input","value1":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return (input.length()) == 0","position":"org.apache.commons.codec.language.bm.Rule:513","type":"CtReturnImpl","sourcecode":"return (input.length()) == 0"},"status":-2},{"failures":[],"tindex":"919de18c-1222-11e6-a00a-4ff54515fab9","series":0,"name":"replace","transplant":{"toString":"final java.lang.StringBuilder local = new java.lang.StringBuilder(40)","position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder sb = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:258","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"919e089d-1222-11e6-a00a-3190a85d9edc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.replacementAtStart = replacementAtStart.split(\"\\\\|\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:171","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementAtStart.split(\"\\\\|\")"},"status":-2},{"failures":[],"tindex":"919f1a0e-1222-11e6-a00a-5124e5e873cd","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"v\", \"f\")","position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"pattern"},"type":"adrStmt","transplantationPoint":{"toString":"this.pattern = pattern","position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"status":-2},{"failures":[],"tindex":"919f1a0f-1222-11e6-a00a-d56659beb383","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Crypt.crypt(keyBytes, null)","position":"org.apache.commons.codec.digest.Crypt:46","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(keyBytes, null)"},"status":-2},{"failures":[],"tindex":"919f4120-1222-11e6-a00a-75ffd1bf9ea0","series":0,"name":"replace","transplant":{"toString":"cp = 0","position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"length"},"type":"adrStmt","transplantationPoint":{"toString":"this.encodeSize = (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)","position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int)"},"status":-2},{"failures":[1,52,53,54],"tindex":"919f4121-1222-11e6-a00a-c19a1a41d3a7","series":0,"name":"replace","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.toString()","position":"org.apache.commons.codec.language.DoubleMetaphone:1001","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.toString()"},"status":-1},{"failures":[0,1],"tindex":"919f4122-1222-11e6-a00a-b3cf01e07116","series":0,"name":"replace","transplant":{"toString":"result.append(\"TS\", \"FX\")","position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X', 'S')","position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[55,56,57,58,59,60,61],"tindex":"919f6833-1222-11e6-a00a-ab0aa779eda8","series":0,"name":"replace","transplant":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"toString":"if ((strA.length()) > (strB.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX) - (strA.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX) - (strB.length())));\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:336","type":"CtIfImpl","sourcecode":"if ((strA.length()) > (strB.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())));\n}"},"status":-1},{"failures":[],"tindex":"919f6834-1222-11e6-a00a-b77d613e55ec","series":0,"name":"replace","transplant":{"toString":"d = (d >>> 2) | (d << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"right"},"type":"adrStmt","transplantationPoint":{"toString":"t = right","position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"status":-2},{"failures":[62,63],"tindex":"919f8f45-1222-11e6-a00a-a78868a004fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((m.group(3)) != null) {\n    rounds = java.lang.Integer.parseInt(m.group(3));\n    rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX, rounds));\n    roundsCustom = true;\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:149","type":"CtIfImpl","sourcecode":"if ((m.group(3)) != null) {\n    rounds = java.lang.Integer.parseInt(m.group(3));\n    rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds));\n    roundsCustom = true;\n} "},"status":-1},{"failures":[],"tindex":"919f8f46-1222-11e6-a00a-afa7f845c197","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.language.bm.Rule:284","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[64,65,66,67,68,69,70,71],"tindex":"919f8f47-1222-11e6-a00a-ad4210d67384","series":0,"name":"replace","transplant":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"variableMap":{"len":"todo"},"type":"adrStmt","transplantationPoint":{"toString":"return n - todo","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:209","type":"CtReturnImpl","sourcecode":"return n - todo"},"status":-1},{"failures":[72,73],"tindex":"919f8f48-1222-11e6-a00a-8fa1131ebd97","series":0,"name":"replace","transplant":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"status":-1},{"failures":[],"tindex":"919fb659-1222-11e6-a00a-e14ff076335e","series":0,"name":"replace","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length","len":"length"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (bytes.length) ; i++) {\n    final int b = bytes[i];\n    if (b == '+') {\n        buffer.write(' ');\n    } else if (b == (org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR)) {\n        try {\n            final int u = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            final int l = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n        }\n    } else {\n        buffer.write(b);\n    }\n}","position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == '+') {\n        buffer.write(' ');\n    } else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n        }\n    } else {\n        buffer.write(b);\n    }\n}"},"status":-2},{"failures":[],"tindex":"919fb65a-1222-11e6-a00a-a703e4965372","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"cachedString = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[],"tindex":"91a0c7cb-1222-11e6-a00a-a7f3cb10f089","series":0,"name":"replace","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return java.lang.String.format(\"%s=(%s,%s,%s)\", pattern, java.util.Arrays.asList(replacementAtStart), java.util.Arrays.asList(replacementBeforeVowel), java.util.Arrays.asList(replacementDefault))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:204","type":"CtReturnImpl","sourcecode":"return java.lang.String.format(\"%s=(%s,%s,%s)\", java.lang.String, java.util.Arrays.asList(java.lang.String[]), java.util.Arrays.asList(java.lang.String[]), java.util.Arrays.asList(java.lang.String[]))"},"status":0},{"failures":[],"tindex":"91a0c7cc-1222-11e6-a00a-7d572ac39475","series":0,"name":"add","transplant":{"toString":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)","position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"ii"},"type":"adrStmt","transplantationPoint":{"toString":"ii -= 16","position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":24,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}