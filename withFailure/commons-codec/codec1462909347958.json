{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":24,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":14,"org.apache.commons.codec.language.NysiisTest.testSnat":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":1,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":15,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":101,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":112,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":98,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":10,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData":62,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse":114,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":55,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":110,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":109,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":111,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":91,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":95,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":4,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":12,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":34,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":73,"org.apache.commons.codec.language.NysiisTest.testCap":38,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":68,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":74,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":77,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":76,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":33,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch":118,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":80,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":99,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":23,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":29,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":65,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":60,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":89,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":27,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":3,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":18,"org.apache.commons.codec.language.NysiisTest.testTranan":53,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":90,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":103,"org.apache.commons.codec.language.NysiisTest.testFal":41,"org.apache.commons.codec.language.NysiisTest.testSnad":48,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":20,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":56,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":86,"org.apache.commons.codec.language.NysiisTest.testDropBy":51,"org.apache.commons.codec.binary.Base64Test.testBase64":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch":116,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":9,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":32,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":22,"org.apache.commons.codec.binary.Base64Test.testUUID":70,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":66,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":79,"org.apache.commons.codec.binary.Base64Test.testSingletons":83,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":17,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":93,"org.apache.commons.codec.binary.Base64Test.testPairs":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":5,"org.apache.commons.codec.language.NysiisTest.testRule2":43,"org.apache.commons.codec.language.NysiisTest.testRule1":42,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":92,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":16,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData":26,"org.apache.commons.codec.language.NysiisTest.testRule7":46,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":87,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":6,"org.apache.commons.codec.language.NysiisTest.testRule6":45,"org.apache.commons.codec.language.NysiisTest.testRule5":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":59,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":108,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":50,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":67,"org.apache.commons.codec.language.NysiisTest.testBran":47,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":104,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse":117,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":96,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":28,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":81,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":88,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":113,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":106,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":82,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":19,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":64,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":11,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":94,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":58,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":35,"org.apache.commons.codec.language.NysiisTest.testDad":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":97,"org.apache.commons.codec.language.NysiisTest.testOthers":52,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":72,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":84,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":57,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":36,"org.apache.commons.codec.language.NysiisTest.testDan":40,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":7,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":107,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":21,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":71,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":100,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse":115},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"53c42a45-16e7-11e6-86af-8f511dd0ede2","series":0,"name":"replace","transplant":{"toString":"return binaryData","position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"variableMap":{"binaryData":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:410","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"status":-1},{"failures":[],"tindex":"53c45156-16e7-11e6-86af-b7fda8cf15b2","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.RFC1522Codec:70","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"53c45157-16e7-11e6-86af-63e83c85fa49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(context.lbitWorkArea)) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:516","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[21,22,23,24],"tindex":"53c47868-16e7-11e6-86af-dd60a49bd0ee","series":0,"name":"replace","transplant":{"toString":"result.append(\"TS\", \"FX\")","position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('0', 'T')","position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"status":-1},{"failures":[],"tindex":"53c47869-16e7-11e6-86af-a7b7c8c2256c","series":0,"name":"replace","transplant":{"toString":"diff++","position":"org.apache.commons.codec.language.SoundexUtils:118","type":"CtUnaryOperatorImpl","sourcecode":"diff++"},"variableMap":{"diff":"sumLength"},"type":"adrStmt","transplantationPoint":{"toString":"minRating = getMinRating(sumLength)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-2},{"failures":[25,26,27,28,29,30],"tindex":"53c4786a-16e7-11e6-86af-e7768d9d16bb","series":0,"name":"replace","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"salt","leftCharacter":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX","rightCharacter":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX","location":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"status":-1},{"failures":[31,32,33,34,35],"tindex":"53c49f7b-16e7-11e6-86af-89756bd7fd62","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"l3\", \"L3\")","position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.toLowerCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"53c4c68c-16e7-11e6-86af-5d5e15579da6","series":0,"name":"add","transplant":{"toString":"boolean roundsCustom = false","position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final boolean shouldMatch = !negate","position":"org.apache.commons.codec.language.bm.Rule:557","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = !negate"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"53c4c68d-16e7-11e6-86af-ff7604a274f6","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.TRUE_LENGTH, string.length())) : string","position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.int, string.length())) : string"},"status":-1},{"failures":[55,56,57,58,59,60],"tindex":"53c4ed9e-16e7-11e6-86af-ed04e05e4169","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[40], altResult[61], altResult[19], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:488","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[40], altResult[61], altResult[19], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"status":-1},{"failures":[],"tindex":"53c4ed9f-16e7-11e6-86af-056a49a8fcb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[61,62,63],"tindex":"53c514b0-16e7-11e6-86af-7b414f32b962","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; (i < (key.length)) && (i < (original.length)) ; i++) {\n    final int iChar = original[i];\n    key[i] = ((byte)(iChar << 1));\n}","position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"53c514b1-16e7-11e6-86af-593c3e1492f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (result >= 0) {\n    context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK);\n    context.ibitWorkArea = ((context.ibitWorkArea) << (org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE)) + result;\n    if ((context.modulus) == 0) {\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    } \n} ","position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[],"tindex":"53c53bc2-16e7-11e6-86af-63838a409336","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.Soundex.this, s1, s2)","position":"org.apache.commons.codec.language.Soundex:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.Soundex.this, s1, s2)"},"variableMap":{"s1":"s1","s2":"s2"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.SoundexUtils.differenceEncoded(encoder.encode(s1), encoder.encode(s2))","position":"org.apache.commons.codec.language.SoundexUtils:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.differenceEncoded(encoder.encode(s1), encoder.encode(s2))"},"status":-2},{"failures":[],"tindex":"53c562d3-16e7-11e6-86af-81014b53f4fd","series":0,"name":"add","transplant":{"toString":"return result.substring(1)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return result.substring(1)"},"variableMap":{"result":"passwd"},"type":"adrStmt","transplantationPoint":{"toString":"return passwd.toString()","position":"org.apache.commons.codec.digest.Md5Crypt:300","type":"CtReturnImpl","sourcecode":"return passwd.toString()"},"status":-2},{"failures":[],"tindex":"53c562d4-16e7-11e6-86af-3d59b53a7866","series":0,"name":"add","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"X\", \"SK\")","position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"status":-2},{"failures":[109,110,111],"tindex":"53c562d5-16e7-11e6-86af-f7d43c794179","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"patternLength = 1","position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":-1},{"failures":[22],"tindex":"53c562d6-16e7-11e6-86af-35ee8e9a5b6c","series":0,"name":"replace","transplant":{"toString":"result.append(\"X\", \"SK\")","position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:611","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[21,22,23],"tindex":"53c589e7-16e7-11e6-86af-0108812ddae7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('A', 'F')","position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"status":-1},{"failures":[112,113],"tindex":"53c589e8-16e7-11e6-86af-954a3a5dd9c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"messageDigest.update(valueToDigest)","position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"status":-1},{"failures":[],"tindex":"53c589e9-16e7-11e6-86af-593288678c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"53c589ea-16e7-11e6-86af-990f8bb65a23","series":0,"name":"replace","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"replacedName","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"replacedName"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String dc : org.apache.commons.codec.language.MatchRatingApproachEncoder.DOUBLE_CONSONANT) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String singleLetter = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String java.lang.String = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}"},"status":-3},{"failures":[],"tindex":"53c5b0fb-16e7-11e6-86af-47c7f4bd596e","series":0,"name":"add","transplant":{"toString":"final int nextIndex = getPatternLength()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int currentLine = 0","position":"org.apache.commons.codec.language.bm.Rule:404","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[114,115,116,117,118],"tindex":"53c5b0fc-16e7-11e6-86af-c9a0a07a32f5","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"53c5d80d-16e7-11e6-86af-f1a27d6c84f3","series":0,"name":"add","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Rule:708","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"53c5d80e-16e7-11e6-86af-6fff60246a9c","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")","position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:322","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e)"},"status":-2},{"failures":[],"tindex":"53c5d80f-16e7-11e6-86af-d9d27c121b8e","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"out.flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-3},{"failures":[],"tindex":"53c5ff20-16e7-11e6-86af-338f6328b893","series":0,"name":"add","transplant":{"toString":"return decode(str, getDefaultCharset())","position":"org.apache.commons.codec.net.URLCodec:293","type":"CtReturnImpl","sourcecode":"return decode(str, getDefaultCharset())"},"variableMap":{"str":"org.apache.commons.codec.digest.Md5Crypt.MD5_PREFIX"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt, org.apache.commons.codec.digest.Md5Crypt.MD5_PREFIX)","position":"org.apache.commons.codec.digest.Md5Crypt:161","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"status":-2},{"failures":[],"tindex":"53c5ff21-16e7-11e6-86af-35e4b0d4e08f","series":0,"name":"add","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"53c5ff22-16e7-11e6-86af-3f225cfd6b44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.NullPointerException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2},{"failures":[],"tindex":"53c5ff23-16e7-11e6-86af-b7e9425f5d9a","series":0,"name":"add","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((parts.length) != 3) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n} ","position":"org.apache.commons.codec.language.bm.Lang:168","type":"CtIfImpl","sourcecode":"if ((parts.int) != 3) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n} "},"status":-2},{"failures":[],"tindex":"53c62634-16e7-11e6-86af-5bfc8078bc39","series":0,"name":"replace","transplant":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"variableMap":{"upperName":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return decodeText(str)","position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"status":-2},{"failures":[],"tindex":"53c62635-16e7-11e6-86af-c1f2296ff978","series":0,"name":"replace","transplant":{"toString":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)","position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"b","d":"b"},"type":"adrStmt","transplantationPoint":{"toString":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":33,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}