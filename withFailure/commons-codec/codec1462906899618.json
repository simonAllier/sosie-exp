{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":6,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":28,"org.apache.commons.codec.language.NysiisTest.testSnat":20,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":29,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":30,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":34,"org.apache.commons.codec.language.NysiisTest.testDropBy":22,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":32,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":33,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":4,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":35,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.language.NysiisTest.testRule2":14,"org.apache.commons.codec.language.NysiisTest.testRule1":13,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":45,"org.apache.commons.codec.language.NysiisTest.testRule7":17,"org.apache.commons.codec.language.NysiisTest.testRule6":16,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":47,"org.apache.commons.codec.language.NysiisTest.testRule5":15,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":46,"org.apache.commons.codec.language.NysiisTest.testCap":9,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":40,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":21,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":44,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":42,"org.apache.commons.codec.language.NysiisTest.testBran":18,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":25,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":43,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":50,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":37,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":49,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":5,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":51,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":52,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":36,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":41,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":27,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":26,"org.apache.commons.codec.language.SoundexTest.testB650":31,"org.apache.commons.codec.language.NysiisTest.testDad":10,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":48,"org.apache.commons.codec.language.SoundexTest.testNewInstance":39,"org.apache.commons.codec.language.NysiisTest.testOthers":23,"org.apache.commons.codec.language.NysiisTest.testTranan":24,"org.apache.commons.codec.language.SoundexTest.testDifference":38,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":7,"org.apache.commons.codec.language.NysiisTest.testDan":11,"org.apache.commons.codec.language.NysiisTest.testFal":12,"org.apache.commons.codec.language.NysiisTest.testSnad":19,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":54,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":53,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[0,1],"tindex":"a06e8976-16e1-11e6-8f63-33da82d4b0df","series":0,"name":"replace","transplant":{"toString":"final char charOne = salt.charAt(1)","position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"variableMap":{"salt":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"final char charZero = salt.charAt(0)","position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(0)"},"status":-1},{"failures":[2,3],"tindex":"a06eb087-16e1-11e6-8f63-47e58b650ade","series":0,"name":"replace","transplant":{"toString":"result.append(\"KN\")","position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"a06eb088-16e1-11e6-8f63-41b696ee69ee","series":0,"name":"add","transplant":{"toString":"u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"this.decodeSize = (org.apache.commons.codec.binary.Base64.this.encodeSize) - 1","position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"status":-2},{"failures":[],"tindex":"a06ed799-16e1-11e6-8f63-0d2a52576eee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"continue","position":"org.apache.commons.codec.language.RefinedSoundex:194","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[2,3,4,5,6],"tindex":"a06ed79a-16e1-11e6-8f63-a5ae0648b6af","series":0,"name":"replace","transplant":{"toString":"result.append(\"KL\", \"L\")","position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('F')","position":"org.apache.commons.codec.language.DoubleMetaphone:570","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"a06ed79b-16e1-11e6-8f63-77bf6cfd5e60","series":0,"name":"replace","transplant":{"toString":"l_ascii[(jj - bits)] = '0'","position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"i","l_ascii":"chars","bits":"count"},"type":"adrStmt","transplantationPoint":{"toString":"chars[(count++)] = str.charAt(i)","position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"chars[(count++)] = str.charAt(i)"},"status":-1},{"failures":[],"tindex":"a06efeac-16e1-11e6-8f63-f1b5b861e0cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((rightLength = input.length()) > 0) {\n    nextChar = input.getNextChar();\n} else {\n    nextChar = '-';\n}","position":"org.apache.commons.codec.language.ColognePhonetic:341","type":"CtIfImpl","sourcecode":"if ((rightLength = input.length()) > 0) {\n    nextChar = input.getNextChar();\n} else {\n    nextChar = '-';\n}"},"status":-2},{"failures":[],"tindex":"a06efead-16e1-11e6-8f63-b9a122bbde79","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)","position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"variableMap":{"byteArray":"object"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    final byte[] byteArray = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}","position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"a06efeae-16e1-11e6-8f63-e730efbb31a1","series":0,"name":"replace","transplant":{"toString":"char nextChar","position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.RADIX))","position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"status":-2},{"failures":[],"tindex":"a06f25bf-16e1-11e6-8f63-15a578a17f77","series":0,"name":"replace","transplant":{"toString":"final char ch = getNextChar()","position":"org.apache.commons.codec.language.ColognePhonetic:274","type":"CtLocalVariableImpl","sourcecode":"final char char = getNextChar()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char code","position":"org.apache.commons.codec.language.ColognePhonetic:333","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"a06f25c0-16e1-11e6-8f63-a9659442e2a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((newPhonemes.size()) >= maxPhonemes) {\n    break EXPR;\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:116","type":"CtIfImpl","sourcecode":"if ((newPhonemes.size()) >= maxPhonemes) {\n    break EXPR;\n} "},"status":0},{"failures":[53,54],"tindex":"a06f25c1-16e1-11e6-8f63-bb8ba10dc54a","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"finalRules can not be null\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index))","position":"org.apache.commons.codec.binary.Hex:178","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":12,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}