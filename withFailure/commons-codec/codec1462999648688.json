{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":92,"org.apache.commons.codec.binary.HexTest.testCustomCharset":3,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":71,"org.apache.commons.codec.language.NysiisTest.testSnat":113,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":55,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":54,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":121,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":122,"org.apache.commons.codec.net.URLCodecTest.testEncodeNull":8,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":91,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":96,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":150,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":149,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":16,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":29,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":75,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":154,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":61,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":142,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":44,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":102,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":40,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":86,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":160,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":138,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":158,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":161,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":60,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":25,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":32,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":26,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":131,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":132,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":153,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":48,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":76,"org.apache.commons.codec.language.NysiisTest.testCap":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":136,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":10,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":130,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":128,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":9,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":129,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":82,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":89,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":94,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":45,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":83,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":162,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":63,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":79,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":88,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":5,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":135,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":15,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":105,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":106,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":159,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":53,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":167,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":41,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":39,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":147,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":148,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":27,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":52,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":168,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":22,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":99,"org.apache.commons.codec.language.SoundexTest.testNewInstance":125,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":69,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":74,"org.apache.commons.codec.language.NysiisTest.testTranan":115,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":66,"org.apache.commons.codec.language.NysiisTest.testFal":110,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":133,"org.apache.commons.codec.language.NysiisTest.testSnad":112,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":164,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":77,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":72,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":35,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":85,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":19,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":118,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":119,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":120,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":65,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":141,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":139,"org.apache.commons.codec.binary.Base64Test.testBase64":24,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":43,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":146,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":46,"org.apache.commons.codec.binary.Base64Test.testUUID":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":6,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":87,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":163,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":42,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":34,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":144,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":80,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":143,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":100,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":84,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":155,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":134,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":47,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":137,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":38,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":126,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":151,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":67,"org.apache.commons.codec.language.NysiisTest.testBran":111,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":116,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":13,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":104,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":123,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":157,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":68,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":98,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":11,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":93,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":103,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":78,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":166,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":51,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":30,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":21,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":127,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":117,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":31,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":70,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":156,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":145,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":37,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":50,"org.apache.commons.codec.language.NysiisTest.testDad":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":28,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":90,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":97,"org.apache.commons.codec.language.NysiisTest.testOthers":114,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":23,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":56,"org.apache.commons.codec.language.SoundexTest.testDifference":124,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":7,"org.apache.commons.codec.language.NysiisTest.testDan":109,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":95,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":140,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":14,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":62,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":101},"transformations":[{"failures":[],"tindex":"932f54cf-17b9-11e6-aa61-d9dc891a8dd7","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.URLCodec.this.charset = charset","position":"org.apache.commons.codec.net.URLCodec:109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.this.java.lang.String = charset"},"variableMap":{"charset":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3\", \"\")","position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"932f7be0-17b9-11e6-aa61-2b3c62230acc","series":0,"name":"add","transplant":{"toString":"l_ascii[(jj - bits)] = '1'","position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"f","l_ascii":"out","bits":"i"},"type":"adrStmt","transplantationPoint":{"toString":"out[i] = ((byte)(f & 255))","position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"status":-1},{"failures":[6],"tindex":"932f7be1-17b9-11e6-aa61-d7b356d15d63","series":0,"name":"add","transplant":{"toString":"result.appendAlternate('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"N\", \"KN\")","position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"932fa2f2-17b9-11e6-aa61-4d34db7ba95f","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"bytes","key":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.WWW_FORM_URL, bytes)","position":"org.apache.commons.codec.net.URLCodec:194","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet, bytes)"},"status":-1},{"failures":[13],"tindex":"932fa2f3-17b9-11e6-aa61-8392319d9974","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")","position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"status":-1},{"failures":[14,6,15],"tindex":"932fa2f4-17b9-11e6-aa61-971aa0bf5530","series":0,"name":"replace","transplant":{"toString":"result.appendPrimary('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:678","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"932fa2f5-17b9-11e6-aa61-19e3be117359","series":0,"name":"replace","transplant":{"toString":"inExtendedComment = true","position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"variableMap":{"inExtendedComment":"strict"},"type":"adrStmt","transplantationPoint":{"toString":"this.strict = strict","position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[],"tindex":"932fca06-17b9-11e6-aa61-9f1ff5f30dc7","series":0,"name":"replace","transplant":{"toString":"int patternLength = 1","position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int minRating = 0","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:185","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"932fca07-17b9-11e6-aa61-a14acb21efa5","series":0,"name":"replace","transplant":{"toString":"this.chunkSeparatorLength = chunkSeparatorLength","position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"offset"},"type":"adrStmt","transplantationPoint":{"toString":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8","position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-2},{"failures":[14,6,15],"tindex":"932fca08-17b9-11e6-aa61-d32ec4743ec6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('J', 'K')","position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"status":-1},{"failures":[14,6,16,15,17],"tindex":"932fca09-17b9-11e6-aa61-43208ac22275","series":0,"name":"replace","transplant":{"toString":"result.append(\"S\", \"TS\")","position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('F')","position":"org.apache.commons.codec.language.DoubleMetaphone:570","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"status":-1},{"failures":[],"tindex":"932fca0a-17b9-11e6-aa61-bd68b19eadab","series":0,"name":"replace","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int diff = 0","position":"org.apache.commons.codec.language.SoundexUtils:115","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"932ff11b-17b9-11e6-aa61-7ff0a1a177e4","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)"},"status":-2},{"failures":[18],"tindex":"932ff11c-17b9-11e6-aa61-95e82353ccda","series":0,"name":"replace","transplant":{"toString":"sb.append('|')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append(symb)","position":"org.apache.commons.codec.language.Metaphone:266","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"932ff11d-17b9-11e6-aa61-01e89b06a685","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")","position":"org.apache.commons.codec.language.Caverphone2:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":0},{"failures":[19],"tindex":"932ff11e-17b9-11e6-aa61-59655171ccb7","series":0,"name":"replace","transplant":{"toString":"code.append('T')","position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('F')","position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"status":-1},{"failures":[20,21,0,22,23,24,25,2,26,27,28,29,30,31,32,33,34],"tindex":"9330182f-17b9-11e6-aa61-cb24ab7bf808","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)","position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"variableMap":{"keyBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.UTF_8)","position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[14,6],"tindex":"93301830-17b9-11e6-aa61-a952bc0ccc8e","series":0,"name":"replace","transplant":{"toString":"rightLength++","position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:452","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"93301831-17b9-11e6-aa61-0dd36d76437f","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"e$\", \"\")","position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"algorithm"},"type":"adrStmt","transplantationPoint":{"toString":"this.algorithm = algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:78","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = algorithm"},"status":-2},{"failures":[],"tindex":"93301832-17b9-11e6-aa61-93b3efdc11a7","series":0,"name":"add","transplant":{"toString":"return count >= minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:260","type":"CtReturnImpl","sourcecode":"return count >= minRating"},"variableMap":{"count":"length","minRating":"length"},"type":"adrStmt","transplantationPoint":{"toString":"return ((octet >= 0) && (octet < (decodeTable.length))) && ((decodeTable[octet]) != (-1))","position":"org.apache.commons.codec.binary.Base64:781","type":"CtReturnImpl","sourcecode":"return ((octet >= 0) && (octet < (byte[].int))) && ((byte[][octet]) != (-1))"},"status":-2},{"failures":[35,36,37,38,39,40],"tindex":"93303f43-17b9-11e6-aa61-b7e99473eca4","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"93303f44-17b9-11e6-aa61-979ee0b3fbac","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"cy\", \"sy\")","position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX"},"type":"adrStmt","transplantationPoint":{"toString":"salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))","position":"org.apache.commons.codec.digest.Sha2Crypt:103","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"status":-2},{"failures":[],"tindex":"93303f45-17b9-11e6-aa61-4514fcd3666f","series":0,"name":"add","transplant":{"toString":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))","position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"letter"},"type":"adrStmt","transplantationPoint":{"toString":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"status":-2},{"failures":[21,41,42,43,44],"tindex":"93303f46-17b9-11e6-aa61-d343ca83072f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.decode(b, offset, len, context)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"93306657-17b9-11e6-aa61-d71dd0c26d6f","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"e$\", \"\")","position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"toString":"name1 = removeDoubleConsonants(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"status":-2},{"failures":[45,46,47,48,49,50],"tindex":"93306658-17b9-11e6-aa61-371660908f92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"t+\", \"T\")","position":"org.apache.commons.codec.language.Caverphone2:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[51,52,53,54,55,56,57],"tindex":"9330db89-17b9-11e6-aa61-f517c2867648","series":0,"name":"add","transplant":{"toString":"sb.append(\"Rule\")","position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"toString":"builder.append('0')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[45,46,58,59,47,48,49,50],"tindex":"9331029a-17b9-11e6-aa61-1d2d50e1e01a","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"t+\", \"T\")","position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.toLowerCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"9331029b-17b9-11e6-aa61-315f7ac7aec2","series":0,"name":"add","transplant":{"toString":"phonemes.put(mergedPhoneme, mergedPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:366","type":"CtInvocationImpl","sourcecode":"phonemes.put(mergedPhoneme, mergedPhoneme)"},"variableMap":{"mergedPhoneme":"newPhoneme","phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"toString":"phonemes.put(newPhoneme, newPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:368","type":"CtInvocationImpl","sourcecode":"phonemes.put(newPhoneme, newPhoneme)"},"status":-2},{"failures":[],"tindex":"9331029c-17b9-11e6-aa61-43d0144e6220","series":0,"name":"add","transplant":{"toString":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")","position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"status":-2},{"failures":[21,41,42,60,28,61,62,29,63,64,65,66,67,68,43,44,69,70,30,71,72],"tindex":"9331029d-17b9-11e6-aa61-3fc80766a6c4","series":0,"name":"replace","transplant":{"toString":"return 3","position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"failures":[],"tindex":"9331029e-17b9-11e6-aa61-4fa246236655","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"scanner.close()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:236","type":"CtInvocationImpl","sourcecode":"scanner.close()"},"status":0},{"failures":[],"tindex":"9331029f-17b9-11e6-aa61-17f620c55d9a","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.Metaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c = results[1]","position":"org.apache.commons.codec.digest.UnixCrypt:356","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-2},{"failures":[],"tindex":"933129b0-17b9-11e6-aa61-d7e6ab7f26c6","series":0,"name":"add","transplant":{"toString":"this.languages = languages","position":"org.apache.commons.codec.language.bm.Languages:289","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = languages"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"toString":"this.languages = java.util.Collections.unmodifiableSet(languages)","position":"org.apache.commons.codec.language.bm.Languages:87","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = java.util.Collections.unmodifiableSet(languages)"},"status":-2},{"failures":[],"tindex":"93319ee1-17b9-11e6-aa61-f98740ef69fb","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Soundex.this.soundexMapping","position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"out"},"type":"adrStmt","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"status":-3},{"failures":[73],"tindex":"93319ee2-17b9-11e6-aa61-2d7e5f606d27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} "},"status":-1},{"failures":[14,6,74,15,17],"tindex":"9331c5f3-17b9-11e6-aa61-a97870db8a61","series":0,"name":"replace","transplant":{"toString":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (conditionL0(value, index)) {\n    result.appendPrimary('L');\n} else {\n    result.append('L');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:552","type":"CtIfImpl","sourcecode":"if (conditionL0(value, index)) {\n    result.appendPrimary('L');\n} else {\n    result.append('L');\n}"},"status":-1},{"failures":[],"tindex":"9331c5f4-17b9-11e6-aa61-9ffda7bac4e0","series":0,"name":"replace","transplant":{"toString":"int u = v & e0","position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"variableMap":{"v":"org.apache.commons.codec.net.URLCodec.RADIX","e0":"org.apache.commons.codec.net.URLCodec.RADIX"},"type":"adrStmt","transplantationPoint":{"toString":"final int i = java.lang.Character.digit(((char)(b)), org.apache.commons.codec.net.URLCodec.RADIX)","position":"org.apache.commons.codec.net.Utils:43","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(((char)(b)), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)"},"status":-2},{"failures":[],"tindex":"9331c5f5-17b9-11e6-aa61-9f7227559f16","series":0,"name":"add","transplant":{"toString":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"variableMap":{"index":"ipl","value":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if (ipl > (input.length())) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:706","type":"CtIfImpl","sourcecode":"if (ipl > (input.length())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"9331c5f6-17b9-11e6-aa61-dfa3b874ea30","series":0,"name":"replace","transplant":{"toString":"try {\n    final char[] charArray = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}","position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"variableMap":{"e":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}","position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"9331ed07-17b9-11e6-aa61-cbfc104f3654","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"variableMap":{"maxPhonemes":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"toString":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX) - (strA.length())))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:337","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())))"},"status":-2},{"failures":[],"tindex":"9331ed08-17b9-11e6-aa61-ede276cba150","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")","position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)","position":"org.apache.commons.codec.net.BCodec:183","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,3,99,4,100,5],"tindex":"9331ed09-17b9-11e6-aa61-4d9066d33af2","series":0,"name":"replace","transplant":{"toString":"final char[] newData = new char[length]","position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"l"},"type":"adrStmt","transplantationPoint":{"toString":"final char[] out = new char[l << 1]","position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"status":-1},{"failures":[],"tindex":"9331ed0a-17b9-11e6-aa61-35757dd256e6","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER","position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER":"lContext"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.lContext","position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"9331ed0b-17b9-11e6-aa61-57cfd2e2fbeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"status":0},{"failures":[101,102],"tindex":"9332141c-17b9-11e6-aa61-c106f5f1fb9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)","position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"status":-1},{"failures":[],"tindex":"9332141d-17b9-11e6-aa61-779173957d14","series":0,"name":"replace","transplant":{"toString":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"txt","upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^h\", \"A\")","position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-3},{"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"9332141e-17b9-11e6-aa61-f5038d60bd4a","series":0,"name":"replace","transplant":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str.toUpperCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[134,135],"tindex":"9332141f-17b9-11e6-aa61-af12d1eec7de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)"},"status":-1},{"failures":[45,48,49,50],"tindex":"93323b30-17b9-11e6-aa61-11d6906b6260","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3$\", \"A\")","position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"status":-1},{"failures":[],"tindex":"93323b31-17b9-11e6-aa61-9d1ae0471450","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"status":0},{"failures":[],"tindex":"93323b32-17b9-11e6-aa61-c95121f21dce","series":0,"name":"add","transplant":{"toString":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"return encode(((java.lang.String)(obj)))","position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"93323b33-17b9-11e6-aa61-874d8e9c7e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"93323b34-17b9-11e6-aa61-519cc4f705a9","series":0,"name":"replace","transplant":{"toString":"b = '+'","position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"blocksize"},"type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[136,137,140,141,142,145,146,149,150,152,156,157,158,159,160,161],"tindex":"93323b35-17b9-11e6-aa61-fdb107a3193d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ls.add(line)","position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"status":-1},{"failures":[162,163,164,165,166,167,168],"tindex":"93323b36-17b9-11e6-aa61-ad2adc752eb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:275","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":56,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}