{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"ff30f345-1176-11e6-b313-09d7c94d9bae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[],"tindex":"ff311a56-1176-11e6-b313-17c40af16edc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:369","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e)"},"status":0},{"failures":[],"tindex":"ff311a57-1176-11e6-b313-9f0467b8e69b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:76","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value, false)"},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:430","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())"},"status":0},{"failures":[],"tindex":"ff311a58-1176-11e6-b313-757d34e552ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:537","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n    }\n}"},"variableMap":{"input":"this","this":"this","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:548","type":"CtIfImpl","sourcecode":"if (startsWithBox && endsWithBox) {\n    java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1));\n    if (!(boxContent.contains(\"[\"))) {\n        final boolean boolean = boxContent.startsWith(\"^\");\n        if (negate) {\n            boxContent = boxContent.substring(1);\n        } \n        final java.lang.String java.lang.String = boxContent;\n        final boolean boolean = !negate;\n        if (startsWith && endsWith) {\n            return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                @java.lang.Override\n                public boolean isMatch(final java.lang.CharSequence input) {\n                    return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n                }\n            };\n        } else if (startsWith) {\n            return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                @java.lang.Override\n                public boolean isMatch(final java.lang.CharSequence input) {\n                    return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n                }\n            };\n        } else if (endsWith) {\n            return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                @java.lang.Override\n                public boolean isMatch(final java.lang.CharSequence input) {\n                    return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n                }\n            };\n        } \n    } \n} "},"status":0},{"failures":[],"tindex":"ff314169-1176-11e6-b313-fd3c446cde53","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:143","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":0},{"failures":[],"tindex":"ff31416a-1176-11e6-b313-4d475b945965","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":0},{"failures":[],"tindex":"ff31687b-1176-11e6-b313-c7db057e44b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":0},{"failures":[],"tindex":"ff31687c-1176-11e6-b313-5d43adbdd795","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":8,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}