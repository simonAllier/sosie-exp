{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":163,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":139,"org.apache.commons.codec.language.NysiisTest.testSnat":96,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":127,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":134,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":52,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":69,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":67,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":151,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":169,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":60,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":84,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":11,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":148,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully":59,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":143,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":111,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":114,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":43,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":46,"org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull":109,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":3,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":172,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":7,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":26,"org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks":120,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":130,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":80,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":82,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":113,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":81,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":107,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":21,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":17,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":22,"org.apache.commons.codec.language.NysiisTest.testCap":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":153,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":174,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":144,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":79,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":165,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":77,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":23,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":24,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":78,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":138,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":128,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":129,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":157,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":28,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":168,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":40,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":105,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":106,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":137,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":166,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":44,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":71,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":51,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":55,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":38,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":119,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":61,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":125,"org.apache.commons.codec.language.SoundexTest.testB650":66,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":50,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":102,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":167,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":173,"org.apache.commons.codec.language.SoundexTest.testNewInstance":74,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":140,"org.apache.commons.codec.language.NysiisTest.testTranan":100,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":36,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":48,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":126,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":161,"org.apache.commons.codec.language.NysiisTest.testFal":88,"org.apache.commons.codec.language.NysiisTest.testSnad":95,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":141,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":115,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":32,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":63,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":135,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":64,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":147,"org.apache.commons.codec.language.NysiisTest.testDropBy":98,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":54,"org.apache.commons.codec.binary.Base64Test.testBase64":31,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":124,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":142,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":150,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":156,"org.apache.commons.codec.binary.Base64Test.testUUID":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":42,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":27,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":39,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":122,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":5,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":159,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":162,"org.apache.commons.codec.language.NysiisTest.testRule2":90,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":131,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":4,"org.apache.commons.codec.language.NysiisTest.testRule1":89,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":33,"org.apache.commons.codec.language.NysiisTest.testRule7":93,"org.apache.commons.codec.language.NysiisTest.testRule6":92,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":112,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":132,"org.apache.commons.codec.language.NysiisTest.testRule5":91,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":123,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":136,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":158,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":145,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":118,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":2,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":47,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":75,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":16,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":97,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":14,"org.apache.commons.codec.language.NysiisTest.testBran":94,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":101,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":104,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":72,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":171,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":155,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":15,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":8,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":103,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be":108,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":34,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":170,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":164,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":37,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":76,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":154,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":149,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":6,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":117,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":160,"org.apache.commons.codec.language.NysiisTest.testDad":86,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":9,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":121,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":20,"org.apache.commons.codec.language.NysiisTest.testOthers":99,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":30,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":116,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":56,"org.apache.commons.codec.language.SoundexTest.testDifference":73,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":83,"org.apache.commons.codec.language.NysiisTest.testDan":87,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":133,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":146,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":41,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":110},"transformations":[{"failures":[],"tindex":"0d741f55-16e3-11e6-815b-5176268632b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"phonemeBuilder = rulesApplication.getPhonemeBuilder()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:473","type":"CtAssignmentImpl","sourcecode":"phonemeBuilder = rulesApplication.getPhonemeBuilder()"},"status":0},{"failures":[],"tindex":"0d744666-16e3-11e6-815b-4b831f712381","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"why\", \"Why\")","position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^enough\", \"enou2f\")","position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":0},{"failures":[],"tindex":"0d744667-16e3-11e6-815b-a5f4762ae6d7","series":0,"name":"replace","transplant":{"toString":"final byte[] buffer = new byte[org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH]","position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] l_ascii = new byte[(raw.length) << 3]","position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"0d744668-16e3-11e6-815b-85f240693929","series":0,"name":"replace","transplant":{"toString":"int patternLength = 1","position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int t = 0","position":"org.apache.commons.codec.digest.UnixCrypt:284","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"0d744669-16e3-11e6-815b-8d91ee5c17eb","series":0,"name":"replace","transplant":{"toString":"final byte[] buf = new byte[avail]","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"decodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(decodeSize, context)","position":"org.apache.commons.codec.binary.Base64:436","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"0d746d7a-16e3-11e6-815b-ab44891c4a98","series":0,"name":"add","transplant":{"toString":"java.util.Arrays.fill(tempResult, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"saltBytes"},"type":"adrStmt","transplantationPoint":{"toString":"java.util.Arrays.fill(saltBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"0d746d7b-16e3-11e6-815b-a99ecfa76197","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[40,41,42],"tindex":"0d746d7c-16e3-11e6-815b-5794059ef9aa","series":0,"name":"replace","transplant":{"toString":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"0d74948d-16e3-11e6-815b-9936abbacde2","series":0,"name":"add","transplant":{"toString":"final java.lang.String target = value.substring(start, (start + length))","position":"org.apache.commons.codec.language.DoubleMetaphone:919","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = value.substring(start, (start + length))"},"variableMap":{"start":"index","length":"index","value":"input"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String inputContext = input.substring(index)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:504","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(index)"},"status":-2},{"failures":[],"tindex":"0d74948e-16e3-11e6-815b-a9da7ddc9a2a","series":0,"name":"add","transplant":{"toString":"final java.lang.String line = lsScanner.nextLine().trim()","position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String rawLine = scanner.nextLine()","position":"org.apache.commons.codec.language.bm.Lang:141","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[23,24],"tindex":"0d74bb9f-16e3-11e6-815b-4b9a936e1b94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"bitlen = ((bitlen + 7) >> 3) << 3","position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"status":-1},{"failures":[],"tindex":"0d74bba0-16e3-11e6-815b-e7484e8c0485","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"length"},"type":"adrStmt","transplantationPoint":{"toString":"for (int ii = 0, jj = (l_ascii.length) - 1 ; ii < (raw.length) ; ii++ , jj -= 8) {\n    for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.BITS[bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}","position":"org.apache.commons.codec.binary.BinaryCodec:248","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"0d74bba1-16e3-11e6-815b-9973f71d7534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.encodedBlockSize = encodedBlockSize","position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"status":-2},{"failures":[],"tindex":"0d74bba2-16e3-11e6-815b-ff2dfda26aa1","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"left"},"type":"adrStmt","transplantationPoint":{"toString":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)","position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"status":-2},{"failures":[],"tindex":"0d74e2b3-16e3-11e6-815b-c341045b2201","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)","position":"org.apache.commons.codec.digest.DigestUtils:749","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-2},{"failures":[],"tindex":"0d74e2b4-16e3-11e6-815b-6d177366a160","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")","position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"0d74e2b5-16e3-11e6-815b-47862db63f0e","series":0,"name":"add","transplant":{"toString":"return metaphone(str1).equals(metaphone(str2))","position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"variableMap":{"str1":"value","str2":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))","position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"status":-2},{"failures":[],"tindex":"0d7509c6-16e3-11e6-815b-df7f4ca4c102","series":0,"name":"add","transplant":{"toString":"int v = r ^ (r >>> 16)","position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"length"},"type":"adrStmt","transplantationPoint":{"toString":"int cnt = keyBytes.length","position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = keyBytes.int"},"status":-2},{"failures":[],"tindex":"0d7509c7-16e3-11e6-815b-ff7b91d6f485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code = '3'","position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"status":-2},{"failures":[],"tindex":"0d7509c8-16e3-11e6-815b-2bf394b18141","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"mac.init(keySpec)","position":"org.apache.commons.codec.digest.HmacUtils:183","type":"CtInvocationImpl","sourcecode":"mac.init(keySpec)"},"status":-2},{"failures":[],"tindex":"0d7509c9-16e3-11e6-815b-e13646a425a6","series":0,"name":"add","transplant":{"toString":"final int[] results = new int[2]","position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int[] schedule = org.apache.commons.codec.digest.UnixCrypt.desSetKey(key)","position":"org.apache.commons.codec.digest.UnixCrypt:225","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = org.apache.commons.codec.digest.UnixCrypt.desSetKey(key)"},"status":-2},{"failures":[43,44,45,46],"tindex":"0d7509ca-16e3-11e6-815b-41717b64e1f4","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:529","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","this":"this","content":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"status":-1},{"failures":[47,48],"tindex":"0d7530db-16e3-11e6-815b-c186f756c4ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.language.Metaphone:222","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57],"tindex":"0d7530dc-16e3-11e6-815b-d7eff35d1436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE, org.apache.commons.codec.language.DaitchMokotoffSoundex.RULES, org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>)"},"status":-1},{"failures":[58],"tindex":"0d7557ed-16e3-11e6-815b-e702f7abc158","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"cq\", \"2q\")","position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"r$\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r$\", \"3\")"},"status":-1},{"failures":[59],"tindex":"0d7557ee-16e3-11e6-815b-0bd96607c848","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:221","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[60],"tindex":"0d7557ef-16e3-11e6-815b-296f9198dd5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((lineLength) > 0) {\n    len += (((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength);\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:519","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    len += (((len + (int)) - 1) / (int)) * (int);\n} "},"status":-1},{"failures":[],"tindex":"0d7557f0-16e3-11e6-815b-f3b326e44f03","series":0,"name":"add","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(languages.isEmpty())) {\n    final org.apache.commons.codec.language.bm.Rule.Phoneme join = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages);\n    if ((newPhonemes.size()) < maxPhonemes) {\n        newPhonemes.add(join);\n        if ((newPhonemes.size()) >= maxPhonemes) {\n            break EXPR;\n        } \n    } \n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:112","type":"CtIfImpl","sourcecode":"if (!(languages.isEmpty())) {\n    final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages);\n    if ((newPhonemes.size()) < maxPhonemes) {\n        newPhonemes.add(join);\n        if ((newPhonemes.size()) >= maxPhonemes) {\n            break EXPR;\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"0d757f01-16e3-11e6-815b-df8a8df4b9ac","series":0,"name":"add","transplant":{"toString":"final byte[] key = new byte[8]","position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] b = new byte[512]","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"status":-2},{"failures":[],"tindex":"0d757f02-16e3-11e6-815b-558985e41da5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = null","position":"org.apache.commons.codec.binary.Base64:289","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"0d757f03-16e3-11e6-815b-3bb1663adab2","series":0,"name":"replace","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"str","leftCharacter":"str","rightCharacter":"str","location":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} ","position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":-1},{"failures":[],"tindex":"0d75a614-16e3-11e6-815b-ad469d75d1cd","series":0,"name":"replace","transplant":{"toString":"txt = txt + (org.apache.commons.codec.language.Caverphone2.TEN_1)","position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"txt","txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.toLowerCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-3},{"failures":[108],"tindex":"0d75a615-16e3-11e6-815b-1d8066382d97","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.UTF_16BE)","position":"org.apache.commons.codec.binary.StringUtils:351","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[109],"tindex":"0d75a616-16e3-11e6-815b-c973feed34c7","series":0,"name":"replace","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.URLCodec:271","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"0d75a617-16e3-11e6-815b-ed28419cf24c","series":0,"name":"replace","transplant":{"toString":"name1 = removeDoubleConsonants(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^enough\", \"enou2f\")","position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":-2},{"failures":[47,48],"tindex":"0d75a618-16e3-11e6-815b-8b447ac118f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.language.Metaphone:222","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[110,111],"tindex":"0d75cd29-16e3-11e6-815b-0d1d7f00b574","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"right = results[0]","position":"org.apache.commons.codec.digest.UnixCrypt:312","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"0d75cd2a-16e3-11e6-815b-030f5c7a69f0","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))","position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"variableMap":{"base64":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"UMB\")) && (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"ER\")))","position":"org.apache.commons.codec.language.DoubleMetaphone:847","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"UMB\")) && (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"ER\")))"},"status":-2},{"failures":[],"tindex":"0d75cd2b-16e3-11e6-815b-5f5e784f7b5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[112,113],"tindex":"0d75cd2c-16e3-11e6-815b-43aaf55a4180","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"p+\", \"P\")","position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-1},{"failures":[41],"tindex":"0d75f43d-16e3-11e6-815b-85b2b113d3f6","series":0,"name":"replace","transplant":{"toString":"result.appendAlternate('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"0d75f43e-16e3-11e6-815b-27c58d1b08ca","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"pArray","raw":"pArray"},"type":"adrStmt","transplantationPoint":{"toString":"if ((pArray == null) || ((pArray.length) == 0)) {\n    return pArray;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:426","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"status":-3},{"failures":[],"tindex":"0d75f43f-16e3-11e6-815b-11d2fcd70490","series":0,"name":"replace","transplant":{"toString":"decode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.EOF, context)","position":"org.apache.commons.codec.binary.BaseNCodec:411","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"variableMap":{"pArray":"buffer","org.apache.commons.codec.binary.BaseNCodec.EOF":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length)","position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"0d75f440-16e3-11e6-815b-17fa26a5e225","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Null key\")","position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":0},{"failures":[],"tindex":"0d75f441-16e3-11e6-815b-71fea8ba657b","series":0,"name":"replace","transplant":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inMultilineComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"text","line":"text","inMultilineComment":"acceptOnMatch"},"type":"adrStmt","transplantationPoint":{"toString":"if (rule.matches(text)) {\n    if (rule.acceptOnMatch) {\n        langs.retainAll(rule.languages);\n    } else {\n        langs.removeAll(rule.languages);\n    }\n} ","position":"org.apache.commons.codec.language.bm.Lang:219","type":"CtIfImpl","sourcecode":"if (rule.matches(text)) {\n    if (rule.boolean) {\n        langs.retainAll(rule.java.util.Set<java.lang.String>);\n    } else {\n        langs.removeAll(rule.java.util.Set<java.lang.String>);\n    }\n} "},"status":-3},{"failures":[],"tindex":"0d75f442-16e3-11e6-815b-5d3e281a1c8e","series":0,"name":"replace","transplant":{"toString":"hard = false","position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"variableMap":{"hard":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"toString":"inExtendedComment = false","position":"org.apache.commons.codec.language.bm.Lang:146","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"status":-3},{"failures":[],"tindex":"0d761b53-16e3-11e6-815b-dd2b5cafba7c","series":0,"name":"replace","transplant":{"toString":"return string.getBytes(charsetName)","position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"variableMap":{"string":"key","charsetName":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[114,115,116,117,118,119],"tindex":"0d761b54-16e3-11e6-815b-47dfef122dd9","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)"},"status":-1},{"failures":[],"tindex":"0d761b55-16e3-11e6-815b-abf18f36a774","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_AF","position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_AF":"out"},"type":"adrStmt","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"status":-3},{"failures":[120],"tindex":"0d761b56-16e3-11e6-815b-a706fbcb820a","series":0,"name":"add","transplant":{"toString":"code.append('S')","position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"phonemeText"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText.append(phonemeRight.phonemeText)","position":"org.apache.commons.codec.language.bm.Rule:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"0d761b57-16e3-11e6-815b-8141859e5258","series":0,"name":"replace","transplant":{"toString":"final java.util.regex.Matcher m = org.apache.commons.codec.digest.Sha2Crypt.SALT_PATTERN.matcher(salt)","position":"org.apache.commons.codec.digest.Sha2Crypt:145","type":"CtLocalVariableImpl","sourcecode":"final java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.util.regex.Pattern.matcher(salt)"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.SALT_PATTERN":"pattern","salt":"input"},"type":"adrStmt","transplantationPoint":{"toString":"final java.util.regex.Matcher matcher = pattern.matcher(input)","position":"org.apache.commons.codec.language.bm.Rule:594","type":"CtLocalVariableImpl","sourcecode":"final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(input)"},"status":-2},{"failures":[121],"tindex":"0d764268-16e3-11e6-815b-fd556337509b","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"0d764269-16e3-11e6-815b-c355a4661914","series":0,"name":"add","transplant":{"toString":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"variableMap":{"ascii":"ascii"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))","position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))"},"status":-2},{"failures":[],"tindex":"0d76426a-16e3-11e6-815b-37bd41e4eb87","series":0,"name":"replace","transplant":{"toString":"int startSrc = 0","position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int d = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)","position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)"},"status":-2},{"failures":[],"tindex":"0d76426b-16e3-11e6-815b-6771ec57ca17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(',')","position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[122,123,124],"tindex":"0d76426c-16e3-11e6-815b-bf89271681de","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('@')","position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(i);\n}","position":"org.apache.commons.codec.net.QCodec:89","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[],"tindex":"0d76697d-16e3-11e6-815b-4fde45ad6ed2","series":0,"name":"replace","transplant":{"toString":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"input","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"input","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.bm.PhoneticEngine.this.concat) {\n    input = org.apache.commons.codec.language.bm.PhoneticEngine.join(words2, \" \");\n} else if ((words2.size()) == 1) {\n    input = words.iterator().next();\n} else {\n    final java.lang.StringBuilder result = new java.lang.StringBuilder();\n    for (final java.lang.String word : words2) {\n        result.append(\"-\").append(encode(word));\n    }\n    return result.substring(1);\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:450","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean) {\n    input = org.apache.commons.codec.language.bm.PhoneticEngine.join(words2, \" \");\n} else if ((words2.size()) == 1) {\n    input = words.iterator().next();\n} else {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    for (final java.lang.String java.lang.String : words2) {\n        result.append(\"-\").append(encode(word));\n    }\n    return result.substring(1);\n}"},"status":-3},{"failures":[],"tindex":"0d76697e-16e3-11e6-815b-f9ecc2145b7b","series":0,"name":"replace","transplant":{"toString":"left = (t >>> 1) | (t << 31)","position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"minRating","left":"minRating"},"type":"adrStmt","transplantationPoint":{"toString":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:192","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[45,46],"tindex":"0d76697f-16e3-11e6-815b-e787e8824bd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES.put(org.apache.commons.codec.language.bm.NameType.ASHKENAZI, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"bar\", \"ben\", \"da\", \"de\", \"van\", \"von\"))))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"bar\", \"ben\", \"da\", \"de\", \"van\", \"von\"))))"},"status":-1},{"failures":[125],"tindex":"0d766980-16e3-11e6-815b-c50b3316d8c8","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.engine.isConcat()","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()"},"status":-1},{"failures":[],"tindex":"0d769091-16e3-11e6-815b-e3952e473721","series":0,"name":"replace","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"toString":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} ","position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"status":0},{"failures":[],"tindex":"0d769092-16e3-11e6-815b-ebbb8c906080","series":0,"name":"replace","transplant":{"toString":"this.maxLength = maxLength","position":"org.apache.commons.codec.language.DoubleMetaphone:943","type":"CtAssignmentImpl","sourcecode":"this.int = maxLength"},"variableMap":{"maxLength":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:481","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[126,127,128,129,130,131,132,133,122,123,124,134],"tindex":"0d7aaf43-16e3-11e6-815b-db702f565f41","series":0,"name":"add","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"b"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.write(b)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:373","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[],"tindex":"0d7aaf44-16e3-11e6-815b-a509a1011426","series":0,"name":"replace","transplant":{"toString":"final char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"variableMap":{"b":"index2"},"type":"adrStmt","transplantationPoint":{"toString":"char c2 = substring.charAt((index2++))","position":"org.apache.commons.codec.binary.CharSequenceUtils:60","type":"CtLocalVariableImpl","sourcecode":"char char = substring.charAt((index2++))"},"status":0},{"failures":[],"tindex":"0d7ad655-16e3-11e6-815b-69d127b45318","series":0,"name":"replace","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"len","y":"len"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)","position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"status":-2},{"failures":[],"tindex":"0d7ad656-16e3-11e6-815b-41664b7c50b0","series":0,"name":"replace","transplant":{"toString":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.TEN_1.length())","position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-3},{"failures":[135,136],"tindex":"0d7ad657-16e3-11e6-815b-df4e7ff76a07","series":0,"name":"add","transplant":{"toString":"code.append('K')","position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('X')","position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"0d7ad658-16e3-11e6-815b-eb9d2fbea999","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"0d7ad659-16e3-11e6-815b-3304494d54ec","series":0,"name":"replace","transplant":{"toString":"data = doDecoding(data)","position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"variableMap":{"data":"tempResult"},"type":"adrStmt","transplantationPoint":{"toString":"tempResult = altCtx.digest()","position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"tempResult = altCtx.digest()"},"status":-2},{"failures":[],"tindex":"0d7ad65a-16e3-11e6-815b-670a399517c3","series":0,"name":"add","transplant":{"toString":"if ((key.length()) > 1) {\n    char lastChar = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char last2Char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} ","position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"sBuf"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (str.length()) ; i++) {\n    current = getMappingCode(str.charAt(i));\n    if (current == last) {\n        continue;\n    } else if (current != 0) {\n        sBuf.append(current);\n    } \n    last = current;\n}","position":"org.apache.commons.codec.language.RefinedSoundex:190","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (str.length()) ; i++) {\n    current = getMappingCode(str.charAt(i));\n    if (current == last) {\n        continue;\n    } else if (current != 0) {\n        sBuf.append(current);\n    } \n    last = current;\n}"},"status":-2},{"failures":[110,137,138,111],"tindex":"0d7afd6b-16e3-11e6-815b-85bb49a9548f","series":0,"name":"add","transplant":{"toString":"currentLine++","position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"variableMap":{"currentLine":"y"},"type":"adrStmt","transplantationPoint":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"status":-1},{"failures":[40,139,41,42],"tindex":"0d7afd6c-16e3-11e6-815b-ab5f2a349dd0","series":0,"name":"replace","transplant":{"toString":"result.appendAlternate('R')","position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:694","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[114,115,116,117,119],"tindex":"0d7afd6d-16e3-11e6-815b-0baf2e9689d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"0d7afd6e-16e3-11e6-815b-d32c5afdac88","series":0,"name":"replace","transplant":{"toString":"messageDigest.update(valueToDigest)","position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"variableMap":{"messageDigest":"ctx","valueToDigest":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"ctx.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"status":-3},{"failures":[],"tindex":"0d7b247f-16e3-11e6-815b-9758d4de4020","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('$')","position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(':')","position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"status":0},{"failures":[],"tindex":"0d7b2480-16e3-11e6-815b-571951d292e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"currentLine++","position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":0},{"failures":[],"tindex":"0d7b2481-16e3-11e6-815b-eb663eb3747c","series":0,"name":"replace","transplant":{"toString":"if (result >= 0) {\n    context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK);\n    context.ibitWorkArea = ((context.ibitWorkArea) << (org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE)) + result;\n    if ((context.modulus) == 0) {\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    } \n} ","position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"variableMap":{"result":"length","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"length","ibitWorkArea":"length","pos":"length","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"length","context":"context","org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE":"length","buffer":"pArray","modulus":"length"},"type":"adrStmt","transplantationPoint":{"toString":"decode(pArray, 0, pArray.length, context)","position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-2},{"failures":[140,141,142,143],"tindex":"0d7b2482-16e3-11e6-815b-4781b73e11f4","series":0,"name":"replace","transplant":{"toString":"w >>= 6","position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b += 256","position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":-1},{"failures":[43,44,45,46,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"0d7b2483-16e3-11e6-815b-e5dbaeb5e892","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.Lang.Langs.put(s, org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String.format(org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN, s.getName()), org.apache.commons.codec.language.bm.Languages.getInstance(s)))","position":"org.apache.commons.codec.language.bm.Lang:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.util.Map<org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.Lang>.put(s, org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String.format(org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String, s.getName()), org.apache.commons.codec.language.bm.Languages.getInstance(s)))"},"status":-1},{"failures":[58,156,157,158,159,160],"tindex":"0d7b4b94-16e3-11e6-815b-37128d90a29a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"y\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"status":-1},{"failures":[161],"tindex":"0d7b4b95-16e3-11e6-815b-65bccf0edd2a","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")","position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"status":-1},{"failures":[],"tindex":"0d7b4b96-16e3-11e6-815b-09f5d119472b","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[],"tindex":"0d7b4b97-16e3-11e6-815b-3fc62a31f92a","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^gn\", \"2n\")","position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"tia\", \"sia\")","position":"org.apache.commons.codec.language.Caverphone2:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"status":0},{"failures":[],"tindex":"0d7b4b98-16e3-11e6-815b-59f1ce937efe","series":0,"name":"add","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return saltString.toString()","position":"org.apache.commons.codec.digest.B64:77","type":"CtReturnImpl","sourcecode":"return saltString.toString()"},"status":-2},{"failures":[],"tindex":"0d7b4b99-16e3-11e6-815b-f5409b5c2012","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"0d7b72aa-16e3-11e6-815b-e13d82cd71cd","series":0,"name":"replace","transplant":{"toString":"ctx1.update(saltBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"variableMap":{"ctx1":"ctx","saltBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"toString":"ctx.update(altResult, 0, blocksize)","position":"org.apache.commons.codec.digest.Sha2Crypt:371","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":0},{"failures":[162],"tindex":"0d7b72ab-16e3-11e6-815b-e5dd562c8f7d","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")","position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")","position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"status":-1},{"failures":[110,111],"tindex":"0d7b72ac-16e3-11e6-815b-9b089c098d6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)","position":"org.apache.commons.codec.digest.UnixCrypt:348","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-1},{"failures":[43,44,45,46,145,147,148,149],"tindex":"0d7b72ad-16e3-11e6-815b-e3d7103656e1","series":0,"name":"replace","transplant":{"toString":"final org.apache.commons.codec.language.bm.Rule.Phoneme mergedPhoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages())","position":"org.apache.commons.codec.language.bm.PhoneticEngine:365","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages())"},"variableMap":{"newPhoneme":"left","oldPhoneme":"left"},"type":"adrStmt","transplantationPoint":{"toString":"final org.apache.commons.codec.language.bm.Rule.Phoneme join = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:113","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages)"},"status":-1},{"failures":[140,163,164,141,142,143],"tindex":"0d7b72ae-16e3-11e6-815b-f1c4bd9cbe14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"context.lbitWorkArea = ((context.lbitWorkArea) << (org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE)) + result","position":"org.apache.commons.codec.binary.Base32:358","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result"},"status":-1},{"failures":[],"tindex":"0d7b72af-16e3-11e6-815b-6daec0455e3b","series":0,"name":"add","transplant":{"toString":"b[8] = 0","position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"b[8] = 0"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))","position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"status":0},{"failures":[165,166],"tindex":"0d7b99c0-16e3-11e6-815b-7756e5549356","series":0,"name":"replace","transplant":{"toString":"code = '7'","position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '2'","position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"code = '2'"},"status":-1},{"failures":[45],"tindex":"0d7b99c1-16e3-11e6-815b-11d645ddaea2","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.language.bm.Rule:609","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[126,127,128,131,132,167,168,169,170,171,122,124,172,173],"tindex":"0d7b99c2-16e3-11e6-815b-9fd8fd2641a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:183","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[174,159,160],"tindex":"0d7b99c3-16e3-11e6-815b-59a283192346","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ph\", \"fh\")","position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"b\", \"p\")","position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"status":-1},{"failures":[],"tindex":"0d7b99c4-16e3-11e6-815b-8f02afe4ee19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('[')","position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":0},{"failures":[],"tindex":"0d7b99c5-16e3-11e6-815b-7b7d4b5b4e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"context.buffer = null","position":"org.apache.commons.codec.binary.BaseNCodec:297","type":"CtAssignmentImpl","sourcecode":"context.byte[] = null"},"status":-2},{"failures":[43,44,45,46],"tindex":"0d7b99c6-16e3-11e6-815b-c953d5ff9fc2","series":0,"name":"replace","transplant":{"toString":"code.append('0')","position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\"|\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"status":-1},{"failures":[],"tindex":"0d7b99c7-16e3-11e6-815b-b548f4441236","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"ctx.update(sBytes, 0, saltLen)","position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"status":-2},{"failures":[139,41,42],"tindex":"0d7bc0d8-16e3-11e6-815b-ff1c6d7b772b","series":0,"name":"replace","transplant":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"variableMap":{"blocksize":"index","cp":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}