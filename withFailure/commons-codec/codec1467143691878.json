{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":81,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":111,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":9,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":41,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":105,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":8,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":73,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":84,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":72,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":67,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":95,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":100,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData":38,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":129,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":131,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":139,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":27,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":28,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":62,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":87,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":113,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":44,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":108,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":22,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":21,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":92,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":104,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":63,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":34,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":13,"org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray":30,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":33,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":24,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":80,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":39,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":83,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":18,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":89,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":136,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":26,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":42,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":91,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":134,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":79,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":59,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":12,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":14,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":37,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray":132,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":10,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":29,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":120,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":124,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":99,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":7,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":52,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":58,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":97,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":107,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":32,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":77,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":125,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":98,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":126,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":138,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":133,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":122,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":66,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":110,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":15,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":25,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":71,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":94,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":90,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":49,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":96,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":115,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":69,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":127,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":68,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":137,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":45,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":114,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":46,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":57,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":88,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":112,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":56,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":17,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":86,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":140,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":103,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":76,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":23,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":35,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":82,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":123,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":54,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":48,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":75,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":135,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":70,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":2,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":116,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":93,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":85,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":121,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":130,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":16,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":47,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":65,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":118,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":106,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":109,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":128},"transformations":[{"failures":[],"tindex":"2d674889-3d6a-11e6-af3e-99e4605893af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-2},{"failures":[],"tindex":"2d676f9a-3d6a-11e6-af3e-0fd495983dfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":0},{"failures":[0,1,2],"tindex":"2d676f9b-3d6a-11e6-af3e-ad5959f7b763","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-1},{"failures":[],"tindex":"2d676f9c-3d6a-11e6-af3e-83e55945493d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:126","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"2d676f9d-3d6a-11e6-af3e-2de8351e451e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:989","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"variableMap":{"alternate":"buffer","addChars":"n","value":"org.apache.commons.codec.digest.B64.B64T"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:60","type":"CtWhileImpl","sourcecode":"while ((n--) > 0) {\n    buffer.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt((w & 63)));\n    w >>= 6;\n}"},"status":-2},{"failures":[],"tindex":"2d676f9e-3d6a-11e6-af3e-8de3799180e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:943","type":"CtAssignmentImpl","sourcecode":"this.int = maxLength"},"variableMap":{"maxLength":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:329","type":"CtAssignmentImpl","sourcecode":"u = ((u ^ (u << 16)) ^ r) ^ (sArr[s])"},"status":-2},{"failures":[3,4,5],"tindex":"2d676f9f-3d6a-11e6-af3e-55d938a37151","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[6,7,8,9,10,11],"tindex":"2d6796b0-3d6a-11e6-af3e-b1f8993d5b9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> : org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}"},"status":-1},{"failures":[],"tindex":"2d6796b1-3d6a-11e6-af3e-bdbd2b7088f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"variableMap":{"encoding":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:509","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"))"},"status":-2},{"failures":[],"tindex":"2d6796b2-3d6a-11e6-af3e-594cca22124c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1))"},"variableMap":{"ph":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"status":-2},{"failures":[12,4,5],"tindex":"2d6796b3-3d6a-11e6-af3e-5f492dc8c43a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:368","type":"CtIfImpl","sourcecode":"if (index > 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n        result.append('K');\n    } else {\n        result.append('X', 'K');\n    }\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"2d6796b4-3d6a-11e6-af3e-fd3d87e2490d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:410","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"status":-2},{"failures":[],"tindex":"2d6796b5-3d6a-11e6-af3e-2d7baabc4f42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"status":-2},{"failures":[13,14],"tindex":"2d6796b6-3d6a-11e6-af3e-89659126d832","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"status":-1},{"failures":[15,10,16,17],"tindex":"2d67bdc7-3d6a-11e6-af3e-357d70b8acaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"source","key":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"status":-1},{"failures":[],"tindex":"2d67bdc8-3d6a-11e6-af3e-8d792ef41b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"variableMap":{"alternate":"code","value":"symb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:162","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-2},{"failures":[],"tindex":"2d67bdc9-3d6a-11e6-af3e-53a429f7aa19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":0},{"failures":[],"tindex":"2d67bdca-3d6a-11e6-af3e-81b6b6156456","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"variableMap":{"encoding":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[18],"tindex":"2d67bdcb-3d6a-11e6-af3e-e38c779fd3de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:447","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"2d67bdcc-3d6a-11e6-af3e-f382c98ad56c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.this.java.lang.String = charset"},"status":-2},{"failures":[6],"tindex":"2d67bdcd-3d6a-11e6-af3e-c14800f457bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:195","type":"CtReturnImpl","sourcecode":"return ((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')"},"status":-1},{"failures":[19,20],"tindex":"2d67bdce-3d6a-11e6-af3e-ddf0a8f8cc9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:242","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[4,5],"tindex":"2d67bdcf-3d6a-11e6-af3e-bd00bc15204a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"2d67e4e0-3d6a-11e6-af3e-35aac1f4d9ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"variableMap":{"this":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:76","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value, false)"},"status":-2},{"failures":[],"tindex":"2d67e4e1-3d6a-11e6-af3e-1362dd28b8f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:350","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[13,21,22,23,24,25,26,14],"tindex":"2d67e4e2-3d6a-11e6-af3e-1b98799f3912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:302","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"2d67e4e3-3d6a-11e6-af3e-b9b1130453e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"status":0},{"failures":[],"tindex":"2d67e4e4-3d6a-11e6-af3e-6578dfe2a386","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"status":-2},{"failures":[27,19,20,28],"tindex":"2d67e4e5-3d6a-11e6-af3e-2148f630f551","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2d67e4e6-3d6a-11e6-af3e-6b1e9177846e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":0},{"failures":[29],"tindex":"2d67e4e7-3d6a-11e6-af3e-65ed98976515","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:269","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + resName))"},"variableMap":{"resName":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"status":-1},{"failures":[],"tindex":"2d67e4e8-3d6a-11e6-af3e-7bbc1617dcbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"variableMap":{"input":"cs1","prefix":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"status":-2},{"failures":[30],"tindex":"2d680bf9-3d6a-11e6-af3e-bb56e88c4dce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:162","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[31,32,33,34,35,36],"tindex":"2d680bfa-3d6a-11e6-af3e-5f823be6feaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[],"tindex":"2d680bfb-3d6a-11e6-af3e-ef78095e7024","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:78","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.RefinedSoundex.this.char[], 0, mapping.int)"},"variableMap":{"mapping":"soundexMapping","soundexMapping":"soundexMapping","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:97","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.Soundex.this.char[], 0, mapping.int)"},"status":-2},{"failures":[37,38,39],"tindex":"2d680bfc-3d6a-11e6-af3e-dfde77c3b3ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"original","key":"original"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original, null)"},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"2d680bfd-3d6a-11e6-af3e-8328981e78e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:360","type":"CtTryImpl","sourcecode":"try {\n    if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        continue;\n    } \n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n    buffer.write(((char)((u << 4) + l)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n}"},"status":-1},{"failures":[53],"tindex":"2d680bfe-3d6a-11e6-af3e-e95c48a2a77b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[54,55,56,49,57,50,51,52],"tindex":"2d680bff-3d6a-11e6-af3e-b59aa1bdd335","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:155","type":"CtReturnImpl","sourcecode":"return new java.lang.String(data , charset)"},"status":-1},{"failures":[],"tindex":"2d680c00-3d6a-11e6-af3e-5962b1e5a533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:231","type":"CtAssignmentImpl","sourcecode":"hard = true"},"variableMap":{"hard":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:48","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[],"tindex":"2d680c01-3d6a-11e6-af3e-97d69ddebab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:146","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[40,41,42,45,46,58,59,60,48,61,49,50,62,52],"tindex":"2d680c02-3d6a-11e6-af3e-e95c8cc88559","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:186","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-1},{"failures":[],"tindex":"2d683313-3d6a-11e6-af3e-c15169bce561","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,27,19,20,28],"tindex":"2d683314-3d6a-11e6-af3e-7336274599a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":-1},{"failures":[],"tindex":"2d683315-3d6a-11e6-af3e-3f86c5f1181a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('-')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[],"tindex":"2d683316-3d6a-11e6-af3e-674d264bb98c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"variableMap":{"current":"c","last":"c","sBuf":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:353","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (index < ((string.length()) - 1))) {\n    matches = (string.charAt((index + 1))) == c;\n} "},"status":-2},{"failures":[77],"tindex":"2d683317-3d6a-11e6-af3e-4be2174cceae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[78],"tindex":"2d683318-3d6a-11e6-af3e-03332adbca1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"status":-1},{"failures":[79,80,53,81,82,83,84,85],"tindex":"2d683319-3d6a-11e6-af3e-15101ba90c46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"read","tempResult":"buffer","pBytes":"buffer","cp":"read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-1},{"failures":[19,20],"tindex":"2d68331a-3d6a-11e6-af3e-43e46afaf8cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}"},"status":-1},{"failures":[12,4,5],"tindex":"2d68331b-3d6a-11e6-af3e-bb88ada4720c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:476","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"2d68331c-3d6a-11e6-af3e-59f899d46de3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:290","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer)"},"status":-2},{"failures":[86,87,88],"tindex":"2d68331d-3d6a-11e6-af3e-6ddc440f3816","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:209","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-1},{"failures":[],"tindex":"2d68331e-3d6a-11e6-af3e-8fda66f8c4e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:298","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"2d685a2f-3d6a-11e6-af3e-d57c3247f5db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-2},{"failures":[89,90,91,92,93],"tindex":"2d685a30-3d6a-11e6-af3e-41d597dfe311","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"2d685a31-3d6a-11e6-af3e-713b34be5efb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:378","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 2 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 4 :\n        context.long = (context.long) >> 4;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 5 :\n        context.long = (context.long) >> 1;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 6 :\n        context.long = (context.long) >> 6;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 7 :\n        context.long = (context.long) >> 3;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"variableMap":{"pos":"modulus","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer","modulus":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[],"tindex":"2d685a32-3d6a-11e6-af3e-87b42efab30b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":0},{"failures":[94,95,96,97,98],"tindex":"2d685a33-3d6a-11e6-af3e-13a2ef8e76aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"status":-1},{"failures":[],"tindex":"2d685a34-3d6a-11e6-af3e-2b01c56f503e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:231","type":"CtAssignmentImpl","sourcecode":"hard = true"},"variableMap":{"hard":"roundsCustom"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"status":-2},{"failures":[],"tindex":"2d685a35-3d6a-11e6-af3e-9b4f3a31d119","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"status":-2},{"failures":[0,1,2],"tindex":"2d685a36-3d6a-11e6-af3e-914997122e7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:480","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[53], altResult[11], altResult[32], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":-1},{"failures":[],"tindex":"2d685a37-3d6a-11e6-af3e-d798da40da4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:365","type":"CtInvocationImpl","sourcecode":"sb.append(c)"},"status":-2},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"2d685a38-3d6a-11e6-af3e-a19dc119d470","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"status":-1},{"failures":[4,5],"tindex":"2d685a39-3d6a-11e6-af3e-69c139b3c622","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"status":-1},{"failures":[],"tindex":"2d68814a-3d6a-11e6-af3e-030ff5a7f599","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:440","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":0},{"failures":[],"tindex":"2d68814b-3d6a-11e6-af3e-99aaa0ac42ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:358","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang))"},"status":-2},{"failures":[40,41,42,45,46,58,59,60,48,61,49,50,62,52],"tindex":"2d68814c-3d6a-11e6-af3e-599a1d9e5fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:187","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-1},{"failures":[],"tindex":"2d68814d-3d6a-11e6-af3e-a77dbd2b0c42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"terminator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":0},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"2d68814e-3d6a-11e6-af3e-c517f75a8fcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"failures":[],"tindex":"2d68814f-3d6a-11e6-af3e-bbe08c6b96c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-2},{"failures":[],"tindex":"2d688150-3d6a-11e6-af3e-5bcbf48c5779","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"variableMap":{"hard":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:338","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[62],"tindex":"2d688151-3d6a-11e6-af3e-7b486f914384","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('+')"},"status":-1},{"failures":[],"tindex":"2d68a862-3d6a-11e6-af3e-67ced4e1952d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"ii","to":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    ctx.update(finalb, 0, (ii > 16 ? 16 : ii));\n    ii -= 16;\n}"},"status":-2},{"failures":[125,126,127],"tindex":"2d68a863-3d6a-11e6-af3e-13a1c5e82e28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"variableMap":{"resizedBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"status":-1},{"failures":[128,129],"tindex":"2d68a864-3d6a-11e6-af3e-b1c69de6ad63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"right = t"},"status":-1},{"failures":[62],"tindex":"2d68a865-3d6a-11e6-af3e-f7afab401df9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-1},{"failures":[130,131],"tindex":"2d68a866-3d6a-11e6-af3e-71b21e7b5a6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"rounds","to":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:150","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Integer.parseInt(m.group(3))"},"status":-1},{"failures":[20],"tindex":"2d68a867-3d6a-11e6-af3e-070efe5a4914","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:609","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"2d68a868-3d6a-11e6-af3e-215935774075","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:386","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"variableMap":{"encodeTable":"singleByte","currentLinePos":"org.apache.commons.codec.binary.BaseNCodec.EOF","ibitWorkArea":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"org.apache.commons.codec.binary.BaseNCodec.EOF","pos":"org.apache.commons.codec.binary.BaseNCodec.EOF","context":"context","length":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.BaseNCodec.EOF","buffer":"singleByte","lineSeparator":"singleByte","lineLength":"org.apache.commons.codec.binary.BaseNCodec.EOF","modulus":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[132],"tindex":"2d68a869-3d6a-11e6-af3e-618083a294f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:353","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"2d68a86a-3d6a-11e6-af3e-67289b5889bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"variableMap":{"pattern":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-2},{"failures":[],"tindex":"2d68a86b-3d6a-11e6-af3e-c1bb755f2839","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"variableMap":{"matches":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"failures":[133],"tindex":"2d68cf7c-3d6a-11e6-af3e-539d380cdf2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"2d68cf7d-3d6a-11e6-af3e-95a859a020a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:103","type":"CtReturnImpl","sourcecode":"return b < 0 ? 256 + b : b"},"status":-2},{"failures":[],"tindex":"2d68cf7e-3d6a-11e6-af3e-c97c07ec3543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"diff","len":"lengthToMatch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2d68cf7f-3d6a-11e6-af3e-1d28316bfd52","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[134,127,135,136,137,138,139],"tindex":"2d68cf80-3d6a-11e6-af3e-7dbaa3e549d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:796","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    digest.update(buffer, 0, read);\n    read = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int);\n}"},"status":-1},{"failures":[],"tindex":"2d68cf81-3d6a-11e6-af3e-f55b39796bcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"status":0},{"failures":[140],"tindex":"2d68cf82-3d6a-11e6-af3e-91f1ecd96b48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:203","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\");\n} "},"status":-1},{"failures":[],"tindex":"2d68cf83-3d6a-11e6-af3e-13f9250295de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('+')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:406","type":"CtIfImpl","sourcecode":"if (!(object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.java.lang.String.java.lang.Class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"));\n} "},"status":-2},{"failures":[141],"tindex":"2d68cf84-3d6a-11e6-af3e-9f61c0d5917e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"status":-1},{"failures":[],"tindex":"2d68cf85-3d6a-11e6-af3e-e71620d8ccb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:87","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = java.util.Collections.unmodifiableSet(languages)"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:289","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = languages"},"status":0},{"failures":[],"tindex":"2d68cf86-3d6a-11e6-af3e-597b5e8d0df2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:896","type":"CtReturnImpl","sourcecode":"return input.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"2d68cf87-3d6a-11e6-af3e-79581ff09e8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:447","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[12,3,4,5],"tindex":"2d68cf88-3d6a-11e6-af3e-0b0133576735","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"status":-1},{"failures":[13,21,22,23,24,25,26,14],"tindex":"2d68cf89-3d6a-11e6-af3e-4f02ff322ee8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:394","type":"CtIfImpl","sourcecode":"if ((code != '-') && ((((lastCode != code) && ((code != '0') || (lastCode == '/'))) || (code < '0')) || (code > '8'))) {\n    output.addRight(code);\n} "},"status":-1},{"failures":[],"tindex":"2d68f69a-3d6a-11e6-af3e-41a1d009a7dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[135,139],"tindex":"2d68f69b-3d6a-11e6-af3e-211f84fd3009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"status":-1},{"failures":[],"tindex":"2d68f69c-3d6a-11e6-af3e-991d0281549b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:235","type":"CtAssignmentImpl","sourcecode":"char[][int] = chr"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}