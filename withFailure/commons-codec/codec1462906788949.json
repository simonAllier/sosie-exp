{"failureDictionary":{"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":46,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":36,"org.apache.commons.codec.language.NysiisTest.testSnat":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":53,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":43,"org.apache.commons.codec.language.NysiisTest.testDropBy":15,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":33,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":3,"org.apache.commons.codec.binary.Base64Test.testBase64":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":21,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":20,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":0,"org.apache.commons.codec.binary.Base64Test.testUUID":27,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":23,"org.apache.commons.codec.binary.Base64Test.testSingletons":37,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":40,"org.apache.commons.codec.binary.Base64Test.testPairs":26,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":35,"org.apache.commons.codec.language.NysiisTest.testRule2":8,"org.apache.commons.codec.language.NysiisTest.testRule1":7,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":42,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":44,"org.apache.commons.codec.language.NysiisTest.testRule7":10,"org.apache.commons.codec.language.NysiisTest.testRule6":9,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":29,"org.apache.commons.codec.language.NysiisTest.testCap":4,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":30,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":34,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":14,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":48,"org.apache.commons.codec.language.NysiisTest.testBran":11,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":18,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":31,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":32,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":47,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":22,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":19,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":38,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":50,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":52,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":25,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":54,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":55,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":45,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":24,"org.apache.commons.codec.language.NysiisTest.testOthers":16,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":39,"org.apache.commons.codec.language.NysiisTest.testTranan":17,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":49,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":2,"org.apache.commons.codec.language.NysiisTest.testDan":5,"org.apache.commons.codec.language.NysiisTest.testFal":6,"org.apache.commons.codec.language.NysiisTest.testSnad":12,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":51,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":28},"transformations":[{"failures":[0,1],"tindex":"5e77c97a-16e1-11e6-a226-9f970a757d6b","series":0,"name":"add","transplant":{"toString":"key[i] = ((byte)(iChar << 1))","position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"i","i":"i","key":"singleByte"},"type":"adrStmt","transplantationPoint":{"toString":"singleByte[0] = ((byte)(i))","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(i))"},"status":-1},{"failures":[],"tindex":"5e77f08b-16e1-11e6-a226-414570939d7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"))","position":"org.apache.commons.codec.net.QCodec:315","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"))"},"status":-2},{"failures":[],"tindex":"5e77f08c-16e1-11e6-a226-6342e5a71b52","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)","position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)","position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"5e77f08d-16e1-11e6-a226-8ff29e25fe1f","series":0,"name":"replace","transplant":{"toString":"buffer.setCharAt(0, charZero)","position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"variableMap":{"buffer":"key","charZero":"lastChar"},"type":"adrStmt","transplantationPoint":{"toString":"if ((key.length()) > 2) {\n    final char last2Char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} ","position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"status":-1},{"failures":[19],"tindex":"5e78179e-16e1-11e6-a226-e9f94d5fc49e","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"valueToDigest","key":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"5e78179f-16e1-11e6-a226-1dc0dac6d2bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.chunkSeparatorLength = chunkSeparatorLength","position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"status":-2},{"failures":[],"tindex":"5e7817a0-16e1-11e6-a226-09ca3d322352","series":0,"name":"replace","transplant":{"toString":"final int l = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])","position":"org.apache.commons.codec.net.QuotedPrintableCodec:366","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"variableMap":{"bytes":"b","i":"length"},"type":"adrStmt","transplantationPoint":{"toString":"int len = ((int)(java.lang.Math.min(b.length, todo)))","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:201","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.min(b.int, todo)))"},"status":-2},{"failures":[],"tindex":"5e7817a1-16e1-11e6-a226-d35c38a6948d","series":0,"name":"add","transplant":{"toString":"return 3","position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return index + 3","position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return index + 3"},"status":-2},{"failures":[],"tindex":"5e783eb2-16e1-11e6-a226-2dd26393c383","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":0},{"failures":[],"tindex":"5e783eb3-16e1-11e6-a226-cdb73a092e72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"nextBranches.clear()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"status":0},{"failures":[],"tindex":"5e783eb4-16e1-11e6-a226-3dfa2aa594e5","series":0,"name":"add","transplant":{"toString":"char nextChar","position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2},{"failures":[],"tindex":"5e783eb5-16e1-11e6-a226-e157c0a6fd77","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-3},{"failures":[],"tindex":"5e783eb6-16e1-11e6-a226-c1ea536e5cb0","series":0,"name":"replace","transplant":{"toString":"input = input.trim()","position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"input = input.trim()"},"variableMap":{"input":"algorithm"},"type":"adrStmt","transplantationPoint":{"toString":"this.algorithm = algorithm","position":"org.apache.commons.codec.digest.HmacAlgorithms:78","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = algorithm"},"status":-2},{"failures":[],"tindex":"5e7865c7-16e1-11e6-a226-b94107fc13fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('*')","position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"status":0},{"failures":[20,21,22,1,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"5e7865c8-16e1-11e6-a226-afeb0a76d38f","series":0,"name":"replace","transplant":{"toString":"final byte[] pBytes = new byte[keyLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(encodeSize, context)","position":"org.apache.commons.codec.binary.Base64:342","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"5e7865c9-16e1-11e6-a226-9fc84d21b381","series":0,"name":"replace","transplant":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"toString":"return context.eof ? org.apache.commons.codec.binary.BaseNCodec.EOF : 0","position":"org.apache.commons.codec.binary.BaseNCodec:301","type":"CtReturnImpl","sourcecode":"return context.boolean ? org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int : 0"},"status":0},{"failures":[53,54,55],"tindex":"5e7865ca-16e1-11e6-a226-ab9b19bf08a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":17,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}