{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":83,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":101,"org.apache.commons.codec.language.NysiisTest.testSnat":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":11,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":69,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":87,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeNull":0,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":28,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":48,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":65,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":52,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":78,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":67,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":68,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":15,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":17,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":45,"org.apache.commons.codec.language.NysiisTest.testCap":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":26,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":92,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":19,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":5,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":58,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":59,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":14,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":10,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":61,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":90,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":96,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":24,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":75,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":76,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":80,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":9,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":55,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":91,"org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull":79,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":53,"org.apache.commons.codec.language.NysiisTest.testTranan":42,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":84,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":85,"org.apache.commons.codec.language.NysiisTest.testFal":32,"org.apache.commons.codec.language.NysiisTest.testSnad":37,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":86,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":54,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":72,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":64,"org.apache.commons.codec.language.NysiisTest.testDropBy":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":95,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":51,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":93,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":50,"org.apache.commons.codec.binary.Base64Test.testConstructors":63,"org.apache.commons.codec.language.NysiisTest.testRule2":34,"org.apache.commons.codec.language.NysiisTest.testRule1":33,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":49,"org.apache.commons.codec.language.NysiisTest.testRule6":35,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":98,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":39,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":100,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":21,"org.apache.commons.codec.language.NysiisTest.testBran":36,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":43,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":57,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":82,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":56,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":89,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":23,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":66,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":71,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":74,"org.apache.commons.codec.language.NysiisTest.testDad":30,"org.apache.commons.codec.language.NysiisTest.testOthers":41,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":73,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":97,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":27,"org.apache.commons.codec.language.NysiisTest.testDan":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":99,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":77},"transformations":[{"failures":[],"tindex":"c2821546-122a-11e6-9e28-dde595b97b46","series":0,"name":"replace","transplant":{"toString":"final java.lang.String replacement1 = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1])","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:309","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String rCon = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2])","position":"org.apache.commons.codec.language.bm.Rule:452","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2])"},"status":-2},{"failures":[0],"tindex":"c2826367-122a-11e6-9e28-a7bfe4623866","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"c2826368-122a-11e6-9e28-879477fc9939","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"sb.append('}')","position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"status":0},{"failures":[],"tindex":"c2826369-122a-11e6-9e28-6bb84a07aeab","series":0,"name":"replace","transplant":{"toString":"appendPrimary(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:189","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[1],"tindex":"c282636a-122a-11e6-9e28-bd95fbc0af49","series":0,"name":"replace","transplant":{"toString":"result.append('X', 'K')","position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"result.append('X', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:341","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"c2828a7b-122a-11e6-9e28-27e552fd79f0","series":0,"name":"replace","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"c1","element":"c1"},"type":"adrStmt","transplantationPoint":{"toString":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"status":0},{"failures":[2],"tindex":"c2828a7c-122a-11e6-9e28-6b8d6ea74a0b","series":0,"name":"replace","transplant":{"toString":"final java.lang.String bContent = boxContent","position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"variableMap":{"boxContent":"input"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String remainder = input.substring(2)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"status":-1},{"failures":[3],"tindex":"c282b18d-122a-11e6-9e28-cb6db9692a15","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[4,5,6,7,1],"tindex":"c282b18e-122a-11e6-9e28-09a0fb2db528","series":0,"name":"replace","transplant":{"toString":"result.append(\"X\", \"SK\")","position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:313","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"c282b18f-122a-11e6-9e28-737172b4fb47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone2:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[8,9,10,11,12,13],"tindex":"c282d7a0-122a-11e6-9e28-edd488e98dbb","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return sb.toString()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:472","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[],"tindex":"c282d7a1-122a-11e6-9e28-6fb78e08a0fb","series":0,"name":"replace","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"data","org.apache.commons.codec.language.Caverphone1.SIX_1":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))","position":"org.apache.commons.codec.digest.DigestUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-3},{"failures":[2,14,15],"tindex":"c282feb2-122a-11e6-9e28-5f18f7bf3bb4","series":0,"name":"replace","transplant":{"toString":"final boolean endsWithBox = content.endsWith(\"]\")","position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"variableMap":{"content":"regex"},"type":"adrStmt","transplantationPoint":{"toString":"final boolean startsWith = regex.startsWith(\"^\")","position":"org.apache.commons.codec.language.bm.Rule:500","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = regex.startsWith(\"^\")"},"status":-1},{"failures":[16],"tindex":"c282feb3-122a-11e6-9e28-5b3d9781262c","series":0,"name":"replace","transplant":{"toString":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))","position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"tmp","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"toString":"tmp[i] = org.apache.commons.codec.net.QCodec.BLANK","position":"org.apache.commons.codec.net.QCodec:187","type":"CtAssignmentImpl","sourcecode":"tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26],"tindex":"c282feb4-122a-11e6-9e28-2ddcb262a4cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"todo -= len","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-1},{"failures":[],"tindex":"c28325c5-122a-11e6-9e28-f982c9aa0a41","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")","position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"toString":"line = line.trim()","position":"org.apache.commons.codec.language.bm.Rule:427","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"status":-2},{"failures":[],"tindex":"c28325c6-122a-11e6-9e28-6787643ffb6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")","position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":0},{"failures":[],"tindex":"c28325c7-122a-11e6-9e28-515957ca4d69","series":0,"name":"replace","transplant":{"toString":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^y3\", \"Y3\")","position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"status":-3},{"failures":[],"tindex":"c2834cd8-122a-11e6-9e28-e76550e29283","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:204","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"c2834cd9-122a-11e6-9e28-894c7e6272f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} ","position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} "},"status":-1},{"failures":[],"tindex":"c2834cda-122a-11e6-9e28-d785a61eeab3","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)","position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_256"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_256, key)","position":"org.apache.commons.codec.digest.HmacUtils:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"c28373eb-122a-11e6-9e28-d3242069932f","series":0,"name":"add","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int numSaltChars = org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS.length","position":"org.apache.commons.codec.digest.UnixCrypt:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,23,54],"tindex":"c28373ec-122a-11e6-9e28-b1ee0fd265a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 25))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[55,56,57,58,59],"tindex":"c28373ed-122a-11e6-9e28-5368902da802","series":0,"name":"replace","transplant":{"toString":"sb.append('}')","position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"variableMap":{"sb":"sBuf"},"type":"adrStmt","transplantationPoint":{"toString":"sBuf.append(current)","position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"sBuf.append(current)"},"status":-1},{"failures":[60,61,62],"tindex":"c2839afe-122a-11e6-9e28-bba3e9280f24","series":0,"name":"replace","transplant":{"toString":"name1Char[i] = ' '","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"l_ascii","i":"bits"},"type":"adrStmt","transplantationPoint":{"toString":"l_ascii[(jj - bits)] = '0'","position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"status":-1},{"failures":[],"tindex":"c2839aff-122a-11e6-9e28-7d6515163cf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"tch\", \"2ch\")","position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[],"tindex":"c2839b00-122a-11e6-9e28-014caf075a3a","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHIA\")) {\n    return true;\n} else if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char c = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHIA\")) {\n    return true;\n} else if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"variableMap":{"index":"i","value":"chars"},"type":"adrStmt","transplantationPoint":{"toString":"if ((chars.charAt(i)) == input) {\n    return true;\n} ","position":"org.apache.commons.codec.language.bm.Rule:241","type":"CtIfImpl","sourcecode":"if ((chars.charAt(i)) == input) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"c283c211-122a-11e6-9e28-4d80c311e5b2","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:990","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"variableMap":{"alternate":"sb","value":"lCon"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\", lcon='\").append(lCon).append('\\'')","position":"org.apache.commons.codec.language.bm.Rule:466","type":"CtInvocationImpl","sourcecode":"sb.append(\", lcon='\").append(lCon).append('\\'')"},"status":-3},{"failures":[63],"tindex":"c283c212-122a-11e6-9e28-a54d8580cb9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))","position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":-1},{"failures":[13],"tindex":"c283e923-122a-11e6-9e28-a912c58b5469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((folding) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS.get(ch);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n} "},"status":-1},{"failures":[],"tindex":"c283e924-122a-11e6-9e28-670c6f3b0974","series":0,"name":"replace","transplant":{"toString":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String remainder = input.substring(2);\n    final java.lang.String combined = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"c2841035-122a-11e6-9e28-d565bbc4fdb6","series":0,"name":"replace","transplant":{"toString":"if (lineLength > 0) {\n    this.encodeSize = (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length);\n    this.lineSeparator = new byte[lineSeparator.length];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.lineSeparator, 0, lineSeparator.length);\n} else {\n    this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK;\n    this.lineSeparator = null;\n}","position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"length","encodeSize":"length","length":"length","lineSeparator":"raw","lineLength":"length"},"type":"adrStmt","transplantationPoint":{"toString":"for (int ii = 0, jj = (l_ascii.length) - 1 ; ii < (raw.length) ; ii++ , jj -= 8) {\n    for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.BITS[bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}","position":"org.apache.commons.codec.binary.BinaryCodec:248","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":-3},{"failures":[3,64,65,66,2,14,67,15],"tindex":"c2843746-122a-11e6-9e28-477e08b84a90","series":0,"name":"replace","transplant":{"toString":"return (input.length()) == 0","position":"org.apache.commons.codec.language.bm.Rule:513","type":"CtReturnImpl","sourcecode":"return (input.length()) == 0"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.lContext.isMatch(input.subSequence(0, i))","position":"org.apache.commons.codec.language.bm.Rule:718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(0, i))"},"status":-1},{"failures":[68,69,70,71,72,73,74,75],"tindex":"c2845e57-122a-11e6-9e28-a17f77006808","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}"},"status":-1},{"failures":[76],"tindex":"c2845e58-122a-11e6-9e28-57f1d49c6fb1","series":0,"name":"replace","transplant":{"toString":"c <<= 1","position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"minRating"},"type":"adrStmt","transplantationPoint":{"toString":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"c2845e59-122a-11e6-9e28-b7fc29800cb7","series":0,"name":"add","transplant":{"toString":"return 1","position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return 0","position":"org.apache.commons.codec.language.bm.Rule:102","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"c2845e5a-122a-11e6-9e28-a7425ebb6246","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:219","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-2},{"failures":[77,78],"tindex":"c284856b-122a-11e6-9e28-8f592b79cb23","series":0,"name":"replace","transplant":{"toString":"int u = v & e0","position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"variableMap":{"v":"c","e0":"c"},"type":"adrStmt","transplantationPoint":{"toString":"int s = (((org.apache.commons.codec.digest.UnixCrypt.SKB[0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.SKB[1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.SKB[2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.SKB[3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])","position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])"},"status":-1},{"failures":[],"tindex":"c284856c-122a-11e6-9e28-312bd48a9ac8","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < inAvail ; i++) {\n    final byte[] buffer = ensureBufferSize(encodeSize, context);\n    context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_UNENCODED_BLOCK);\n    int b = in[(inPos++)];\n    if (b < 0) {\n        b += 256;\n    } \n    context.ibitWorkArea = ((context.ibitWorkArea) << 8) + b;\n    if (0 == (context.modulus)) {\n        buffer[((context.pos)++)] = encodeTable[(((context.ibitWorkArea) >> 18) & (org.apache.commons.codec.binary.Base64.MASK_6BITS))];\n        buffer[((context.pos)++)] = encodeTable[(((context.ibitWorkArea) >> 12) & (org.apache.commons.codec.binary.Base64.MASK_6BITS))];\n        buffer[((context.pos)++)] = encodeTable[(((context.ibitWorkArea) >> 6) & (org.apache.commons.codec.binary.Base64.MASK_6BITS))];\n        buffer[((context.pos)++)] = encodeTable[((context.ibitWorkArea) & (org.apache.commons.codec.binary.Base64.MASK_6BITS))];\n        context.currentLinePos += org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK;\n        if (((lineLength) > 0) && ((lineLength) <= (context.currentLinePos))) {\n            java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length);\n            context.pos += lineSeparator.length;\n            context.currentLinePos = 0;\n        } \n    } \n}","position":"org.apache.commons.codec.binary.Base64:378","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    int int = in[(inPos++)];\n    if (b < 0) {\n        b += 256;\n    } \n    context.int = ((context.int) << 8) + b;\n    if (0 == (context.int)) {\n        buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n        if (((int) > 0) && ((int) <= (context.int))) {\n            java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n            context.int += byte[].int;\n            context.int = 0;\n        } \n    } \n}"},"status":-2},{"failures":[7,1],"tindex":"c284ac7d-122a-11e6-9e28-9b55b5a1bd61","series":0,"name":"replace","transplant":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.appendAlternate('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"status":-1},{"failures":[],"tindex":"c284ac7e-122a-11e6-9e28-0ba0be849178","series":0,"name":"replace","transplant":{"toString":"write(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"variableMap":{"singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH);\n}","position":"org.apache.commons.codec.digest.HmacUtils:769","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int);\n}"},"status":-3},{"failures":[55,56,57,58,59],"tindex":"c284ac7f-122a-11e6-9e28-67f04d5ca7d9","series":0,"name":"replace","transplant":{"toString":"sb.append(\", pat='\").append(pat).append('\\'')","position":"org.apache.commons.codec.language.bm.Rule:465","type":"CtInvocationImpl","sourcecode":"sb.append(\", pat='\").append(pat).append('\\'')"},"variableMap":{"pat":"str","sb":"sBuf"},"type":"adrStmt","transplantationPoint":{"toString":"sBuf.append(str.charAt(0))","position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"status":-1},{"failures":[79],"tindex":"c284ac80-122a-11e6-9e28-afec49a474e5","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.QCodec:227","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"c284d391-122a-11e6-9e28-2770f8032a52","series":0,"name":"replace","transplant":{"toString":"return metaphone(str1).equals(metaphone(str2))","position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"variableMap":{"str1":"input","str2":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.lContext.isMatch(input.subSequence(0, i))","position":"org.apache.commons.codec.language.bm.Rule:718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(0, i))"},"status":-2},{"failures":[77,78],"tindex":"c284d392-122a-11e6-9e28-d36b60785c7f","series":0,"name":"replace","transplant":{"toString":"d = (d >>> 1) | (d << 27)","position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c = results[0]","position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[],"tindex":"c284d393-122a-11e6-9e28-1511c1a974e2","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))","position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"status":-2},{"failures":[80,81,82,83,84,85,86,87],"tindex":"c284d394-122a-11e6-9e28-1de0d13172e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:309","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[88,89,90,91,92,93,94],"tindex":"c284d395-122a-11e6-9e28-7187ec1a8565","series":0,"name":"add","transplant":{"toString":"java.util.Arrays.fill(finalb, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:219","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"c284faa6-122a-11e6-9e28-315c909c682a","series":0,"name":"replace","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return encode(str, getDefaultCharset())","position":"org.apache.commons.codec.net.URLCodec:248","type":"CtReturnImpl","sourcecode":"return encode(str, getDefaultCharset())"},"status":-2},{"failures":[],"tindex":"c284faa7-122a-11e6-9e28-c9093ecd3c82","series":0,"name":"replace","transplant":{"toString":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)","position":"org.apache.commons.codec.digest.Sha2Crypt:361","type":"CtAssignmentImpl","sourcecode":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"variableMap":{"ctx":"altCtx","algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"toString":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)","position":"org.apache.commons.codec.digest.Sha2Crypt:266","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-3},{"failures":[],"tindex":"c284faa8-122a-11e6-9e28-6d5238fe0fba","series":0,"name":"replace","transplant":{"toString":"minRating = getMinRating(sumLength)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"variableMap":{"sumLength":"index","minRating":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:303","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"c284faa9-122a-11e6-9e28-0f33badae4d6","series":0,"name":"replace","transplant":{"toString":"int v = r ^ (r >>> 16)","position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"currentLine"},"type":"adrStmt","transplantationPoint":{"toString":"final int cLine = currentLine","position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"status":-2},{"failures":[],"tindex":"c284faaa-122a-11e6-9e28-e5975ff8aedd","series":0,"name":"replace","transplant":{"toString":"int value = org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])","position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])"},"variableMap":{"b":"bytes","offset":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final int b = bytes[i]","position":"org.apache.commons.codec.net.URLCodec:167","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-2},{"failures":[8,9,10,11,12,95,96,97,13,98,99,100,101],"tindex":"c28521bb-122a-11e6-9e28-0f51f2690975","series":0,"name":"add","transplant":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"line","leftCharacter":"line","rightCharacter":"line","location":"line"},"type":"adrStmt","transplantationPoint":{"toString":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-1},{"failures":[69,70,71],"tindex":"c28521bc-122a-11e6-9e28-43b8d96ccbeb","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"status":-1},{"failures":[],"tindex":"c28521bd-122a-11e6-9e28-3753d90f7eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH)","position":"org.apache.commons.codec.digest.HmacUtils:771","type":"CtAssignmentImpl","sourcecode":"read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int)"},"status":-2},{"failures":[],"tindex":"c28521be-122a-11e6-9e28-5d9438238ddc","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"p+\", \"P\")","position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^cough\", \"cou2f\")","position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"status":0},{"failures":[],"tindex":"c28548cf-122a-11e6-9e28-7590bd3bf7bd","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[],"tindex":"c28548d0-122a-11e6-9e28-2db29a384a06","series":0,"name":"add","transplant":{"toString":"final java.lang.StringBuilder code = new java.lang.StringBuilder(10)","position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder saltString = new java.lang.StringBuilder()","position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"c28548d1-122a-11e6-9e28-e343a7506a86","series":0,"name":"add","transplant":{"toString":"sb.append('|')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd, 1, ((inwd.length) - 1))","position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":0},{"failures":[],"tindex":"c28548d2-122a-11e6-9e28-75d53b7ca398","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)","position":"org.apache.commons.codec.digest.Crypt:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)"},"status":-3},{"failures":[77,78],"tindex":"c28548d3-122a-11e6-9e28-2744391f1aff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"left = right","position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":62,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}