{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"7b1b9f23-118c-11e6-8e2c-61d045e193bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":0},{"failures":[],"tindex":"7b1bc634-118c-11e6-8e2c-911bd021c795","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:381","type":"CtReturnImpl","sourcecode":"return schedule"},"variableMap":{"schedule":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:317","type":"CtReturnImpl","sourcecode":"return out"},"status":-3},{"failures":[],"tindex":"7b1bc635-118c-11e6-8e2c-7d8007d262f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"variableMap":{"input":"input","this":"this","content":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:505","type":"CtIfImpl","sourcecode":"if (!boxes) {\n    if (startsWith && endsWith) {\n        if ((content.length()) == 0) {\n            return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                @java.lang.Override\n                public boolean isMatch(final java.lang.CharSequence input) {\n                    return (input.length()) == 0;\n                }\n            };\n        } else {\n            return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                @java.lang.Override\n                public boolean isMatch(final java.lang.CharSequence input) {\n                    return input.equals(content);\n                }\n            };\n        }\n    } else if ((startsWith || endsWith) && ((content.length()) == 0)) {\n        return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern;\n    } else if (startsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n            }\n        };\n    } else if (endsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n            }\n        };\n    } \n} else {\n    final boolean boolean = content.startsWith(\"[\");\n    final boolean boolean = content.endsWith(\"]\");\n    if (startsWithBox && endsWithBox) {\n        java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1));\n        if (!(boxContent.contains(\"[\"))) {\n            final boolean boolean = boxContent.startsWith(\"^\");\n            if (negate) {\n                boxContent = boxContent.substring(1);\n            } \n            final java.lang.String java.lang.String = boxContent;\n            final boolean boolean = !negate;\n            if (startsWith && endsWith) {\n                return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                    @java.lang.Override\n                    public boolean isMatch(final java.lang.CharSequence input) {\n                        return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n                    }\n                };\n            } else if (startsWith) {\n                return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                    @java.lang.Override\n                    public boolean isMatch(final java.lang.CharSequence input) {\n                        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n                    }\n                };\n            } else if (endsWith) {\n                return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n                    @java.lang.Override\n                    public boolean isMatch(final java.lang.CharSequence input) {\n                        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n                    }\n                };\n            } \n        } \n    } \n}"},"status":0},{"failures":[],"tindex":"7b1c1456-118c-11e6-8e2c-578d394b4a6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:381","type":"CtLocalVariableImpl","sourcecode":"int int = in[(inPos++)]"},"status":0},{"failures":[],"tindex":"7b1c1457-118c-11e6-8e2c-03f98eeff1c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (r > 0) {\n    final byte byte = byte[][0];\n    return b < 0 ? 256 + b : b;\n} "},"status":0},{"failures":[],"tindex":"7b1c1458-118c-11e6-8e2c-ebe9a0c4e1dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return index + 2"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"failures":[],"tindex":"7b1c1459-118c-11e6-8e2c-e708424e6b3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"variableMap":{"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD2":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(algorithm);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-3},{"failures":[],"tindex":"7b1c3b6a-118c-11e6-8e2c-61b61d5d5e38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:141","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"variableMap":{"scanner":"lsScanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"status":0},{"failures":[],"tindex":"7b1c3b6b-118c-11e6-8e2c-0bf98b57b537","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:215","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":0},{"failures":[],"tindex":"7b1c3b6c-118c-11e6-8e2c-6d4454557114","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"c2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"7b1c627d-118c-11e6-8e2c-c7a19f74c34d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:383","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":0},{"failures":[],"tindex":"7b1c627e-118c-11e6-8e2c-bd0c2baa047c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"status":0},{"failures":[],"tindex":"7b1c627f-118c-11e6-8e2c-5341eb0c4496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:613","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"7b1c6280-118c-11e6-8e2c-1b19e1f86ce0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:225","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"7b1c8991-118c-11e6-8e2c-1d4e91ff349c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"status":0},{"failures":[],"tindex":"7b1c8992-118c-11e6-8e2c-bd8789ca832a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":16,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}