{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":51,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":47,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":116,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":115,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":109,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":74,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":106,"org.apache.commons.codec.binary.Base64Test.testTriplets":77,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":84,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":96,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":82,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":85,"org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks":0,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":7,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":72,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":23,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":41,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":43,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":93,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":42,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":64,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":110,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":102,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse":39,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":17,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":30,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":66,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":12,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":45,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":49,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":76,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":86,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":75,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":2,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":36,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":80,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":50,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":5,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":48,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":83,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":15,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":56,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":114,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":91,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":118,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":26,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":101,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":73,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":92,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":113,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":8,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":61,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":54,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":14,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":28,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":31,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":88,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":94,"org.apache.commons.codec.language.MetaphoneTest.testTCH":46,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":97,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":95,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":11,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":18,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":55,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":22,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":105,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":120,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":117,"org.apache.commons.codec.binary.Base64Test.testBase64":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":107,"org.apache.commons.codec.binary.Base64Test.testUUID":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":53,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":87,"org.apache.commons.codec.binary.Base64Test.testSingletons":20,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":27,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":79,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":70,"org.apache.commons.codec.binary.Base64Test.testPairs":62,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":1,"org.apache.commons.codec.binary.Base64Test.testCodec112":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":103,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":100,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":57,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":9,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":111,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":25,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":90,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":58,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":60,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":81,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":99,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":34,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":78,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":21,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":98,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":119,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":29,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":104,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":52,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":63,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":3},"transformations":[{"failures":[0],"tindex":"e5263e07-0cf8-11e6-a4ee-672b211d14a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-1},{"failures":[1,2],"tindex":"e5266518-0cf8-11e6-a4ee-1d3561e6b557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:297","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"e5266519-0cf8-11e6-a4ee-f95acdfb853a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtUnaryOperatorImpl","sourcecode":"(count++)"},"variableMap":{"count":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"e526651a-0cf8-11e6-a4ee-a7bec28e317d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":0},{"failures":[],"tindex":"e5268c2b-0cf8-11e6-a4ee-d9c58b3c0c1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:239","type":"CtReturnImpl","sourcecode":"return other"},"status":-2},{"failures":[3,4],"tindex":"e5268c2c-0cf8-11e6-a4ee-ad76462d5ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"variableMap":{"patternLength":"a","i":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"status":-1},{"failures":[],"tindex":"e5268c2d-0cf8-11e6-a4ee-35bbcfab3b9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"org.apache.commons.codec.language.Caverphone1.SIX_1","txt":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":-2},{"failures":[],"tindex":"e5268c2e-0cf8-11e6-a4ee-0de17c0c1ff1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:87","type":"CtInvocationImpl","sourcecode":"java.nio.charset.Charset.defaultCharset()"},"status":0},{"failures":[5],"tindex":"e526b33f-0cf8-11e6-a4ee-09c0fbb14ab2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize))"},"status":-1},{"failures":[6],"tindex":"e526b340-0cf8-11e6-a4ee-272a3360aca0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[],"tindex":"e526b341-0cf8-11e6-a4ee-d1588e78452a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:293","type":"CtReturnImpl","sourcecode":"return decode(str, getDefaultCharset())"},"variableMap":{"str":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"e526b342-0cf8-11e6-a4ee-e1e6a4ba6b2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:431","type":"CtIfImpl","sourcecode":"if (((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ER\")) || ((charAt(value, (index + 1))) == 'Y')) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"E\", \"I\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"RGY\", \"OGY\")))) {\n    result.append('K', 'J');\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"status":-2},{"failures":[],"tindex":"e526d953-0cf8-11e6-a4ee-df7da72f0731","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"status":0},{"failures":[],"tindex":"e526d954-0cf8-11e6-a4ee-8355fe0c050d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"variableMap":{"encodeBlanks":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-2},{"failures":[],"tindex":"e5270065-0cf8-11e6-a4ee-d5c755530047","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"status":-2},{"failures":[],"tindex":"e5270066-0cf8-11e6-a4ee-fbfbf90c10dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:613","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"e5270067-0cf8-11e6-a4ee-498a01b5c0fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":0},{"failures":[],"tindex":"e5272778-0cf8-11e6-a4ee-396dbaf4bafc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"pBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"status":-2},{"failures":[7,1,8,2,9],"tindex":"e5272779-0cf8-11e6-a4ee-8ba9243fdcfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:321","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-1},{"failures":[10],"tindex":"e527277a-0cf8-11e6-a4ee-c98a002ad962","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:530","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-1},{"failures":[],"tindex":"e5274e8b-0cf8-11e6-a4ee-5f4123bb9a2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:670","type":"CtIfImpl","sourcecode":"if (len > maxResultSize) {\n    throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize));\n} "},"variableMap":{"len":"lbitWorkArea","maxResultSize":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:374","type":"CtIfImpl","sourcecode":"if ((context.boolean) && ((context.int) >= 2)) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    switch (context.int) {\n        case 2 :\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 3 :\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 4 :\n            context.long = (context.long) >> 4;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 5 :\n            context.long = (context.long) >> 1;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 6 :\n            context.long = (context.long) >> 6;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 7 :\n            context.long = (context.long) >> 3;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        default :\n            throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n    }\n} "},"status":-2},{"failures":[],"tindex":"e527759c-0cf8-11e6-a4ee-0fc9fc5a8d41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.Caverphone.this.caverphone(str1)"},"status":0},{"failures":[],"tindex":"e527759d-0cf8-11e6-a4ee-6d54b127837d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:118","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"e527759e-0cf8-11e6-a4ee-c98559f24fae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:430","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())"},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-2},{"failures":[3,4],"tindex":"e5279caf-0cf8-11e6-a4ee-9571bc7af5f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"status":-1},{"failures":[],"tindex":"e5279cb0-0cf8-11e6-a4ee-9354401da267","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((prefix + saltString) + \"$\"))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"e5279cb1-0cf8-11e6-a4ee-fbafabaff815","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:353","type":"CtIfImpl","sourcecode":"if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n    buffer[((context.int)++)] = byte;\n    buffer[((context.int)++)] = byte;\n} "},"status":-1},{"failures":[],"tindex":"e5279cb2-0cf8-11e6-a4ee-b1222644f268","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"e527c3c3-0cf8-11e6-a4ee-d1aa43fd07ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"status":0},{"failures":[],"tindex":"e527c3c4-0cf8-11e6-a4ee-573855dfe75f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"status":0},{"failures":[],"tindex":"e527c3c5-0cf8-11e6-a4ee-3d010fdec32f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"variableMap":{"name1":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"e527c3c6-0cf8-11e6-a4ee-d5a179b4310c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str)"},"status":0},{"failures":[28],"tindex":"e527ead7-0cf8-11e6-a4ee-9989426a5aa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:128","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"e527ead8-0cf8-11e6-a4ee-110c3d3944b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"e527ead9-0cf8-11e6-a4ee-d569d4510f69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:373","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-2},{"failures":[29,30,31,32,33,34,35,36],"tindex":"e527eada-0cf8-11e6-a4ee-831edb71bc7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == '+') {\n        buffer.write(' ');\n    } else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n        }\n    } else {\n        buffer.write(b);\n    }\n}"},"status":-1},{"failures":[],"tindex":"e52811eb-0cf8-11e6-a4ee-531f78012d9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"e52811ec-0cf8-11e6-a4ee-4552b1297041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0},{"failures":[],"tindex":"e52811ed-0cf8-11e6-a4ee-ef043e07a57d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":0},{"failures":[],"tindex":"e52811ee-0cf8-11e6-a4ee-49506bc5b6bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:305","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes)"},"variableMap":{"bytes":"data","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"status":-2},{"failures":[37,38,39],"tindex":"e52838ff-0cf8-11e6-a4ee-9d6234d563cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:219","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[34,40],"tindex":"e5283900-0cf8-11e6-a4ee-8f217e6f0115","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:45","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)) + \"): \") + b))"},"status":-1},{"failures":[],"tindex":"e5283901-0cf8-11e6-a4ee-5ff2eb5e211a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[],"tindex":"e5283902-0cf8-11e6-a4ee-856629514611","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"org.apache.commons.codec.binary.Base32.BYTES_PER_UNENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[41,42,43],"tindex":"e5286013-0cf8-11e6-a4ee-27a374e0a6a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:189","type":"CtIfImpl","sourcecode":"if (('H' == hwChar) || ('W' == hwChar)) {\n    final char char = str.charAt((index - 2));\n    final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n    if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n        return 0;\n    } \n} "},"status":-1},{"failures":[44],"tindex":"e5286014-0cf8-11e6-a4ee-015e80b119c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[45],"tindex":"e5286015-0cf8-11e6-a4ee-ff7c72e9ba0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"status":-1},{"failures":[],"tindex":"e5286016-0cf8-11e6-a4ee-e78f5952f216","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:267","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"e5286017-0cf8-11e6-a4ee-79d1cc686c28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:116","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"e5288728-0cf8-11e6-a4ee-0b38b7ae73c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"keyLen","to":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"status":-2},{"failures":[],"tindex":"e5288729-0cf8-11e6-a4ee-8735995df5a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"variableMap":{"pArray":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:367","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[46,47],"tindex":"e528872a-0cf8-11e6-a4ee-8ded72f60c93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:313","type":"CtIfImpl","sourcecode":"if ((!(isLastChar(wdsz, n))) && (isVowel(local, (n + 1)))) {\n    code.append(symb);\n} "},"status":-1},{"failures":[],"tindex":"e528872b-0cf8-11e6-a4ee-a7f84c7ddd14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"variableMap":{"boxContent":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":-2},{"failures":[],"tindex":"e528872c-0cf8-11e6-a4ee-5f202aebef8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:99","type":"CtAssignmentImpl","sourcecode":"r = read(byte[], 0, 1)"},"status":0},{"failures":[3,48,49,4],"tindex":"e528872d-0cf8-11e6-a4ee-8999f5ef62de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtUnaryOperatorImpl","sourcecode":"(offset++)"},"status":-1},{"failures":[],"tindex":"e528ae3e-0cf8-11e6-a4ee-63441a8af8dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtInvocationImpl","sourcecode":"colognePhonetic(text1)"},"status":0},{"failures":[],"tindex":"e528ae3f-0cf8-11e6-a4ee-ef7afa23b7dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"variableMap":{"schedule":"org.apache.commons.codec.digest.UnixCrypt.COV2CHAR","t":"c","left":"i","eSwap0":"i","right":"c","eSwap1":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])))"},"status":-2},{"failures":[50,51,52,53],"tindex":"e528ae40-0cf8-11e6-a4ee-e97eb23d1dc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:748","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"status":-1},{"failures":[],"tindex":"e528ae41-0cf8-11e6-a4ee-b77c4c157572","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"failures":[],"tindex":"e528ae42-0cf8-11e6-a4ee-a3033bf2cece","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"status":0},{"failures":[],"tindex":"e528ae43-0cf8-11e6-a4ee-57704ac9b0b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:312","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)))"},"status":-2},{"failures":[],"tindex":"e528ae44-0cf8-11e6-a4ee-1b42d8b68c58","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:303","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"TH\")) {\n    code.append('0');\n} else {\n    code.append('T');\n}"},"variableMap":{"code":"buffer","local":"buffer","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])))"},"status":-2},{"failures":[29,30,31,32,33,34,35,36],"tindex":"e528d555-0cf8-11e6-a4ee-634b966707e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-1},{"failures":[54,50,51,52,53],"tindex":"e528d556-0cf8-11e6-a4ee-71d3659980e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"status":-1},{"failures":[],"tindex":"e528d557-0cf8-11e6-a4ee-c39fda2eed89","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtInvocationImpl","sourcecode":"langs.isEmpty()"},"variableMap":{"langs":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:223","type":"CtInvocationImpl","sourcecode":"langs.removeAll(rule.java.util.Set<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"e528d558-0cf8-11e6-a4ee-ab6fb45a4903","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:515","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[55,56,57],"tindex":"e528d559-0cf8-11e6-a4ee-2f6e7588a047","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"l_ascii","i":"bits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"status":-1},{"failures":[],"tindex":"e528d55a-0cf8-11e6-a4ee-65faf24d446a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:458","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[58,59,60,11,12,13,14,61,62,63,64,65,66,67,68,69,18,21,70,71,72,22,23,73,24,74,25,26,27],"tindex":"e528d55b-0cf8-11e6-a4ee-9bfee89bf3dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:360","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[],"tindex":"e528fc6c-0cf8-11e6-a4ee-734d19e833db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:188","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"e528fc6d-0cf8-11e6-a4ee-cdce4edd8d66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:434","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"e528fc6e-0cf8-11e6-a4ee-9ffb3fd91c9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"ch","chr":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:231","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (org.apache.commons.codec.language.Soundex.this.getSoundexMapping().int))) {\n    throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + ch));\n} "},"status":-2},{"failures":[75,76],"tindex":"e528fc6f-0cf8-11e6-a4ee-6db76bb70dae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"variableMap":{"ascii":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[52,53],"tindex":"e528fc70-0cf8-11e6-a4ee-3bbd79e2bfa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"e528fc71-0cf8-11e6-a4ee-032495db177a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2},{"failures":[58,59,60,13,14,77,15,62,16,63,78,64,65,17,66,68,69,79,18,20,80,21,70,71,22,23,73,24,25,26,27],"tindex":"e528fc72-0cf8-11e6-a4ee-29bcc3aae4ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest().digest(data)"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-1},{"failures":[81,82,83,84,85],"tindex":"e5292383-0cf8-11e6-a4ee-a5f57b3f7b25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:217","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"e5292384-0cf8-11e6-a4ee-ad0349bc7aa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[],"tindex":"e5292385-0cf8-11e6-a4ee-45ed0f4b8568","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset.name()"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_8"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[86,87,88,89,90,91,92],"tindex":"e5292386-0cf8-11e6-a4ee-ab62cdb735ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-1},{"failures":[],"tindex":"e5292387-0cf8-11e6-a4ee-a9b89b86e484","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:208","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"e5292388-0cf8-11e6-a4ee-5f692dde192c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:173","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1"},"status":-2},{"failures":[93,94,95],"tindex":"e5292389-0cf8-11e6-a4ee-7b786aa8a307","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-1},{"failures":[96,97,98,99,100,101],"tindex":"e5294a9a-0cf8-11e6-a4ee-17e61a0af867","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"status":-1},{"failures":[102,103,104,105,106,81,107,108,109,110,111,82,83,84,85],"tindex":"e5294a9b-0cf8-11e6-a4ee-d11a7ddedcf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:605","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (prefix.charAt(i))) {\n    return false;\n} "},"variableMap":{"input":"input","prefix":"input","i":"ipl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:706","type":"CtIfImpl","sourcecode":"if (ipl > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e5294a9c-0cf8-11e6-a4ee-fd77bdbebb8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120],"tindex":"e5294a9d-0cf8-11e6-a4ee-8fe25b0c8b07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:307","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n    final char char = r.java.lang.String.charAt(0);\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n    if (rules == null) {\n        rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n        ruleMapping.put(patternKey, rules);\n    } \n    rules.add(r);\n} catch (final java.lang.IllegalArgumentException e) {\n    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n}"},"status":-1},{"failures":[64,65],"tindex":"e5294a9e-0cf8-11e6-a4ee-c1baad2ac803","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"variableMap":{"patternLength":"len","i":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"status":-1},{"failures":[],"tindex":"e5294a9f-0cf8-11e6-a4ee-e31a690eb467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":89,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}