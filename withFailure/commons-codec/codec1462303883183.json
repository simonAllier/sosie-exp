{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":137,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":167,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":174,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":46,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":106,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":20,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":58,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":125,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":199,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":30,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":193,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":192,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":173,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":38,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":191,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":37,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":121,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":195,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":147,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":73,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":104,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":198,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":161,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":134,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":202,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":111,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":157,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":47,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":184,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":178,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":13,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":74,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":181,"org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull":183,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":60,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":95,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":117,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":124,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":136,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":160,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":196,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":45,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":84,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":148,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":130,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":5,"org.apache.commons.codec.binary.Base64Test.testUUID":87,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":43,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":89,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":32,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":170,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":151,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":66,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":150,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":164,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":135,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":145,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":166,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":82,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":143,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":189,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":171,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":76,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":194,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":109,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":51,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":190,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":99,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":55,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":69,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":120,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":203,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":155,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":63,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":103,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":39,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":53,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":201,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":204,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":112,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":70,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":83,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":177,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":138,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":185,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":175,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":180,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":159,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":182,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":114,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":107,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":71,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":65,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":85,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":186,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":10,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":15,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":56,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":144,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":61,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":141,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":64,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":94,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":100,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":152,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":115,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":139,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":49,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":105,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":110,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":4,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":59,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":122,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":28,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":118,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":149,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":197,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":67,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":188,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":176,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":16,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":142,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":158,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":133,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":8,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":40,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":78,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":168,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":52,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":187,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":81,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":179,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":169,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":6,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":116,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":200,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":140,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":19,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":91,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":163,"org.apache.commons.codec.binary.Base64Test.testBase64":90,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":126,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":128,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":79,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":153,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":119,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":123,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":31,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":92,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":68,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":146,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":72,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":24,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":132,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":75,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":102,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":0,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":80,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":62,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":93,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":172,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":156,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":9,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":154,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":113,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":88,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":162,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":33,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":23,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":101,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":127,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":165,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":98},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"9ea2b10a-1165-11e6-b79f-c948db1e2340","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":-1},{"failures":[7,8,9],"tindex":"9ea2d81b-1165-11e6-b79f-01fdbcf0067b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-1},{"failures":[10],"tindex":"9ea2d81c-1165-11e6-b79f-97e151b179b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:609","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"9ea2ff2d-1165-11e6-b79f-115b0738d8cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:315","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = key.toString()"},"status":-2},{"failures":[],"tindex":"9ea2ff2e-1165-11e6-b79f-b59f94c5d88c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:348","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = rulesApplication.isFound()"},"status":-2},{"failures":[11],"tindex":"9ea2ff2f-1165-11e6-b79f-7d44bb2363b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"status":-1},{"failures":[12],"tindex":"9ea2ff30-1165-11e6-b79f-6fdb13505c0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"9ea32641-1165-11e6-b79f-b94f1de35f85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()"},"status":0},{"failures":[],"tindex":"9ea32642-1165-11e6-b79f-4b48fc8278d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"status":-2},{"failures":[],"tindex":"9ea32643-1165-11e6-b79f-2fdaa736ba39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"variableMap":{"singleByte":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[33], altResult[54], 4, buffer)"},"status":-3},{"failures":[13],"tindex":"9ea32644-1165-11e6-b79f-f5953eeaafe6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:128","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[14],"tindex":"9ea34d55-1165-11e6-b79f-573787997c2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:141","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n} "},"status":-1},{"failures":[],"tindex":"9ea34d56-1165-11e6-b79f-515578cd390e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-2},{"failures":[],"tindex":"9ea34d57-1165-11e6-b79f-69c63b4b1333","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:83","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme> = phonemes"},"variableMap":{"phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:78","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme> = new java.util.LinkedHashSet<org.apache.commons.codec.language.bm.Rule.Phoneme>()"},"status":-2},{"failures":[],"tindex":"9ea34d58-1165-11e6-b79f-cf52f2b9db88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"variableMap":{"content":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:84","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[15,16,10,17,18,19,20,21],"tindex":"9ea37469-1165-11e6-b79f-69cb28fe7425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:210","type":"CtIfImpl","sourcecode":"if (rules != null) {\n    for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n        final java.lang.String java.lang.String = rule.getPattern();\n        patternLength = pattern.length();\n        if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n            break;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"9ea3746a-1165-11e6-b79f-7ba51f87e2d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:437","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location))"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"9ea39b7b-1165-11e6-b79f-b7d648723f5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return string.getBytes(charset)"},"status":-1},{"failures":[],"tindex":"9ea39b7c-1165-11e6-b79f-c5ead419f149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":0},{"failures":[127,128,129],"tindex":"9ea39b7d-1165-11e6-b79f-bfb229ca20f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"variableMap":{"n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"status":-1},{"failures":[],"tindex":"9ea3c28e-1165-11e6-b79f-6f74ea1fad82","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:300","type":"CtReturnImpl","sourcecode":"return handleCC(value, result, index)"},"status":-2},{"failures":[],"tindex":"9ea3c28f-1165-11e6-b79f-0baad82635b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"body","dc":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-2},{"failures":[],"tindex":"9ea3c290-1165-11e6-b79f-ff7ad0207731","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.AbstractCaverphone:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(((java.lang.String)(source)))"},"variableMap":{"source":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[],"tindex":"9ea3e9a1-1165-11e6-b79f-81ca778126df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"variableMap":{"maxPhonemes":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-3},{"failures":[],"tindex":"9ea3e9a2-1165-11e6-b79f-47a46636d3e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:487","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(str, org.apache.commons.codec.net.QuotedPrintableCodec.this.getCharset())"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[129],"tindex":"9ea3e9a3-1165-11e6-b79f-e7993f94f4c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:619","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"9ea410b4-1165-11e6-b79f-81d4412aa1a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"9ea410b5-1165-11e6-b79f-fb05f0070972","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"9ea410b6-1165-11e6-b79f-853194a2bf55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"altCtx.reset()"},"variableMap":{"altCtx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"9ea410b7-1165-11e6-b79f-57fe093928c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:569","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n    }\n}"},"variableMap":{"input":"this","bContent":"this","this":"this","shouldMatch":"shouldMatch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:577","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n    }\n}"},"status":-2},{"failures":[],"tindex":"9ea437c8-1165-11e6-b79f-0fc3249b384c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}"},"status":-2},{"failures":[],"tindex":"9ea437c9-1165-11e6-b79f-2f675fabf684","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":-2},{"failures":[],"tindex":"9ea437ca-1165-11e6-b79f-6d46d9bbd43f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:87","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = java.util.Collections.unmodifiableSet(languages)"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:289","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = languages"},"status":0},{"failures":[],"tindex":"9ea45edb-1165-11e6-b79f-c7b06e1dc7e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('|')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"status":-3},{"failures":[130,131,132,133,134],"tindex":"9ea45edc-1165-11e6-b79f-9f2789959eb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:260","type":"CtReturnImpl","sourcecode":"return count >= minRating"},"status":-1},{"failures":[],"tindex":"9ea45edd-1165-11e6-b79f-057c816a3ae4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"algorithm","key":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"9ea485ee-1165-11e6-b79f-bd1905897121","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:452","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2])"},"status":-2},{"failures":[],"tindex":"9ea485ef-1165-11e6-b79f-3b71d5553160","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:99","type":"CtIfImpl","sourcecode":"if (txtLength == 1) {\n    return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":0},{"failures":[],"tindex":"9ea485f0-1165-11e6-b79f-c1ba2466609a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"9ea4ad01-1165-11e6-b79f-3f80e82deffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:73","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('(')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[135],"tindex":"9ea4ad02-1165-11e6-b79f-4fcb64ee4e8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"status":-1},{"failures":[],"tindex":"9ea4ad03-1165-11e6-b79f-c5a8be66c732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ISL\", \"YSL\")) {\n    index++;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, \"SUGAR\"))) {\n    result.append('X', 'S');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SH\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n        result.append('S');\n    } else {\n        result.append('X');\n    }\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"SIO\", \"SIA\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"SIAN\"))) {\n    if (slavoGermanic) {\n        result.append('S');\n    } else {\n        result.append('S', 'X');\n    }\n    index += 3;\n} else if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[],"tindex":"9ea4d414-1165-11e6-b79f-ffedf1a22632","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)"},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = keyBytes.int"},"status":-2},{"failures":[],"tindex":"9ea4d415-1165-11e6-b79f-9dfbb52d7fe0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"variableMap":{"altCtx":"ctx1","saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:261","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":0},{"failures":[],"tindex":"9ea4d416-1165-11e6-b79f-ed44dbec9b17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:483","type":"CtReturnImpl","sourcecode":"return isInAlphabet(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(basen), true)"},"variableMap":{"basen":"org.apache.commons.codec.language.DoubleMetaphone.VOWELS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:866","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String.indexOf(ch)) != (-1)"},"status":-2},{"failures":[],"tindex":"9ea4fb27-1165-11e6-b79f-e37635bce751","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"location","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"status":-3},{"failures":[],"tindex":"9ea4fb28-1165-11e6-b79f-cb442d4f1d31","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[15,16,10,17],"tindex":"9ea4fb29-1165-11e6-b79f-dddda49e01f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"status":-1},{"failures":[],"tindex":"9ea5223a-1165-11e6-b79f-85693bd92a30","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:215","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[128,136,129,137,138],"tindex":"9ea5223b-1165-11e6-b79f-b11147a38871","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[139,140,141,142,143,144,145,146],"tindex":"9ea5223c-1165-11e6-b79f-27f9beddd9dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-1},{"failures":[147,148,149,150,151,152,153,154],"tindex":"9ea5223d-1165-11e6-b79f-3ffb8c9095e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[],"tindex":"9ea5223e-1165-11e6-b79f-fbf5a14c80e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"status":-2},{"failures":[],"tindex":"9ea5223f-1165-11e6-b79f-152e611bc809","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":0},{"failures":[7,155],"tindex":"9ea52240-1165-11e6-b79f-3ff5a0ed247a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-1},{"failures":[],"tindex":"9ea54951-1165-11e6-b79f-abeb87f458de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"variableMap":{"line":"lang","ls":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-3},{"failures":[],"tindex":"9ea54952-1165-11e6-b79f-f13c278be38f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"status":-2},{"failures":[],"tindex":"9ea54953-1165-11e6-b79f-b9af3c167b8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:389","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : body.split(\"[|]\")) {\n    phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part));\n}"},"status":-2},{"failures":[],"tindex":"9ea54954-1165-11e6-b79f-85f8c9d7890f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(str)"},"variableMap":{"str":"phonemeText","phonemeText":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-3},{"failures":[156,157,158,159,14,160,161,162,163,164,165,166,167],"tindex":"9ea54955-1165-11e6-b79f-6f874f6efc56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:260","type":"CtIfImpl","sourcecode":"if (inMultilineComment) {\n    if (line.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        inMultilineComment = false;\n    } \n    continue;\n} "},"status":-1},{"failures":[127,128,129,137],"tindex":"9ea54956-1165-11e6-b79f-b562b39de897","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"variableMap":{"base64":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"status":-1},{"failures":[],"tindex":"9ea57067-1165-11e6-b79f-979acf53aa78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"line","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"line","text":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-3},{"failures":[],"tindex":"9ea57068-1165-11e6-b79f-c7d02c1155dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> : org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}"},"status":-2},{"failures":[],"tindex":"9ea57069-1165-11e6-b79f-5194473a8a9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:288","type":"CtIfImpl","sourcecode":"if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    pos = 1;\n}"},"status":-3},{"failures":[],"tindex":"9ea5706a-1165-11e6-b79f-97e1c5d0f863","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:487","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(str, org.apache.commons.codec.net.QuotedPrintableCodec.this.getCharset())"},"variableMap":{"str":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)"},"status":-2},{"failures":[],"tindex":"9ea5706b-1165-11e6-b79f-d9524be900f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:451","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1])"},"status":-2},{"failures":[],"tindex":"9ea5706c-1165-11e6-b79f-e9c1b3806802","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:188","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-2},{"failures":[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"9ea5977d-1165-11e6-b79f-1bb201d2e393","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"variableMap":{"chrs":"name1Char","index":"i","element":"name1Char"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"status":-1},{"failures":[],"tindex":"9ea5977e-1165-11e6-b79f-3fa753325471","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:298","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"9ea5977f-1165-11e6-b79f-038c2dbe6a6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[7,8,9],"tindex":"9ea59780-1165-11e6-b79f-cf288cc19eb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"status":-1},{"failures":[],"tindex":"9ea59781-1165-11e6-b79f-6bbc4a62225d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"value1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":-2},{"failures":[],"tindex":"9ea59782-1165-11e6-b79f-3d0db353b963","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"status":-2},{"failures":[],"tindex":"9ea59783-1165-11e6-b79f-cf66cfa20c97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"status":-2},{"failures":[127,128,129,137],"tindex":"9ea59784-1165-11e6-b79f-cfa33dbdb4f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:552","type":"CtIfImpl","sourcecode":"if (conditionL0(value, index)) {\n    result.appendPrimary('L');\n} else {\n    result.append('L');\n}"},"status":-1},{"failures":[183],"tindex":"9ea5bd95-1165-11e6-b79f-f73a376bf4e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:139","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[15,16,10,17],"tindex":"9ea5bd96-1165-11e6-b79f-b7bdf1cf5e86","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"variableMap":{"blocksize":"i","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:472","type":"CtAssignmentImpl","sourcecode":"i = rulesApplication.getI()"},"status":-1},{"failures":[127,128,136,184,129,137,138],"tindex":"9ea5bd97-1165-11e6-b79f-b17535a881e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-1},{"failures":[],"tindex":"9ea5bd98-1165-11e6-b79f-2b789c740791","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[],"tindex":"9ea5bd99-1165-11e6-b79f-9d6b87836d69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + remainder"},"status":-2},{"failures":[144],"tindex":"9ea5bd9a-1165-11e6-b79f-cfb6138819e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[],"tindex":"9ea5bd9b-1165-11e6-b79f-2188c6e998cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:742","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[185,186],"tindex":"9ea5bd9c-1165-11e6-b79f-0f6f7764cef2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"variableMap":{"blocksize":"a","cp":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"a = (a ^ t) ^ (t >>> (16 - n))"},"status":-1},{"failures":[],"tindex":"9ea5e4ad-1165-11e6-b79f-737409aee42b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.this.java.lang.String = charset"},"status":-2},{"failures":[30,32,187,188,189],"tindex":"9ea5e4ae-1165-11e6-b79f-91b041c7986b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:54","type":"CtLocalVariableImpl","sourcecode":"int int = thisStart"},"variableMap":{"thisStart":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:287","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-1},{"failures":[],"tindex":"9ea5e4af-1165-11e6-b79f-7dc66ca683e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)"},"status":-2},{"failures":[],"tindex":"9ea5e4b0-1165-11e6-b79f-8d863fbb0784","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)"},"status":-2},{"failures":[],"tindex":"9ea5e4b1-1165-11e6-b79f-af7114e687d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"variableMap":{"curr":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:164","type":"CtReturnImpl","sourcecode":"return new char[]{ prev }"},"status":-3},{"failures":[190],"tindex":"9ea5e4b2-1165-11e6-b79f-f953fa4622f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"status":-1},{"failures":[],"tindex":"9ea5e4b3-1165-11e6-b79f-55a95c5f7110","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n))"},"status":-2},{"failures":[],"tindex":"9ea60bc4-1165-11e6-b79f-01673f9f0fe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:266","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-3},{"failures":[191,192,193,194,195,196,197,198],"tindex":"9ea60bc5-1165-11e6-b79f-0b59ce0a04f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:236","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"9ea60bc6-1165-11e6-b79f-7fcbed67dc0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"9ea60bc7-1165-11e6-b79f-17a601738fc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:177","type":"CtInvocationImpl","sourcecode":"rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept))"},"status":0},{"failures":[],"tindex":"9ea60bc8-1165-11e6-b79f-e7ebfbb2d76a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"status":0},{"failures":[185,186],"tindex":"9ea60bc9-1165-11e6-b79f-4d226c01f2fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"variableMap":{"ii":"right","keyLen":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:312","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[199,7,8,9,200,201,155,202],"tindex":"9ea60bca-1165-11e6-b79f-f5b4b7172e64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:387","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-1},{"failures":[203,180],"tindex":"9ea60bcb-1165-11e6-b79f-37d6eb33b396","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"upperName = removeAccents(upperName)"},"status":-1},{"failures":[204],"tindex":"9ea60bcc-1165-11e6-b79f-7fcfae8f4efa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"status":-1},{"failures":[147,148,149,153,154],"tindex":"9ea60bcd-1165-11e6-b79f-158116a68a80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}