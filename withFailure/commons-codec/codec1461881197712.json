{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":88,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":173,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":114,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":181,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":170,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":176,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":115,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":84,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":211,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":20,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":134,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":122,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":133,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":184,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":75,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":154,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":74,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":35,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":36,"org.apache.commons.codec.language.NysiisTest.testCap":160,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":180,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":40,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le":164,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":73,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":37,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":38,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":19,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":77,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":191,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":102,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":196,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":120,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":79,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":190,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":194,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":119,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":172,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":131,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":146,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":113,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":83,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":189,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":141,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":118,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":64,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":105,"org.apache.commons.codec.net.RFC1522CodecTest.testNullInput":3,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":157,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":117,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":210,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":59,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":18,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":195,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":178,"org.apache.commons.codec.language.NysiisTest.testDropBy":162,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":186,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":145,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":169,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":125,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":12,"org.apache.commons.codec.binary.Base64Test.testUUID":31,"org.apache.commons.codec.binary.Base64Test.testSingletons":51,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":22,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":121,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":103,"org.apache.commons.codec.binary.Base64Test.testPairs":30,"org.apache.commons.codec.binary.Base64Test.testConstructors":33,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":21,"org.apache.commons.codec.language.NysiisTest.testRule1":161,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":90,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":166,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":215,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":163,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":192,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":179,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":26,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":124,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":76,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":89,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":15,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":48,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":49,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":70,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":168,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":136,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":112,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":127,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":110,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":207,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":82,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":97,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":198,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":81,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":5,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":202,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":100,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":99,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":182,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":185,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":71,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":109,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":200,"org.apache.commons.codec.binary.HexTest.testCustomCharset":213,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":187,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":135,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":130,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":129,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":144,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":85,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":143,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":199,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":203,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":137,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":101,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":25,"org.apache.commons.codec.binary.Base64Test.testTriplets":27,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":126,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":72,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":92,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":93,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":159,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":193,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":95,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":42,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":62,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":156,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":108,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":197,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":201,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":11,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":116,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":208,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":78,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":205,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":46,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":217,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":98,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":128,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":142,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":86,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":65,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":165,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":151,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":10,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":177,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":175,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":91,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":17,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":149,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":214,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":107,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":183,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":13,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":171,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":167,"org.apache.commons.codec.language.MetaphoneTest.testTCH":6,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":111,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":80,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":158,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":55,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":7,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":104,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":58,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":148,"org.apache.commons.codec.binary.Base64Test.testBase64":56,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":43,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":66,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":139,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":206,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":216,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":209,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":60,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":138,"org.apache.commons.codec.binary.Base64Test.testCodec112":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":188,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":8,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":69,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":28,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":106,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":174,"org.apache.commons.codec.binary.Base64Test.testCodec68":52,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":14,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":152,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":4,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":155,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":212,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":96,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":61,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":140,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":132,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":87,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":23,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":204,"org.apache.commons.codec.language.NysiisTest.testOthers":150,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":53,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":147,"org.apache.commons.codec.language.SoundexTest.testDifference":153,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":123,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":68,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":44,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":32},"transformations":[{"failures":[0,1,2],"tindex":"7a73add9-0d8d-11e6-9880-afeb2e5026ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:366","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":-1},{"failures":[3],"tindex":"7a73d4ea-0d8d-11e6-9880-bb1111553d65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:105","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"7a73d4eb-0d8d-11e6-9880-1ba027590bbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"name1LtREnd","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"name2RtLEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (name1LtREnd.equals(name2RtLEnd)) {\n    name1Char[(name1Size - i)] = ' ';\n    name2Char[(name2Size - i)] = ' ';\n} "},"status":-3},{"failures":[],"tindex":"7a73d4ec-0d8d-11e6-9880-b3dcb082909c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:481","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)))"},"status":0},{"failures":[],"tindex":"7a73d4ed-0d8d-11e6-9880-c3436ba3b227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"pos","t":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:465","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[0,1,2],"tindex":"7a73fbfe-0d8d-11e6-9880-9f0f89071c80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:397","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[0,1,2],"tindex":"7a73fbff-0d8d-11e6-9880-3fed7fda92c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"7a73fc00-0d8d-11e6-9880-db5230a18cfd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:185","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7a73fc01-0d8d-11e6-9880-4317d7aded60","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"7a73fc02-0d8d-11e6-9880-b7533b6199f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:353","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (index < ((string.length()) - 1))) {\n    matches = (string.charAt((index + 1))) == c;\n} "},"status":-1},{"failures":[],"tindex":"7a73fc03-0d8d-11e6-9880-8fd88422ef42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-3},{"failures":[],"tindex":"7a73fc04-0d8d-11e6-9880-6bae1b5eb53e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)"},"variableMap":{"key":"org.apache.commons.codec.binary.Base64.DECODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:444","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b]"},"status":-2},{"failures":[11,12,13,14,15,16,17],"tindex":"7a742315-0d8d-11e6-9880-354a49696523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"7a742316-0d8d-11e6-9880-a1c164af6670","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"pos","left":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:481","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[],"tindex":"7a742317-0d8d-11e6-9880-0506a7c6e6f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:206","type":"CtInvocationImpl","sourcecode":"ctx.update(prefix.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[],"tindex":"7a742318-0d8d-11e6-9880-e9485fcf4e34","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-3},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"7a742319-0d8d-11e6-9880-539eed6ff3d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.decodeBase64(pArray)"},"variableMap":{"pArray":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:289","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-1},{"failures":[71,72],"tindex":"7a74231a-0d8d-11e6-9880-f1e18231262b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"variableMap":{"c":"d","d":"c","results":"schedule"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:360","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 16 ; i++) {\n    if (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.boolean[][i]) {\n        c = (c >>> 2) | (c << 26);\n        d = (d >>> 2) | (d << 26);\n    } else {\n        c = (c >>> 1) | (c << 27);\n        d = (d >>> 1) | (d << 27);\n    }\n    c &= 268435455;\n    d &= 268435455;\n    int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))]);\n    final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))]);\n    schedule[(j++)] = (t << 16) | (s & 65535);\n    s = (s >>> 16) | (t & -65536);\n    s = (s << 4) | (s >>> 28);\n    schedule[(j++)] = s;\n}"},"status":-1},{"failures":[],"tindex":"7a744a2b-0d8d-11e6-9880-f5f42f594bda","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.Base64.MASK_6BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[],"tindex":"7a744a2c-0d8d-11e6-9880-696ca45d3c3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"variableMap":{"maxLength":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)"},"status":-2},{"failures":[73,74,75,76,77,78,79],"tindex":"7a744a2d-0d8d-11e6-9880-354160bba815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-1},{"failures":[],"tindex":"7a744a2e-0d8d-11e6-9880-b5a64ac40b88","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtInvocationImpl","sourcecode":"metaphone(str1)"},"variableMap":{"str1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":-2},{"failures":[],"tindex":"7a74713f-0d8d-11e6-9880-8d3b38930678","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:783","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"7a747140-0d8d-11e6-9880-a3deb9579df4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[80,81,82,83,84,85,86,87],"tindex":"7a747141-0d8d-11e6-9880-0730fe601263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:230","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, cnt)"},"variableMap":{"altResult":"altResult","ctx":"ctx","cnt":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-1},{"failures":[],"tindex":"7a747142-0d8d-11e6-9880-d75f863e7dde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"variableMap":{"t":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"7a747143-0d8d-11e6-9880-e36070073ae5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(false)"},"status":-2},{"failures":[3],"tindex":"7a747144-0d8d-11e6-9880-8bec162f3255","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:105","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"7a747145-0d8d-11e6-9880-ad6eefc702bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:427","type":"CtReturnImpl","sourcecode":"return pArray"},"status":0},{"failures":[88,1,2],"tindex":"7a749856-0d8d-11e6-9880-6d3852915171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"status":-1},{"failures":[],"tindex":"7a749857-0d8d-11e6-9880-ad325832453a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:227","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"7a749858-0d8d-11e6-9880-81bcc0a05813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:116","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"7a749859-0d8d-11e6-9880-5bf53530ad66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:179","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"CIA\")) {\n    code.append('X');\n    break;\n} "},"variableMap":{"code":"string","local":"string","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:353","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (index < ((string.length()) - 1))) {\n    matches = (string.charAt((index + 1))) == c;\n} "},"status":-2},{"failures":[],"tindex":"7a74985a-0d8d-11e6-9880-656e70cd67de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"variableMap":{"index":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[89],"tindex":"7a74985b-0d8d-11e6-9880-3db227f8d676","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[90,91],"tindex":"7a74985c-0d8d-11e6-9880-0f6bd3a87829","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:85","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[92,93],"tindex":"7a74985d-0d8d-11e6-9880-fd626627c3d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:440","type":"CtInvocationImpl","sourcecode":"words2.addAll(words)"},"status":-1},{"failures":[18,19,94,20,21,22,23,24,95,96,97,25,98,99,100,101,102,103,104,105,106,26,107,108,109,110,111,112,113,114,115,116,117,27,28,118,119,29,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,120,52,53,55,121,56,57,122,58,59,60,61,62,63,64,123,124,125,126,127,128,65,129,130,131,66,132,133,134,135,136,137,138,139,67,68,69,70],"tindex":"7a74985e-0d8d-11e6-9880-4b21486045ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:270","type":"CtReturnImpl","sourcecode":"return resizeBuffer(context)"},"variableMap":{"context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-1},{"failures":[],"tindex":"7a74bf6f-0d8d-11e6-9880-5d5d5af75666","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"chr","chr":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:384","type":"CtIfImpl","sourcecode":"if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"7a74bf70-0d8d-11e6-9880-59e10e751868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"7a74bf71-0d8d-11e6-9880-ef9de67e1620","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"variableMap":{"maxLength":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-3},{"failures":[140,141,142,143,144,145,146,147,148],"tindex":"7a74bf72-0d8d-11e6-9880-35c7100ccc4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:309","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1])"},"status":-1},{"failures":[],"tindex":"7a74bf73-0d8d-11e6-9880-7f4905a10602","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"variableMap":{"b":"accept","encodeBlanks":"accept"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:177","type":"CtInvocationImpl","sourcecode":"rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept))"},"status":-3},{"failures":[],"tindex":"7a74bf74-0d8d-11e6-9880-578f96f74729","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"variableMap":{"readLen":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"failures":[],"tindex":"7a74bf75-0d8d-11e6-9880-df57b5d94285","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:405","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-3},{"failures":[],"tindex":"7a74bf76-0d8d-11e6-9880-5f64335ac9aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-3},{"failures":[80,81,82,83,84,85,86,87],"tindex":"7a74e687-0d8d-11e6-9880-0573518f4cbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:166","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"7a74e688-0d8d-11e6-9880-879b2a167494","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:947","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"status":-2},{"failures":[149,150,151,152,153,154,155],"tindex":"7a74e689-0d8d-11e6-9880-2dbf60c6d35e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:298","type":"CtLocalVariableImpl","sourcecode":"final int int = (name1.length()) - 1"},"variableMap":{"name1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:45","type":"CtLocalVariableImpl","sourcecode":"final int int = str.length()"},"status":-1},{"failures":[156,157,158],"tindex":"7a74e68a-0d8d-11e6-9880-c1caedbba615","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"7a74e68b-0d8d-11e6-9880-75be3effa1f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this(phonemeLeft.java.lang.StringBuilder, phonemeLeft.org.apache.commons.codec.language.bm.Languages.LanguageSet)"},"status":-2},{"failures":[159,92,93],"tindex":"7a74e68c-0d8d-11e6-9880-4b1b10791fb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":-1},{"failures":[],"tindex":"7a74e68d-0d8d-11e6-9880-93abf302db2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"tmp[i] = b"},"variableMap":{"b":"pad","tmp":"buffer","i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:355","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[160,161,162,150,163],"tindex":"7a74e68e-0d8d-11e6-9880-931f1b565d15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:261","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"MCC\")"},"variableMap":{"str":"str","org.apache.commons.codec.language.Nysiis.PAT_MAC":"org.apache.commons.codec.language.Nysiis.PAT_K"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"C\")"},"status":-1},{"failures":[164],"tindex":"7a74e68f-0d8d-11e6-9880-83dfe04e50a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"bytes","key":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:367","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[165,80,81,82,166,83,84,85,86,87,167],"tindex":"7a74e690-0d8d-11e6-9880-13585f8b0adb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[73,74,75,76,77,168,169,78,79,170,171],"tindex":"7a74e691-0d8d-11e6-9880-471b8755d022","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:270","type":"CtReturnImpl","sourcecode":"return (char[].int) - (int)"},"status":-1},{"failures":[],"tindex":"7a750da2-0d8d-11e6-9880-cf99c75ddf81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"7a750da3-0d8d-11e6-9880-537f96047940","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[6,172,173],"tindex":"7a750da4-0d8d-11e6-9880-d5c6b0984740","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[],"tindex":"7a750da5-0d8d-11e6-9880-1b996143a3d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"maxPhonemes","name2Size":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:110","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : phonemeExpr.getPhonemes()) {\n    final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = left.getLanguages().restrictTo(right.getLanguages());\n    if (!(languages.isEmpty())) {\n        final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages);\n        if ((newPhonemes.size()) < maxPhonemes) {\n            newPhonemes.add(join);\n            if ((newPhonemes.size()) >= maxPhonemes) {\n                break EXPR;\n            } \n        } \n    } \n}"},"status":0},{"failures":[94,25,26,119,65,66],"tindex":"7a750da6-0d8d-11e6-9880-bbd31fd1bf67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-1},{"failures":[],"tindex":"7a750da7-0d8d-11e6-9880-5d49ef830191","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"7a750da8-0d8d-11e6-9880-fdda082b4212","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"variableMap":{"string":"key","charsetName":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[174],"tindex":"7a750da9-0d8d-11e6-9880-cdc4d77342a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:231","type":"CtAssignmentImpl","sourcecode":"hard = true"},"variableMap":{"hard":"hard"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"status":-1},{"failures":[],"tindex":"7a7534ba-0d8d-11e6-9880-bf3919017186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:65","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^trough\", \"trou2f\")"},"variableMap":{"txt":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtInvocationImpl","sourcecode":"metaphone(str1)"},"status":-2},{"failures":[],"tindex":"7a7534bb-0d8d-11e6-9880-07de8d124b1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"status":-2},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188],"tindex":"7a7534bc-0d8d-11e6-9880-85b78df6ef2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"status":-1},{"failures":[],"tindex":"7a7534bd-0d8d-11e6-9880-43a52c3a800d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"7a7534be-0d8d-11e6-9880-ed78cae5eefd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:477","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[189,156,157,158],"tindex":"7a7534bf-0d8d-11e6-9880-4d573336a318","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[71,190,191,72],"tindex":"7a7534c0-0d8d-11e6-9880-b33752e1244c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; j < 6 ; j++) {\n    c <<= 1;\n    if (((b[y]) & u) != 0) {\n        c |= 1;\n    } \n    u >>>= 1;\n    if (u == 0) {\n        y++;\n        u = 128;\n    } \n    buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n}"},"status":-1},{"failures":[0,1,2],"tindex":"7a7534c1-0d8d-11e6-9880-dd3e4efb4abb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:607","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n    result.append('S');\n} else {\n    result.append('X');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"7a7534c2-0d8d-11e6-9880-018ee7d0e966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:154","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"7a7534c3-0d8d-11e6-9880-ed06da099397","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"variableMap":{"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5":"algorithm","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"status":-3},{"failures":[192,193],"tindex":"7a755bd4-0d8d-11e6-9880-23c3fda42dcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[],"tindex":"7a755bd5-0d8d-11e6-9880-59147cbe05cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"status":0},{"failures":[194,193,195],"tindex":"7a755bd6-0d8d-11e6-9880-e97519acac05","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:183","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-1},{"failures":[107,117,125,126,132,133,134,135,137,138,139],"tindex":"7a755bd7-0d8d-11e6-9880-3362af21958e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:484","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 12))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"7a755bd8-0d8d-11e6-9880-e1c35308dc65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:121","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"7a755bd9-0d8d-11e6-9880-eb5cffb87cee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:165","type":"CtAssignmentImpl","sourcecode":"readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"7a755bda-0d8d-11e6-9880-77c63da37c49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:121","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"7a755bdb-0d8d-11e6-9880-a950a8532f5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:149","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 3) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n    } \n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n    final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n    final boolean boolean = parts[2].equals(\"true\");\n    rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n}"},"status":-2},{"failures":[],"tindex":"7a755bdc-0d8d-11e6-9880-933967b6e8c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148],"tindex":"7a755bdd-0d8d-11e6-9880-793ea4cd155a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[1]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:310","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2])"},"status":-1},{"failures":[],"tindex":"7a7582ee-0d8d-11e6-9880-d9a3164ac0b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:129","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (readLen == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(buf);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return readLen;\n}"},"status":-2},{"failures":[],"tindex":"7a7582ef-0d8d-11e6-9880-75c3c6122009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-2},{"failures":[],"tindex":"7a7582f0-0d8d-11e6-9880-2dcefaa25239","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DG\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n        result.append('J');\n        index += 3;\n    } else {\n        result.append(\"TK\");\n        index += 2;\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DT\", \"DD\")) {\n    result.append('T');\n    index += 2;\n} else {\n    result.append('T');\n    index++;\n}"},"status":-2},{"failures":[],"tindex":"7a7582f1-0d8d-11e6-9880-cf37d45b776d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:103","type":"CtReturnImpl","sourcecode":"return b < 0 ? 256 + b : b"},"status":-2},{"failures":[196,197,198,199,200,89,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"7a7582f2-0d8d-11e6-9880-bd0b3241a449","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"out","name1Size":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[],"tindex":"7a7582f3-0d8d-11e6-9880-9bf0e12bbad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"pos","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-3},{"failures":[],"tindex":"7a7582f4-0d8d-11e6-9880-758000e04a0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:315","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"))"},"status":-2},{"failures":[],"tindex":"7a7582f5-0d8d-11e6-9880-adb7564cd7ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"value","name2":"value","name1":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:847","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"UMB\")) && (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"ER\")))"},"status":-3},{"failures":[140,141,142,143,144,145,146,147,148],"tindex":"7a7582f6-0d8d-11e6-9880-03140a5d0fe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"lastChar","c2":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:523","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : replacements) {\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n    final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n    nextBranch.processNextReplacement(nextReplacement, force);\n    if (branching) {\n        nextBranches.add(nextBranch);\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[107,112,117,125,126],"tindex":"7a7582f7-0d8d-11e6-9880-7fbe218c2c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:381","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"7a75aa08-0d8d-11e6-9880-0bdfe24adde6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.SEP":"symb","buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:269","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-3},{"failures":[],"tindex":"7a75aa09-0d8d-11e6-9880-8355ac069179","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bigBytes","ascii":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:754","type":"CtIfImpl","sourcecode":"if ((((bigInt.bitLength()) % 8) != 0) && ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))) {\n    return bigBytes;\n} "},"status":-3},{"failures":[],"tindex":"7a75aa0a-0d8d-11e6-9880-f916215c42f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"variableMap":{"algorithm":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:249","type":"CtReturnImpl","sourcecode":"return java.lang.String.format(\"org/apache/commons/codec/language/bm/%s_%s_%s.txt\", nameType.getName(), rt.getName(), lang)"},"status":-3},{"failures":[0,88,1,2],"tindex":"7a75aa0b-0d8d-11e6-9880-7f7c59be8052","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"7a75aa0c-0d8d-11e6-9880-39d64912508f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}