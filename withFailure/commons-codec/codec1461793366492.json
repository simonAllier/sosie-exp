{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":17,"org.apache.commons.codec.binary.HexTest.testCustomCharset":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":74,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":104,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":71,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":128,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":37,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":76,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":166,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":55,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":132,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":165,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":16,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":21,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":108,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":129,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":115,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":140,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":62,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":107,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":139,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeNull":87,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":122,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":119,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":11,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":54,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":106,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":113,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":93,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":111,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":114,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":127,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":150,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":39,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":126,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":155,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":80,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":157,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":1,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":145,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":146,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":149,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":50,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":147,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":7,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":134,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":14,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":8,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":116,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":46,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":13,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":28,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":42,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":161,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":75,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":112,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":160,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":98,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":164,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":56,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":137,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":61,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull":89,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":103,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":158,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":79,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":163,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":41,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":142,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":65,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":123,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":136,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":100,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":66,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":2,"org.apache.commons.codec.language.MetaphoneTest.testTCH":96,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":124,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":58,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":10,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":133,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":69,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":151,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":156,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":83,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":148,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":167,"org.apache.commons.codec.binary.Base64Test.testBase64":154,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":36,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":121,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":117,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":12,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":91,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":120,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":138,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":34,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":131,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":88,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":153,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":5,"org.apache.commons.codec.binary.Base64Test.testPairs":143,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":27,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":9,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":64,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":53,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":130,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":40,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":67,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":29,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":109,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":33,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":99,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":26,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":135,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":43,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":141,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":23,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":68,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":3,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":31,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":51,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":159,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":49,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":162,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":125,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":110,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":57,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":60,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":15,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":22,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":152,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":86,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":95,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":77,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":48,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":72,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":144,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":81,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":118},"transformations":[{"failures":[],"tindex":"fafa98a0-0cc0-11e6-ba28-bb9ab97b24c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"fafae6c1-0cc0-11e6-ba28-ebaba8928e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"variableMap":{"data":"data","i":"i","j":"j","toDigits":"toDigits","out":"toDigits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[29],"tindex":"fafb0dd2-0cc0-11e6-ba28-0f0991300b24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"fafb0dd3-0cc0-11e6-ba28-8fe7299fb201","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:288","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"variableMap":{"obj":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38],"tindex":"fafb0dd4-0cc0-11e6-ba28-9ddd8f8ea936","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:143","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-1},{"failures":[],"tindex":"fafb0dd5-0cc0-11e6-ba28-2595d5eb8207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"variableMap":{"e":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[],"tindex":"fafb34e6-0cc0-11e6-ba28-fb6c433731e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"variableMap":{"pos":"decodeSize","context":"context","readPos":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:375","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[],"tindex":"fafb34e7-0cc0-11e6-ba28-eb313614c068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"variableMap":{"index":"maxLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"status":0},{"failures":[39,40,41,42,43],"tindex":"fafb34e8-0cc0-11e6-ba28-e7d8cbb3c9e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:317","type":"CtForImpl","sourcecode":"for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n    b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n}"},"status":-1},{"failures":[44,45,46,39,47,40,48,49,34,36,37,38],"tindex":"fafb5bf9-0cc0-11e6-ba28-03250351967c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"fafb5bfa-0cc0-11e6-ba28-83f7fba15f45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[context.int]"},"status":-2},{"failures":[50],"tindex":"fafb830b-0cc0-11e6-ba28-fb3d73bbfe8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"status":-1},{"failures":[],"tindex":"fafb830c-0cc0-11e6-ba28-1dc266466f16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"variableMap":{"text1":"language","text2":"language"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.contains(language)"},"status":-2},{"failures":[],"tindex":"fafb830d-0cc0-11e6-ba28-5bbd259c15a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"status":0},{"failures":[11],"tindex":"fafb830e-0cc0-11e6-ba28-6f6a4c5bd2ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-1},{"failures":[51,52,53],"tindex":"fafbaa1f-0cc0-11e6-ba28-fb7e9c214258","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:320","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[54,55,56,57,58,59,60,61],"tindex":"fafbaa20-0cc0-11e6-ba28-23c8230b8ebe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"fafbaa21-0cc0-11e6-ba28-27959771f9ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"status":0},{"failures":[62,63,64,65],"tindex":"fafbd132-0cc0-11e6-ba28-e79ce94e7875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"dc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"status":-1},{"failures":[66,67,68,69,62,63,70,71,72,73,74,75,76,77,78,79,80,50,81,82,83,84,85,86],"tindex":"fafbd133-0cc0-11e6-ba28-b57223f0a663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"i","l_ascii":"name1Char","bits":"name1Size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"status":-1},{"failures":[],"tindex":"fafbd134-0cc0-11e6-ba28-178e063a2118","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:459","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : words2) {\n    result.append(\"-\").append(encode(word));\n}"},"status":0},{"failures":[],"tindex":"fafbf845-0cc0-11e6-ba28-9589456633ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[87,88,89],"tindex":"fafbf846-0cc0-11e6-ba28-416e4b17f768","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"fafbf847-0cc0-11e6-ba28-594e6d376096","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"fafc1f58-0cc0-11e6-ba28-c5cf7c94d5d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:302","type":"CtForEachImpl","sourcecode":"for (final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> : ruleMap.values()) {\n    allRules.addAll(rules);\n}"},"status":-2},{"failures":[],"tindex":"fafc1f59-0cc0-11e6-ba28-cd8b4a2994b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:234","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:137","type":"CtReturnImpl","sourcecode":"return other"},"status":0},{"failures":[],"tindex":"fafc1f5a-0cc0-11e6-ba28-d94ec7192083","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"status":-2},{"failures":[],"tindex":"fafc466b-0cc0-11e6-ba28-fd873174aba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:752","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = bigInt.toByteArray()"},"status":-2},{"failures":[],"tindex":"fafc466c-0cc0-11e6-ba28-f370ffacae8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"status":-2},{"failures":[22],"tindex":"fafc466d-0cc0-11e6-ba28-d3e7a603dec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key)"},"status":-1},{"failures":[90,91,92],"tindex":"fafc6d7e-0cc0-11e6-ba28-efd8f801ddb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:692","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"fafc6d7f-0cc0-11e6-ba28-7b9c99d98dd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n}"},"status":-2},{"failures":[],"tindex":"fafc6d80-0cc0-11e6-ba28-fdce1ba60472","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_A"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[93],"tindex":"fafc6d81-0cc0-11e6-ba28-096faa8b61da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:175","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName))"},"status":-1},{"failures":[],"tindex":"fafc9492-0cc0-11e6-ba28-0f33dcffcc4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:789","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"fafc9493-0cc0-11e6-ba28-fb0982f29319","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:382","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"fafc9494-0cc0-11e6-ba28-f11aa5ba8997","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:171","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:217","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(org.apache.commons.codec.language.bm.Lang.this.org.apache.commons.codec.language.bm.Languages.getLanguages())"},"status":-2},{"failures":[94,95,96,97,98,99,51,100,101,102,103],"tindex":"fafc9495-0cc0-11e6-ba28-d5a0731f214c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if (((regionMatch(local, n, \"SH\")) || (regionMatch(local, n, \"SIO\"))) || (regionMatch(local, n, \"SIA\"))) {\n    code.append('X');\n} else {\n    code.append('S');\n}"},"variableMap":{"code":"local","local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"TCH\")) {\n    break;\n} "},"status":-1},{"failures":[90,91,92],"tindex":"fafc9496-0cc0-11e6-ba28-b9f8faa0abd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"fafcbba7-0cc0-11e6-ba28-d1a05192f3a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:441","type":"CtInvocationImpl","sourcecode":"words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType))"},"status":0},{"failures":[],"tindex":"fafcbba8-0cc0-11e6-ba28-9d122848fd9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"variableMap":{"sumLength":"t","minRating":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-2},{"failures":[],"tindex":"fafcbba9-0cc0-11e6-ba28-a306476e0b39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:169","type":"CtAssignmentImpl","sourcecode":"index = handleT(value, result, index)"},"status":-2},{"failures":[],"tindex":"fafcbbaa-0cc0-11e6-ba28-83ece7e17d1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"length","y":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:112","type":"CtIfImpl","sourcecode":"if ((inwd[1]) == 'N') {\n    local.append(inwd, 1, ((inwd.int) - 1));\n} else {\n    local.append(inwd);\n}"},"status":-2},{"failures":[90,91,104],"tindex":"fafcbbab-0cc0-11e6-ba28-1b005dccec65","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[105,106,107,108],"tindex":"fafcbbac-0cc0-11e6-ba28-9dad8d615d8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"fafce2bd-0cc0-11e6-ba28-adc6305cd522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:190","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 2))"},"status":-2},{"failures":[109,110,111,112,113,114],"tindex":"fafce2be-0cc0-11e6-ba28-cf85dd6bd9c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-1},{"failures":[91,115,104],"tindex":"fafce2bf-0cc0-11e6-ba28-970658aee263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:136","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[116,117],"tindex":"fafce2c0-0cc0-11e6-ba28-4d94b3b3b305","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":-1},{"failures":[],"tindex":"fafd09d1-0cc0-11e6-ba28-874a14aeee0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.decodeBase64(pArray)"},"status":-2},{"failures":[],"tindex":"fafd09d2-0cc0-11e6-ba28-2fdf2861ae36","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"status":-2},{"failures":[],"tindex":"fafd09d3-0cc0-11e6-ba28-7f8be5dea40b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":0},{"failures":[118,119],"tindex":"fafd09d4-0cc0-11e6-ba28-d991acb8ed7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:312","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"fafd09d5-0cc0-11e6-ba28-27c189e8a49d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:801","type":"CtReturnImpl","sourcecode":"return digest"},"status":-2},{"failures":[],"tindex":"fafd09d6-0cc0-11e6-ba28-8d9d20b99589","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), data)"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key), valueToDigest).doFinal()"},"status":-2},{"failures":[],"tindex":"fafd30e7-0cc0-11e6-ba28-a921eb9374d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":-2},{"failures":[120],"tindex":"fafd30e8-0cc0-11e6-ba28-bd92a96df2c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtUnaryOperatorImpl","sourcecode":"(offset++)"},"variableMap":{"offset":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-1},{"failures":[54,55,56,57,58,59,60,61],"tindex":"fafd30e9-0cc0-11e6-ba28-f1e8286c3553","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:295","type":"CtInvocationImpl","sourcecode":"ctx1.reset()"},"variableMap":{"ctx1":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"fafd30ea-0cc0-11e6-ba28-838dc60d4ca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:268","type":"CtIfImpl","sourcecode":"if (rulesIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + resName));\n} "},"status":-2},{"failures":[],"tindex":"fafd30eb-0cc0-11e6-ba28-91e5de4301b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"status":-2},{"failures":[],"tindex":"fafd57fc-0cc0-11e6-ba28-fb9e8a35fc82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-2},{"failures":[],"tindex":"fafd57fd-0cc0-11e6-ba28-ddbcbfd1a6e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.language.Nysiis.CHARS_SSS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"fafd57fe-0cc0-11e6-ba28-8f4fa15fe970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":0},{"failures":[34,35,36],"tindex":"fafd57ff-0cc0-11e6-ba28-5b0a0c2fe1f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:89","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[],"tindex":"fafda620-0cc0-11e6-ba28-c3a1630c8500","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:379","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"fafda621-0cc0-11e6-ba28-092b523572f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:284","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"fafda622-0cc0-11e6-ba28-eb4deed8f92c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:337","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset.name()"},"status":0},{"failures":[],"tindex":"fafda623-0cc0-11e6-ba28-3368b95eea6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"fafda624-0cc0-11e6-ba28-d5c90f23e640","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:121","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"fafdcd35-0cc0-11e6-ba28-7dbb0621d7f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"status":-2},{"failures":[90,91],"tindex":"fafdcd36-0cc0-11e6-ba28-3b3f093a61c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n    result.append(\"X\", \"SK\");\n} else {\n    result.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"fafdcd37-0cc0-11e6-ba28-c526e94d7f91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"status":-2},{"failures":[],"tindex":"fafdcd38-0cc0-11e6-ba28-25588510033a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131],"tindex":"fafdcd39-0cc0-11e6-ba28-fb42127f54c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:486","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 2))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"fafdcd3a-0cc0-11e6-ba28-df20a63a8abb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"status":-2},{"failures":[],"tindex":"fafdf44b-0cc0-11e6-ba28-452b4a4ec8a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"failures":[125,126,127,128,129,130,131],"tindex":"fafdf44c-0cc0-11e6-ba28-99a9f976097b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:479","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[132],"tindex":"fafdf44d-0cc0-11e6-ba28-f1b5fea45598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-1},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,31,32,159],"tindex":"fafdf44e-0cc0-11e6-ba28-6fdf661c4b44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[135,160,151,161],"tindex":"fafdf44f-0cc0-11e6-ba28-31b9d1654082","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"binaryData","key":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:606","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, true)"},"status":-1},{"failures":[],"tindex":"fafdf450-0cc0-11e6-ba28-bf627dcc25ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:461","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[],"tindex":"fafdf451-0cc0-11e6-ba28-83bba83c61bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"variableMap":{"b":"b","offset":"iValue","iValue":"iValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"status":-2},{"failures":[],"tindex":"fafe1b62-0cc0-11e6-ba28-19ccb203ce75","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:245","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))"},"variableMap":{"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES","org.apache.commons.codec.language.bm.NameType.GENERIC":"org.apache.commons.codec.language.bm.NameType.ASHKENAZI"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"bar\", \"ben\", \"da\", \"de\", \"van\", \"von\"))))"},"status":0},{"failures":[],"tindex":"fafe1b63-0cc0-11e6-ba28-d7539feeefa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text)"},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:250","type":"CtReturnImpl","sourcecode":"return encode(str, getCharset())"},"status":-2},{"failures":[90,91],"tindex":"fafe1b64-0cc0-11e6-ba28-bb67cff5ad41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:288","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CZ\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, \"WICZ\")))) {\n    result.append('S', 'X');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"CIA\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:286","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CH\")) {\n    index = handleCH(value, result, index);\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CZ\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, \"WICZ\")))) {\n    result.append('S', 'X');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"CIA\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-1},{"failures":[162,163,164,165,166,167],"tindex":"fafe4275-0cc0-11e6-ba28-8518ace55140","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:467","type":"CtInvocationImpl","sourcecode":"sb.append(branch)"},"status":-1},{"failures":[],"tindex":"fafe4276-0cc0-11e6-ba28-3bc8cabd247e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:528","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":87,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}