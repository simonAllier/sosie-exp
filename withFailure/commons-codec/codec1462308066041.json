{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"5bcf8f03-116f-11e6-8ea6-b98b81f3a322","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:227","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"5bcfb614-116f-11e6-8ea6-ad574558cec4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"bAvail","len":"bAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:293","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(available(context), bAvail)"},"status":0},{"failures":[],"tindex":"5bcfdd25-116f-11e6-8ea6-f39c51a6c175","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":0},{"failures":[],"tindex":"5bcfdd26-116f-11e6-8ea6-09a2cdc512ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:132","type":"CtAssignmentImpl","sourcecode":"name = cleanName(name)"},"variableMap":{"name":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[],"tindex":"5bcfdd27-116f-11e6-8ea6-431c0f7bdf8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"status":0},{"failures":[],"tindex":"5bcfdd28-116f-11e6-8ea6-7dd19474cf7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:454","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"5bd00439-116f-11e6-8ea6-abd111d47549","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":0},{"failures":[],"tindex":"5bd0043a-116f-11e6-8ea6-9f48f01eeb5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:531","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":0},{"failures":[],"tindex":"5bd0043b-116f-11e6-8ea6-ef5aebc98cbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:115","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"status":0},{"failures":[],"tindex":"5bd0043c-116f-11e6-8ea6-51c2dfb552b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"status":0},{"failures":[],"tindex":"5bd02b4d-116f-11e6-8ea6-b10150fa8b49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:446","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location))"},"status":0},{"failures":[],"tindex":"5bd02b4e-116f-11e6-8ea6-3fb3c8f1368b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:359","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":0},{"failures":[],"tindex":"5bd02b4f-116f-11e6-8ea6-fb5fa0c04e7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:817","type":"CtReturnImpl","sourcecode":"return messageDigest"},"status":0},{"failures":[],"tindex":"5bd05260-116f-11e6-8ea6-419a9cace93f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":0},{"failures":[],"tindex":"5bd05261-116f-11e6-8ea6-a5e81934e8da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":0},{"failures":[],"tindex":"5bd05262-116f-11e6-8ea6-635438e869dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"status":0},{"failures":[],"tindex":"5bd05263-116f-11e6-8ea6-154e93d719ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:97","type":"CtLocalVariableImpl","sourcecode":"int int = read(byte[], 0, 1)"},"status":0},{"failures":[],"tindex":"5bd07974-116f-11e6-8ea6-c1ce7e7f8adc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":0},{"failures":[],"tindex":"5bd07975-116f-11e6-8ea6-a93cd4a364e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[],"tindex":"5bd07976-116f-11e6-8ea6-335794e5f801","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":0},{"failures":[],"tindex":"5bd07977-116f-11e6-8ea6-551aa14edf72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:159","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"status":0},{"failures":[],"tindex":"5bd0a088-116f-11e6-8ea6-f51bac7bb65c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"rounds","name2Size":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:149","type":"CtIfImpl","sourcecode":"if ((m.group(3)) != null) {\n    rounds = java.lang.Integer.parseInt(m.group(3));\n    rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds));\n    roundsCustom = true;\n} "},"status":0},{"failures":[],"tindex":"5bd0a089-116f-11e6-8ea6-2d7617f9c354","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"charset","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:471","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"status":-3},{"failures":[],"tindex":"5bd0a08a-116f-11e6-8ea6-cf951d51bcea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"read","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"read","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"read","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","minRating":"read","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"read","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"read","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:769","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int);\n}"},"status":-3},{"failures":[],"tindex":"5bd0c79b-116f-11e6-8ea6-713eadefbe1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1).equals(org.apache.commons.codec.language.AbstractCaverphone.this.encode(str2))"},"status":0},{"failures":[],"tindex":"5bd0eeac-116f-11e6-8ea6-dbe8f8c8793b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"pattern","leftCharacter":"rawLine","rightCharacter":"location","location":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:283","type":"CtIfImpl","sourcecode":"if (line.contains(\"=\")) {\n    final java.lang.String[] java.lang.String[] = line.split(\"=\");\n    if ((parts.int) != 2) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        final java.lang.String java.lang.String = parts[0];\n        final java.lang.String java.lang.String = parts[1];\n        if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n            throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n        } \n        asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n    }\n} else {\n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 4) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        try {\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n            final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n            final char char = r.java.lang.String.charAt(0);\n            java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n            if (rules == null) {\n                rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                ruleMapping.put(patternKey, rules);\n            } \n            rules.add(r);\n        } catch (final java.lang.IllegalArgumentException e) {\n            throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"5bd115bd-116f-11e6-8ea6-2b8cd4d78f73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(' ')"},"status":0},{"failures":[],"tindex":"5bd115be-116f-11e6-8ea6-f5c39397640d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:69","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"5bd115bf-116f-11e6-8ea6-073fcfbb69b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:458","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":0},{"failures":[],"tindex":"5bd115c0-116f-11e6-8ea6-85eeeb414af2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:329","type":"CtAssignmentImpl","sourcecode":"u = ((u ^ (u << 16)) ^ r) ^ (sArr[s])"},"status":0},{"failures":[],"tindex":"5bd13cd1-116f-11e6-8ea6-d355f89ea7de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"variableMap":{"name":"str","firstLetter":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"5bd13cd2-116f-11e6-8ea6-0d575c0a4db7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:469","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[21], altResult[42], 4, buffer)"},"status":0},{"failures":[],"tindex":"5bd13cd3-116f-11e6-8ea6-ad23b214d281","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"status":0},{"failures":[],"tindex":"5bd163e4-116f-11e6-8ea6-236f1d16d5c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:609","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"5bd163e5-116f-11e6-8ea6-93353a148ade","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset.name()"},"status":0},{"failures":[],"tindex":"5bd163e6-116f-11e6-8ea6-65c6bf58aa83","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:354","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base32.this.byte[][b]"},"status":0},{"failures":[],"tindex":"5bd163e7-116f-11e6-8ea6-fbef9ed89ae1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":0},{"failures":[],"tindex":"5bd18af8-116f-11e6-8ea6-070f2183fec8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"status":0},{"failures":[],"tindex":"5bd18af9-116f-11e6-8ea6-b7811909ee02","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:292","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"))"},"status":0},{"failures":[],"tindex":"5bd18afa-116f-11e6-8ea6-eb87170329d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"variableMap":{"code":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:271","type":"CtAssignmentImpl","sourcecode":"last = getMappingCode(str, 0)"},"status":0},{"failures":[],"tindex":"5bd18afb-116f-11e6-8ea6-eb37f0056524","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"status":0},{"failures":[],"tindex":"5bd18afc-116f-11e6-8ea6-3dee0955ba71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:240","type":"CtAssignmentImpl","sourcecode":"name2 = getFirst3Last3(name2)"},"status":0},{"failures":[],"tindex":"5bd18afd-116f-11e6-8ea6-571433be45e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:545","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.startsWith(\"[\")"},"variableMap":{"content":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:552","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = boxContent.startsWith(\"^\")"},"status":0},{"failures":[],"tindex":"5bd1b20e-116f-11e6-8ea6-25be182291ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"variableMap":{"languagesResourceName":"languageRulesResourceName","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.bm.Lang.class"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"status":0},{"failures":[],"tindex":"5bd1b20f-116f-11e6-8ea6-6789f59fef30","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"maxPhonemes","to":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:341","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : phonemeBuilder.getPhonemes()) {\n    org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.empty(phoneme.getLanguages());\n    final java.lang.String java.lang.String = phoneme.getPhonemeText().toString();\n    for (int int = 0 ; i < (phonemeText.length()) ; ) {\n        final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(finalRules , phonemeText , subBuilder , i , int).invoke();\n        final boolean boolean = rulesApplication.isFound();\n        subBuilder = rulesApplication.getPhonemeBuilder();\n        if (!found) {\n            subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n        } \n        i = rulesApplication.getI();\n    }\n    for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : subBuilder.getPhonemes()) {\n        if (phonemes.containsKey(newPhoneme)) {\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = phonemes.remove(newPhoneme);\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n            phonemes.put(mergedPhoneme, mergedPhoneme);\n        } else {\n            phonemes.put(newPhoneme, newPhoneme);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"5bd1b210-116f-11e6-8ea6-dd1c834f7871","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"status":0},{"failures":[],"tindex":"5bd1b211-116f-11e6-8ea6-e76bb09211ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":0},{"failures":[],"tindex":"5bd1b212-116f-11e6-8ea6-532a0fdf8100","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":48,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}