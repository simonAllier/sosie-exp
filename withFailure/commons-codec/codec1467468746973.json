{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":180,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":193,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":130,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":153,"org.apache.commons.codec.language.Caverphone1Test.testEncodeEmpty":177,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":234,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":200,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":53,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":255,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeNull":275,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":47,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":112,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":8,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":160,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":49,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":184,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":145,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":183,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":232,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":240,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":219,"org.apache.commons.codec.language.NysiisTest.testCap":0,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":220,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":224,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":135,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":239,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":171,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":221,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":134,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":222,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":269,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":39,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":242,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":194,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":98,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":23,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":231,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":64,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":244,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":215,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":16,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":60,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":165,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":154,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull":274,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":174,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":11,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":131,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":214,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":144,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":85,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":158,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":99,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":140,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":176,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":114,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":72,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":42,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":156,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":233,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":108,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":226,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":179,"org.apache.commons.codec.language.NysiisTest.testDropBy":3,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":247,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":15,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":129,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":115,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":51,"org.apache.commons.codec.binary.Base64Test.testUUID":76,"org.apache.commons.codec.binary.Base64Test.testSingletons":230,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":127,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":6,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":78,"org.apache.commons.codec.binary.Base64Test.testPairs":217,"org.apache.commons.codec.language.NysiisTest.testRule2":204,"org.apache.commons.codec.language.NysiisTest.testRule1":203,"org.apache.commons.codec.language.NysiisTest.testRule7":2,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":147,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":173,"org.apache.commons.codec.language.NysiisTest.testRule6":206,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":128,"org.apache.commons.codec.language.NysiisTest.testRule5":205,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":197,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":271,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":91,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":190,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":164,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":192,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":20,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":4,"org.apache.commons.codec.language.NysiisTest.testBran":207,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":250,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":262,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":101,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":241,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":28,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":36,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":228,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":105,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":229,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":270,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":118,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":109,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":123,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":56,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":256,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":57,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":163,"org.apache.commons.codec.language.NysiisTest.testDad":201,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":88,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":122,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":136,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":218,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":107,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":162,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":199,"org.apache.commons.codec.language.NysiisTest.testDan":1,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":30,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":95,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":126,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":181,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":245,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":104,"org.apache.commons.codec.binary.HexTest.testCustomCharset":19,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":168,"org.apache.commons.codec.language.NysiisTest.testSnat":209,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":141,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":236,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":155,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":26,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":259,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":258,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":138,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":185,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":96,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":235,"org.apache.commons.codec.binary.Base64Test.testTriplets":213,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":116,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":246,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":265,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":263,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":266,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":110,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":45,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":54,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":89,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":83,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":175,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":119,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":198,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":34,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":216,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":260,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":103,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":196,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":251,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":52,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":272,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":24,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":9,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":40,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":113,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":7,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":142,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":143,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":189,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":243,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":22,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":227,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":92,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":139,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":249,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":157,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":264,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":12,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":159,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":59,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":137,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":237,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":124,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":172,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":84,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":170,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":188,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":273,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":106,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":248,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":74,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":102,"org.apache.commons.codec.language.NysiisTest.testTranan":212,"org.apache.commons.codec.language.NysiisTest.testFal":202,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":133,"org.apache.commons.codec.language.NysiisTest.testSnad":208,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":35,"org.apache.commons.codec.language.MetaphoneTest.testTCH":267,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":161,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":5,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":268,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":80,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":254,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":18,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":223,"org.apache.commons.codec.binary.Base64Test.testBase64":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":257,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":62,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":68,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":125,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":225,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":186,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":65,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":37,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":41,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":146,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":81,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":169,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":93,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":252,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":97,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":152,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":75,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":210,"org.apache.commons.codec.language.Caverphone1Test.testLocaleIndependence":178,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":100,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":121,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":87,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":82,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":150,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":149,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":10,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":182,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":261,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":238,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":66,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":32,"org.apache.commons.codec.language.NysiisTest.testOthers":211,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":77,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":17,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":132,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":187,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":148,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange":55,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":151,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":167,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":166,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":253,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":67,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":120,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":63,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":191,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":61,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":69,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":117},"transformations":[{"failures":[0,1,2,3,4],"tindex":"01607c27-405f-11e6-a643-fdc43cc4c375","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"variableMap":{"lastChar":"lastChar","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[5],"tindex":"0160ca48-405f-11e6-a643-1debb6c77bf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"status":-1},{"failures":[],"tindex":"0160ca49-405f-11e6-a643-a36fc8f00a89","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1))"},"status":-2},{"failures":[6],"tindex":"0160f15a-405f-11e6-a643-756a0e792913","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:890","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[7],"tindex":"0160f15b-405f-11e6-a643-b9e390d6bdec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-1},{"failures":[],"tindex":"0163625c-405f-11e6-a643-3f431ebdf1be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:362","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":0},{"failures":[],"tindex":"0163625d-405f-11e6-a643-b59c06212251","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:109","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[8],"tindex":"0163625e-405f-11e6-a643-f59d692c6ce3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-1},{"failures":[],"tindex":"0163b07f-405f-11e6-a643-95311cf59d04","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"org.apache.commons.codec.language.bm.RuleType.RULES","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:228","type":"CtIfImpl","sourcecode":"if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n    rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n} "},"status":-2},{"failures":[],"tindex":"0163d790-405f-11e6-a643-d7634e56a83f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:469","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[9],"tindex":"0163d791-405f-11e6-a643-1332508a3f39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:576","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18],"tindex":"0163d792-405f-11e6-a643-a9061b38ac05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:285","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = line.split(\"=\")"},"variableMap":{"line":"inputContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:519","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'))"},"status":-1},{"failures":[],"tindex":"0163d793-405f-11e6-a643-6577397d908c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:557","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = !negate"},"status":-2},{"failures":[],"tindex":"0163d794-405f-11e6-a643-a7ef5a43b9e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:43","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(((char)(b)), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,7,37,38,39,40,41,42,8,43],"tindex":"0163fea5-405f-11e6-a643-c57d47d6c9a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"status":-1},{"failures":[44,45,46],"tindex":"0163fea6-405f-11e6-a643-5740c5322d1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"bits","l_ascii":"l_raw","bits":"bits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"0163fea7-405f-11e6-a643-b7f972b0cf63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:360","type":"CtLocalVariableImpl","sourcecode":"final char char = accentedWord.charAt(i)"},"status":-1},{"failures":[],"tindex":"0163fea8-405f-11e6-a643-af38a0709542","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)"},"status":-2},{"failures":[],"tindex":"0163fea9-405f-11e6-a643-abea224c8efa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:153","type":"CtReturnImpl","sourcecode":"return soundex(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"status":-2},{"failures":[65,66],"tindex":"016425ba-405f-11e6-a643-81592103af7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[67,68],"tindex":"016425bb-405f-11e6-a643-73294fd87ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"016425bc-405f-11e6-a643-d734d7c77bbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","name2":"value","name1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:847","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"UMB\")) && (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"ER\")))"},"status":-2},{"failures":[],"tindex":"016425bd-405f-11e6-a643-a51461f33115","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:524","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[69,70,71,72],"tindex":"016425be-405f-11e6-a643-5f5b79ca0543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:510","type":"CtReturnImpl","sourcecode":"return (octet == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.byte)) || (((octet >= 0) && (octet < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) && ((org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][octet]) != (-1)))"},"status":-1},{"failures":[73,74,20,75,76,77,78,79,80,81,82,83,72,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,23,24,153,26,27,28,29,154,30,32,155,34,35,156,7,37,38,39,40,41,42,8,43],"tindex":"01644ccf-405f-11e6-a643-bdae2fedfabc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return string.getBytes(charset)"},"status":-1},{"failures":[157,67,68],"tindex":"01644cd0-405f-11e6-a643-bd81d2cf1bfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:397","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[158],"tindex":"01644cd1-405f-11e6-a643-f368e8815e2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:127","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[],"tindex":"01644cd2-405f-11e6-a643-85bd97a59f4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"input","dc":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:379","type":"CtForEachImpl","sourcecode":"for (char char : input.toCharArray()) {\n    if (java.lang.Character.isWhitespace(ch)) {\n        continue;\n    } \n    ch = java.lang.Character.toLowerCase(ch);\n    if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n        ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n    } \n    sb.append(ch);\n}"},"status":-2},{"failures":[159],"tindex":"01644cd3-405f-11e6-a643-a9f6a0487ba4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(raw))"},"status":-1},{"failures":[],"tindex":"016473e4-405f-11e6-a643-05495e1944e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"status":-2},{"failures":[67,68],"tindex":"016473e5-405f-11e6-a643-919e59554eb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:607","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n    result.append('S');\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[160,161,162,163,164,165],"tindex":"016473e6-405f-11e6-a643-43204b304769","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[166,167],"tindex":"016473e7-405f-11e6-a643-c390bb9cdead","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:178","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index))"},"status":-1},{"failures":[],"tindex":"016473e8-405f-11e6-a643-fb0a4f4922b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"016473e9-405f-11e6-a643-eb4f6bf3c0dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"failures":[],"tindex":"01649afa-405f-11e6-a643-7b8462c727b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:201","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(value)))"},"variableMap":{"this":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"01649afb-405f-11e6-a643-7fc4cf33feaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:367","type":"CtIfImpl","sourcecode":"if (open >= 0) {\n    if (!(ph.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n    } \n    final java.lang.String java.lang.String = ph.substring(0, open);\n    final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet);\n}"},"status":-2},{"failures":[],"tindex":"01649afc-405f-11e6-a643-416321ebfed9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"org.apache.commons.codec.binary.Base64.BYTES_PER_UNENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:380","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[],"tindex":"01649afd-405f-11e6-a643-13768d3f53a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"variableMap":{"ascii":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"01649afe-405f-11e6-a643-bfe37e9ffaef","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"valueToDigest","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"01649aff-405f-11e6-a643-3d30712d9056","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:470","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha256Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"status":-2},{"failures":[168,169],"tindex":"0164c210-405f-11e6-a643-d718d0db727f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"decodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-1},{"failures":[],"tindex":"0164c211-405f-11e6-a643-5349c9260600","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"variableMap":{"right":"b","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:410","type":"CtAssignmentImpl","sourcecode":"results[1] = b"},"status":0},{"failures":[157,67,68],"tindex":"0164c212-405f-11e6-a643-27dd2a486bf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:285","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"0164c213-405f-11e6-a643-ed81d08cea57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[0], finalb[6], finalb[12], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-2},{"failures":[],"tindex":"0164c214-405f-11e6-a643-4b33a158bae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:159","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0164c215-405f-11e6-a643-7fe1079674e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[],"tindex":"0164e926-405f-11e6-a643-cd03ac31cebc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.CR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[170],"tindex":"0164e927-405f-11e6-a643-43a8f087d8dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:217","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"0164e928-405f-11e6-a643-bb8b52d46e24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[],"tindex":"016955f9-405f-11e6-a643-570c89d645e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = accentedWord.length()"},"variableMap":{"accentedWord":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (text.length()) - 2"},"status":-2},{"failures":[],"tindex":"016955fa-405f-11e6-a643-d1f46075966b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:94","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:525","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch"},"status":-2},{"failures":[],"tindex":"01697d0b-405f-11e6-a643-5fe9e48d4c73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-2},{"failures":[],"tindex":"01697d0c-405f-11e6-a643-ef0d9a5f7478","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"status":-2},{"failures":[171],"tindex":"01697d0d-405f-11e6-a643-250e7fb3db08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"status":-1},{"failures":[172],"tindex":"01697d0e-405f-11e6-a643-4560e4b6c43c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()"},"status":-1},{"failures":[],"tindex":"01697d0f-405f-11e6-a643-ed598154e2a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[173,174,175,176,5,177,178],"tindex":"0169a420-405f-11e6-a643-290f058bd760","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":-1},{"failures":[],"tindex":"0169a421-405f-11e6-a643-6502d6b8529c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:430","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, pArray.int, context)"},"variableMap":{"pArray":"buf","this":"baseNCodec","length":"c","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"0169a422-405f-11e6-a643-851efa7c8c04","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:503","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.contains(\"[\")"},"variableMap":{"content":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:552","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = boxContent.startsWith(\"^\")"},"status":-2},{"failures":[],"tindex":"0169a423-405f-11e6-a643-85597ed93da2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"input","txt":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0169a424-405f-11e6-a643-ab7759ff188a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (curr == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'M') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_S":"org.apache.commons.codec.language.Nysiis.CHARS_FF","org.apache.commons.codec.language.Nysiis.CHARS_G":"org.apache.commons.codec.language.Nysiis.CHARS_FF","org.apache.commons.codec.language.Nysiis.CHARS_N":"org.apache.commons.codec.language.Nysiis.CHARS_FF","curr":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":0},{"failures":[179,157,180,181,68],"tindex":"0169a425-405f-11e6-a643-6f0468590fee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:963","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} "},"status":-1},{"failures":[],"tindex":"0169a426-405f-11e6-a643-c7fb3436e794","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[173,175,176,5],"tindex":"0169cb37-405f-11e6-a643-17ba665df53c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":-1},{"failures":[182,183,184,168,185,169,186,102,109,114,115,116],"tindex":"0169cb38-405f-11e6-a643-057de3203e0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[187,157,180,67,68,188],"tindex":"0169cb39-405f-11e6-a643-ab4403c1ad7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:633","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n    result.appendAlternate('S');\n} else {\n    result.append('S');\n}"},"status":-1},{"failures":[],"tindex":"016b03ba-405f-11e6-a643-173833c617d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n} "},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"pad","data":"buffer","i":"pos","org.apache.commons.codec.net.QCodec.UNDERSCORE":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:438","type":"CtIfImpl","sourcecode":"if (b == (byte)) {\n    context.boolean = true;\n    break;\n} else {\n    if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n        final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n        if (result >= 0) {\n            context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n            context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n            if ((context.int) == 0) {\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            } \n        } \n    } \n}"},"status":-2},{"failures":[189,66],"tindex":"016b2acb-405f-11e6-a643-99ad93171ac7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:115","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,190,191,192,193],"tindex":"016b2acc-405f-11e6-a643-a31c7c9e9273","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"status":-1},{"failures":[],"tindex":"016b2acd-405f-11e6-a643-db2b56bbf13d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:150","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Integer.parseInt(m.group(3))"},"status":-2},{"failures":[194,195,189,196,197,198,65,66],"tindex":"016b78ee-405f-11e6-a643-154b599d2afc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":-1},{"failures":[199,200,0,201,1,202,203,204,205,206,2,207,208,209,210,3,211,212,4],"tindex":"016b78ef-405f-11e6-a643-3b01c9a9fd82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[213,75,214,215,216,217,76,69,218,219,220,221,222,223,224,70,225,226,227,228,229,230,231,77,78,79,232,80,233,81,82,83,84,85,182,183,169,186],"tindex":"016b78f0-405f-11e6-a643-9b3f3df5fb0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((context.byte[]) != null) {\n    final int int = java.lang.Math.min(available(context), bAvail);\n    java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len);\n    context.int += len;\n    if ((context.int) >= (context.int)) {\n        context.byte[] = null;\n    } \n    return len;\n} "},"status":-2},{"failures":[],"tindex":"016c6351-405f-11e6-a643-91a68cd99f8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"status":0},{"failures":[234,235,51,58],"tindex":"016c8a62-405f-11e6-a643-97464cf102bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"016c8a63-405f-11e6-a643-6904d992c27b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bigBytes","ascii":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-2},{"failures":[236,237,238],"tindex":"016cb174-405f-11e6-a643-45575fb39951","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer)"},"status":-1},{"failures":[133],"tindex":"016cb175-405f-11e6-a643-c7f04d22e453","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:278","type":"CtAssignmentImpl","sourcecode":"printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"urlsafe","printable":"urlsafe"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"status":-1},{"failures":[],"tindex":"016cb176-405f-11e6-a643-b7af0c13568b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"status":-2},{"failures":[],"tindex":"016cb177-405f-11e6-a643-2ddb0bc58fe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:151","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-2},{"failures":[239,240,241,242,243,244],"tindex":"016cb178-405f-11e6-a643-41e5e2dff124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"status":-1},{"failures":[18],"tindex":"016cb179-405f-11e6-a643-1f0842a5f661","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"variableMap":{"current":"ch","last":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:386","type":"CtAssignmentImpl","sourcecode":"ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch)"},"status":-1},{"failures":[245,246],"tindex":"016cb17a-405f-11e6-a643-47afbd6ca76e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][charOne]) << 4"},"variableMap":{"org.apache.commons.codec.digest.UnixCrypt.CON_SALT":"org.apache.commons.codec.digest.UnixCrypt.CON_SALT","charOne":"charZero"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:213","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][charZero]"},"status":-1},{"failures":[247,32],"tindex":"016cb17b-405f-11e6-a643-05cfc0802ade","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[147,248,249,250],"tindex":"016cb17c-405f-11e6-a643-2d5fc254bb3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"variableMap":{"a":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-1},{"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"tindex":"016cd88d-405f-11e6-a643-fd2b9534cf5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:183","type":"CtIfImpl","sourcecode":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = true;\n    } else if ((line.length()) > 0) {\n        ls.add(line);\n    } \n}"},"status":-1},{"failures":[176],"tindex":"016d4dbe-405f-11e6-a643-993c3f2ea97f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-1},{"failures":[],"tindex":"016d4dbf-405f-11e6-a643-7f819931b730","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"j","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:241","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes[j])"},"status":-2},{"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"tindex":"016d4dc0-405f-11e6-a643-d3d264ae92d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-1},{"failures":[],"tindex":"016d4dc1-405f-11e6-a643-2d95cedce78d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":-2},{"failures":[189],"tindex":"016d74d2-405f-11e6-a643-07917aed71a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":-1},{"failures":[75,77,79,81,82,84,85],"tindex":"016d74d3-405f-11e6-a643-65fa15ac3311","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:394","type":"CtReturnImpl","sourcecode":"return decode(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(pArray))"},"status":-1},{"failures":[267,268,269,270,271,272,273],"tindex":"016d74d4-405f-11e6-a643-fb88e34838bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"matches = substring.equals(test)"},"status":-1},{"failures":[],"tindex":"016d74d5-405f-11e6-a643-6b9bdaf19f03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[],"tindex":"016d74d6-405f-11e6-a643-d3c969548a3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[147,249],"tindex":"016d74d7-405f-11e6-a643-01bf85b9804d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:296","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[180,274,275],"tindex":"016d74d8-405f-11e6-a643-91159c48f1fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"status":-1},{"failures":[],"tindex":"016d74d9-405f-11e6-a643-5348a1ba8ffd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"tempResult = altCtx.digest()"},"variableMap":{"tempResult":"altResult","altCtx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:405","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":-2},{"failures":[206,2,3],"tindex":"016d74da-405f-11e6-a643-1109c4e7959c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"variableMap":{"last":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:298","type":"CtAssignmentImpl","sourcecode":"lastChar = key.charAt(((key.length()) - 1))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}