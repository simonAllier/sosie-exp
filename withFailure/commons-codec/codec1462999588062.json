{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":14,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":8,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":6,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":11,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":9,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":18,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":2},"transformations":[{"failures":[],"tindex":"6f0cb096-17b9-11e6-a6c0-a1dcd397990b","series":0,"name":"replace","transplant":{"toString":"if ((charAt(value, (index + 1))) == 'J') {\n    index += 2;\n} else {\n    index++;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:538","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'J') {\n    index += 2;\n} else {\n    index++;\n}"},"variableMap":{"index":"length","value":"org.apache.commons.codec.language.bm.ResourceConstants.CMT"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    boolean inExtendedComment = false;\n    while (scanner.hasNextLine()) {\n        final java.lang.String rawLine = scanner.nextLine();\n        java.lang.String line = rawLine;\n        if (inExtendedComment) {\n            if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n                inExtendedComment = false;\n            } \n        } else {\n            if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START)) {\n                inExtendedComment = true;\n            } else {\n                final int cmtI = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.CMT);\n                if (cmtI >= 0) {\n                    line = line.substring(0, cmtI);\n                } \n                line = line.trim();\n                if ((line.length()) == 0) {\n                    continue;\n                } \n                final java.lang.String[] parts = line.split(\"\\\\s+\");\n                if ((parts.length) != 3) {\n                    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n                } \n                final java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(parts[0]);\n                final java.lang.String[] langs = parts[1].split(\"\\\\+\");\n                final boolean accept = parts[2].equals(\"true\");\n                rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n            }\n        }\n    }\n} finally {\n    scanner.close();\n}","position":"org.apache.commons.codec.language.bm.Lang:138","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (scanner.hasNextLine()) {\n        final java.lang.String java.lang.String = scanner.nextLine();\n        java.lang.String java.lang.String = rawLine;\n        if (inExtendedComment) {\n            if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = false;\n            } \n        } else {\n            if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = true;\n            } else {\n                final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n                if (cmtI >= 0) {\n                    line = line.substring(0, cmtI);\n                } \n                line = line.trim();\n                if ((line.length()) == 0) {\n                    continue;\n                } \n                final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n                if ((parts.int) != 3) {\n                    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n                } \n                final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n                final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n                final boolean boolean = parts[2].equals(\"true\");\n                rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n            }\n        }\n    }\n} finally {\n    scanner.close();\n}"},"status":-2},{"failures":[],"tindex":"6f0cfeb7-17b9-11e6-a6c0-d5eb7589dcbd","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6f0cfeb8-17b9-11e6-a6c0-5d59ae179d40","series":0,"name":"replace","transplant":{"toString":"final int cmtI = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.CMT)","position":"org.apache.commons.codec.language.bm.Lang:153","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"line":"name1","org.apache.commons.codec.language.bm.ResourceConstants.CMT":"name2"},"type":"adrStmt","transplantationPoint":{"toString":"final int sumLength = java.lang.Math.abs(((name1.length()) + (name2.length())))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((name1.length()) + (name2.length())))"},"status":-3},{"failures":[],"tindex":"6f0cfeb9-17b9-11e6-a6c0-d724494c413c","series":0,"name":"replace","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"str","l":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[0,1],"tindex":"6f0d25ca-17b9-11e6-a6c0-3d0a9ed18f8c","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Languages:264","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"6f0d25cb-17b9-11e6-a6c0-edb5219c62d7","series":0,"name":"add","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")","position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)","position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"6f0d25cc-17b9-11e6-a6c0-fbcad7c2172a","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"status":-2},{"failures":[],"tindex":"6f0d4cdd-17b9-11e6-a6c0-87e268bd0d8a","series":0,"name":"replace","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"length"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length)","position":"org.apache.commons.codec.binary.Base32:519","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"6f0d4cde-17b9-11e6-a6c0-871d9e21d518","series":0,"name":"replace","transplant":{"toString":"int txtLength","position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int savedPos = context.pos","position":"org.apache.commons.codec.binary.Base32:446","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[],"tindex":"6f0d4cdf-17b9-11e6-a6c0-f3b9611e8a83","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('+')","position":"org.apache.commons.codec.net.QCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('+')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i)","position":"org.apache.commons.codec.net.URLCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[],"tindex":"6f0d4ce0-17b9-11e6-a6c0-e3e8617dfb5c","series":0,"name":"add","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"firstLetter","l":"name"},"type":"adrStmt","transplantationPoint":{"toString":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"status":-2},{"failures":[],"tindex":"6f0d73f1-17b9-11e6-a6c0-fd111c6501d3","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"w\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"toString":"cachedString = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"6f0d73f2-17b9-11e6-a6c0-5d3d19e3f17a","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.languages","position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"variableMap":{"languages":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES"},"type":"adrStmt","transplantationPoint":{"toString":"return ls.equals(org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES) ? org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE : ls","position":"org.apache.commons.codec.language.bm.Lang:229","type":"CtReturnImpl","sourcecode":"return ls.equals(org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet) ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : ls"},"status":-2},{"failures":[],"tindex":"6f0d73f3-17b9-11e6-a6c0-2996068d136f","series":0,"name":"replace","transplant":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"variableMap":{"index":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"6f0d9b04-17b9-11e6-a6c0-f17203a8b1a9","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inMultilineComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9],"tindex":"6f0d9b05-17b9-11e6-a6c0-4d41df7bdb2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"altCtx.update(keyBytes)","position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"6f0d9b06-17b9-11e6-a6c0-fb0d03a31b4b","series":0,"name":"add","transplant":{"toString":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())","position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"variableMap":{"buffer":"alternate"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-2},{"failures":[],"tindex":"6f0dc217-17b9-11e6-a6c0-15ec6cd89a9c","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())","position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())"},"variableMap":{"array":"bigBytes"},"type":"adrStmt","transplantationPoint":{"toString":"return bigBytes","position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-2},{"failures":[],"tindex":"6f0dc218-17b9-11e6-a6c0-4d588b7154fc","series":0,"name":"replace","transplant":{"toString":"while (cp < (saltLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize);\n    cp += blocksize;\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:339","type":"CtWhileImpl","sourcecode":"while (cp < (saltLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"len","sBytes":"out","tempResult":"out","saltLen":"len","cp":"len"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0, j = 0 ; j < len ; i++) {\n    int f = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4;\n    j++;\n    f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j));\n    j++;\n    out[i] = ((byte)(f & 255));\n}","position":"org.apache.commons.codec.binary.Hex:88","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; j < len ; i++) {\n    int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4;\n    j++;\n    f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j));\n    j++;\n    out[i] = ((byte)(f & 255));\n}"},"status":-2},{"failures":[10],"tindex":"6f0dc219-17b9-11e6-a6c0-cdb3c865104a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.decode(singleByte, 0, org.apache.commons.codec.binary.BaseNCodec.EOF, context)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"6f0dc21a-17b9-11e6-a6c0-7f5d0a8a8004","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.codec.language.bm.NameType s : org.apache.commons.codec.language.bm.NameType.values()) {\n    org.apache.commons.codec.language.bm.Lang.Langs.put(s, org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String.format(org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN, s.getName()), org.apache.commons.codec.language.bm.Languages.getInstance(s)));\n}","position":"org.apache.commons.codec.language.bm.Lang:101","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.util.Map<org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.Lang>.put(s, org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String.format(org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String, s.getName()), org.apache.commons.codec.language.bm.Languages.getInstance(s)));\n}"},"status":-2},{"failures":[11,12,13,14,15,16],"tindex":"6f0de92b-17b9-11e6-a6c0-c15fa02daf11","series":0,"name":"replace","transplant":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"variableMap":{"len":"n"},"type":"adrStmt","transplantationPoint":{"toString":"return n - todo","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:209","type":"CtReturnImpl","sourcecode":"return n - todo"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27],"tindex":"6f0de92c-17b9-11e6-a6c0-d3ea730b4f1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"currentBranches.add(new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch())","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:493","type":"CtInvocationImpl","sourcecode":"currentBranches.add(new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch())"},"status":-1},{"failures":[2,3,4,5,6,7,8,9],"tindex":"6f0de92d-17b9-11e6-a6c0-7da7c85a05ea","series":0,"name":"replace","transplant":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"variableMap":{"ctx1":"ctx","keyBytes":"pBytes"},"type":"adrStmt","transplantationPoint":{"toString":"if ((i % 7) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:386","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} "},"status":-1},{"failures":[],"tindex":"6f0de92e-17b9-11e6-a6c0-b9586e17f5be","series":0,"name":"replace","transplant":{"toString":"final int j = 0","position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int incount = 1","position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":25,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}