{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":46,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.binary.HexTest.testCustomCharset":52,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":28,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":56,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":20,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":60,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":21,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":45,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":50,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":29,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":59,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":11,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":40,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":41,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":65,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":57,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":34,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":13,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":58,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":25,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":30,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":6,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":64,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":27,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":53,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":36,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":43,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":48,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":7,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":37,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":8,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":33,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":42,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":5,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":55,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":15,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":47,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":32,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":22,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":54,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":35,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":17,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":14,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":61,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":12,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":44,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":51,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":23,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":63,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":10,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":39},"transformations":[{"failures":[0,1,2,3,4],"tindex":"ae9de7fd-1162-11e6-aa6d-69b618e26efd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:997","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.toString()"},"status":-1},{"failures":[5],"tindex":"ae9e0f0e-1162-11e6-aa6d-7b6c4427311b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))"},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-1},{"failures":[],"tindex":"ae9e0f0f-1162-11e6-aa6d-1fe4bb69330e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:557","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = !negate"},"status":-2},{"failures":[],"tindex":"ae9e0f10-1162-11e6-aa6d-9123c93e4a7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:500","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":0},{"failures":[6],"tindex":"ae9e3621-1162-11e6-aa6d-bb94cd78bd7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-1},{"failures":[7,8,9],"tindex":"ae9e3622-1162-11e6-aa6d-ffb5e83dcf1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:65","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^trough\", \"trou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":-1},{"failures":[],"tindex":"ae9e3623-1162-11e6-aa6d-5b34af181721","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"concat"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:316","type":"CtAssignmentImpl","sourcecode":"this.boolean = concat"},"status":-2},{"failures":[],"tindex":"ae9e3624-1162-11e6-aa6d-b31fbc92579c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:479","type":"CtAssignmentImpl","sourcecode":"phonemeBuilder = applyFinalRules(phonemeBuilder, finalRules2)"},"variableMap":{"phonemeBuilder":"phonemeBuilder","finalRules2":"finalRules1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:477","type":"CtAssignmentImpl","sourcecode":"phonemeBuilder = applyFinalRules(phonemeBuilder, finalRules1)"},"status":-3},{"failures":[10,11],"tindex":"ae9e3625-1162-11e6-aa6d-4d8de64f7bc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"variableMap":{"currentLine":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"status":-1},{"failures":[12],"tindex":"ae9e3626-1162-11e6-aa6d-5968f1f9f2e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"ae9e5d37-1162-11e6-aa6d-452eaaa9411e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:427","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"status":-2},{"failures":[],"tindex":"ae9e5d38-1162-11e6-aa6d-8f6a16ace600","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:791","type":"CtLocalVariableImpl","sourcecode":"final char char = charAt(value, (index + 2))"},"variableMap":{"index":"index2","value":"substring"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:60","type":"CtLocalVariableImpl","sourcecode":"char char = substring.charAt((index2++))"},"status":-2},{"failures":[13,14,15],"tindex":"ae9e5d39-1162-11e6-aa6d-e10e83ef35e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[],"tindex":"ae9e5d3a-1162-11e6-aa6d-8b3e228f7916","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:783","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"ae9e5d3b-1162-11e6-aa6d-bf3bf4bc0a4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:129","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (readLen == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(buf);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return readLen;\n}"},"status":-2},{"failures":[],"tindex":"ae9e844c-1162-11e6-aa6d-a169e95198e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:234","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:229","type":"CtReturnImpl","sourcecode":"return ls.equals(org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet) ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : ls"},"status":-2},{"failures":[],"tindex":"ae9e844d-1162-11e6-aa6d-d392d78c158e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"variableMap":{"blocksize":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","altResult":"keyBytes","ctx":"ctx1","cnt":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"status":-2},{"failures":[],"tindex":"ae9e844e-1162-11e6-aa6d-c33a2c0f8f3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.Context.boolean ? 0 : 1"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"ae9e844f-1162-11e6-aa6d-4d3990b715bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[10,11],"tindex":"ae9eab60-1162-11e6-aa6d-01fab0f6123e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"status":-1},{"failures":[],"tindex":"ae9eab61-1162-11e6-aa6d-d53e5410197f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"ae9eab62-1162-11e6-aa6d-e1a356ca4f6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"status":-1},{"failures":[],"tindex":"ae9eab63-1162-11e6-aa6d-cf6d605001f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:234","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:137","type":"CtReturnImpl","sourcecode":"return other"},"status":0},{"failures":[],"tindex":"ae9eab64-1162-11e6-aa6d-9d88e75f3f57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":-2},{"failures":[],"tindex":"ae9eab65-1162-11e6-aa6d-e72ceada7841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-2},{"failures":[56],"tindex":"ae9ed276-1162-11e6-aa6d-9d87c59b8dc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:269","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[];\n} "},"status":-1},{"failures":[],"tindex":"ae9ed277-1162-11e6-aa6d-7db4dbc6a093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"len","name2Size":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((bigInt.bitLength()) % 8) == 0) {\n    startSrc = 1;\n    len--;\n} "},"status":-2},{"failures":[],"tindex":"ae9ed278-1162-11e6-aa6d-6b3abb4f4712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:189","type":"CtIfImpl","sourcecode":"if (('H' == hwChar) || ('W' == hwChar)) {\n    final char char = str.charAt((index - 2));\n    final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n    if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n        return 0;\n    } \n} "},"variableMap":{"str":"value","hwChar":"java.lang.Character.MIN_VALUE","mappedChar":"java.lang.Character.MIN_VALUE","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-2},{"failures":[57,58,59,60,61,62,63,64],"tindex":"ae9ed279-1162-11e6-aa6d-f9bed4b88243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:151","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-1},{"failures":[],"tindex":"ae9ed27a-1162-11e6-aa6d-cfb73a4c83f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"variableMap":{"ascii":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"ae9ef98b-1162-11e6-aa6d-8f1b437e9c4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"keyLen","to":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"status":-2},{"failures":[2,4,65],"tindex":"ae9ef98c-1162-11e6-aa6d-87dea919f298","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":32,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}