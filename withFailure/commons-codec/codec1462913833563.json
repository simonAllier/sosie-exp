{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":27,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":194,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":53,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":178,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":176,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":177,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":134,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":179,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":39,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":34,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":105,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":110,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":82,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":14,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":109,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":165,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException":197,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":59,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":185,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":72,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":184,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":71,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":89,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":90,"org.apache.commons.codec.language.NysiisTest.testCap":135,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":48,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":3,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":60,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":91,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":92,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":191,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":74,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":22,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":21,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":77,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt":23,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":33,"org.apache.commons.codec.language.SoundexTest.testB650":175,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":51,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":117,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":170,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":119,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":164,"org.apache.commons.codec.language.SoundexTest.testNewInstance":180,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":56,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":103,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":66,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":162,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":43,"org.apache.commons.codec.language.NysiisTest.testDropBy":148,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":63,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":75,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":7,"org.apache.commons.codec.binary.Base64Test.testUUID":87,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":158,"org.apache.commons.codec.binary.Base64Test.testSingletons":97,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":19,"org.apache.commons.codec.binary.Base64Test.testPairs":86,"org.apache.commons.codec.language.NysiisTest.testRule2":140,"org.apache.commons.codec.language.NysiisTest.testRule1":139,"org.apache.commons.codec.language.NysiisTest.testRule7":143,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":15,"org.apache.commons.codec.language.NysiisTest.testRule6":142,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":0,"org.apache.commons.codec.language.NysiisTest.testRule5":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":40,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":192,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":181,"org.apache.commons.codec.language.NysiisTest.testBran":144,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":151,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":186,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":45,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":5,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":41,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":95,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":154,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":81,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":96,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":80,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":112,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":11,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":171,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":172,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":130,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":32,"org.apache.commons.codec.language.NysiisTest.testDad":136,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":168,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":68,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":133,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":104,"org.apache.commons.codec.language.NysiisTest.testDan":137,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":61,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":125,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":64,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":111,"org.apache.commons.codec.language.NysiisTest.testSnat":146,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":122,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":121,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":132,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":196,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":4,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":113,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":78,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":169,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":126,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":187,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":93,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":167,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":161,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":116,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":85,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":182,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":193,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":183,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":157,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":76,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":94,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":17,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":120,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":155,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":36,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":159,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":83,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":42,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":153,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":38,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":57,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":156,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":16,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":9,"org.apache.commons.codec.language.NysiisTest.testTranan":150,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":58,"org.apache.commons.codec.language.NysiisTest.testFal":138,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":13,"org.apache.commons.codec.language.NysiisTest.testSnad":145,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":160,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt":24,"org.apache.commons.codec.language.MetaphoneTest.testTCH":189,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":163,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":30,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":25,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":190,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":173,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":174,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":129,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":166,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":107,"org.apache.commons.codec.binary.Base64Test.testBase64":99,"org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":131,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":29,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":115,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":69,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":123,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":100,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":106,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":114,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":127,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":84,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":147,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":152,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":188,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":79,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":118,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":108,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":37,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":124,"org.apache.commons.codec.language.NysiisTest.testOthers":149,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":98,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":128,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":50,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":88},"transformations":[{"failures":[],"tindex":"c5637e32-16f1-11e6-ab62-6b7cbdf3cff6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.length)) + \" parts: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:287","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location))"},"status":0},{"failures":[0],"tindex":"c563cc53-16f1-11e6-ab62-f1c41971414d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (data.length) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.BLANK)) {\n        data[i] = org.apache.commons.codec.net.QCodec.UNDERSCORE;\n    } \n}","position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"status":-1},{"failures":[],"tindex":"c563cc54-16f1-11e6-ab62-0f8864cf8bf5","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"status":-3},{"failures":[1,2,3,4,5,6],"tindex":"c563cc55-16f1-11e6-ab62-cd67e5f51a86","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))","position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-1},{"failures":[],"tindex":"c563f366-16f1-11e6-ab62-f1f63280a78b","series":0,"name":"replace","transplant":{"toString":"appendPrimary(primary)","position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"encoding"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"status":-2},{"failures":[7,8,9,10,11,12],"tindex":"c563f367-16f1-11e6-ab62-1154069c6cac","series":0,"name":"replace","transplant":{"toString":"int b = c","position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"toString":"final int result = org.apache.commons.codec.binary.Base32.this.decodeTable[b]","position":"org.apache.commons.codec.binary.Base32:354","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base32.this.byte[][b]"},"status":-1},{"failures":[],"tindex":"c563f368-16f1-11e6-ab62-05955206dec1","series":0,"name":"replace","transplant":{"toString":"return java.security.MessageDigest.getInstance(algorithm)","position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_1"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_1)","position":"org.apache.commons.codec.digest.DigestUtils:112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"c563f369-16f1-11e6-ab62-3b2685fcc02a","series":0,"name":"replace","transplant":{"toString":"rightLength++","position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"length"},"type":"adrStmt","transplantationPoint":{"toString":"context.pos += lineSeparator.length","position":"org.apache.commons.codec.binary.Base32:497","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[1,13,2,5,6],"tindex":"c5641a7a-16f1-11e6-ab62-0b667f20ea38","series":0,"name":"add","transplant":{"toString":"if (c1 == c2) {\n    continue;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"hex1","c2":"hex1"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.write(hex1)","position":"org.apache.commons.codec.net.URLCodec:144","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-1},{"failures":[],"tindex":"c5641a7b-16f1-11e6-ab62-4f8cad089fe6","series":0,"name":"replace","transplant":{"toString":"int u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int b = c","position":"org.apache.commons.codec.net.URLCodec:131","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2},{"failures":[14,15,16,17,18],"tindex":"c5641a7c-16f1-11e6-ab62-2dbdee75e90e","series":0,"name":"replace","transplant":{"toString":"cnt >>= 1","position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-1},{"failures":[],"tindex":"c564418d-16f1-11e6-ab62-051232057006","series":0,"name":"add","transplant":{"toString":"c <<= 1","position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)"},"status":0},{"failures":[19,20,21,22,23,24],"tindex":"c564418e-16f1-11e6-ab62-63415dcabbd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (salt == null) {\n    final java.util.Random randomGenerator = new java.util.Random();\n    final int numSaltChars = org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS.length;\n    salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]);\n} else if (!(salt.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.B64T)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)]);\n} else if (!(salt.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-1},{"failures":[],"tindex":"c564418f-16f1-11e6-ab62-b5bc60ed56d5","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"m+\", \"M\")","position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"wy\", \"Wy\")","position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[],"tindex":"c56468a0-16f1-11e6-ab62-8fbb6c180b67","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"c56468a1-16f1-11e6-ab62-eb79a3cc41dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}","position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[25],"tindex":"c56468a2-16f1-11e6-ab62-41a1de62e748","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"w\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"l\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":-1},{"failures":[],"tindex":"c5648fb3-16f1-11e6-ab62-d3ceecd2e4b4","series":0,"name":"replace","transplant":{"toString":"final java.lang.String rCon = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2])","position":"org.apache.commons.codec.language.bm.Rule:452","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String replacement3 = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])"},"status":-2},{"failures":[],"tindex":"c5648fb4-16f1-11e6-ab62-413e3a83ca4e","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))","position":"org.apache.commons.codec.digest.DigestUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.UTF_8), salt)","position":"org.apache.commons.codec.digest.Md5Crypt:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset), salt)"},"status":-2},{"failures":[26,27,28,29],"tindex":"c5648fb5-16f1-11e6-ab62-e3071406df03","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[30,31,32,33,34,35,36,37],"tindex":"c564b6c6-16f1-11e6-ab62-cb1fcd374726","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}"},"status":-1},{"failures":[31,34],"tindex":"c564b6c7-16f1-11e6-ab62-87a01d0584c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer.append(\"$\")","position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[30,31,32,33,34,35,36,37],"tindex":"c564b6c8-16f1-11e6-ab62-ef2b2294b243","series":0,"name":"replace","transplant":{"toString":"ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()","position":"org.apache.commons.codec.digest.Md5Crypt:257","type":"CtAssignmentImpl","sourcecode":"ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{"ctx1":"altCtx"},"type":"adrStmt","transplantationPoint":{"toString":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)","position":"org.apache.commons.codec.digest.Sha2Crypt:266","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-1},{"failures":[],"tindex":"c564b6c9-16f1-11e6-ab62-53917cbac804","series":0,"name":"add","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"status":-3},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"c564b6ca-16f1-11e6-ab62-2f404f38af85","series":0,"name":"replace","transplant":{"toString":"b += 256","position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"minRating"},"type":"adrStmt","transplantationPoint":{"toString":"minRating = getMinRating(sumLength)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-1},{"failures":[69],"tindex":"c564dddb-16f1-11e6-ab62-3546c98e9fa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (rules == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang));\n} ","position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang));\n} "},"status":-1},{"failures":[],"tindex":"c564dddc-16f1-11e6-ab62-3d179601d765","series":0,"name":"replace","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int b = bytes[i]","position":"org.apache.commons.codec.net.QuotedPrintableCodec:358","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-2},{"failures":[70,71,72,73,74,75,76,77],"tindex":"c564dddd-16f1-11e6-ab62-d7e8d22fef7e","series":0,"name":"replace","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"key","element":"key"},"type":"adrStmt","transplantationPoint":{"toString":"for (final char element : arr) {\n    if (element == key) {\n        return true;\n    } \n}","position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[15,16,17],"tindex":"c56504ee-16f1-11e6-ab62-99c27c92223e","series":0,"name":"replace","transplant":{"toString":"return 0","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return 1","position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[43,60],"tindex":"c56504ef-16f1-11e6-ab62-19a7be45f2e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-1},{"failures":[],"tindex":"c56504f0-16f1-11e6-ab62-5b797bfd6335","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(e)","position":"org.apache.commons.codec.digest.HmacUtils:638","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":0},{"failures":[],"tindex":"c56504f1-16f1-11e6-ab62-4d7b25407372","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"status":0},{"failures":[7,8,9,10,11,12],"tindex":"c56504f2-16f1-11e6-ab62-7b51189d6140","series":0,"name":"replace","transplant":{"toString":"final byte[] buf = new byte[avail]","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"decodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(decodeSize, context)","position":"org.apache.commons.codec.binary.Base32:375","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[35,36,37],"tindex":"c5652c03-16f1-11e6-ab62-53f087473786","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)"},"status":-1},{"failures":[27,29],"tindex":"c5652c04-16f1-11e6-ab62-4fd51a60c2d6","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.DoubleMetaphone:836","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[78,79],"tindex":"c5652c05-16f1-11e6-ab62-cb6d9e28bf1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (cs1 == cs2) {\n    return true;\n} ","position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"c5652c06-16f1-11e6-ab62-e9b60dc4cd79","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)","position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_256"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_256, key)","position":"org.apache.commons.codec.digest.HmacUtils:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[80,81,82,83],"tindex":"c5655317-16f1-11e6-ab62-8f9639812324","series":0,"name":"replace","transplant":{"toString":"code.append('0')","position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('K')","position":"org.apache.commons.codec.language.Metaphone:240","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"c5655318-16f1-11e6-ab62-5dc247d9e14e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (context.eof) {\n    return ;\n} ","position":"org.apache.commons.codec.binary.Base64:429","type":"CtIfImpl","sourcecode":"if (context.boolean) {\n    return ;\n} "},"status":-2},{"failures":[104,105,106],"tindex":"c5655319-16f1-11e6-ab62-2348b18406e4","series":0,"name":"replace","transplant":{"toString":"code.append('S')","position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd)","position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[26,27,29],"tindex":"c565531a-16f1-11e6-ab62-0974f233e3ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"appendAlternate(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-1},{"failures":[],"tindex":"c5657a2b-16f1-11e6-ab62-1fc6f63e0ffd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:535","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"))"},"status":-2},{"failures":[],"tindex":"c5657a2c-16f1-11e6-ab62-67e2faeccea5","series":0,"name":"replace","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"left"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)","position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)"},"status":-2},{"failures":[107],"tindex":"c5657a2d-16f1-11e6-ab62-1b36e7138b75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:298","type":"CtInvocationImpl","sourcecode":"asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0))"},"status":-1},{"failures":[108,109,110,111,112,113,114,115,7,8,9,11,12],"tindex":"c5657a2e-16f1-11e6-ab62-7ff940a25b83","series":0,"name":"replace","transplant":{"toString":"final byte[] pBytes = new byte[keyLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(encodeSize, context)","position":"org.apache.commons.codec.binary.Base32:501","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"c5657a2f-16f1-11e6-ab62-4dd508ff6b1a","series":0,"name":"add","transplant":{"toString":"this.languages = java.util.Collections.unmodifiableSet(languages)","position":"org.apache.commons.codec.language.bm.Languages:87","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = java.util.Collections.unmodifiableSet(languages)"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"toString":"this.languages = languages","position":"org.apache.commons.codec.language.bm.Languages:289","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = languages"},"status":-2},{"failures":[],"tindex":"c5663d80-16f1-11e6-ab62-71c2950a259b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code = '7'","position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"status":-2},{"failures":[],"tindex":"c5663d81-16f1-11e6-ab62-b587f3855925","series":0,"name":"add","transplant":{"toString":"hard = true","position":"org.apache.commons.codec.language.Metaphone:231","type":"CtAssignmentImpl","sourcecode":"hard = true"},"variableMap":{"hard":"b"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.this.encodeBlanks = b","position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-2},{"failures":[],"tindex":"c5663d82-16f1-11e6-ab62-5fb1f8c59446","series":0,"name":"replace","transplant":{"toString":"this.strict = strict","position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"hasUnderscores"},"type":"adrStmt","transplantationPoint":{"toString":"hasUnderscores = true","position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"status":-2},{"failures":[],"tindex":"c5663d83-16f1-11e6-ab62-a7bde0ac65ae","series":0,"name":"add","transplant":{"toString":"final java.lang.String[] charsToTrim = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] parts = line.split(\"=\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:285","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = line.split(\"=\")"},"status":-2},{"failures":[],"tindex":"c5663d84-16f1-11e6-ab62-271f99b65a72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.soundexMapping = org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING","position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"status":-2},{"failures":[],"tindex":"c5666495-16f1-11e6-ab62-e9551602935e","series":0,"name":"replace","transplant":{"toString":"final java.lang.String[] charsToTrim = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] branches = soundex(source, true)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:463","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = soundex(source, true)"},"status":-2},{"failures":[],"tindex":"c5666496-16f1-11e6-ab62-0b8523eb66be","series":0,"name":"replace","transplant":{"toString":"this.encodeTable = org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE","position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = new byte[lineSeparator.length]","position":"org.apache.commons.codec.binary.Base32:300","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-3},{"failures":[116],"tindex":"c5666497-16f1-11e6-ab62-c7abdf994266","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"y\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"v\", \"f\")","position":"org.apache.commons.codec.language.Caverphone2:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":-1},{"failures":[117],"tindex":"c5666498-16f1-11e6-ab62-83728ef5c14c","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"n+\", \"N\")","position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"y\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-1},{"failures":[118,119,120,121,122,107],"tindex":"c5666499-16f1-11e6-ab62-9ffb136576ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"cachedString = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-1},{"failures":[],"tindex":"c566649a-16f1-11e6-ab62-37eee19603e4","series":0,"name":"replace","transplant":{"toString":"return isDoubleMetaphoneEqual(value1, value2, false)","position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"variableMap":{"value2":"org.apache.commons.codec.language.Metaphone.VOWELS","value1":"org.apache.commons.codec.language.Metaphone.VOWELS"},"type":"adrStmt","transplantationPoint":{"toString":"return (org.apache.commons.codec.language.Metaphone.VOWELS.indexOf(string.charAt(index))) >= 0","position":"org.apache.commons.codec.language.Metaphone:339","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(string.charAt(index))) >= 0"},"status":-2},{"failures":[],"tindex":"c5668bab-16f1-11e6-ab62-0785c90a798a","series":0,"name":"replace","transplant":{"toString":"a = (a ^ t) ^ (t >>> (16 - n))","position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"a = (a ^ t) ^ (t >>> (16 - n))"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"c5668bac-16f1-11e6-ab62-17fe4ba8d967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (salt == null) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.MD5_PREFIX)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt);\n}","position":"org.apache.commons.codec.digest.Crypt:66","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt);\n}"},"status":-2},{"failures":[116,123,124],"tindex":"c5668bad-16f1-11e6-ab62-651d30566e95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"s+\", \"S\")","position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[],"tindex":"c5668bae-16f1-11e6-ab62-55016728972e","series":0,"name":"replace","transplant":{"toString":"return colognePhonetic(text1).equals(colognePhonetic(text2))","position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"variableMap":{"text1":"str1","text2":"str2"},"type":"adrStmt","transplantationPoint":{"toString":"return metaphone(str1).equals(metaphone(str2))","position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"status":-2},{"failures":[125,126],"tindex":"c5668baf-16f1-11e6-ab62-43e65191937b","series":0,"name":"replace","transplant":{"toString":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)","position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"c","d":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)","position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"status":-1},{"failures":[],"tindex":"c566b2c0-16f1-11e6-ab62-81e39ec14995","series":0,"name":"replace","transplant":{"toString":"name2 = cleanName(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"v\", \"f\")","position":"org.apache.commons.codec.language.Caverphone2:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":-2},{"failures":[],"tindex":"c566b2c1-16f1-11e6-ab62-1132bbe872e4","series":0,"name":"replace","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"avail","y":"avail"},"type":"adrStmt","transplantationPoint":{"toString":"if (avail > 0) {\n    final byte[] buf = new byte[avail];\n    final int c = baseNCodec.readResults(buf, 0, avail, context);\n    if (c > 0) {\n        out.write(buf, 0, c);\n    } \n} ","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[127,128,129,130,131,132],"tindex":"c566b2c2-16f1-11e6-ab62-2b6b293dcb70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((suffix.length()) > (input.length())) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c566b2c3-16f1-11e6-ab62-c9ebca92619b","series":0,"name":"add","transplant":{"toString":"final java.lang.String combined = l + remainder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = l + remainder"},"variableMap":{"l":"boxContent","remainder":"boxContent"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String bContent = boxContent","position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"status":-2},{"failures":[28,29],"tindex":"c566b2c4-16f1-11e6-ab62-ad28c4c1870a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('R')","position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[],"tindex":"c566d9d5-16f1-11e6-ab62-07a4c70d3cff","series":0,"name":"replace","transplant":{"toString":"name = removeVowels(name)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"name = removeVowels(name)"},"variableMap":{"name":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"p+\", \"P\")","position":"org.apache.commons.codec.language.Caverphone2:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-2},{"failures":[],"tindex":"c566d9d6-16f1-11e6-ab62-7de0f40c2ad8","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"upperName"},"type":"adrStmt","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-3},{"failures":[],"tindex":"c566d9d7-16f1-11e6-ab62-834898330ac9","series":0,"name":"replace","transplant":{"toString":"for (int i = (input.length()) - 1, j = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (input.length()) - 1, int int = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}"},"variableMap":{"input":"other","suffix":"other"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(other instanceof org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch)) {\n    return false;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:105","type":"CtIfImpl","sourcecode":"if (!(other instanceof org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch)) {\n    return false;\n} "},"status":-2},{"failures":[70,74],"tindex":"c566d9d8-16f1-11e6-ab62-d175fc2c8424","series":0,"name":"add","transplant":{"toString":"code = '6'","position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '4'","position":"org.apache.commons.codec.language.ColognePhonetic:363","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[],"tindex":"c566d9d9-16f1-11e6-ab62-47aabedf1dc8","series":0,"name":"replace","transplant":{"toString":"return doubleMetaphone(value, false)","position":"org.apache.commons.codec.language.DoubleMetaphone:76","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value, false)"},"variableMap":{"value":"name"},"type":"adrStmt","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[],"tindex":"c56700ea-16f1-11e6-ab62-6dc54e144520","series":0,"name":"replace","transplant":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"variableMap":{"a":"index"},"type":"adrStmt","transplantationPoint":{"toString":"return index + 1","position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"status":-2},{"failures":[],"tindex":"c56700eb-16f1-11e6-ab62-097e953b7aaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (conditionC0(value, index)) {\n    result.append('K');\n    index += 2;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, \"CAESAR\"))) {\n    result.append('S');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CH\")) {\n    index = handleCH(value, result, index);\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CZ\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, \"WICZ\")))) {\n    result.append('S', 'X');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"CIA\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:280","type":"CtIfImpl","sourcecode":"if (conditionC0(value, index)) {\n    result.append('K');\n    index += 2;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, \"CAESAR\"))) {\n    result.append('S');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CH\")) {\n    index = handleCH(value, result, index);\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CZ\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, \"WICZ\")))) {\n    result.append('S', 'X');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"CIA\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[125,126],"tindex":"c56700ec-16f1-11e6-ab62-3bb79b86828d","series":0,"name":"replace","transplant":{"toString":"u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)","position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"status":-1},{"failures":[],"tindex":"c56727fd-16f1-11e6-ab62-0b75284a4e05","series":0,"name":"replace","transplant":{"toString":"if (atStart) {\n    return replacementAtStart;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:181","type":"CtIfImpl","sourcecode":"if (atStart) {\n    return java.lang.String[];\n} "},"variableMap":{"atStart":"nextCharIsVowel","replacementAtStart":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"toString":"if (nextCharIsVowel) {\n    return replacementBeforeVowel;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"status":-3},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"c56727fe-16f1-11e6-ab62-8572e8ec9714","series":0,"name":"replace","transplant":{"toString":"final char[] chars = new char[len]","position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final char[] transcoded = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)","position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)"},"status":-1},{"failures":[],"tindex":"c56727ff-16f1-11e6-ab62-1b7380e11497","series":0,"name":"replace","transplant":{"toString":"int u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int result = org.apache.commons.codec.binary.Base32.this.decodeTable[b]","position":"org.apache.commons.codec.binary.Base32:354","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base32.this.byte[][b]"},"status":-2},{"failures":[152,153,154,155,156,157,158,159,160],"tindex":"c5672800-16f1-11e6-ab62-6d1897f5c7bb","series":0,"name":"replace","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return passwd.toString()","position":"org.apache.commons.codec.digest.Md5Crypt:300","type":"CtReturnImpl","sourcecode":"return passwd.toString()"},"status":-1},{"failures":[],"tindex":"c5672801-16f1-11e6-ab62-73e68267900c","series":0,"name":"replace","transplant":{"toString":"if ((input.length()) == 0) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    return decodeText(str);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}","position":"org.apache.commons.codec.net.QCodec:268","type":"CtTryImpl","sourcecode":"try {\n    return decodeText(str);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[144,148,151],"tindex":"c5674f12-16f1-11e6-ab62-1386bcc302ea","series":0,"name":"replace","transplant":{"toString":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"curr","prev":"curr","curr":"curr"},"type":"adrStmt","transplantationPoint":{"toString":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"status":-1},{"failures":[161,162,25],"tindex":"c5674f13-16f1-11e6-ab62-2d3826b201cb","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ph\", \"fh\")","position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"t+\", \"T\")","position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"c5674f14-16f1-11e6-ab62-1fbbd8956579","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^y3\", \"Y3\")","position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"toString":"name2RtLEnd = name2.substring((name2Size - i), ((name2Size - i) + 1))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:316","type":"CtAssignmentImpl","sourcecode":"name2RtLEnd = name2.substring((name2Size - i), ((name2Size - i) + 1))"},"status":-2},{"failures":[163,54,59,66],"tindex":"c5674f15-16f1-11e6-ab62-2dd05e3af78c","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))","position":"org.apache.commons.codec.digest.DigestUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"firstThree"},"type":"adrStmt","transplantationPoint":{"toString":"return firstThree + lastThree","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"status":-1},{"failures":[],"tindex":"c5674f16-16f1-11e6-ab62-5b04b960dacf","series":0,"name":"replace","transplant":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"c5677627-16f1-11e6-ab62-dde5632f6ec7","series":0,"name":"replace","transplant":{"toString":"this.strict = strict","position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"toString":"inExtendedComment = true","position":"org.apache.commons.codec.language.bm.Lang:150","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":-2},{"failures":[84,164,98,99,165,166,167,102,108,109,114,115,168,169,170,171,11],"tindex":"c5677628-16f1-11e6-ab62-0fec539f8fc2","series":0,"name":"replace","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return bytes == null ? null : new java.lang.String(bytes , charset)","position":"org.apache.commons.codec.binary.StringUtils:257","type":"CtReturnImpl","sourcecode":"return bytes == null ? null : new java.lang.String(bytes , charset)"},"status":-1},{"failures":[172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"c5677629-16f1-11e6-ab62-8b1191f96a14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"last = mapped","position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"status":-1},{"failures":[],"tindex":"c567762a-16f1-11e6-ab62-e9d6abcbcca1","series":0,"name":"replace","transplant":{"toString":"line = line.trim()","position":"org.apache.commons.codec.language.bm.Lang:159","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"variableMap":{"line":"upperName"},"type":"adrStmt","transplantationPoint":{"toString":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[186,187],"tindex":"c567762b-16f1-11e6-ab62-d530d8de53ff","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[],"tindex":"c5679d3c-16f1-11e6-ab62-e3a90a03c27a","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < (arrayOctet.length) ; i++) {\n    if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.binary.Base64:538","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n        return false;\n    } \n}"},"variableMap":{"arrayOctet":"decodeTable","length":"length"},"type":"adrStmt","transplantationPoint":{"toString":"return ((octet >= 0) && (octet < (decodeTable.length))) && ((decodeTable[octet]) != (-1))","position":"org.apache.commons.codec.binary.Base64:781","type":"CtReturnImpl","sourcecode":"return ((octet >= 0) && (octet < (byte[].int))) && ((byte[][octet]) != (-1))"},"status":-2},{"failures":[],"tindex":"c5679d3d-16f1-11e6-ab62-33fcfec7a0ab","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"r3\", \"R3\")","position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"toString":"name = getFirst3Last3(name)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":-2},{"failures":[125,21,22,126],"tindex":"c5679d3e-16f1-11e6-ab62-2db9263a81d3","series":0,"name":"replace","transplant":{"toString":"ii >>= 1","position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"variableMap":{"ii":"u"},"type":"adrStmt","transplantationPoint":{"toString":"u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"status":-1},{"failures":[],"tindex":"c5679d3f-16f1-11e6-ab62-b712623eb6bd","series":0,"name":"add","transplant":{"toString":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"lastReplacement","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"toString":"branch.lastReplacement = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this.lastReplacement","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:96","type":"CtAssignmentImpl","sourcecode":"branch.java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this.java.lang.String"},"status":-2},{"failures":[188,104,189,190,191,81,192,105,193,106,194,83,195,196],"tindex":"c5679d40-16f1-11e6-ab62-7f2714b19d70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"switch (symb) {\n    case 'A' :\n    case 'E' :\n    case 'I' :\n    case 'O' :\n    case 'U' :\n        if (n == 0) {\n            code.append(symb);\n        } \n        break;\n    case 'B' :\n        if ((isPreviousChar(local, n, 'M')) && (isLastChar(wdsz, n))) {\n            break;\n        } \n        code.append(symb);\n        break;\n    case 'C' :\n        if (((isPreviousChar(local, n, 'S')) && (!(isLastChar(wdsz, n)))) && ((org.apache.commons.codec.language.Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) >= 0)) {\n            break;\n        } \n        if (regionMatch(local, n, \"CIA\")) {\n            code.append('X');\n            break;\n        } \n        if ((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) >= 0)) {\n            code.append('S');\n            break;\n        } \n        if ((isPreviousChar(local, n, 'S')) && (isNextChar(local, n, 'H'))) {\n            code.append('K');\n            break;\n        } \n        if (isNextChar(local, n, 'H')) {\n            if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n                code.append('K');\n            } else {\n                code.append('X');\n            }\n        } else {\n            code.append('K');\n        }\n        break;\n    case 'D' :\n        if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'G'))) && ((org.apache.commons.codec.language.Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) >= 0)) {\n            code.append('J');\n            n += 2;\n        } else {\n            code.append('T');\n        }\n        break;\n    case 'G' :\n        if ((isLastChar(wdsz, (n + 1))) && (isNextChar(local, n, 'H'))) {\n            break;\n        } \n        if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'H'))) && (!(isVowel(local, (n + 2))))) {\n            break;\n        } \n        if ((n > 0) && ((regionMatch(local, n, \"GN\")) || (regionMatch(local, n, \"GNED\")))) {\n            break;\n        } \n        if (isPreviousChar(local, n, 'G')) {\n            hard = true;\n        } else {\n            hard = false;\n        }\n        if (((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) >= 0)) && (!hard)) {\n            code.append('J');\n        } else {\n            code.append('K');\n        }\n        break;\n    case 'H' :\n        if (isLastChar(wdsz, n)) {\n            break;\n        } \n        if ((n > 0) && ((org.apache.commons.codec.language.Metaphone.VARSON.indexOf(local.charAt((n - 1)))) >= 0)) {\n            break;\n        } \n        if (isVowel(local, (n + 1))) {\n            code.append('H');\n        } \n        break;\n    case 'F' :\n    case 'J' :\n    case 'L' :\n    case 'M' :\n    case 'N' :\n    case 'R' :\n        code.append(symb);\n        break;\n    case 'K' :\n        if (n > 0) {\n            if (!(isPreviousChar(local, n, 'C'))) {\n                code.append(symb);\n            } \n        } else {\n            code.append(symb);\n        }\n        break;\n    case 'P' :\n        if (isNextChar(local, n, 'H')) {\n            code.append('F');\n        } else {\n            code.append(symb);\n        }\n        break;\n    case 'Q' :\n        code.append('K');\n        break;\n    case 'S' :\n        if (((regionMatch(local, n, \"SH\")) || (regionMatch(local, n, \"SIO\"))) || (regionMatch(local, n, \"SIA\"))) {\n            code.append('X');\n        } else {\n            code.append('S');\n        }\n        break;\n    case 'T' :\n        if ((regionMatch(local, n, \"TIA\")) || (regionMatch(local, n, \"TIO\"))) {\n            code.append('X');\n            break;\n        } \n        if (regionMatch(local, n, \"TCH\")) {\n            break;\n        } \n        if (regionMatch(local, n, \"TH\")) {\n            code.append('0');\n        } else {\n            code.append('T');\n        }\n        break;\n    case 'V' :\n        code.append('F');\n        break;\n    case 'W' :\n    case 'Y' :\n        if ((!(isLastChar(wdsz, n))) && (isVowel(local, (n + 1)))) {\n            code.append(symb);\n        } \n        break;\n    case 'X' :\n        code.append('K');\n        code.append('S');\n        break;\n    case 'Z' :\n        code.append('S');\n        break;\n    default :\n        break;\n}","position":"org.apache.commons.codec.language.Metaphone:155","type":"CtSwitchImpl","sourcecode":"switch (symb) {\n    case 'A' :\n    case 'E' :\n    case 'I' :\n    case 'O' :\n    case 'U' :\n        if (n == 0) {\n            code.append(symb);\n        } \n        break;\n    case 'B' :\n        if ((isPreviousChar(local, n, 'M')) && (isLastChar(wdsz, n))) {\n            break;\n        } \n        code.append(symb);\n        break;\n    case 'C' :\n        if (((isPreviousChar(local, n, 'S')) && (!(isLastChar(wdsz, n)))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n            break;\n        } \n        if (regionMatch(local, n, \"CIA\")) {\n            code.append('X');\n            break;\n        } \n        if ((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n            code.append('S');\n            break;\n        } \n        if ((isPreviousChar(local, n, 'S')) && (isNextChar(local, n, 'H'))) {\n            code.append('K');\n            break;\n        } \n        if (isNextChar(local, n, 'H')) {\n            if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n                code.append('K');\n            } else {\n                code.append('X');\n            }\n        } else {\n            code.append('K');\n        }\n        break;\n    case 'D' :\n        if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'G'))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 2)))) >= 0)) {\n            code.append('J');\n            n += 2;\n        } else {\n            code.append('T');\n        }\n        break;\n    case 'G' :\n        if ((isLastChar(wdsz, (n + 1))) && (isNextChar(local, n, 'H'))) {\n            break;\n        } \n        if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'H'))) && (!(isVowel(local, (n + 2))))) {\n            break;\n        } \n        if ((n > 0) && ((regionMatch(local, n, \"GN\")) || (regionMatch(local, n, \"GNED\")))) {\n            break;\n        } \n        if (isPreviousChar(local, n, 'G')) {\n            hard = true;\n        } else {\n            hard = false;\n        }\n        if (((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) && (!hard)) {\n            code.append('J');\n        } else {\n            code.append('K');\n        }\n        break;\n    case 'H' :\n        if (isLastChar(wdsz, n)) {\n            break;\n        } \n        if ((n > 0) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n - 1)))) >= 0)) {\n            break;\n        } \n        if (isVowel(local, (n + 1))) {\n            code.append('H');\n        } \n        break;\n    case 'F' :\n    case 'J' :\n    case 'L' :\n    case 'M' :\n    case 'N' :\n    case 'R' :\n        code.append(symb);\n        break;\n    case 'K' :\n        if (n > 0) {\n            if (!(isPreviousChar(local, n, 'C'))) {\n                code.append(symb);\n            } \n        } else {\n            code.append(symb);\n        }\n        break;\n    case 'P' :\n        if (isNextChar(local, n, 'H')) {\n            code.append('F');\n        } else {\n            code.append(symb);\n        }\n        break;\n    case 'Q' :\n        code.append('K');\n        break;\n    case 'S' :\n        if (((regionMatch(local, n, \"SH\")) || (regionMatch(local, n, \"SIO\"))) || (regionMatch(local, n, \"SIA\"))) {\n            code.append('X');\n        } else {\n            code.append('S');\n        }\n        break;\n    case 'T' :\n        if ((regionMatch(local, n, \"TIA\")) || (regionMatch(local, n, \"TIO\"))) {\n            code.append('X');\n            break;\n        } \n        if (regionMatch(local, n, \"TCH\")) {\n            break;\n        } \n        if (regionMatch(local, n, \"TH\")) {\n            code.append('0');\n        } else {\n            code.append('T');\n        }\n        break;\n    case 'V' :\n        code.append('F');\n        break;\n    case 'W' :\n    case 'Y' :\n        if ((!(isLastChar(wdsz, n))) && (isVowel(local, (n + 1)))) {\n            code.append(symb);\n        } \n        break;\n    case 'X' :\n        code.append('K');\n        code.append('S');\n        break;\n    case 'Z' :\n        code.append('S');\n        break;\n    default :\n        break;\n}"},"status":-1},{"failures":[],"tindex":"c567eb61-16f1-11e6-ab62-57104ae86a3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"try {\n    return encodeText(str, charset);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}","position":"org.apache.commons.codec.net.QCodec:229","type":"CtTryImpl","sourcecode":"try {\n    return encodeText(str, charset);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"c567eb62-16f1-11e6-ab62-3b19d4855018","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"f+\", \"F\")","position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"upperName"},"type":"adrStmt","transplantationPoint":{"toString":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[197],"tindex":"c5681273-16f1-11e6-ab62-136d98433ed2","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")","position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")","position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"status":-1},{"failures":[],"tindex":"c5681274-16f1-11e6-ab62-ffe3acf319a9","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))","position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-2},{"failures":[28,29],"tindex":"c5681275-16f1-11e6-ab62-c72ba94cb257","series":0,"name":"replace","transplant":{"toString":"result.append('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('J')","position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}