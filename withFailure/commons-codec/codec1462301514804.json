{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1af8200a-1160-11e6-ab21-e7ad72985ab5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:293","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(available(context), bAvail)"},"status":0},{"failures":[],"tindex":"1af8471b-1160-11e6-ab21-17910a4dd165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:166","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\")"},"status":0},{"failures":[],"tindex":"1af8471c-1160-11e6-ab21-a339a30d03a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:313","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":0},{"failures":[],"tindex":"1af8471d-1160-11e6-ab21-eda65a974dcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":0},{"failures":[],"tindex":"1af86e2e-1160-11e6-ab21-afc07efaf662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"status":0},{"failures":[],"tindex":"1af86e2f-1160-11e6-ab21-8faea54ff69c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"status":0},{"failures":[],"tindex":"1af86e30-1160-11e6-ab21-c711f123f4e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:54","type":"CtLocalVariableImpl","sourcecode":"int int = thisStart"},"status":0},{"failures":[],"tindex":"1af89541-1160-11e6-ab21-b149ff2acc9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":0},{"failures":[],"tindex":"1af89542-1160-11e6-ab21-c3abc60f9195","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":0},{"failures":[],"tindex":"1af89543-1160-11e6-ab21-0780eb5a3f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"status":0},{"failures":[],"tindex":"1af8bc54-1160-11e6-ab21-c16f1feec379","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:847","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"UMB\")) && (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"ER\")))"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHIA\")) {\n    return true;\n} else if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":0},{"failures":[],"tindex":"1af8bc55-1160-11e6-ab21-dd417a047f05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":0},{"failures":[],"tindex":"1af8bc56-1160-11e6-ab21-1bcf2561e7af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:120","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":0},{"failures":[],"tindex":"1af8e367-1160-11e6-ab21-9f00ca0bec15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:58","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.org.apache.commons.codec.language.Caverphone2.encode(source)"},"status":0},{"failures":[],"tindex":"1af8e368-1160-11e6-ab21-c9d77fb3f0f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":0},{"failures":[],"tindex":"1af8e369-1160-11e6-ab21-7dfcb9aa1b82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bitlen / 8]"},"status":0},{"failures":[],"tindex":"1af8e36a-1160-11e6-ab21-b395a6d3c666","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"variableMap":{"altResult":"this","buffer":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> : org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}"},"status":0},{"failures":[],"tindex":"1af90a7b-1160-11e6-ab21-6fe0e7555c35","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:94","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"1af90a7c-1160-11e6-ab21-5565169e1d40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((chrs[index]) == (element[0])) {\n    chrs[index] = element[1];\n    break;\n} "},"status":0},{"failures":[],"tindex":"1af90a7d-1160-11e6-ab21-bbb328c4fcc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"status":0},{"failures":[],"tindex":"1af9318e-1160-11e6-ab21-eb38c62eec68","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"line":"pattern","org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:703","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.bm.Rule.this.java.lang.String.length()"},"status":0},{"failures":[],"tindex":"1af9318f-1160-11e6-ab21-eb2b16e53ac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"status":0},{"failures":[],"tindex":"1af93190-1160-11e6-ab21-4dc019f22c48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:455","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":0},{"failures":[],"tindex":"1af958a1-1160-11e6-ab21-65dee3c51933","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:537","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","this":"this","content":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:589","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(regex);\n\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(input);\n        return matcher.find();\n    }\n}"},"status":0},{"failures":[],"tindex":"1af958a2-1160-11e6-ab21-9d55f7798ff0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"org.apache.commons.codec.digest.B64.B64T","salt":"org.apache.commons.codec.digest.B64.B64T","prefix":"org.apache.commons.codec.digest.B64.B64T"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:74","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())));\n}"},"status":0},{"failures":[],"tindex":"1af97fb3-1160-11e6-ab21-f56a351244be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":0},{"failures":[],"tindex":"1af97fb4-1160-11e6-ab21-bfd8741991d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":0},{"failures":[],"tindex":"1af97fb5-1160-11e6-ab21-376d854021e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"finalb = ctx.digest()"},"status":-3},{"failures":[],"tindex":"1af97fb6-1160-11e6-ab21-9fe1fbf3cb17","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:213","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = 0"},"status":0},{"failures":[],"tindex":"1af9a6c7-1160-11e6-ab21-b7a4fb6030cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:317","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":0},{"failures":[],"tindex":"1af9a6c8-1160-11e6-ab21-674c8ea92054","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":0},{"failures":[],"tindex":"1af9a6c9-1160-11e6-ab21-e3b2ecf2944f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:261","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], (((char[].int) - (org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.this.int)) + start), newData, 0, length)"},"variableMap":{"data":"l_ascii","length":"bits","start":"jj","newData":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:280","type":"CtIfImpl","sourcecode":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}"},"status":-3},{"failures":[],"tindex":"1af9a6ca-1160-11e6-ab21-77f4651f1bc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:348","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"variableMap":{"c":"eSwap1","d":"eSwap1","results":"schedule"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"status":0},{"failures":[],"tindex":"1af9cddb-1160-11e6-ab21-33d56106afe3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":0},{"failures":[],"tindex":"1af9cddc-1160-11e6-ab21-17cb4790f621","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"variableMap":{"folding":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":0},{"failures":[],"tindex":"1af9cddd-1160-11e6-ab21-69cfeb710b97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"variableMap":{"b":"key","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":0},{"failures":[],"tindex":"1af9f4ee-1160-11e6-ab21-cd8965b3ce12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.Utils:44","type":"CtIfImpl","sourcecode":"if (i == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)) + \"): \") + b));\n} "},"variableMap":{"b":"pad","org.apache.commons.codec.net.URLCodec.RADIX":"length","i":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:345","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        final byte[] byte[] = ensureBufferSize(int, context);\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n                context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"1afa1bff-1160-11e6-ab21-b74c4a1d17d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(phoneme)"},"status":0},{"failures":[],"tindex":"1afa1c00-1160-11e6-ab21-17bc27c1a5ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"variableMap":{"schedule":"out","left":"left","i":"left","eSwap0":"left","right":"left","eSwap1":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":0},{"failures":[],"tindex":"1afa1c01-1160-11e6-ab21-9d39ff8c51e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:351","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(c, d, 8, 16711935, results)"},"variableMap":{"c":"right","d":"right","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"status":0},{"failures":[],"tindex":"1afa1c02-1160-11e6-ab21-89b514279fc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":0},{"failures":[],"tindex":"1afa4313-1160-11e6-ab21-1762c3403830","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":0},{"failures":[],"tindex":"1afa4314-1160-11e6-ab21-7f81a61d6694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:153","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.StringBuilder.toString()"},"status":0},{"failures":[],"tindex":"1afa4315-1160-11e6-ab21-d17a5e2e8cea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"1afa4316-1160-11e6-ab21-cd4bf27715b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"status":0},{"failures":[],"tindex":"1afa6a27-1160-11e6-ab21-518bbc92f6a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:117","type":"CtBreakImpl","sourcecode":"break EXPR"},"status":0},{"failures":[],"tindex":"1afa6a28-1160-11e6-ab21-25965121068e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:433","type":"CtForImpl","sourcecode":"for (int int = 0 ; index < (chrs.int) ; index++) {\n    if ((chrs[index]) > 'Z') {\n        for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n            if ((chrs[index]) == (element[0])) {\n                chrs[index] = element[1];\n                break;\n            } \n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"1afa6a29-1160-11e6-ab21-09f0bc731d5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])"},"status":0},{"failures":[],"tindex":"1afa6a2a-1160-11e6-ab21-a7f2a7b6ff6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:716","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"status":0},{"failures":[],"tindex":"1afa6a2b-1160-11e6-ab21-a7c305b5467d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"status":0},{"failures":[],"tindex":"1afa6a2c-1160-11e6-ab21-8741c51be6dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:244","type":"CtReturnImpl","sourcecode":"return (rule2.getPatternLength()) - (rule1.getPatternLength())"},"status":0},{"failures":[],"tindex":"1afa913d-1160-11e6-ab21-fde38568166d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:387","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 16"},"status":0},{"failures":[],"tindex":"1afa913e-1160-11e6-ab21-0d79f03f9dc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"variableMap":{"languagesResourceName":"languageRulesResourceName","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.bm.Lang.class"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"status":0},{"failures":[],"tindex":"1afa913f-1160-11e6-ab21-8fdc78db3860","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"variableMap":{"boxContent":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"status":0},{"failures":[],"tindex":"1afa9140-1160-11e6-ab21-b39c388f67b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:94","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:525","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch"},"status":0},{"failures":[],"tindex":"1afa9141-1160-11e6-ab21-6186f0e738b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"variableMap":{"l":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"status":0},{"failures":[],"tindex":"1afa9142-1160-11e6-ab21-998fe0eae4f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:203","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = guessLanguages(text)"},"variableMap":{"text":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:384","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.Lang.guessLanguages(input)"},"status":0},{"failures":[],"tindex":"1afab853-1160-11e6-ab21-e1b1f14ca390","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":0},{"failures":[],"tindex":"1afab854-1160-11e6-ab21-394c00ed9c74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"variableMap":{"input":"source","l":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"status":0},{"failures":[],"tindex":"1afab855-1160-11e6-ab21-ad400a0df1b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":0},{"failures":[],"tindex":"1afab856-1160-11e6-ab21-0779cbd4eef4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"status":0},{"failures":[],"tindex":"1afab857-1160-11e6-ab21-21f5ab3a30fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"variableMap":{"valueToDigest":"pArray","key":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":0},{"failures":[],"tindex":"1afab858-1160-11e6-ab21-25405c38d36e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:302","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":0},{"failures":[],"tindex":"1afab859-1160-11e6-ab21-197c14c7bd75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"status":0},{"failures":[],"tindex":"1afadf6a-1160-11e6-ab21-ffd9ca6de4fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:234","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls)"},"status":0},{"failures":[],"tindex":"1afadf6b-1160-11e6-ab21-f5f33b2d8892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"len","len":"todo","lineLength":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-3},{"failures":[],"tindex":"1afadf6c-1160-11e6-ab21-6fb5fc793dfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"variableMap":{"sBytes":"buffer","tempResult":"buffer","saltLen":"currentLinePos","cp":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:373","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":0},{"failures":[],"tindex":"1afadf6d-1160-11e6-ab21-0f9ffa06feec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"status":0},{"failures":[],"tindex":"1afadf6e-1160-11e6-ab21-45065f43bf03","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":0},{"failures":[],"tindex":"1afadf6f-1160-11e6-ab21-6b28fe195656","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:296","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)"},"status":0},{"failures":[],"tindex":"1afadf70-1160-11e6-ab21-2f5924943135","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":0},{"failures":[],"tindex":"1afadf71-1160-11e6-ab21-578c2c2c18d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:526","type":"CtIfImpl","sourcecode":"if ((index == 0) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")))) {\n    result.append('J', 'A');\n} else if (((isVowel(charAt(value, (index - 1)))) && (!slavoGermanic)) && (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))) {\n    result.append('J', 'H');\n} else if (index == ((value.length()) - 1)) {\n    result.append('J', ' ');\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n    result.append('J');\n} "},"status":0},{"failures":[],"tindex":"1afb0682-1160-11e6-ab21-558a27270abc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:255","type":"CtWhileImpl","sourcecode":"while (scanner.hasNextLine()) {\n    currentLine++;\n    final java.lang.String java.lang.String = scanner.nextLine();\n    java.lang.String java.lang.String = rawLine;\n    if (inMultilineComment) {\n        if (line.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n            inMultilineComment = false;\n        } \n        continue;\n    } \n    if (line.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        inMultilineComment = true;\n    } else {\n        final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String);\n        if (cmtI >= 0) {\n            line = line.substring(0, cmtI);\n        } \n        line = line.trim();\n        if ((line.length()) == 0) {\n            continue;\n        } \n        if (line.contains(\"=\")) {\n            final java.lang.String[] java.lang.String[] = line.split(\"=\");\n            if ((parts.int) != 2) {\n                throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n            } else {\n                final java.lang.String java.lang.String = parts[0];\n                final java.lang.String java.lang.String = parts[1];\n                if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n                    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n                } \n                asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n            }\n        } else {\n            final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n            if ((parts.int) != 4) {\n                throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n            } else {\n                try {\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n                    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n                    final char char = r.java.lang.String.charAt(0);\n                    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n                    if (rules == null) {\n                        rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                        ruleMapping.put(patternKey, rules);\n                    } \n                    rules.add(r);\n                } catch (final java.lang.IllegalArgumentException e) {\n                    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n                }\n            }\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"1afb0683-1160-11e6-ab21-618a779799a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"status":0},{"failures":[],"tindex":"1afb0684-1160-11e6-ab21-519c4511d912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"salt","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:146","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-3},{"failures":[],"tindex":"1afb0685-1160-11e6-ab21-a783c9fde73d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:330","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":0},{"failures":[],"tindex":"1afb0686-1160-11e6-ab21-3327acfd92a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"binaryData","key":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"status":0},{"failures":[],"tindex":"1afb2d97-1160-11e6-ab21-099e63c70c7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:358","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang))"},"variableMap":{"nameType":"obj","rt":"obj","lang":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":0},{"failures":[],"tindex":"1afb2d98-1160-11e6-ab21-17654798ca3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":79,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}