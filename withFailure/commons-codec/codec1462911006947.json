{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":13,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":146,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":76,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":113,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":112,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":68,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":22,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":65,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":131,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":136,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":59,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":82,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":144,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":57,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":60,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":87,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":75,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":101,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":126,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":39,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":47,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":49,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":100,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":33,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":70,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":92,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":133,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":62,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":106,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":122,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":35,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":36,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":25,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":124,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":2,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":103,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":137,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":127,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":93,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":85,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":43,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":54,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":53,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":125,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":58,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":111,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":74,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":115,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":51,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":135,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":81,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":3,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":14,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":50,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":110,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":142,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":28,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":12,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":132,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":27,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":98,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":128,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput":61,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":105,"org.apache.commons.codec.language.MetaphoneTest.testTCH":145,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":138,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":78,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":0,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":24,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":11,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":64,"org.apache.commons.codec.language.NysiisTest.testDropBy":108,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":114,"org.apache.commons.codec.binary.Base64Test.testBase64":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":67,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":130,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":10,"org.apache.commons.codec.binary.Base64Test.testUUID":31,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":104,"org.apache.commons.codec.binary.Base64Test.testSingletons":42,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":52,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":89,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":102,"org.apache.commons.codec.binary.Base64Test.testPairs":30,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":88,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":96,"org.apache.commons.codec.binary.Base64Test.testCodec112":41,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":55,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":118,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":83,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":91,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":120,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":26,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":109,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":129,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":139,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":23,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":123,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":1,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":94,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":97,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":140,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":18,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":20,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":95,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":73,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":134,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":99,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":56,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":17,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":90,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":80,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":6,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":84,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":143,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":79,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":116,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":107,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":19,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":63,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":119,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":86,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":7},"transformations":[{"failures":[0],"tindex":"30989402-16eb-11e6-b22e-d148462407f0","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^y\", \"A\")","position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")","position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"3098bb13-16eb-11e6-b22e-713efbfbd39c","series":0,"name":"add","transplant":{"toString":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")","position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")","position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"status":-2},{"failures":[],"tindex":"3098e224-16eb-11e6-b22e-513779c73673","series":0,"name":"add","transplant":{"toString":"appendAlternate(alternate)","position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"lastCode"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AEIJOUY, chr)) {\n    code = '0';\n} else if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n    if (lastCode == '/') {\n        continue;\n    } \n    code = '-';\n} else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.WFPV, chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.GKQ, chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX, nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.TDX, chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}","position":"org.apache.commons.codec.language.ColognePhonetic:347","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '0';\n} else if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n    if (lastCode == '/') {\n        continue;\n    } \n    code = '-';\n} else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"30993045-16eb-11e6-b22e-fbee8fb5cc87","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)","position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"variableMap":{"keyBytes":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[7,8],"tindex":"30993046-16eb-11e6-b22e-7f284b8b0935","series":0,"name":"replace","transplant":{"toString":"final int startDst = (bitlen / 8) - len","position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"d","len":"d"},"type":"adrStmt","transplantationPoint":{"toString":"final int t = (((org.apache.commons.codec.digest.UnixCrypt.SKB[4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.SKB[5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.SKB[6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.SKB[7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])","position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])"},"status":-1},{"failures":[],"tindex":"30995757-16eb-11e6-b22e-79e3391351d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^rough\", \"rou2f\")","position":"org.apache.commons.codec.language.Caverphone2:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[9,10,11,12,13,14],"tindex":"30997e68-16eb-11e6-b22e-7d75e4f6c571","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('J', 'A')","position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"status":-1},{"failures":[],"tindex":"30997e69-16eb-11e6-b22e-6166a6508030","series":0,"name":"replace","transplant":{"toString":"this.maxPhonemes = maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"org.apache.commons.codec.binary.Base32.BYTES_PER_UNENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"toString":"context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base32.BYTES_PER_UNENCODED_BLOCK)","position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[15,16,17],"tindex":"309a8fda-16eb-11e6-b22e-1d55ee858eeb","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"309ab6eb-16eb-11e6-b22e-bf3a5d6b6edd","series":0,"name":"replace","transplant":{"toString":"code.append('X')","position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\"{line=\").append(myLine)","position":"org.apache.commons.codec.language.bm.Rule:463","type":"CtInvocationImpl","sourcecode":"sb.append(\"{line=\").append(int)"},"status":0},{"failures":[],"tindex":"309ab6ec-16eb-11e6-b22e-3f4cbfaa3e87","series":0,"name":"replace","transplant":{"toString":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"text2"},"type":"adrStmt","transplantationPoint":{"toString":"return colognePhonetic(text1).equals(colognePhonetic(text2))","position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"status":-2},{"failures":[],"tindex":"309addfd-16eb-11e6-b22e-5bdbd341f66e","series":0,"name":"replace","transplant":{"toString":"return decode(((java.lang.String)(value)))","position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"variableMap":{"value":"raw"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(((byte[])(raw)))","position":"org.apache.commons.codec.binary.BinaryCodec:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(((byte[])(raw)))"},"status":-2},{"failures":[],"tindex":"309addfe-16eb-11e6-b22e-a15c10eb11d3","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.net.QCodec.this.charset","position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.BCodec.this.charset","position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"309addff-16eb-11e6-b22e-31ddebb77b76","series":0,"name":"replace","transplant":{"toString":"final byte[] out = new byte[len >> 1]","position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(encodeSize, context)","position":"org.apache.commons.codec.binary.Base64:342","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"309b0510-16eb-11e6-b22e-898d5ec73d9a","series":0,"name":"replace","transplant":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"obj","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"obj","text":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:134","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\");\n} "},"status":-3},{"failures":[],"tindex":"309b0511-16eb-11e6-b22e-a91952551449","series":0,"name":"replace","transplant":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"variableMap":{"index":"blocksize"},"type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[],"tindex":"309b2c22-16eb-11e6-b22e-217005bdc598","series":0,"name":"replace","transplant":{"toString":"return metaphone(str1).equals(metaphone(str2))","position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"variableMap":{"str1":"cs1","str2":"cs2"},"type":"adrStmt","transplantationPoint":{"toString":"return cs1.equals(cs2)","position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return cs1.equals(cs2)"},"status":-2},{"failures":[],"tindex":"309b2c23-16eb-11e6-b22e-8d928b1839ad","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('%')","position":"org.apache.commons.codec.net.QCodec:70","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('%')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('@')","position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"status":0},{"failures":[],"tindex":"309b2c24-16eb-11e6-b22e-87f01fcceb08","series":0,"name":"add","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return buffer.toString()","position":"org.apache.commons.codec.net.RFC1522Codec:81","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-2},{"failures":[],"tindex":"309b2c25-16eb-11e6-b22e-116ab77b8859","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-2},{"failures":[],"tindex":"309b5336-16eb-11e6-b22e-db8046ce6ecc","series":0,"name":"replace","transplant":{"toString":"char lastChar = '-'","position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[],"tindex":"309b5337-16eb-11e6-b22e-51ca8e1d67ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:730","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[53],"tindex":"309b5338-16eb-11e6-b22e-6dd7df7139f2","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")","position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize))","position":"org.apache.commons.codec.binary.Base64:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize))"},"status":-1},{"failures":[],"tindex":"309b5339-16eb-11e6-b22e-b115e4d29bd2","series":0,"name":"add","transplant":{"toString":"throw new java.io.IOException(\"mark/reset not supported\")","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))","position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"309b533a-16eb-11e6-b22e-cd15209fa9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:500","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"309b7a4b-16eb-11e6-b22e-adb06edf07d4","series":0,"name":"replace","transplant":{"toString":"len--","position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"cp"},"type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:341","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":0},{"failures":[9,10],"tindex":"309b7a4c-16eb-11e6-b22e-c3e1e8a32261","series":0,"name":"replace","transplant":{"toString":"result.append('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K', 'J')","position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"status":-1},{"failures":[9,10,54],"tindex":"309b7a4d-16eb-11e6-b22e-b720e763ead5","series":0,"name":"replace","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"element"},"type":"adrStmt","transplantationPoint":{"toString":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} "},"status":-1},{"failures":[55,56,57,58,59,60],"tindex":"309b7a4e-16eb-11e6-b22e-15a47b0bdf46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(input.subSequence(i, ipl).equals(org.apache.commons.codec.language.bm.Rule.this.pattern))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.bm.Rule.this.rContext.isMatch(input.subSequence(ipl, input.length())))) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:713","type":"CtIfImpl","sourcecode":"if (!(input.subSequence(i, ipl).equals(org.apache.commons.codec.language.bm.Rule.this.java.lang.String))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(ipl, input.length())))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"309ba15f-16eb-11e6-b22e-f764a7c14c68","series":0,"name":"replace","transplant":{"toString":"final byte[] b = new byte[9]","position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] bigBytes = bigInt.toByteArray()","position":"org.apache.commons.codec.binary.Base64:752","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = bigInt.toByteArray()"},"status":-2},{"failures":[],"tindex":"309ba160-16eb-11e6-b22e-f3a7d5b8cf04","series":0,"name":"replace","transplant":{"toString":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"source","ascii":"source"},"type":"adrStmt","transplantationPoint":{"toString":"return encode(((java.lang.String)(source)))","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:88","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(source)))"},"status":-3},{"failures":[],"tindex":"309ba161-16eb-11e6-b22e-9b9b354c06f5","series":0,"name":"replace","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if (input == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"309ba162-16eb-11e6-b22e-2f344373f03f","series":0,"name":"add","transplant":{"toString":"final java.lang.String leftCharacter = parts[0]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String rightCharacter = parts[1]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[1]"},"status":-2},{"failures":[],"tindex":"309ba163-16eb-11e6-b22e-e72fd4002195","series":0,"name":"add","transplant":{"toString":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))","position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.UTF_16BE)","position":"org.apache.commons.codec.binary.StringUtils:351","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[61],"tindex":"309bc874-16eb-11e6-b22e-07c702503448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"309bc875-16eb-11e6-b22e-1757e4763774","series":0,"name":"add","transplant":{"toString":"throw new java.lang.NullPointerException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")","position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"status":-2},{"failures":[62,55,63,64,65,66,56,67,68,69,70,71,72,57,58,59,60],"tindex":"309bc876-16eb-11e6-b22e-03e22c5b2d7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.codec.language.bm.RuleType rt : org.apache.commons.codec.language.bm.RuleType.values()) {\n    final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> rs = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n    final org.apache.commons.codec.language.bm.Languages ls = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n    for (final java.lang.String l : ls.getLanguages()) {\n        try {\n            rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n        } catch (final java.lang.IllegalStateException e) {\n            throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n        }\n    }\n    if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.RULES))) {\n        rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n    } \n    rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n}","position":"org.apache.commons.codec.language.bm.Rule:217","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n    final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n    final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n    for (final java.lang.String java.lang.String : ls.getLanguages()) {\n        try {\n            rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n        } catch (final java.lang.IllegalStateException e) {\n            throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n        }\n    }\n    if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n        rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n    } \n    rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n}"},"status":-1},{"failures":[73],"tindex":"309bef87-16eb-11e6-b22e-493d45c023df","series":0,"name":"replace","transplant":{"toString":"final boolean endsWithBox = content.endsWith(\"]\")","position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"variableMap":{"content":"context"},"type":"adrStmt","transplantationPoint":{"toString":"final boolean nextCharIsVowel = nextIndex < (context.length()) ? isVowel(context.charAt(nextIndex)) : false","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:186","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = nextIndex < (context.length()) ? isVowel(context.charAt(nextIndex)) : false"},"status":-1},{"failures":[74],"tindex":"309bef88-16eb-11e6-b22e-317834518eb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"name1 = removeDoubleConsonants(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"status":-1},{"failures":[53,75,76,77],"tindex":"309bef89-16eb-11e6-b22e-1990e7de76a6","series":0,"name":"replace","transplant":{"toString":"return n - todo","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:209","type":"CtReturnImpl","sourcecode":"return n - todo"},"variableMap":{"todo":"len","n":"len"},"type":"adrStmt","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"failures":[],"tindex":"309bef8a-16eb-11e6-b22e-b3dd802ce85c","series":0,"name":"add","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if ((++index) < (branches.length)) {\n    sb.append('|');\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:468","type":"CtIfImpl","sourcecode":"if ((++index) < (branches.int)) {\n    sb.append('|');\n} "},"status":-2},{"failures":[33,34],"tindex":"309bef8b-16eb-11e6-b22e-19572b60c986","series":0,"name":"replace","transplant":{"toString":"d &= 268435455","position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"len"},"type":"adrStmt","transplantationPoint":{"toString":"len--","position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"status":-1},{"failures":[9,10],"tindex":"309c169c-16eb-11e6-b22e-93a82ee550e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"309c169d-16eb-11e6-b22e-871958b19a67","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"b\", \"p\")","position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")","position":"org.apache.commons.codec.language.Caverphone2:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":0},{"failures":[9,10],"tindex":"309c169e-16eb-11e6-b22e-416e016d94b4","series":0,"name":"replace","transplant":{"toString":"result.append('R')","position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[78,79,80,81,82],"tindex":"309c169f-16eb-11e6-b22e-ed302e4f7faa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)"},"status":-1},{"failures":[9,10,13],"tindex":"309c3db0-16eb-11e6-b22e-71b062883e30","series":0,"name":"replace","transplant":{"toString":"result.append('J', 'A')","position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('H')","position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"status":-1},{"failures":[],"tindex":"309c3db1-16eb-11e6-b22e-5375b05d41a8","series":0,"name":"replace","transplant":{"toString":"final java.lang.String pattern = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String pat = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])","position":"org.apache.commons.codec.language.bm.Rule:450","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])"},"status":-2},{"failures":[18,19,83,84,21,85,86,22,23,87,88,89,90,91,92,30,31,32,33,34,35,36,38,39,93,94,95,42,44,46,96,97,50,98,99,51,52],"tindex":"309c3db2-16eb-11e6-b22e-7f3d6ca15d48","series":0,"name":"replace","transplant":{"toString":"final byte[] pBytes = new byte[keyLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"decodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(decodeSize, context)","position":"org.apache.commons.codec.binary.Base64:462","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"309c64c3-16eb-11e6-b22e-c1591aa66146","series":0,"name":"replace","transplant":{"toString":"d = (d >>> 1) | (d << 27)","position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"cp"},"type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:341","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[100,101],"tindex":"309c64c4-16eb-11e6-b22e-25d5e0535e74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int ii = 0, jj = (l_ascii.length) - 1 ; ii < (raw.length) ; ii++ , jj -= 8) {\n    for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.BITS[bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}","position":"org.apache.commons.codec.binary.BinaryCodec:248","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"309c64c5-16eb-11e6-b22e-c1caed67f57c","series":0,"name":"add","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[1], b, 4)","position":"org.apache.commons.codec.digest.UnixCrypt:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[1], b, 4)"},"status":-2},{"failures":[9,10,54],"tindex":"309c64c6-16eb-11e6-b22e-57d5e879dcb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('J', 'K')","position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"status":-1},{"failures":[62,55,63,64,65,102,66,56,67,68,69,70,71,72,57,58,59,60],"tindex":"309c64c7-16eb-11e6-b22e-4362e9a8170d","series":0,"name":"replace","transplant":{"toString":"hard = false","position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"variableMap":{"hard":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"toString":"inExtendedComment = true","position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":-1},{"failures":[],"tindex":"309c8bd8-16eb-11e6-b22e-9d7d8fe25854","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('#')","position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(':')","position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"status":0},{"failures":[],"tindex":"309c8bd9-16eb-11e6-b22e-873be2b3e148","series":0,"name":"replace","transplant":{"toString":"final java.lang.String body = ph.substring(1, ((ph.length()) - 1))","position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1))"},"variableMap":{"ph":"rawLine"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String line = rawLine","position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"status":-2},{"failures":[],"tindex":"309c8bda-16eb-11e6-b22e-fb4ca1f73ccc","series":0,"name":"replace","transplant":{"toString":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"obj","ascii":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-3},{"failures":[103,104,105],"tindex":"309c8bdb-16eb-11e6-b22e-8f399251552d","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)","position":"org.apache.commons.codec.digest.Crypt:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)"},"status":-1},{"failures":[],"tindex":"309cb2ec-16eb-11e6-b22e-c9f52ad906f2","series":0,"name":"replace","transplant":{"toString":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)","position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"lineSeparator","bigBytes":"buffer","len":"pos","startSrc":"pos","startDst":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length)","position":"org.apache.commons.codec.binary.Base32:519","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[106],"tindex":"309cb2ed-16eb-11e6-b22e-0f3c68560ff6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i)","position":"org.apache.commons.codec.net.URLCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[55,64,65,56,57,58,59,60],"tindex":"309cb2ee-16eb-11e6-b22e-7f8dcb57f2a0","series":0,"name":"replace","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"toString":"subBuilder.append(phonemeText.subSequence(i, (i + 1)))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:353","type":"CtInvocationImpl","sourcecode":"subBuilder.append(phonemeText.subSequence(i, (i + 1)))"},"status":-1},{"failures":[],"tindex":"309cb2ef-16eb-11e6-b22e-cf8fde985d85","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE));\n} ","position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-2},{"failures":[],"tindex":"309cb2f0-16eb-11e6-b22e-8df63356626c","series":0,"name":"add","transplant":{"toString":"if (bigInt == null) {\n    throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\");\n} ","position":"org.apache.commons.codec.binary.Base64:735","type":"CtIfImpl","sourcecode":"if (bigInt == null) {\n    throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\");\n} "},"variableMap":{"bigInt":"bigInt"},"type":"adrStmt","transplantationPoint":{"toString":"if (((bigInt.bitLength()) % 8) == 0) {\n    startSrc = 1;\n    len--;\n} ","position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((bigInt.bitLength()) % 8) == 0) {\n    startSrc = 1;\n    len--;\n} "},"status":0},{"failures":[],"tindex":"309cda01-16eb-11e6-b22e-4f2b8d9a9dcd","series":0,"name":"replace","transplant":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))","position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-2},{"failures":[],"tindex":"309cda02-16eb-11e6-b22e-cfdd7c7ff2aa","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Soundex.this.soundexMapping","position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_S"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_S","position":"org.apache.commons.codec.language.Nysiis:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[107,108,109],"tindex":"309cda03-16eb-11e6-b22e-81a647700030","series":0,"name":"replace","transplant":{"toString":"final char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final char next = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.SPACE","position":"org.apache.commons.codec.language.Nysiis:281","type":"CtLocalVariableImpl","sourcecode":"final char char = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char"},"status":-1},{"failures":[],"tindex":"309cda04-16eb-11e6-b22e-8b3dcf365bcf","series":0,"name":"add","transplant":{"toString":"final byte[] key = new byte[8]","position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] pBytes = new byte[keyLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"status":-2},{"failures":[],"tindex":"309d0115-16eb-11e6-b22e-afdb6261763d","series":0,"name":"replace","transplant":{"toString":"name1Char[i] = ' '","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"name2Char","i":"i"},"type":"adrStmt","transplantationPoint":{"toString":"name2Char[i] = ' '","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:321","type":"CtAssignmentImpl","sourcecode":"name2Char[i] = ' '"},"status":-3},{"failures":[],"tindex":"309d0116-16eb-11e6-b22e-5d556655aaa6","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"status":-2},{"failures":[],"tindex":"309d0117-16eb-11e6-b22e-534afac7e70f","series":0,"name":"replace","transplant":{"toString":"char lastChar = '-'","position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2},{"failures":[],"tindex":"309d0118-16eb-11e6-b22e-cbd97e97b100","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:481","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"309d0119-16eb-11e6-b22e-a1a3ca383894","series":0,"name":"replace","transplant":{"toString":"appendPrimary(primary)","position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}"},"status":-2},{"failures":[],"tindex":"309d011a-16eb-11e6-b22e-dde516c891f6","series":0,"name":"replace","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if ((index >= 0) && (((index + (test.length())) - 1) < (string.length()))) {\n    final java.lang.String substring = string.substring(index, (index + (test.length())));\n    matches = substring.equals(test);\n} ","position":"org.apache.commons.codec.language.Metaphone:362","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (((index + (test.length())) - 1) < (string.length()))) {\n    final java.lang.String java.lang.String = string.substring(index, (index + (test.length())));\n    matches = substring.equals(test);\n} "},"status":-2},{"failures":[73,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"309d282b-16eb-11e6-b22e-734fc8b6c811","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"inMultilineComment = true","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[],"tindex":"309d282c-16eb-11e6-b22e-c1ba62dd7329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"context.eof = true","position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"309d282d-16eb-11e6-b22e-2b50f0fbc7f7","series":0,"name":"add","transplant":{"toString":"final java.lang.String pat = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])","position":"org.apache.commons.codec.language.bm.Rule:450","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String rightCharacter = parts[1]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[1]"},"status":-2},{"failures":[],"tindex":"309d282e-16eb-11e6-b22e-af7ed0a7a4c5","series":0,"name":"add","transplant":{"toString":"bitlen = ((bitlen + 7) >> 3) << 3","position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"blocksize"},"type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:341","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[],"tindex":"309d282f-16eb-11e6-b22e-cbc2aa751898","series":0,"name":"add","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.QCodec:266","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[122,123,124,125],"tindex":"309d2830-16eb-11e6-b22e-a5d0e227a1b7","series":0,"name":"replace","transplant":{"toString":"code = '7'","position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"nextChar"},"type":"adrStmt","transplantationPoint":{"toString":"nextChar = input.getNextChar()","position":"org.apache.commons.codec.language.ColognePhonetic:342","type":"CtAssignmentImpl","sourcecode":"nextChar = input.getNextChar()"},"status":-1},{"failures":[],"tindex":"309d4e41-16eb-11e6-b22e-25ee7c28f03a","series":0,"name":"replace","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QCodec:226","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-3},{"failures":[9,10],"tindex":"309d4e42-16eb-11e6-b22e-abdced82859d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:688","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"309d4e43-16eb-11e6-b22e-2f6bb7acfd8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:500","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"309d4e44-16eb-11e6-b22e-afe55852ae5b","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.language.Nysiis:249","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[126,84,21,85,86,22,127,128,129,23,130,131,132,133,134,135,136,137,138,99,51,52],"tindex":"309d4e45-16eb-11e6-b22e-ed52e9d32a76","series":0,"name":"replace","transplant":{"toString":"return -1","position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"failures":[9,10,54],"tindex":"309d4e46-16eb-11e6-b22e-99228f84c5e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:311","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[9,10,54],"tindex":"309d7557-16eb-11e6-b22e-89bed47e3f77","series":0,"name":"replace","transplant":{"toString":"result.appendPrimary('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"N\", \"KN\")","position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"status":-1},{"failures":[],"tindex":"309d7558-16eb-11e6-b22e-0dc4f3ba1b08","series":0,"name":"replace","transplant":{"toString":"name2 = removeDoubleConsonants(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:236","type":"CtAssignmentImpl","sourcecode":"name2 = removeDoubleConsonants(name2)"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"p+\", \"P\")","position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-2},{"failures":[139,140,141,142,103,104,105],"tindex":"309d7559-16eb-11e6-b22e-49c5ac5cd6ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((i % 3) != 0) {\n    ctx1.update(saltBytes);\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:264","type":"CtIfImpl","sourcecode":"if ((i % 3) != 0) {\n    ctx1.update(saltBytes);\n} "},"status":-1},{"failures":[143],"tindex":"309d755a-16eb-11e6-b22e-f7b0b17c2c99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"mac.update(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:743","type":"CtInvocationImpl","sourcecode":"mac.update(valueToDigest)"},"status":-1},{"failures":[],"tindex":"309d755b-16eb-11e6-b22e-a5235cb34342","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('~')","position":"org.apache.commons.codec.net.QCodec:103","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('~')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('&')","position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"status":0},{"failures":[],"tindex":"309d9c6c-16eb-11e6-b22e-2f1cf0b5a219","series":0,"name":"replace","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"source","org.apache.commons.codec.language.Caverphone1.SIX_1":"source"},"type":"adrStmt","transplantationPoint":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"309d9c6d-16eb-11e6-b22e-add0069ae80c","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('!')","position":"org.apache.commons.codec.net.QCodec:66","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('!')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('^')","position":"org.apache.commons.codec.net.QCodec:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('^')"},"status":0},{"failures":[],"tindex":"309d9c6e-16eb-11e6-b22e-43f843f2e12a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.baseNCodec = baseNCodec","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = baseNCodec"},"status":-2},{"failures":[144],"tindex":"309d9c6f-16eb-11e6-b22e-8773653cd667","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (langIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName));\n} ","position":"org.apache.commons.codec.language.bm.Languages:174","type":"CtIfImpl","sourcecode":"if (langIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName));\n} "},"status":-1},{"failures":[],"tindex":"309d9c70-16eb-11e6-b22e-e99b0a950d44","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))","position":"org.apache.commons.codec.digest.DigestUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"source"},"type":"adrStmt","transplantationPoint":{"toString":"return soundex(source, false)[0]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"status":-2},{"failures":[55,64,65,56,57,58,59,60],"tindex":"309d9c71-16eb-11e6-b22e-3591c2911d3d","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.languages.isEmpty()","position":"org.apache.commons.codec.language.bm.Languages:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.isEmpty()"},"status":-1},{"failures":[9,10],"tindex":"309dc382-16eb-11e6-b22e-2f5579b990ae","series":0,"name":"replace","transplant":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[145,146],"tindex":"309dc383-16eb-11e6-b22e-f3063d5bb726","series":0,"name":"replace","transplant":{"toString":"code.append('F')","position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append(symb)","position":"org.apache.commons.codec.language.Metaphone:315","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"309dc384-16eb-11e6-b22e-49969f371eef","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"ctx.reset()","position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"ctx.reset()"},"status":-2},{"failures":[],"tindex":"309dc385-16eb-11e6-b22e-413124d1b7af","series":0,"name":"replace","transplant":{"toString":"char nextChar","position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}