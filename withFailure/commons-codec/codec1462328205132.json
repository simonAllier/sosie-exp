{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"3fa4f906-119e-11e6-8a42-fbfec1b4cd60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> : org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}"},"status":-3},{"failures":[],"tindex":"3fa52017-119e-11e6-8a42-2b40cf0a9506","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-3},{"failures":[],"tindex":"3fa54728-119e-11e6-8a42-df33aab9c882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:230","type":"CtIfImpl","sourcecode":"if (rulesIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)));\n} "},"status":0},{"failures":[],"tindex":"3fa54729-119e-11e6-8a42-d15c161e47d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"3fa5472a-119e-11e6-8a42-21f311015532","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"status":-3},{"failures":[],"tindex":"3fa56e3b-119e-11e6-8a42-375f8c317272","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[saltLen]"},"variableMap":{"saltLen":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:153","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(text.substring(from, to))"},"status":0},{"failures":[],"tindex":"3fa56e3c-119e-11e6-8a42-29a71c7a5e1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:137","type":"CtReturnImpl","sourcecode":"return soundex(((java.lang.String)(obj)))"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:201","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(value)))"},"status":0},{"failures":[],"tindex":"3fa56e3d-119e-11e6-8a42-d955395807fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"upperName = removeAccents(upperName)"},"variableMap":{"upperName":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":0},{"failures":[],"tindex":"3fa56e3e-119e-11e6-8a42-af74a12f30cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":0},{"failures":[],"tindex":"3fa5954f-119e-11e6-8a42-e17cfc0ac14f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:763","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"3fa59550-119e-11e6-8a42-37546f9c1584","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('^')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[],"tindex":"3fa59551-119e-11e6-8a42-351eacdf5de7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:516","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.clear();\n} "},"status":0},{"failures":[],"tindex":"3fa5bc62-119e-11e6-8a42-7391d73ae02d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"variableMap":{"n":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"status":0},{"failures":[],"tindex":"3fa5bc63-119e-11e6-8a42-8bb2f1766293","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd2Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"status":0},{"failures":[],"tindex":"3fa5bc64-119e-11e6-8a42-75bb72d2982c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:386","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"variableMap":{"encodeTable":"singleByte","currentLinePos":"org.apache.commons.codec.binary.BaseNCodec.EOF","ibitWorkArea":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"org.apache.commons.codec.binary.BaseNCodec.EOF","pos":"org.apache.commons.codec.binary.BaseNCodec.EOF","context":"context","length":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.BaseNCodec.EOF","buffer":"singleByte","lineSeparator":"singleByte","lineLength":"org.apache.commons.codec.binary.BaseNCodec.EOF","modulus":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":0},{"failures":[],"tindex":"3fa5e375-119e-11e6-8a42-33dee12894da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"status":0},{"failures":[],"tindex":"3fa5e376-119e-11e6-8a42-d7753e0bf367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:437","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location))"},"status":0},{"failures":[],"tindex":"3fa60a87-119e-11e6-8a42-330eeca6b9a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":0},{"failures":[],"tindex":"3fa60a88-119e-11e6-8a42-83aa89e8302f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":0},{"failures":[],"tindex":"3fa60a89-119e-11e6-8a42-63569347a7c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"variableMap":{"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH":"length","builder":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-3},{"failures":[],"tindex":"3fa60a8a-119e-11e6-8a42-51b4c2acbeb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":0},{"failures":[],"tindex":"3fa6319b-119e-11e6-8a42-47892bda1e49","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":0},{"failures":[],"tindex":"3fa6319c-119e-11e6-8a42-457e7015a432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:88","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (o1.java.lang.StringBuilder.length()) ; i++) {\n    if (i >= (o2.java.lang.StringBuilder.length())) {\n        return +1;\n    } \n    final int int = (o1.java.lang.StringBuilder.charAt(i)) - (o2.java.lang.StringBuilder.charAt(i));\n    if (c != 0) {\n        return c;\n    } \n}"},"status":0},{"failures":[],"tindex":"3fa6319d-119e-11e6-8a42-cd55b1ab6d2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"incl","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"incl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"status":-3},{"failures":[],"tindex":"3fa658ae-119e-11e6-8a42-a9cd3c7e25b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":0},{"failures":[],"tindex":"3fa658af-119e-11e6-8a42-c7a165c069d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"data","l":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":0},{"failures":[],"tindex":"3fa658b0-119e-11e6-8a42-139e53903c6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 1))"},"variableMap":{"str":"input","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:497","type":"CtLocalVariableImpl","sourcecode":"final char char = input.charAt(index)"},"status":0},{"failures":[],"tindex":"3fa658b1-119e-11e6-8a42-f5479c3f5dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"variableMap":{"readLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-3},{"failures":[],"tindex":"3fa67fc2-119e-11e6-8a42-67ea4f3dd77a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:441","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"3fa67fc3-119e-11e6-8a42-2bbadf3af258","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"str","lastThree":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:273","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"status":0},{"failures":[],"tindex":"3fa67fc4-119e-11e6-8a42-350cbe929383","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:162","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[],"tindex":"3fa67fc5-119e-11e6-8a42-61f84b5856c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:182","type":"CtInvocationImpl","sourcecode":"scanner.close()"},"status":0},{"failures":[],"tindex":"3fa6a6d6-119e-11e6-8a42-432130fe91ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"status":0},{"failures":[],"tindex":"3fa6a6d7-119e-11e6-8a42-db147e57fbbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}"},"variableMap":{"blocksize":"blocksize","altResult":"altResult","keyBytes":"pBytes","ctx":"ctx","cnt":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"status":0},{"failures":[],"tindex":"3fa6a6d8-119e-11e6-8a42-99164a44d7d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"pos","pad":"pad","org.apache.commons.codec.binary.Base64.STANDARD_ENCODE_TABLE":"buffer","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"encodeTable","modulus":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:447","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 3))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 2))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 11))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 6))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 1))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 4))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        break;\n    case 3 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 19))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 14))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 9))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 4))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 1))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        break;\n    case 4 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 27))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 22))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 17))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 12))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 7))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 2))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 3))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-3},{"failures":[],"tindex":"3fa6f4f9-119e-11e6-8a42-8be1fc4da198","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":0},{"failures":[],"tindex":"3fa6f4fa-119e-11e6-8a42-2916c316a206","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":37,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}