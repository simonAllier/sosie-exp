{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":5,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":71,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":53,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":22,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":59,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":17,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":4,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":8,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":70,"org.apache.commons.codec.binary.Base64Test.testBase64":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":62,"org.apache.commons.codec.binary.Base64Test.testTriplets":40,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":67,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":11,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testUUID":43,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":76,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":37,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":52,"org.apache.commons.codec.binary.Base64Test.testSingletons":54,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":65,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":68,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":31,"org.apache.commons.codec.binary.Base64Test.testPairs":42,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":72,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN":73,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":51,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":60,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":66,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":46,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":47,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":50,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":32,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":48,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":49,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":3,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":78,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":7,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":75,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":63,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":2,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":6,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":55,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":64,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":79,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":33,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":35,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":41,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":14,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":80,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":18,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":23,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":24,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":61,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":27,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":13,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":81,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":69,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":9,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":45,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":56,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":26,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":19,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":34,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":77,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":74,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":10},"transformations":[{"failures":[],"tindex":"4ed4d165-17b8-11e6-a10d-6161078fbc2c","series":0,"name":"add","transplant":{"toString":"final java.lang.StringBuilder local = new java.lang.StringBuilder(40)","position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder sb = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:258","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[0,1],"tindex":"4ed4f876-17b8-11e6-a10d-01870e427c58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('K', 'J')","position":"org.apache.commons.codec.language.DoubleMetaphone:437","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"status":-1},{"failures":[2,3,4,5,6,7,8,9],"tindex":"4ed4f877-17b8-11e6-a10d-6f6522930d39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH);\n}","position":"org.apache.commons.codec.digest.HmacUtils:769","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int);\n}"},"status":-1},{"failures":[],"tindex":"4ed4f878-17b8-11e6-a10d-61f7b749e188","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))","position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"))","position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"status":-2},{"failures":[],"tindex":"4ed51f89-17b8-11e6-a10d-31cf0c51faad","series":0,"name":"replace","transplant":{"toString":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))","position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"variableMap":{"tempResult":"singleByte","pBytes":"singleByte","keyLen":"r","cp":"r"},"type":"adrStmt","transplantationPoint":{"toString":"while (r == 0) {\n    r = read(singleByte, 0, 1);\n}","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:98","type":"CtWhileImpl","sourcecode":"while (r == 0) {\n    r = read(byte[], 0, 1);\n}"},"status":-2},{"failures":[],"tindex":"4ed51f8a-17b8-11e6-a10d-538dde14d8a3","series":0,"name":"replace","transplant":{"toString":"buffer.append(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX)","position":"org.apache.commons.codec.digest.Sha2Crypt:425","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX":"org.apache.commons.codec.digest.B64.B64T","buffer":"saltString"},"type":"adrStmt","transplantationPoint":{"toString":"saltString.append(org.apache.commons.codec.digest.B64.B64T.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.B64T.length())))","position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"status":-2},{"failures":[10,11],"tindex":"4ed51f8b-17b8-11e6-a10d-11eff3a4844d","series":0,"name":"replace","transplant":{"toString":"left = right","position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"toString":"left = results[1]","position":"org.apache.commons.codec.digest.UnixCrypt:307","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20],"tindex":"4ed51f8c-17b8-11e6-a10d-830f03959de8","series":0,"name":"replace","transplant":{"toString":"rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"variableMap":{"rules":"rules"},"type":"adrStmt","transplantationPoint":{"toString":"ruleMapping.put(patternKey, rules)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:318","type":"CtInvocationImpl","sourcecode":"ruleMapping.put(patternKey, rules)"},"status":-1},{"failures":[],"tindex":"4ed5469d-17b8-11e6-a10d-3dbea5305087","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}","position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}"},"variableMap":{"es1":"input","es2":"input","diff":"maxPhonemes","lengthToMatch":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (input.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication rulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(rules , input , phonemeBuilder , i , maxPhonemes).invoke();\n    i = rulesApplication.getI();\n    phonemeBuilder = rulesApplication.getPhonemeBuilder();\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:469","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (input.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(rules , input , phonemeBuilder , i , int).invoke();\n    i = rulesApplication.getI();\n    phonemeBuilder = rulesApplication.getPhonemeBuilder();\n}"},"status":-2},{"failures":[21,22,23,24,25,26,27,28],"tindex":"4ed5469e-17b8-11e6-a10d-511f8cb299de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx.update(pBytes, 0, keyLen)","position":"org.apache.commons.codec.digest.Sha2Crypt:387","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-1},{"failures":[],"tindex":"4ed5469f-17b8-11e6-a10d-ff5f3032d7bd","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"x\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"toString":"this.name = name","position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[29,30],"tindex":"4ed546a0-17b8-11e6-a10d-61b29264b7c5","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"v\", \"f\")","position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"r\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-1},{"failures":[],"tindex":"4ed56db1-17b8-11e6-a10d-fd5515b492e5","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bigBytes","raw":"bigBytes"},"type":"adrStmt","transplantationPoint":{"toString":"return bigBytes","position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-3},{"failures":[],"tindex":"4ed56db2-17b8-11e6-a10d-bd0527ce5cf9","series":0,"name":"replace","transplant":{"toString":"builder.append('0')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('K')","position":"org.apache.commons.codec.language.Metaphone:197","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-3},{"failures":[],"tindex":"4ed56db3-17b8-11e6-a10d-6df7c932621a","series":0,"name":"add","transplant":{"toString":"buffer.append(\"$\")","position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\", rcon='\").append(rCon).append('\\'')","position":"org.apache.commons.codec.language.bm.Rule:467","type":"CtInvocationImpl","sourcecode":"sb.append(\", rcon='\").append(rCon).append('\\'')"},"status":0},{"failures":[],"tindex":"4ed56db4-17b8-11e6-a10d-fb0457d42a3e","series":0,"name":"replace","transplant":{"toString":"this.lineSeparator = null","position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"finalb"},"type":"adrStmt","transplantationPoint":{"toString":"finalb = ctx.digest()","position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"finalb = ctx.digest()"},"status":-3},{"failures":[31],"tindex":"4ed56db5-17b8-11e6-a10d-3be6dbb69a4a","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang))","position":"org.apache.commons.codec.language.bm.Rule:358","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang))"},"status":-1},{"failures":[],"tindex":"4ed56db6-17b8-11e6-a10d-7b845d626bc6","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"status":-2},{"failures":[],"tindex":"4ed594c7-17b8-11e6-a10d-9d6269cb2dfb","series":0,"name":"add","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())","position":"org.apache.commons.codec.net.QuotedPrintableCodec:430","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())"},"status":-2},{"failures":[],"tindex":"4ed594c8-17b8-11e6-a10d-65f75b2ffdfc","series":0,"name":"replace","transplant":{"toString":"java.lang.String saltString","position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String resName = org.apache.commons.codec.language.bm.Rule.createResourceName(nameType, rt, lang)","position":"org.apache.commons.codec.language.bm.Rule:254","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.createResourceName(nameType, rt, lang)"},"status":-2},{"failures":[],"tindex":"4ed594c9-17b8-11e6-a10d-7fee191ca9e5","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"m+\", \"M\")","position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"b\", \"p\")","position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"status":0},{"failures":[32],"tindex":"4ed594ca-17b8-11e6-a10d-bb14759b1a7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i);\n}","position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"4ed594cb-17b8-11e6-a10d-9971dfa3c3c2","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"toString":"return b64.encode(binaryData)","position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-1},{"failures":[0,1,64],"tindex":"4ed5bbdc-17b8-11e6-a10d-dd868ed137bf","series":0,"name":"add","transplant":{"toString":"result.append(\"N\", \"KN\")","position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X', 'K')","position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"result.append('X', 'K')"},"status":-1},{"failures":[],"tindex":"4ed5bbdd-17b8-11e6-a10d-89d38138d2e1","series":0,"name":"add","transplant":{"toString":"appendAlternate(alternate)","position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if ((charAt(value, (index + 2))) == 'I') {\n    result.append('J');\n} else {\n    result.append('K');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'I') {\n    result.append('J');\n} else {\n    result.append('K');\n}"},"status":-2},{"failures":[65,66,67,68,69,33,34,35],"tindex":"4ed5bbde-17b8-11e6-a10d-e18e8f5eee34","series":0,"name":"replace","transplant":{"toString":"return result.substring(1)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return result.substring(1)"},"variableMap":{"result":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"return buffer.toString()","position":"org.apache.commons.codec.net.RFC1522Codec:81","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[],"tindex":"4ed5bbdf-17b8-11e6-a10d-5d894dc2aa83","series":0,"name":"replace","transplant":{"toString":"final int cLine = currentLine","position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"variableMap":{"currentLine":"length"},"type":"adrStmt","transplantationPoint":{"toString":"final int saltLen = saltBytes.length","position":"org.apache.commons.codec.digest.Sha2Crypt:156","type":"CtLocalVariableImpl","sourcecode":"final int int = saltBytes.int"},"status":-2},{"failures":[70],"tindex":"4ed5bbe0-17b8-11e6-a10d-81085c2a1ecf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.language.Metaphone:177","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"4ed5bbe1-17b8-11e6-a10d-df1d6570cdec","series":0,"name":"replace","transplant":{"toString":"if ((key.length()) > 1) {\n    char lastChar = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char last2Char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} ","position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"sBuf"},"type":"adrStmt","transplantationPoint":{"toString":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"status":-2},{"failures":[],"tindex":"4ed5bbe2-17b8-11e6-a10d-9b04ab1c0cb5","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")","position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + (org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE)))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:231","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)))"},"status":-2},{"failures":[0,64,71],"tindex":"4ed5e2f3-17b8-11e6-a10d-b30a9d5000b5","series":0,"name":"replace","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"addChars"},"type":"adrStmt","transplantationPoint":{"toString":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.primary.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.primary.append(value.substring(0, addChars));\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:980","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"status":-1},{"failures":[72],"tindex":"4ed5e2f4-17b8-11e6-a10d-1b96c36b8806","series":0,"name":"replace","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))","position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-1},{"failures":[],"tindex":"4ed5e2f5-17b8-11e6-a10d-51ff875a2061","series":0,"name":"replace","transplant":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"phonemeText"},"type":"adrStmt","transplantationPoint":{"toString":"if (!found) {\n    subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:351","type":"CtIfImpl","sourcecode":"if (!found) {\n    subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n} "},"status":-2},{"failures":[10,11],"tindex":"4ed5e2f6-17b8-11e6-a10d-9b3db2538e9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"status":-1},{"failures":[73,74],"tindex":"4ed5e2f7-17b8-11e6-a10d-83f88cb55bcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[],"tindex":"4ed5e2f8-17b8-11e6-a10d-6562721463ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"continue","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:381","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[],"tindex":"4ed5e2f9-17b8-11e6-a10d-db80282f6fe5","series":0,"name":"replace","transplant":{"toString":"return encodeText(str, charset)","position":"org.apache.commons.codec.net.QCodec:230","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"variableMap":{"str":"name","charset":"name"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"status":-2},{"failures":[75,76,77,78,79,80,81],"tindex":"4ed60a0a-17b8-11e6-a10d-1bcea8d879d8","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"variableMap":{"finalb":"finalb","passwd":"passwd"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":-1},{"failures":[4],"tindex":"4ed60a0b-17b8-11e6-a10d-9f23dca96038","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key), valueToDigest).doFinal()","position":"org.apache.commons.codec.digest.HmacUtils:445","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key), valueToDigest).doFinal()"},"status":-1},{"failures":[4],"tindex":"4ed60a0c-17b8-11e6-a10d-036444ab1076","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)","position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"variableMap":{"binaryData":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key), valueToDigest).doFinal()","position":"org.apache.commons.codec.digest.HmacUtils:445","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key), valueToDigest).doFinal()"},"status":-1},{"failures":[],"tindex":"4ed60a0d-17b8-11e6-a10d-79e8d0c17378","series":0,"name":"add","transplant":{"toString":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))","position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"variableMap":{"tempResult":"data","pBytes":"data","keyLen":"i","cp":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.BLANK)) {\n    data[i] = org.apache.commons.codec.net.QCodec.UNDERSCORE;\n} ","position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n} "},"status":-2},{"failures":[],"tindex":"4ed60a0e-17b8-11e6-a10d-b3b940710de5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.pattern = pattern","position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":42,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}