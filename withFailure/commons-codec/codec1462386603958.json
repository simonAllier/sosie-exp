{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":77,"org.apache.commons.codec.binary.HexTest.testCustomCharset":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":75,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":50,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":14,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":37,"org.apache.commons.codec.binary.HexTest.testDencodeEmpty":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch":88,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":83,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":91,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":45,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":34,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":16,"org.apache.commons.codec.binary.Base64Test.testBase64":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":48,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":20,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":68,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":82,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":8,"org.apache.commons.codec.binary.Base64Test.testUUID":28,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":22,"org.apache.commons.codec.binary.Base64Test.testSingletons":39,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":18,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":86,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":13,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":42,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":57,"org.apache.commons.codec.binary.Base64Test.testPairs":27,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":66,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":36,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":12,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":44,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":46,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":17,"org.apache.commons.codec.binary.Base64Test.testCodec112":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":30,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":70,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse":89,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":52,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":71,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":32,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":33,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":51,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":4,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":90,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":49,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":64,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":3,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":9,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":60,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":5,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":69,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":54,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":10,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":56,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":26,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":72,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse":87,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":11,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":73,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":81,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":59,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":85,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":47,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":74,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":80,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":58,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":2,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":25,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":65,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":41,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":23,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":79,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":53,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":76,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":67,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":55,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":7,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":92,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":24,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":29,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":78,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"380ea638-1226-11e6-9a01-f7dfba2b3a14","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1).equals(org.apache.commons.codec.language.AbstractCaverphone.this.encode(str2))","position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1).equals(org.apache.commons.codec.language.AbstractCaverphone.this.encode(str2))"},"variableMap":{"str1":"value2","str2":"value2"},"type":"adrStmt","transplantationPoint":{"toString":"return isDoubleMetaphoneEqual(value1, value2, false)","position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":-2},{"failures":[0,1],"tindex":"380ecd49-1226-11e6-9a01-61eb485f7e05","series":0,"name":"replace","transplant":{"toString":"pos = 1","position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"right"},"type":"adrStmt","transplantationPoint":{"toString":"right = (left >>> 1) | (left << 31)","position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"status":-1},{"failures":[],"tindex":"380ef45a-1226-11e6-9a01-55e3c2d79649","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.charset = charset","position":"org.apache.commons.codec.net.BCodec:69","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = charset"},"status":-2},{"failures":[],"tindex":"380ef45b-1226-11e6-9a01-5d62d008fa1f","series":0,"name":"replace","transplant":{"toString":"final java.lang.String[] branches = soundex(source, true)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:463","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = soundex(source, true)"},"variableMap":{"source":"aWord"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] parts = aWord.split(\"'\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:433","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = aWord.split(\"'\")"},"status":-2},{"failures":[],"tindex":"380ef45c-1226-11e6-9a01-03c5f6c4a55e","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme ph : org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.phonemes) {\n    if ((sb.length()) > 0) {\n        sb.append(\"|\");\n    } \n    sb.append(ph.getPhonemeText());\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:147","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>) {\n    if ((sb.length()) > 0) {\n        sb.append(\"|\");\n    } \n    sb.append(ph.getPhonemeText());\n}"},"status":-2},{"failures":[2,3,4,5,6],"tindex":"380f1b6d-1226-11e6-9a01-bd63a0f13606","series":0,"name":"replace","transplant":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"variableMap":{"mappedChar":"c"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.RefinedSoundex.this.soundexMapping[((java.lang.Character.toUpperCase(c)) - 'A')]","position":"org.apache.commons.codec.language.RefinedSoundex:165","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.RefinedSoundex.this.char[][((java.lang.Character.toUpperCase(c)) - 'A')]"},"status":-1},{"failures":[],"tindex":"380f1b6e-1226-11e6-9a01-6156b7a880f6","series":0,"name":"replace","transplant":{"toString":"(length)++","position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-3},{"failures":[0,1],"tindex":"380f427f-1226-11e6-9a01-07fd8f8207eb","series":0,"name":"add","transplant":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b ^= t","position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-1},{"failures":[7,8,9],"tindex":"380f4280-1226-11e6-9a01-c10856d5590e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[10],"tindex":"380f4281-1226-11e6-9a01-31112b0e067f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code.append('H')","position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"380f6992-1226-11e6-9a01-1b2b7b8331c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"encode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.EOF, context)","position":"org.apache.commons.codec.binary.BaseNCodec:431","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"status":-1},{"failures":[57,58],"tindex":"380f6993-1226-11e6-9a01-a9246d1877b9","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"n+\", \"N\")","position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ci\", \"si\")","position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[59,60],"tindex":"380f6994-1226-11e6-9a01-1563243f2336","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[61,62,63,64,65],"tindex":"380f90a5-1226-11e6-9a01-27015a0cc2d7","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"array","key":"array"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())","position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())"},"status":-1},{"failures":[66],"tindex":"380f90a6-1226-11e6-9a01-87240b77fe73","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))","position":"org.apache.commons.codec.digest.DigestUtils:705","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))","position":"org.apache.commons.codec.digest.DigestUtils:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-1},{"failures":[8],"tindex":"380f90a7-1226-11e6-9a01-31920074b595","series":0,"name":"replace","transplant":{"toString":"result.append('X', 'K')","position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"result.append('X', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X', 'S')","position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[],"tindex":"380fb7b8-1226-11e6-9a01-6537c0efb866","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String l : ls.getLanguages()) {\n    try {\n        rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n    } catch (final java.lang.IllegalStateException e) {\n        throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:221","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : ls.getLanguages()) {\n    try {\n        rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n    } catch (final java.lang.IllegalStateException e) {\n        throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n    }\n}"},"status":-2},{"failures":[],"tindex":"380fb7b9-1226-11e6-9a01-f39c678d932c","series":0,"name":"replace","transplant":{"toString":"lastChar = chr","position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"variableMap":{"lastChar":"last","chr":"last"},"type":"adrStmt","transplantationPoint":{"toString":"last = '*'","position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"status":-2},{"failures":[],"tindex":"380fdeca-1226-11e6-9a01-7310c130435c","series":0,"name":"replace","transplant":{"toString":"messageDigest.update(valueToDigest)","position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"variableMap":{"messageDigest":"ctx1","valueToDigest":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:275","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-3},{"failures":[67,68,69,70,71,72,73],"tindex":"380fdecb-1226-11e6-9a01-9b6a8ef8edc4","series":0,"name":"replace","transplant":{"toString":"final java.lang.String resName = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)","position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String strB = new java.lang.String(name2Char).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:333","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(name2Char).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[7,8],"tindex":"380fdecc-1226-11e6-9a01-13f6910f8be7","series":0,"name":"replace","transplant":{"toString":"result.append(\"KL\", \"L\")","position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('J')","position":"org.apache.commons.codec.language.DoubleMetaphone:535","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[74],"tindex":"381005dd-1226-11e6-9a01-41ae2474cd13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"y\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-1},{"failures":[7,8,75],"tindex":"381005de-1226-11e6-9a01-5bb2d65507f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('S', 'X')","position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[0,1],"tindex":"381005df-1226-11e6-9a01-0d2193def4fd","series":0,"name":"replace","transplant":{"toString":"j++","position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"right"},"type":"adrStmt","transplantationPoint":{"toString":"right = results[0]","position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[76],"tindex":"381005e0-1226-11e6-9a01-09fb35eccc3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"status":-1},{"failures":[],"tindex":"38102cf1-1226-11e6-9a01-0138a9edca23","series":0,"name":"add","transplant":{"toString":"name1 = cleanName(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")","position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":-2},{"failures":[],"tindex":"38102cf2-1226-11e6-9a01-4b341b70d4e5","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.primary.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.maxLength)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.primary.append(value);\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:957","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} "},"status":-2},{"failures":[],"tindex":"38105403-1226-11e6-9a01-7ddfe036e00e","series":0,"name":"replace","transplant":{"toString":"appendPrimary(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:947","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"lastCode"},"type":"adrStmt","transplantationPoint":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"status":-2},{"failures":[77],"tindex":"38105404-1226-11e6-9a01-6b93a72518ac","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"mb$\", \"m2\")","position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^h\", \"A\")","position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[78,79,80,81,82,83,84,85],"tindex":"38105405-1226-11e6-9a01-93799660a8da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))","position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"status":-1},{"failures":[],"tindex":"38107b16-1226-11e6-9a01-07ce468ff715","series":0,"name":"add","transplant":{"toString":"return soundex(str)","position":"org.apache.commons.codec.language.RefinedSoundex:149","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"variableMap":{"str":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)","position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-2},{"failures":[9],"tindex":"38107b17-1226-11e6-9a01-4757c4e4a9e1","series":0,"name":"replace","transplant":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[7,8,9,75],"tindex":"38107b18-1226-11e6-9a01-8bf590477859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-1},{"failures":[],"tindex":"38107b19-1226-11e6-9a01-97ba1d52cb24","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), data)","position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)","position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"status":0},{"failures":[],"tindex":"38107b1a-1226-11e6-9a01-49058b8f45f3","series":0,"name":"replace","transplant":{"toString":"java.lang.String boxContent = content.substring(1, ((content.length()) - 1))","position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"variableMap":{"content":"name"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String lastThree = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE)), nameLength)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength)"},"status":-2},{"failures":[],"tindex":"3810a22b-1226-11e6-9a01-af9ee053533e","series":0,"name":"add","transplant":{"toString":"data = doDecoding(data)","position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"variableMap":{"data":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = null","position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"3810a22c-1226-11e6-9a01-5facf00c94b8","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()","position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_512)","position":"org.apache.commons.codec.digest.DigestUtils:160","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"3810a22d-1226-11e6-9a01-6d05d1a0f95f","series":0,"name":"add","transplant":{"toString":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}","position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"ascii"},"type":"adrStmt","transplantationPoint":{"toString":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-2},{"failures":[86],"tindex":"3810c93e-1226-11e6-9a01-5b561dedf957","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)","position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"variableMap":{"byteArray":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[],"tindex":"3810c93f-1226-11e6-9a01-f1c0518de14f","series":0,"name":"add","transplant":{"toString":"c = (c >>> 2) | (c << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:438","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"3810c940-1226-11e6-9a01-2195f90e49f9","series":0,"name":"replace","transplant":{"toString":"final java.lang.String incl = line.substring(org.apache.commons.codec.language.bm.Rule.HASH_INCLUDE.length()).trim()","position":"org.apache.commons.codec.language.bm.Rule:435","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim()"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.HASH_INCLUDE":"lang","line":"lang"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String resName = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)","position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-3},{"failures":[],"tindex":"3810c941-1226-11e6-9a01-7321e25cf939","series":0,"name":"replace","transplant":{"toString":"name1 = removeVowels(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")","position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":-2},{"failures":[7,8,9,75],"tindex":"3810c942-1226-11e6-9a01-4f30ea2e9c0b","series":0,"name":"replace","transplant":{"toString":"left = right","position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:400","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[87,88,89],"tindex":"3810f053-1226-11e6-9a01-1fd773d407bc","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:219","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3810f054-1226-11e6-9a01-e9a7ad6ea92e","series":0,"name":"replace","transplant":{"toString":"this.decodeSize = (org.apache.commons.codec.binary.Base32.this.encodeSize) - 1","position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"cnt","decodeSize":"length"},"type":"adrStmt","transplantationPoint":{"toString":"cnt = keyBytes.length","position":"org.apache.commons.codec.digest.Sha2Crypt:246","type":"CtAssignmentImpl","sourcecode":"cnt = keyBytes.int"},"status":-3},{"failures":[],"tindex":"3810f055-1226-11e6-9a01-e157b1a671be","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (c1 == c2) {\n    continue;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"3810f056-1226-11e6-9a01-7b99bfb6a7bf","series":0,"name":"replace","transplant":{"toString":"return java.security.MessageDigest.getInstance(algorithm)","position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_1"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_1)","position":"org.apache.commons.codec.digest.DigestUtils:112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"38111767-1226-11e6-9a01-270f9e911453","series":0,"name":"add","transplant":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"failures":[],"tindex":"38111768-1226-11e6-9a01-b9029815d588","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"cq\", \"2q\")","position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"status":0},{"failures":[],"tindex":"38111769-1226-11e6-9a01-c59c80c963ab","series":0,"name":"replace","transplant":{"toString":"j++","position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:400","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-3},{"failures":[],"tindex":"3811176a-1226-11e6-9a01-6721c9b038fe","series":0,"name":"replace","transplant":{"toString":"final java.lang.String singleLetter = dc.substring(0, 1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"rawLine"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String line = rawLine","position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"status":-2},{"failures":[],"tindex":"3811176b-1226-11e6-9a01-2f2d090810d1","series":0,"name":"replace","transplant":{"toString":"l_ascii[(jj - bits)] = '0'","position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"ibitWorkArea","l_ascii":"buffer","bits":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)))","position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"3811176c-1226-11e6-9a01-f1189d757ced","series":0,"name":"add","transplant":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if ((str.length()) == 0) {\n    return str;\n} ","position":"org.apache.commons.codec.language.Soundex:263","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":0},{"failures":[0,90,1],"tindex":"38113e7d-1226-11e6-9a01-7dc0bd2dd7f6","series":0,"name":"replace","transplant":{"toString":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)","position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"u"},"type":"adrStmt","transplantationPoint":{"toString":"u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"status":-1},{"failures":[83,84,85],"tindex":"38113e7e-1226-11e6-9a01-49ea38e293dc","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(pBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"status":-1},{"failures":[],"tindex":"38113e7f-1226-11e6-9a01-95a8c720bab3","series":0,"name":"replace","transplant":{"toString":"boolean roundsCustom = false","position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final boolean branchingRequired = ((replacements.length) > 1) && branching","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:520","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((replacements.int) > 1) && branching"},"status":-2},{"failures":[],"tindex":"38113e80-1226-11e6-9a01-edad8a2098fa","series":0,"name":"add","transplant":{"toString":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")","position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")","position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-2},{"failures":[],"tindex":"38116591-1226-11e6-9a01-476d852f0b58","series":0,"name":"replace","transplant":{"toString":"builder.append('0')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('H')","position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"status":-3},{"failures":[],"tindex":"38116592-1226-11e6-9a01-f9db480cc266","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"name2RtLStart","salt":"name2RtLStart","prefix":"name2RtLStart"},"type":"adrStmt","transplantationPoint":{"toString":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:319","type":"CtIfImpl","sourcecode":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} "},"status":-2},{"failures":[],"tindex":"38116593-1226-11e6-9a01-f9d2f297b020","series":0,"name":"replace","transplant":{"toString":"return java.security.MessageDigest.getInstance(algorithm)","position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_384"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_384)","position":"org.apache.commons.codec.digest.DigestUtils:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[91],"tindex":"38116594-1226-11e6-9a01-c3179a3eb643","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"status":-1},{"failures":[],"tindex":"38116595-1226-11e6-9a01-bf496b35b447","series":0,"name":"replace","transplant":{"toString":"java.lang.System.arraycopy(data, (((data.length) - (org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.this.length)) + start), newData, 0, length)","position":"org.apache.commons.codec.language.ColognePhonetic:261","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], (((char[].int) - (org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.this.int)) + start), newData, 0, length)"},"variableMap":{"data":"chars","length":"length","start":"len","newData":"chars"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 1 ; i < len ; i++) {\n    final char next = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.SPACE;\n    final char aNext = i < (len - 2) ? chars[(i + 2)] : org.apache.commons.codec.language.Nysiis.SPACE;\n    final char[] transcoded = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext);\n    java.lang.System.arraycopy(transcoded, 0, chars, i, transcoded.length);\n    if ((chars[i]) != (chars[(i - 1)])) {\n        key.append(chars[i]);\n    } \n}","position":"org.apache.commons.codec.language.Nysiis:280","type":"CtForImpl","sourcecode":"for (int int = 1 ; i < len ; i++) {\n    final char char = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char;\n    final char char = i < (len - 2) ? chars[(i + 2)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char;\n    final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext);\n    java.lang.System.arraycopy(transcoded, 0, chars, i, transcoded.int);\n    if ((chars[i]) != (chars[(i - 1)])) {\n        key.append(chars[i]);\n    } \n}"},"status":-3},{"failures":[74,92,77],"tindex":"38118ca6-1226-11e6-9a01-3fc3d44eed07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"d\", \"t\")","position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[],"tindex":"38118ca7-1226-11e6-9a01-c1a45d2d2d47","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}"},"status":-2},{"failures":[],"tindex":"38118ca8-1226-11e6-9a01-577ac7ab4d74","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"switch (org.apache.commons.codec.language.bm.PhoneticEngine.this.nameType) {\n    case SEPHARDIC :\n        for (final java.lang.String aWord : words) {\n            final java.lang.String[] parts = aWord.split(\"'\");\n            final java.lang.String lastPart = parts[((parts.length) - 1)];\n            words2.add(lastPart);\n        }\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.nameType));\n        break;\n    case ASHKENAZI :\n        words2.addAll(words);\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.nameType));\n        break;\n    case GENERIC :\n        words2.addAll(words);\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Unreachable case: \" + (org.apache.commons.codec.language.bm.PhoneticEngine.this.nameType)));\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:430","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType) {\n    case SEPHARDIC :\n        for (final java.lang.String java.lang.String : words) {\n            final java.lang.String[] java.lang.String[] = aWord.split(\"'\");\n            final java.lang.String java.lang.String = parts[((parts.int) - 1)];\n            words2.add(lastPart);\n        }\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case ASHKENAZI :\n        words2.addAll(words);\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case GENERIC :\n        words2.addAll(words);\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Unreachable case: \" + (org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType)));\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":65,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}