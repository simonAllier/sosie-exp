{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":0,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":14,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":17,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":22,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":23,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":26,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":25,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":27,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":13,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":19,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":3,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":6,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":10,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":21,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":20,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":9,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":16,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":4,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":7,"org.apache.commons.codec.net.RFC1522CodecTest.testNullInput":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":11,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":5},"transformations":[{"failures":[0,1,2],"tindex":"17340545-121f-11e6-8af0-d78d7c5bf264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index += 3","position":"org.apache.commons.codec.language.DoubleMetaphone:682","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"17340546-121f-11e6-8af0-411d60aff634","series":0,"name":"replace","transplant":{"toString":"cp = 0","position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = handleGH(value, result, index)","position":"org.apache.commons.codec.language.DoubleMetaphone:411","type":"CtAssignmentImpl","sourcecode":"index = handleGH(value, result, index)"},"status":-2},{"failures":[3],"tindex":"17342c57-121f-11e6-8af0-13c54865aaf2","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^gn\", \"2n\")","position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"mb$\", \"m2\")","position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[],"tindex":"17342c58-121f-11e6-8af0-19bf0b4957d7","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"cy\", \"sy\")","position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"[^a-z]\", \"\")","position":"org.apache.commons.codec.language.Caverphone2:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"status":0},{"failures":[],"tindex":"17342c59-121f-11e6-8af0-e74b534b22e1","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"wh3\", \"Wh3\")","position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = str.substring(0, ((str.length()) - 1))","position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[],"tindex":"17342c5a-121f-11e6-8af0-a39a422b7af4","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)","position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384, key)","position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"1734536b-121f-11e6-8af0-4b978302b300","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)"},"variableMap":{"altResult":"source","buffer":"source"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(source instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.AbstractCaverphone:57","type":"CtIfImpl","sourcecode":"if (!(source instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[4,5],"tindex":"1734536c-121f-11e6-8af0-e9ce0a674929","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"input.addLeft('S')","position":"org.apache.commons.codec.language.ColognePhonetic:364","type":"CtInvocationImpl","sourcecode":"input.addLeft('S')"},"status":-1},{"failures":[],"tindex":"1734536d-121f-11e6-8af0-e3487818235e","series":0,"name":"add","transplant":{"toString":"java.lang.String saltString","position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String string = key.toString()","position":"org.apache.commons.codec.language.Nysiis:315","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = key.toString()"},"status":-2},{"failures":[6,7],"tindex":"1734536e-121f-11e6-8af0-1d8d529d0a32","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^h\", \"A\")","position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.toLowerCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.Caverphone1:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"17347a7f-121f-11e6-8af0-87755f80bae7","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"y3\", \"Y3\")","position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"toString":"lastReplacement = replacement","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"status":-2},{"failures":[],"tindex":"17347a80-121f-11e6-8af0-e394d0789c72","series":0,"name":"replace","transplant":{"toString":"this.soundexMapping = org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING","position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"data","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"data"},"type":"adrStmt","transplantationPoint":{"toString":"this.data = new char[buffSize]","position":"org.apache.commons.codec.language.ColognePhonetic:212","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[buffSize]"},"status":-2},{"failures":[8],"tindex":"17353dd1-121f-11e6-8af0-8f5e321f9617","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:126","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-1},{"failures":[9],"tindex":"17353dd2-121f-11e6-8af0-adc9c30163a2","series":0,"name":"replace","transplant":{"toString":"t = right","position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"variableMap":{"t":"n","right":"n"},"type":"adrStmt","transplantationPoint":{"toString":"n += 2","position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"status":-1},{"failures":[],"tindex":"17353dd3-121f-11e6-8af0-959d61d6c70e","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"j\", \"y\")","position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"variableMap":{"txt":"pattern"},"type":"adrStmt","transplantationPoint":{"toString":"this.pattern = pattern","position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"status":-2},{"failures":[10,11,12,13],"tindex":"17353dd4-121f-11e6-8af0-b19b7a41ed67","series":0,"name":"add","transplant":{"toString":"cnt >>= 1","position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b += 256","position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":-1},{"failures":[],"tindex":"173564e5-121f-11e6-8af0-3f10a3b6e780","series":0,"name":"replace","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"l","y":"u"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.write(((char)((u << 4) + l)))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-2},{"failures":[],"tindex":"173564e6-121f-11e6-8af0-0114b7e220d7","series":0,"name":"replace","transplant":{"toString":"return new char[]{ curr }","position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"variableMap":{"curr":"prev"},"type":"adrStmt","transplantationPoint":{"toString":"return new char[]{ prev }","position":"org.apache.commons.codec.language.Nysiis:159","type":"CtReturnImpl","sourcecode":"return new char[]{ prev }"},"status":-3},{"failures":[],"tindex":"173564e7-121f-11e6-8af0-532fe845422c","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))) {\n    throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\");\n} ","position":"org.apache.commons.codec.binary.Base32:308","type":"CtIfImpl","sourcecode":"if ((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))) {\n    throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\");\n} "},"status":-2},{"failures":[],"tindex":"173564e8-121f-11e6-8af0-2f48e3094ecf","series":0,"name":"replace","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"rawLine","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"rawLine"},"type":"adrStmt","transplantationPoint":{"toString":"if ((parts.length) != 3) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n} ","position":"org.apache.commons.codec.language.bm.Lang:168","type":"CtIfImpl","sourcecode":"if ((parts.int) != 3) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n} "},"status":-3},{"failures":[],"tindex":"173564e9-121f-11e6-8af0-97664330250a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.URLCodec:289","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"173564ea-121f-11e6-8af0-0b45dc746287","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")","position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:294","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))"},"status":-2},{"failures":[14],"tindex":"17358bfb-121f-11e6-8af0-3573ab74bb8d","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[],"tindex":"17358bfc-121f-11e6-8af0-a50cc414bd12","series":0,"name":"add","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"singleByte"},"type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.encode(singleByte, 0, org.apache.commons.codec.binary.BaseNCodec.EOF, context)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"17358bfd-121f-11e6-8af0-2937f883f17a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:500","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"17358bfe-121f-11e6-8af0-7fa946f01809","series":0,"name":"replace","transplant":{"toString":"return encodeText(str, charset)","position":"org.apache.commons.codec.net.QCodec:230","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"variableMap":{"str":"str","charset":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str)","position":"org.apache.commons.codec.language.Caverphone:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str)"},"status":-2},{"failures":[],"tindex":"17358bff-121f-11e6-8af0-cb6bce081806","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")","position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")"},"status":0},{"failures":[15,16],"tindex":"17358c00-121f-11e6-8af0-fb509ab413cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index))","position":"org.apache.commons.codec.binary.Hex:178","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index))"},"status":-1},{"failures":[17,18,19],"tindex":"1735b311-121f-11e6-8af0-f79428b648fc","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-1},{"failures":[4,20,21,22,5,23,24,25],"tindex":"1735b312-121f-11e6-8af0-3d2d7a728128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.length = data.length","position":"org.apache.commons.codec.language.ColognePhonetic:208","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = data.int"},"status":-1},{"failures":[26,27],"tindex":"17364f53-121f-11e6-8af0-9f96d4a463bb","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"status":-1},{"failures":[],"tindex":"17367664-121f-11e6-8af0-a3806c7a0b32","series":0,"name":"add","transplant":{"toString":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))","position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"variableMap":{"b":"b","offset":"iValue","iValue":"offset"},"type":"adrStmt","transplantationPoint":{"toString":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))","position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":32,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}