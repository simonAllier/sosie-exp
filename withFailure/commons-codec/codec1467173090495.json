{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter":95,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":118,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":37,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":15,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":222,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":220,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":221,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":197,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":223,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":132,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":166,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":42,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":177,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":100,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":122,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":176,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":233,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":235,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":234,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":74,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":75,"org.apache.commons.codec.language.NysiisTest.testCap":198,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":79,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":76,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":77,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":40,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":170,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":58,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":92,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":195,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":196,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":144,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":67,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":115,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":90,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":165,"org.apache.commons.codec.language.SoundexTest.testB650":219,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":110,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":16,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":66,"org.apache.commons.codec.language.SoundexTest.testNewInstance":227,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":107,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":61,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":119,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":38,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":102,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":39,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":36,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":84,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":23,"org.apache.commons.codec.language.NysiisTest.testDropBy":1,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":149,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":114,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":14,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":19,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":187,"org.apache.commons.codec.binary.Base64Test.testUUID":70,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":154,"org.apache.commons.codec.binary.Base64Test.testSingletons":91,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":12,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":44,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":97,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":59,"org.apache.commons.codec.binary.Base64Test.testPairs":69,"org.apache.commons.codec.binary.Base64Test.testConstructors":72,"org.apache.commons.codec.language.NysiisTest.testRule2":203,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":43,"org.apache.commons.codec.language.NysiisTest.testRule1":202,"org.apache.commons.codec.language.NysiisTest.testRule7":206,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":124,"org.apache.commons.codec.language.NysiisTest.testRule6":205,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":13,"org.apache.commons.codec.language.NysiisTest.testRule5":204,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":188,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":52,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":172,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":228,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":153,"org.apache.commons.codec.language.NysiisTest.testBran":207,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":213,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":139,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":63,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":18,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":87,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":184,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":32,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":88,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":108,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":191,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":180,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":24,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":229,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":215,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":55,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":33,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":133,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":164,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":80,"org.apache.commons.codec.language.NysiisTest.testDad":199,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":49,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":73,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":35,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":163,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":0,"org.apache.commons.codec.language.NysiisTest.testDan":200,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":56,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":146,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":5,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":178,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":28,"org.apache.commons.codec.language.NysiisTest.testSnat":209,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":113,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":120,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":112,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":167,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":136,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":190,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":135,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":21,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":51,"org.apache.commons.codec.binary.Base64Test.testTriplets":64,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":20,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":142,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":140,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":143,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":4,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":89,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":47,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":147,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":81,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":50,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":105,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":137,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":128,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":232,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":230,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":231,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":155,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":181,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":189,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":121,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":171,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":85,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":53,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":127,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":99,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":141,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":224,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":111,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":152,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":185,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":168,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":26,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":214,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":106,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":34,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":186,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":192,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":160,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":161,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":31,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":46,"org.apache.commons.codec.language.NysiisTest.testTranan":212,"org.apache.commons.codec.language.NysiisTest.testFal":201,"org.apache.commons.codec.language.NysiisTest.testSnad":208,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":182,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":150,"org.apache.commons.codec.language.MetaphoneTest.testTCH":2,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":162,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":96,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":151,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":216,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":217,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":218,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":60,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":101,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":131,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":78,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":117,"org.apache.commons.codec.binary.Base64Test.testBase64":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":134,"org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters":159,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":8,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":30,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":82,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":22,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":173,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":123,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":103,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":179,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":54,"org.apache.commons.codec.binary.Base64Test.testCodec112":86,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":129,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":11,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":65,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":210,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1":156,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":41,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3":157,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":62,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5":158,"org.apache.commons.codec.binary.Base64Test.testCodec68":93,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":194,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":183,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":225,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":48,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":193,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":104,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":148,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":9,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":109,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":175,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":138,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":169,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":45,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":174,"org.apache.commons.codec.language.NysiisTest.testOthers":211,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":94,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":116,"org.apache.commons.codec.language.SoundexTest.testDifference":226,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":17,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":125,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":130,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":7,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":83,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":71},"transformations":[{"failures":[],"tindex":"a059c466-3dae-11e6-a0b1-3f6fbce6e9bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:116","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"variableMap":{"other":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","languages":"langs","this":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtReturnImpl","sourcecode":"return langs.isEmpty() ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : new org.apache.commons.codec.language.bm.Languages.SomeLanguages(langs)"},"status":-2},{"failures":[0,1],"tindex":"a05a1287-3dae-11e6-a0b1-e3b7b1a29957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:120","type":"CtIfImpl","sourcecode":"if ((curr == 'E') && (next == 'V')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[],"tindex":"a05a1288-3dae-11e6-a0b1-d77f0191004b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"a05a1289-3dae-11e6-a0b1-99fec841d511","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"status":-2},{"failures":[],"tindex":"a05a128a-3dae-11e6-a0b1-a3f9a77e8ffa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"a05a399b-3dae-11e6-a0b1-774d341d0602","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"org.apache.commons.codec.language.bm.RuleType.RULES","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:228","type":"CtIfImpl","sourcecode":"if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n    rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n} "},"status":-2},{"failures":[2,3],"tindex":"a05a399c-3dae-11e6-a0b1-5d2c35492b2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:315","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[4],"tindex":"a05a399d-3dae-11e6-a0b1-9d56c6d06dae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:82","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[],"tindex":"a05a399e-3dae-11e6-a0b1-076e913e3586","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"key","txt":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"status":-2},{"failures":[],"tindex":"a05a60af-3dae-11e6-a0b1-e3751c109c17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"a05a60b0-3dae-11e6-a0b1-c51f951dc006","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"a05a60b1-3dae-11e6-a0b1-5de23ab1bf5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":0},{"failures":[],"tindex":"a05a60b2-3dae-11e6-a0b1-bd64cfb7b5ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[5,6],"tindex":"a05a60b3-3dae-11e6-a0b1-0139146eea5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])"},"status":-1},{"failures":[],"tindex":"a05a87c4-3dae-11e6-a0b1-8d71c2ee3bcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-2},{"failures":[7,8],"tindex":"a05a87c5-3dae-11e6-a0b1-f55b34fc6c09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"status":-1},{"failures":[9,10,11,12,13,14,15,16],"tindex":"a05a87c6-3dae-11e6-a0b1-bb6702e416bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:261","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:155","type":"CtReturnImpl","sourcecode":"return new java.lang.String(data , charset)"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,9,10,11,108],"tindex":"a05a87c7-3dae-11e6-a0b1-19746bf06e8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:504","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a05aaed8-3dae-11e6-a0b1-77ae246ac9d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:621","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[],"tindex":"a05aaed9-3dae-11e6-a0b1-89b2d91f92ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"variableMap":{"mappedChar":"java.lang.Character.MIN_VALUE","preHWChar":"java.lang.Character.MIN_VALUE","firstCode":"java.lang.Character.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"failures":[],"tindex":"a05aaeda-3dae-11e6-a0b1-f9235cb0ce28","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:427","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-2},{"failures":[],"tindex":"a05aaedb-3dae-11e6-a0b1-e17afda07d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:375","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[109,110,111,112,113,114,115,116,117,118],"tindex":"a05ad5ec-3dae-11e6-a0b1-f170a85be0ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"variableMap":{"input":"input","l":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:504","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(index)"},"status":-1},{"failures":[],"tindex":"a05ad5ed-3dae-11e6-a0b1-591e9241261e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[119,120,121,122,123,124,125,126,12,14,15,16],"tindex":"a05ad5ee-3dae-11e6-a0b1-a57dd2730948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-1},{"failures":[127,7,8],"tindex":"a05ad5ef-3dae-11e6-a0b1-55ff5a7b9e4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"a05ad5f0-3dae-11e6-a0b1-0b766785b1e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:223","type":"CtInvocationImpl","sourcecode":"rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))"},"status":-1},{"failures":[],"tindex":"a05afd01-3dae-11e6-a0b1-71da8fcc19a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:344","type":"CtIfImpl","sourcecode":"if ((index > 0) && (index < (string.length()))) {\n    matches = (string.charAt((index - 1))) == c;\n} "},"status":-2},{"failures":[5,6],"tindex":"a05afd02-3dae-11e6-a0b1-c3974b283376","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:307","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[144,145,146,147,148,149,150],"tindex":"a05afd03-3dae-11e6-a0b1-a596dd53149c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":-1},{"failures":[141,142],"tindex":"a05afd04-3dae-11e6-a0b1-af4f3fdfc184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:242","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[9,10,108,12,13,14,4,16],"tindex":"a05afd05-3dae-11e6-a0b1-f9e78ef28012","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:74","type":"CtInvocationImpl","sourcecode":"buffer.append(charset)"},"status":-1},{"failures":[],"tindex":"a05b2416-3dae-11e6-a0b1-6bb9d683b6ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('-')"},"status":0},{"failures":[23],"tindex":"a05b2417-3dae-11e6-a0b1-4b24fa4c651d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:497","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[133,140,141,142,143],"tindex":"a05b2418-3dae-11e6-a0b1-9552cc8ed865","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:537","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:569","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n    }\n}"},"status":-1},{"failures":[151,152,153],"tindex":"a05b2419-3dae-11e6-a0b1-3ba9928e25cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"jj","l_ascii":"l_ascii","bits":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"status":-1},{"failures":[5,6],"tindex":"a05b241a-3dae-11e6-a0b1-b1716c88cc19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:306","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"a05b241b-3dae-11e6-a0b1-5ba26a880c6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"a05b241c-3dae-11e6-a0b1-07edc5ea8d96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":-2},{"failures":[154],"tindex":"a05b241d-3dae-11e6-a0b1-857f9c2ed337","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-1},{"failures":[],"tindex":"a05b4b2e-3dae-11e6-a0b1-adf6ebf6b491","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"length","e1":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:375","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[155],"tindex":"a05b4b2f-3dae-11e6-a0b1-4bd7161e42a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:448","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"a05b4b30-3dae-11e6-a0b1-95fabe8d5148","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"pos","len":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:296","type":"CtIfImpl","sourcecode":"if ((context.int) >= (context.int)) {\n    context.byte[] = null;\n} "},"status":-2},{"failures":[],"tindex":"a05b4b31-3dae-11e6-a0b1-3951fcd544a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"variableMap":{"t":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"status":-2},{"failures":[156,157,158,159,160],"tindex":"a05b4b32-3dae-11e6-a0b1-192b2cf7b185","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117],"tindex":"a05b4b33-3dae-11e6-a0b1-8bdd4a5f3607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:262","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"status":-1},{"failures":[161],"tindex":"a05b4b34-3dae-11e6-a0b1-8f4a8bfd6c72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[],"tindex":"a05b4b35-3dae-11e6-a0b1-8d5caaa5c8a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)"},"status":-2},{"failures":[],"tindex":"a05b4b36-3dae-11e6-a0b1-3fffd663b582","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":0},{"failures":[5,6],"tindex":"a05b4b37-3dae-11e6-a0b1-b7cbd364bbee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:410","type":"CtAssignmentImpl","sourcecode":"results[1] = b"},"status":-1},{"failures":[162,163,164,165,166,167,168,169],"tindex":"a05b4b38-3dae-11e6-a0b1-afb188b39fdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[7,8],"tindex":"a05b4b39-3dae-11e6-a0b1-cddaf783fbf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"status":-1},{"failures":[162,163,164,165,166,167,168,169],"tindex":"a05b724a-3dae-11e6-a0b1-db29fad45515","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"a05b724b-3dae-11e6-a0b1-9b82b82e3c1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[],"tindex":"a05b724c-3dae-11e6-a0b1-731092000e9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:250","type":"CtAssignmentImpl","sourcecode":"context.byte[] = new byte[getDefaultBufferSize()]"},"status":-2},{"failures":[],"tindex":"a05b724d-3dae-11e6-a0b1-27220ab3a209","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:103","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"variableMap":{"salt":"txt","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":-2},{"failures":[],"tindex":"a05b724e-3dae-11e6-a0b1-f525da387132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"variableMap":{"a":"diff"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-2},{"failures":[],"tindex":"a05b724f-3dae-11e6-a0b1-95d4f78f4e05","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:359","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a05b7250-3dae-11e6-a0b1-f9497edf3f96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:465","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a05b7251-3dae-11e6-a0b1-e3068348c4f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:337","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[],"tindex":"a05b7252-3dae-11e6-a0b1-29d0a83457d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"lang","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:124","type":"CtIfImpl","sourcecode":"if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n    ls.add(lang);\n} "},"status":-2},{"failures":[],"tindex":"a05b7253-3dae-11e6-a0b1-3bb229cc7b15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"status":-2},{"failures":[],"tindex":"a05b7254-3dae-11e6-a0b1-598f08006d45","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}"},"status":0},{"failures":[],"tindex":"a05b7255-3dae-11e6-a0b1-917efa626b9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"length":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-2},{"failures":[170,171,172,173,174],"tindex":"a05b7256-3dae-11e6-a0b1-47a974d67bc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[],"tindex":"a05b9867-3dae-11e6-a0b1-cdb402703603","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n} else {\n    sb.append(c);\n}"},"status":-2},{"failures":[],"tindex":"a05b9868-3dae-11e6-a0b1-a11156269264","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[],"tindex":"a05b9869-3dae-11e6-a0b1-598ff7eb778b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"ch","element":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:866","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String.indexOf(ch)) != (-1)"},"status":-2},{"failures":[],"tindex":"a05b986a-3dae-11e6-a0b1-c76882c89f87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"saltLen","name2Size":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; i <= (rounds - 1) ; i++) {\n    ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm);\n    if ((i & 1) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } else {\n        ctx.update(altResult, 0, blocksize);\n    }\n    if ((i % 3) != 0) {\n        ctx.update(sBytes, 0, saltLen);\n    } \n    if ((i % 7) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } \n    if ((i & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(pBytes, 0, keyLen);\n    }\n    altResult = ctx.digest();\n}"},"status":-2},{"failures":[],"tindex":"a05b986b-3dae-11e6-a0b1-5d6b98d37078","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"status":-2},{"failures":[],"tindex":"a05b986c-3dae-11e6-a0b1-29f2ecd1f9d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-2},{"failures":[167,168,169],"tindex":"a05b986d-3dae-11e6-a0b1-753816956abf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer)"},"status":-1},{"failures":[],"tindex":"a05b986e-3dae-11e6-a0b1-5d2aeff4c682","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[19,20,175,176,177,178,21,179,22,31,180,38],"tindex":"a05b986f-3dae-11e6-a0b1-0d2fd9c8161c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[181,154,182,183,184,185,186],"tindex":"a05b9870-3dae-11e6-a0b1-6d0bc82453a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:275","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"a05b9871-3dae-11e6-a0b1-17b5bc24c5ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"status":-2},{"failures":[],"tindex":"a05b9872-3dae-11e6-a0b1-53f6dbc0e845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"text","org.apache.commons.codec.language.Caverphone1.SIX_1":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:126","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"a05bbf83-3dae-11e6-a0b1-35515d289389","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":-2},{"failures":[170,187],"tindex":"a05bbf84-3dae-11e6-a0b1-5b3ed2dfed48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":-1},{"failures":[],"tindex":"a05bbf85-3dae-11e6-a0b1-754c1f08ba8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"bytes","bigBytes":"bytes","len":"length","startSrc":"length","startDst":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n        }\n    } else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        buffer.write(b);\n    } \n}"},"status":-2},{"failures":[],"tindex":"a05bbf86-3dae-11e6-a0b1-4f5f3619df1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:341","type":"CtIfImpl","sourcecode":"if ((rightLength = input.length()) > 0) {\n    nextChar = input.getNextChar();\n} else {\n    nextChar = '-';\n}"},"status":-2},{"failures":[],"tindex":"a05bbf87-3dae-11e6-a0b1-61a7339685a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[181,154,182,183,184,185,186],"tindex":"a05bbf88-3dae-11e6-a0b1-a936d0c3a7aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"status":-1},{"failures":[],"tindex":"a05bbf89-3dae-11e6-a0b1-4d0500a5e846","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"variableMap":{"curr":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:164","type":"CtReturnImpl","sourcecode":"return new char[]{ prev }"},"status":-2},{"failures":[],"tindex":"a05bbf8a-3dae-11e6-a0b1-976a02805109","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[129,131,132,133,140,141,142,143],"tindex":"a05bbf8b-3dae-11e6-a0b1-a74d5ed93d3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"variableMap":{"rules":"lines"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:417","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    if (line.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n        final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim();\n        if (incl.contains(\" \")) {\n            throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n        } else {\n            lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n        }\n    } else {\n        final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n        if ((parts.int) != 4) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n        } else {\n            try {\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2]);\n                final org.apache.commons.codec.language.bm.Rule.PhonemeExpr org.apache.commons.codec.language.bm.Rule.PhonemeExpr = org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[3]));\n                final int int = currentLine;\n                final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule = new org.apache.commons.codec.language.bm.Rule(pat, lCon, rCon, ph) {\n                    private final int myLine = cLine;\n\n                    private final java.lang.String loc = location;\n\n                    @java.lang.Override\n                    public java.lang.String toString() {\n                        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                        sb.append(\"Rule\");\n                        sb.append(\"{line=\").append(int);\n                        sb.append(\", loc='\").append(java.lang.String).append('\\'');\n                        sb.append(\", pat='\").append(pat).append('\\'');\n                        sb.append(\", lcon='\").append(lCon).append('\\'');\n                        sb.append(\", rcon='\").append(rCon).append('\\'');\n                        sb.append('}');\n                        return sb.toString();\n                    }\n                };\n                final java.lang.String java.lang.String = r.java.lang.String.substring(0, 1);\n                java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = lines.get(patternKey);\n                if (rules == null) {\n                    rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n                    lines.put(patternKey, rules);\n                } \n                rules.add(r);\n            } catch (final java.lang.IllegalArgumentException e) {\n                throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n            }\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"a05bbf8c-3dae-11e6-a0b1-3bf1a7cee675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:153","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"a05bbf8d-3dae-11e6-a0b1-bffc0de67057","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"status":-2},{"failures":[5,6],"tindex":"a05be69e-3dae-11e6-a0b1-819ffae128e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"b","len":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-1},{"failures":[170,187,172,188,173,174],"tindex":"a05be69f-3dae-11e6-a0b1-4d17009de24f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[],"tindex":"a05be6a0-3dae-11e6-a0b1-4df7950846af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"cachedString","dc":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null) {\n    java.lang.String = java.lang.StringBuilder.toString();\n} "},"status":-2},{"failures":[],"tindex":"a05be6a1-3dae-11e6-a0b1-3d80461025ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:504","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"a05be6a2-3dae-11e6-a0b1-098779760e25","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"status":0},{"failures":[189],"tindex":"a05be6a3-3dae-11e6-a0b1-3346c99e13fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"status":-1},{"failures":[151,152,153],"tindex":"a05be6a4-3dae-11e6-a0b1-e1a98e5a1132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"l_ascii","i":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"status":-1},{"failures":[],"tindex":"a05be6a5-3dae-11e6-a0b1-d5a62257cfb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[190],"tindex":"a05be6a6-3dae-11e6-a0b1-ab7e43619ebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:363","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[19,20,175,176,177,178,191,21,179,22,31,180,38],"tindex":"a05be6a7-3dae-11e6-a0b1-15e401e83d01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"variableMap":{"pos":"encodeSize","context":"context","readPos":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:501","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"a05be6a8-3dae-11e6-a0b1-657eb7856263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[192,193,194,195,196,0,197,198,199,200,201,202,203,204,205,206,207,208,209,210,1,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"a05be6a9-3dae-11e6-a0b1-21136434b8a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:269","type":"CtAssignmentImpl","sourcecode":"out[0] = str.charAt(0)"},"variableMap":{"str":"str","out":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"chars[(count++)] = str.charAt(i)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}