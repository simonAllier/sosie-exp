{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":25,"org.apache.commons.codec.language.NysiisTest.testSnat":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":22,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":89,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":84,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":71,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":98,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":99,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":69,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":72,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":60,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":32,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":40,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":39,"org.apache.commons.codec.language.NysiisTest.testCap":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":80,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":38,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":17,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":76,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":42,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":26,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":57,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":62,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":100,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":37,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":44,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":30,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":45,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":21,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":67,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":1,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":33,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":77,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":97,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":75,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":78,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":68,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":28,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":51,"org.apache.commons.codec.language.NysiisTest.testTranan":11,"org.apache.commons.codec.language.NysiisTest.testFal":6,"org.apache.commons.codec.language.NysiisTest.testSnad":8,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":64,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":74,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":94,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":83,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":24,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":43,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":88,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":58,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":56,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":63,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":34,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":47,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":31,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":86,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":85,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":18,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":48,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":81,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":73,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":79,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":27,"org.apache.commons.codec.language.NysiisTest.testBran":7,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":93,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":36,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":41,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":61,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":66,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":52,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":14,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":54,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":92,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":87,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":2,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":46,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":96,"org.apache.commons.codec.language.NysiisTest.testDad":4,"org.apache.commons.codec.language.NysiisTest.testOthers":10,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":95,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":13,"org.apache.commons.codec.language.NysiisTest.testDan":5,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":82,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":55},"transformations":[{"failures":[],"tindex":"362955b1-1160-11e6-810d-af4dacb28e0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(raw))"},"variableMap":{"raw":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-2},{"failures":[0,1,2],"tindex":"36297cc2-1160-11e6-810d-5f2ef46187ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12],"tindex":"36297cc3-1160-11e6-810d-a96ddb66ff67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-1},{"failures":[],"tindex":"36297cc4-1160-11e6-810d-5bf4c6b89df4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:509","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"))"},"status":-2},{"failures":[13,14,15,16,17,18],"tindex":"36297cc5-1160-11e6-810d-4b51826ae217","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:162","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"36297cc6-1160-11e6-810d-a7028201d988","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:132","type":"CtAssignmentImpl","sourcecode":"name = cleanName(name)"},"status":-2},{"failures":[19,20,21,22,23,24],"tindex":"36297cc7-1160-11e6-810d-bdba0482d616","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:472","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[],"tindex":"3629a3d8-1160-11e6-810d-63a475b3ffdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.clear()"},"variableMap":{"phonemes":"newPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:116","type":"CtIfImpl","sourcecode":"if ((newPhonemes.size()) >= maxPhonemes) {\n    break EXPR;\n} "},"status":-3},{"failures":[],"tindex":"3629a3d9-1160-11e6-810d-9900ab2ba1aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"variableMap":{"pos":"encodeSize","context":"context","readPos":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:379","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[],"tindex":"3629a3da-1160-11e6-810d-57bb3163cc61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-2},{"failures":[25],"tindex":"3629a3db-1160-11e6-810d-8368538f2fce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:741","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[26],"tindex":"3629a3dc-1160-11e6-810d-7b8fe58b990d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3629caed-1160-11e6-810d-a34a217b7fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"status":-2},{"failures":[],"tindex":"3629caee-1160-11e6-810d-b51f392b87fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"index","d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36],"tindex":"3629caef-1160-11e6-810d-594e973aa0a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-1},{"failures":[37],"tindex":"3629caf0-1160-11e6-810d-c359cafd7ab3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-1},{"failures":[],"tindex":"3629caf1-1160-11e6-810d-9f8b83396354","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"currentLinePos","left":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-2},{"failures":[],"tindex":"3629caf2-1160-11e6-810d-81d1016a77a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"length","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"3629f203-1160-11e6-810d-3174a9cc5d6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"variableMap":{"input":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-2},{"failures":[],"tindex":"3629f204-1160-11e6-810d-e501b7d08045","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"status":-2},{"failures":[],"tindex":"3629f205-1160-11e6-810d-0dc6201e9aaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:356","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"3629f206-1160-11e6-810d-9b112d2e6da7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.decodeText(value)"},"variableMap":{"value":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-2},{"failures":[38,39,40,41,42,43,44,45],"tindex":"3629f207-1160-11e6-810d-c168c46ee8ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"lastCode = code"},"status":-1},{"failures":[],"tindex":"362a1918-1160-11e6-810d-c555e7d14c01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:201","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.min(b.int, todo)))"},"status":-2},{"failures":[],"tindex":"362a1919-1160-11e6-810d-b7d682cd6749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:192","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[],"tindex":"362a191a-1160-11e6-810d-334f3458e431","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:301","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-2},{"failures":[],"tindex":"362a191b-1160-11e6-810d-99ab33f7d675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"variableMap":{"keyLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:180","type":"CtLocalVariableImpl","sourcecode":"final int int = keyBytes.int"},"status":-2},{"failures":[],"tindex":"362a191c-1160-11e6-810d-5f61186c7a42","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(raw))"},"variableMap":{"raw":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":-2},{"failures":[],"tindex":"362a191d-1160-11e6-810d-b145bf232442","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:315","type":"CtAssignmentImpl","sourcecode":"name2RtLStart = name2.substring(i, (i + 1))"},"status":-2},{"failures":[],"tindex":"362a402e-1160-11e6-810d-150b505448f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"i","lineSeparator":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-3},{"failures":[13,46,14,15,16,17,18],"tindex":"362a402f-1160-11e6-810d-1d846dc55171","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:162","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"362a4030-1160-11e6-810d-a30980fb1458","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:79","type":"CtTryImpl","sourcecode":"try {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.lang.Comparable<java.lang.Comparable<?>> java.lang.Comparable<java.lang.Comparable<?>> = ((java.lang.Comparable<java.lang.Comparable<?>>)(org.apache.commons.codec.StringEncoderComparator.this.org.apache.commons.codec.StringEncoder.encode(o1)));\n    final java.lang.Comparable<?> java.lang.Comparable<?> = ((java.lang.Comparable<?>)(org.apache.commons.codec.StringEncoderComparator.this.org.apache.commons.codec.StringEncoder.encode(o2)));\n    compareCode = s1.compareTo(s2);\n} catch (final org.apache.commons.codec.EncoderException ee) {\n    compareCode = 0;\n}"},"status":-2},{"failures":[],"tindex":"362a4031-1160-11e6-810d-093b8642d8cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:97","type":"CtWhileImpl","sourcecode":"while ((!(result.isComplete())) && (index <= ((value.length()) - 1))) {\n    switch (value.charAt(index)) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n        case 'Y' :\n            index = handleAEIOUY(result, index);\n            break;\n        case 'B' :\n            result.append('P');\n            index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n            break;\n        case '\\u00c7' :\n            result.append('S');\n            index++;\n            break;\n        case 'C' :\n            index = handleC(value, result, index);\n            break;\n        case 'D' :\n            index = handleD(value, result, index);\n            break;\n        case 'F' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n            break;\n        case 'G' :\n            index = handleG(value, result, index, slavoGermanic);\n            break;\n        case 'H' :\n            index = handleH(value, result, index);\n            break;\n        case 'J' :\n            index = handleJ(value, result, index, slavoGermanic);\n            break;\n        case 'K' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n            break;\n        case 'L' :\n            index = handleL(value, result, index);\n            break;\n        case 'M' :\n            result.append('M');\n            index = conditionM0(value, index) ? index + 2 : index + 1;\n            break;\n        case 'N' :\n            result.append('N');\n            index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n            break;\n        case '\\u00d1' :\n            result.append('N');\n            index++;\n            break;\n        case 'P' :\n            index = handleP(value, result, index);\n            break;\n        case 'Q' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n            break;\n        case 'R' :\n            index = handleR(value, result, index, slavoGermanic);\n            break;\n        case 'S' :\n            index = handleS(value, result, index, slavoGermanic);\n            break;\n        case 'T' :\n            index = handleT(value, result, index);\n            break;\n        case 'V' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n            break;\n        case 'W' :\n            index = handleW(value, result, index);\n            break;\n        case 'X' :\n            index = handleX(value, result, index);\n            break;\n        case 'Z' :\n            index = handleZ(value, result, index, slavoGermanic);\n            break;\n        default :\n            index++;\n            break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"362a6742-1160-11e6-810d-f94fe233a002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[],"tindex":"362a6743-1160-11e6-810d-7d7ff4f7aa90","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"buffer","raw":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:269","type":"CtIfImpl","sourcecode":"if (((context.byte[]) == null) || ((context.byte[].int) < ((context.int) + size))) {\n    return resizeBuffer(context);\n} "},"status":-2},{"failures":[],"tindex":"362a6744-1160-11e6-810d-f1952431c21e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":-2},{"failures":[],"tindex":"362a6745-1160-11e6-810d-37b8c04dd34b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:497","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"362a6746-1160-11e6-810d-d5340a906fe4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":-2},{"failures":[47,48,49,50,51,52,53,54],"tindex":"362a8e57-1160-11e6-810d-276119b0ec3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:73","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)"},"status":-1},{"failures":[25,55,56],"tindex":"362a8e58-1160-11e6-810d-557b21d59229","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:724","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[0,1,2],"tindex":"362a8e59-1160-11e6-810d-87ab9b35c6d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"status":-1},{"failures":[57,58,59],"tindex":"362a8e5a-1160-11e6-810d-9b8a32fea0af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"status":-1},{"failures":[],"tindex":"362a8e5b-1160-11e6-810d-d11b43c5b987","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","salt":"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","prefix":"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:133","type":"CtIfImpl","sourcecode":"if (lRulesIS == null) {\n    throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)));\n} "},"status":-2},{"failures":[],"tindex":"362a8e5c-1160-11e6-810d-e10d05157ede","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":0},{"failures":[],"tindex":"362a8e5d-1160-11e6-810d-f7627cf10c6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:318","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"status":-2},{"failures":[60,61],"tindex":"362ab56e-1160-11e6-810d-a78b761364b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:527","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"362ab56f-1160-11e6-810d-b55477ac95d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:277","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"status":0},{"failures":[62,63,64,65,66,67,68],"tindex":"362ab570-1160-11e6-810d-110b81203256","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"status":-1},{"failures":[69,70,71,72],"tindex":"362ab571-1160-11e6-810d-7bfc4989fa42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:605","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (prefix.charAt(i))) {\n    return false;\n} "},"status":-1},{"failures":[73,74,75,76,77,65,78,67],"tindex":"362ab572-1160-11e6-810d-e17da6d8f1d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"status":-1},{"failures":[],"tindex":"362ab573-1160-11e6-810d-2d54cab218f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:339","type":"CtWhileImpl","sourcecode":"while (cp < (saltLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","sBytes":"finalb","tempResult":"finalb","saltLen":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","cp":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:273","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-2},{"failures":[52,53,79,54],"tindex":"362ab574-1160-11e6-810d-c12ee61f8a3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"status":-1},{"failures":[69,70,71,72,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"362ab575-1160-11e6-810d-6f34a16bf50a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[94,95,96,73,97,98,0,1,2,74,76,77],"tindex":"362adc86-1160-11e6-810d-5b130c28ea5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:340","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize)"},"variableMap":{"sBytes":"pBytes","blocksize":"rounds","tempResult":"sBytes","cp":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; i <= (rounds - 1) ; i++) {\n    ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm);\n    if ((i & 1) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } else {\n        ctx.update(altResult, 0, blocksize);\n    }\n    if ((i % 3) != 0) {\n        ctx.update(sBytes, 0, saltLen);\n    } \n    if ((i % 7) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } \n    if ((i & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(pBytes, 0, keyLen);\n    }\n    altResult = ctx.digest();\n}"},"status":-1},{"failures":[],"tindex":"362adc87-1160-11e6-810d-c5979ae3a215","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"variableMap":{"str":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.int, string.length())) : string"},"status":-2},{"failures":[99],"tindex":"362adc88-1160-11e6-810d-37f538c420e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:174","type":"CtIfImpl","sourcecode":"if (langIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName));\n} "},"status":-1},{"failures":[100],"tindex":"362adc89-1160-11e6-810d-e39e0a8ee345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:576","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"362adc8a-1160-11e6-810d-9dfe27c22639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"lContext":"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":58,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}