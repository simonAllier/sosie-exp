{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":36,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":74,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":133,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":124,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":127,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":93,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":171,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":75,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":104,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":181,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":180,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":96,"org.apache.commons.codec.language.NysiisTest.testCap":6,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":132,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":150,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":179,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":149,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":98,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":116,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":110,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":183,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":197,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":168,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":77,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":78,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":186,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":196,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":82,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":92,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":67,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":191,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":135,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":161,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":169,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":138,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":157,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":109,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":100,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":34,"org.apache.commons.codec.language.NysiisTest.testDropBy":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":43,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":81,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":184,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":25,"org.apache.commons.codec.binary.Base64Test.testUUID":146,"org.apache.commons.codec.binary.Base64Test.testSingletons":156,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":23,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":173,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":102,"org.apache.commons.codec.binary.Base64Test.testPairs":95,"org.apache.commons.codec.language.NysiisTest.testRule2":11,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero":39,"org.apache.commons.codec.language.NysiisTest.testRule1":10,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":172,"org.apache.commons.codec.language.NysiisTest.testRule7":14,"org.apache.commons.codec.language.NysiisTest.testRule6":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":121,"org.apache.commons.codec.language.NysiisTest.testRule5":12,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":128,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":85,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":94,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":54,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":87,"org.apache.commons.codec.language.NysiisTest.testBran":15,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":22,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":125,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":130,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":108,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":117,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":182,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":154,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":30,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":73,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":155,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":71,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":72,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":175,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":48,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":91,"org.apache.commons.codec.language.NysiisTest.testDad":7,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":164,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":148,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":140,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull":65,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":4,"org.apache.commons.codec.language.NysiisTest.testDan":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":166,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":189,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":195,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":190,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":137,"org.apache.commons.codec.language.NysiisTest.testSnat":17,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":119,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeNull":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":139,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":192,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":52,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":178,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":167,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":107,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":198,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":42,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":61,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":64,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":162,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":38,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":151,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":106,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":56,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":141,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":55,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":40,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":188,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":120,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":185,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":153,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":118,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":123,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":165,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":80,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":193,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":113,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":51,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":31,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":79,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":160,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":126,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":122,"org.apache.commons.codec.language.NysiisTest.testTranan":21,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":136,"org.apache.commons.codec.language.NysiisTest.testFal":9,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":115,"org.apache.commons.codec.language.NysiisTest.testSnad":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":45,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":105,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":84,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":99,"org.apache.commons.codec.binary.Base64Test.testBase64":103,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":33,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":114,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":3,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":142,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":47,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":58,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":158,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":41,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":176,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":18,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":144,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":111,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":170,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":1,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":70,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":76,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":163,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":159,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":131,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":59,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":194,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":174,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":143,"org.apache.commons.codec.language.NysiisTest.testOthers":20,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":101,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":83,"org.apache.commons.codec.language.SoundexTest.testDifference":187,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":177,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":44,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":86,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":147},"transformations":[{"failures":[0,1,2],"tindex":"e2de4291-3d7a-11e6-b300-3ba0d1a6b1ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:720","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:149","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"status":-1},{"failures":[3],"tindex":"e2de69a2-3d7a-11e6-b300-ddf8ae3716ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:358","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang))"},"status":-1},{"failures":[],"tindex":"e2de69a3-3d7a-11e6-b300-73a8cba6d935","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"variableMap":{"pattern":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"e2de69a4-3d7a-11e6-b300-118526c14402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)"},"status":-1},{"failures":[23,24,25,26,27,28,29,30],"tindex":"e2de69a5-3d7a-11e6-b300-3feca0eb37b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"status":-1},{"failures":[],"tindex":"e2de90b6-3d7a-11e6-b300-c79307bda9a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"addChars","to":"addChars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:980","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"status":-2},{"failures":[31,32,33,34,35,36],"tindex":"e2de90b7-3d7a-11e6-b300-8176428398bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"status":-1},{"failures":[],"tindex":"e2de90b8-3d7a-11e6-b300-5b092eb16412","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"variableMap":{"es1":"name","es2":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = name.length()"},"status":0},{"failures":[23,24,25],"tindex":"e2de90b9-3d7a-11e6-b300-391f417e2b81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:89","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[5,16,17,19,20,21,22],"tindex":"e2de90ba-3d7a-11e6-b300-77d5c682fd55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"curr","prev":"curr","curr":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (curr == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'M') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[37],"tindex":"e2de90bb-3d7a-11e6-b300-3344a2f1f8bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"e2de90bc-3d7a-11e6-b300-214fa667a6dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":0},{"failures":[38,39,40,41,42,43,44,45,46,47,3,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"e2deb7cd-3d7a-11e6-b300-b704d03b3efd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-1},{"failures":[],"tindex":"e2deb7ce-3d7a-11e6-b300-a773e78c1855","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[32,33],"tindex":"e2deb7cf-3d7a-11e6-b300-99d4e6806a24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:613","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"e2deb7d0-3d7a-11e6-b300-c7c04b7952ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"variableMap":{"keyLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"status":-2},{"failures":[],"tindex":"e2deb7d1-3d7a-11e6-b300-53a81d7b8eaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"name2RtLStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:315","type":"CtAssignmentImpl","sourcecode":"name2RtLStart = name2.substring(i, (i + 1))"},"status":-2},{"failures":[],"tindex":"e2deb7d2-3d7a-11e6-b300-1fe759111215","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHIA\")) {\n    return true;\n} else if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":-2},{"failures":[65],"tindex":"e2deb7d3-3d7a-11e6-b300-1d1fecf11acb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[66,67,68,69],"tindex":"e2deb7d4-3d7a-11e6-b300-d12f8fd3f44a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:95","type":"CtInvocationImpl","sourcecode":"branch.java.lang.StringBuilder.append(toString())"},"status":-1},{"failures":[],"tindex":"e2dedee5-3d7a-11e6-b300-9f36d0af1a34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[70,71,72,73,74,75],"tindex":"e2dedee6-3d7a-11e6-b300-4d25d357c962","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[5,12,13,14,19],"tindex":"e2dedee7-3d7a-11e6-b300-3b717896df3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":-1},{"failures":[40,41,44,45,46,48,49,52,53,55,59,60,61,62,63,64],"tindex":"e2dedee8-3d7a-11e6-b300-81e27019d862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-1},{"failures":[],"tindex":"e2dedee9-3d7a-11e6-b300-11fd49573006","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":0},{"failures":[],"tindex":"e2dedeea-3d7a-11e6-b300-89ffc0fda01a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:138","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,76,1,77,78],"tindex":"e2dedeeb-3d7a-11e6-b300-3bb02f7ffff3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"current","c2":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"status":-1},{"failures":[],"tindex":"e2df05fc-3d7a-11e6-b300-dbeda203c452","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"status":-2},{"failures":[],"tindex":"e2df05fd-3d7a-11e6-b300-77b76efde552","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:190","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.java.nio.charset.Charset"},"variableMap":{"charset":"charset","org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:130","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = charset"},"status":-2},{"failures":[72,73,75,79],"tindex":"e2df05fe-3d7a-11e6-b300-07a5fba09fb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:240","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"e2df05ff-3d7a-11e6-b300-359c28849755","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"e2df0600-3d7a-11e6-b300-8bf96161a09d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"d","name2Size":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:351","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(c, d, 8, 16711935, results)"},"status":-2},{"failures":[],"tindex":"e2df0601-3d7a-11e6-b300-1f9e6cbdee3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"variableMap":{"encodeSize":"ibitWorkArea","decodeSize":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result"},"status":-2},{"failures":[],"tindex":"e2df2d12-3d7a-11e6-b300-996a7a7aa633","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"chunkSeparatorLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"status":-2},{"failures":[],"tindex":"e2df2d13-3d7a-11e6-b300-4ffd198a1961","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:350","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[32,33],"tindex":"e2df2d14-3d7a-11e6-b300-9deb4eb38081","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"status":-1},{"failures":[],"tindex":"e2df2d15-3d7a-11e6-b300-fbfa28a96f67","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:182","type":"CtInvocationImpl","sourcecode":"scanner.close()"},"variableMap":{"scanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>)"},"status":0},{"failures":[32,33,35,36],"tindex":"e2df2d16-3d7a-11e6-b300-7d486887ae90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"index","cnt":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:457","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[66,67,80,68,69,81,82,83,84,85,86,87,88],"tindex":"e2df2d17-3d7a-11e6-b300-ad996839916d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-1},{"failures":[],"tindex":"e2df2d18-3d7a-11e6-b300-155d9ffb0d5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:805","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e2df2d19-3d7a-11e6-b300-95a4810a79c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:77","type":"CtReturnImpl","sourcecode":"return saltString.toString()"},"status":-2},{"failures":[89,90,91,92,93],"tindex":"e2df2d1a-3d7a-11e6-b300-6d6efff1a43e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"e2df2d1b-3d7a-11e6-b300-7db82860c4fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:370","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}"},"status":-2},{"failures":[],"tindex":"e2df2d1c-3d7a-11e6-b300-4b1bfc02798c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:310","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2])"},"status":-2},{"failures":[89,90,91,94,92,93],"tindex":"e2df542d-3d7a-11e6-b300-dddf1481dc5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[],"tindex":"e2df542e-3d7a-11e6-b300-91d34630cade","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":-2},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,28,29,30],"tindex":"e2df542f-3d7a-11e6-b300-2f18086cff32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-1},{"failures":[],"tindex":"e2df5430-3d7a-11e6-b300-e164ea14889d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"status":-2},{"failures":[115,116,117,118],"tindex":"e2df5431-3d7a-11e6-b300-1968979b0160","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:100","type":"CtForImpl","sourcecode":"for (int int = 33 ; i <= 60 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[72,73,75,79],"tindex":"e2df5432-3d7a-11e6-b300-ebc9f3ccfcbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:240","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[119,120,121,122,123,124,125],"tindex":"e2df5433-3d7a-11e6-b300-a95cbc95caec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"e2df5434-3d7a-11e6-b300-dd691f5349f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:180","type":"CtIfImpl","sourcecode":"if (hasUnderscores) {\n    final byte[] byte[] = new byte[bytes.int];\n    for (int int = 0 ; i < (bytes.int) ; i++) {\n        final byte byte = bytes[i];\n        if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n            tmp[i] = b;\n        } else {\n            tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n        }\n    }\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp);\n} "},"status":-2},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"e2df5435-3d7a-11e6-b300-a7d059a0ec4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"status":-1},{"failures":[],"tindex":"e2df5436-3d7a-11e6-b300-536a20cd7e5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:105","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[32,33,35,36],"tindex":"e2df7b47-3d7a-11e6-b300-89802db47b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}"},"status":-1},{"failures":[],"tindex":"e2df7b48-3d7a-11e6-b300-f951f79853dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:190","type":"CtReturnImpl","sourcecode":"return alternate ? result.getAlternate() : result.getPrimary()"},"status":-2},{"failures":[141,142,143],"tindex":"e2df7b49-3d7a-11e6-b300-0f51df9ad598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[144,145,95,146,147,148,96,97,149,98,150,151,152,153,154,155,156,101,103,157,158,159,160,161,162,163,164,107,165,166,167,168,169,170,108,171,172,173,174,175,113,114,28,29,176],"tindex":"e2df7b4a-3d7a-11e6-b300-c3af2ba33c09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[],"tindex":"e2df7b4b-3d7a-11e6-b300-07d93c231b13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"mappedChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-2},{"failures":[177,115,116,117,118],"tindex":"e2df7b4c-3d7a-11e6-b300-516774b48ec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:143","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"org.apache.commons.codec.net.URLCodec.RADIX","org.apache.commons.codec.net.URLCodec.RADIX":"org.apache.commons.codec.net.URLCodec.RADIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"status":-1},{"failures":[],"tindex":"e2df7b4d-3d7a-11e6-b300-6f2ec9260dd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"len","len":"todo","lineLength":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-2},{"failures":[],"tindex":"e2df7b4e-3d7a-11e6-b300-d1e24204931d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(0, open)"},"variableMap":{"ph":"name","open":"nameLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength)"},"status":-2},{"failures":[],"tindex":"e2df7b4f-3d7a-11e6-b300-19dd8c5d9ad5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-2},{"failures":[32,33,178,35],"tindex":"e2df7b50-3d7a-11e6-b300-1b62dc9c3535","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"e2dfa261-3d7a-11e6-b300-0b15ae8a8881","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:181","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bytes.int]"},"variableMap":{"bytes":"ascii","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:203","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(ascii.int) >> 3]"},"status":-2},{"failures":[],"tindex":"e2dfa262-3d7a-11e6-b300-b368dfe64e15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"body","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-2},{"failures":[],"tindex":"e2dfa263-3d7a-11e6-b300-db93f0f5d841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:107","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":0},{"failures":[],"tindex":"e2dfa264-3d7a-11e6-b300-db5c3512d2bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:282","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e2dfa265-3d7a-11e6-b300-d3b9d65cd370","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()"},"status":0},{"failures":[179,180,181,182,183,184,185,186],"tindex":"e2dfa266-3d7a-11e6-b300-7f809019a2c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:395","type":"CtInvocationImpl","sourcecode":"output.addRight(code)"},"status":-1},{"failures":[],"tindex":"e2dfa267-3d7a-11e6-b300-67abab2fac94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"status":-2},{"failures":[],"tindex":"e2dfa268-3d7a-11e6-b300-df397660832a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:504","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"e2dfa269-3d7a-11e6-b300-8d80e980afab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-2},{"failures":[],"tindex":"e2dfa26a-3d7a-11e6-b300-350ae1b89781","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"maxLength","encodeSize":"maxLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:943","type":"CtAssignmentImpl","sourcecode":"this.int = maxLength"},"status":-2},{"failures":[66,67,80,68,69,83,84],"tindex":"e2dfc97b-3d7a-11e6-b300-a502bd544585","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[187],"tindex":"e2e19e3c-3d7a-11e6-b300-f945e8553291","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.Soundex.this, s1, s2)"},"status":-1},{"failures":[188,189,190],"tindex":"e2e19e3d-3d7a-11e6-b300-6d433328b61d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"variableMap":{"pArray":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"status":-1},{"failures":[],"tindex":"e2e19e3e-3d7a-11e6-b300-1d9d22140720","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"failures":[],"tindex":"e2e19e3f-3d7a-11e6-b300-df386f342a47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"variableMap":{"blocksize":"read","pBytes":"buffer","altResult":"buffer","ctx":"digest","i":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH","keyLen":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:796","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    digest.update(buffer, 0, read);\n    read = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int);\n}"},"status":-2},{"failures":[],"tindex":"e2e19e40-3d7a-11e6-b300-f5290cb76da1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":0},{"failures":[],"tindex":"e2e19e41-3d7a-11e6-b300-e36d7bd8e2ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n    result.append(\"X\", \"SK\");\n} else {\n    result.append(\"SK\");\n}"},"status":-2},{"failures":[32,33,191,35,36],"tindex":"e2e19e42-3d7a-11e6-b300-b1acc533909f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:270","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('A');\n} "},"status":-1},{"failures":[89,90,91,92,93,192,193,194],"tindex":"e2e19e43-3d7a-11e6-b300-4310020e5c8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"tempResult","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"tempResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"tempResult = altCtx.digest()"},"status":-1},{"failures":[],"tindex":"e2e1c554-3d7a-11e6-b300-d9b0cdcf9e38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"strict"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:150","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[84],"tindex":"e2e1c555-3d7a-11e6-b300-370de65dbd56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:298","type":"CtInvocationImpl","sourcecode":"asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0))"},"status":-1},{"failures":[],"tindex":"e2e1c556-3d7a-11e6-b300-d3aed812d630","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:471","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"status":-2},{"failures":[],"tindex":"e2e1c557-3d7a-11e6-b300-f14857d60e89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:146","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[96,97],"tindex":"e2e1c558-3d7a-11e6-b300-4bac7ae03029","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"status":-1},{"failures":[],"tindex":"e2e1c559-3d7a-11e6-b300-438553994c0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.Utils:44","type":"CtIfImpl","sourcecode":"if (i == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)) + \"): \") + b));\n} "},"variableMap":{"b":"pad","org.apache.commons.codec.net.URLCodec.RADIX":"length","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-2},{"failures":[179,180,181,182,183,184,185,186],"tindex":"e2e1c55a-3d7a-11e6-b300-0d0906200c66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e2e1c55b-3d7a-11e6-b300-0b6e61cd6165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"variableMap":{"n":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:517","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"e2e1c55c-3d7a-11e6-b300-11a117672f72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"e2e1c55d-3d7a-11e6-b300-4f97a171955f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:188","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-2},{"failures":[],"tindex":"e2e1c55e-3d7a-11e6-b300-a7d5b65cf3bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:659","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key), valueToDigest).doFinal()"},"status":-2},{"failures":[32,33],"tindex":"e2e1ec6f-3d7a-11e6-b300-9740c62c8d07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"variableMap":{"result":"result","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"status":-1},{"failures":[],"tindex":"e2e1ec70-3d7a-11e6-b300-f11f32efa351","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:289","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-2},{"failures":[],"tindex":"e2e1ec71-3d7a-11e6-b300-8fead4076a3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"org.apache.commons.codec.binary.Base32.MASK_5BITS","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[195,196,197,198],"tindex":"e2e1ec72-3d7a-11e6-b300-ed4fd8c93e05","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:388","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 24"},"variableMap":{"b":"b","offset":"value","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-1},{"failures":[],"tindex":"e2e1ec73-3d7a-11e6-b300-37ba28b1fa72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-2},{"failures":[66,67,80,68,69,81,82,83,84,87,88],"tindex":"e2e1ec74-3d7a-11e6-b300-4be63c62c1a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:153","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.StringBuilder.toString()"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}