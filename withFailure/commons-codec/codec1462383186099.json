{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":21,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":8,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":56,"org.apache.commons.codec.language.NysiisTest.testDropBy":55,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":45,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":10,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":20,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":24,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":31,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":51,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":35,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":71,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":74,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":70,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":50,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":64,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":68,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":72,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":75,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":43,"org.apache.commons.codec.language.NysiisTest.testRule7":54,"org.apache.commons.codec.language.NysiisTest.testRule6":53,"org.apache.commons.codec.language.NysiisTest.testRule5":52,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":73,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":39,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":16,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":27,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":59,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":38,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":63,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":18,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":32,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":22,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":4,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":60,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":77,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":79,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":7,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":61,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":5,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":69,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":11,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":57,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":67,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":6,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":62,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":76,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":42,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":26,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":78,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":65,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":15,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":44,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":49},"transformations":[{"failures":[],"tindex":"42d96166-121e-11e6-b489-2d2dddba90a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.strict = strict","position":"org.apache.commons.codec.net.QuotedPrintableCodec:150","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[],"tindex":"42d98877-121e-11e6-b489-19cd966603ef","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:488","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-2},{"failures":[],"tindex":"42d98878-121e-11e6-b489-c7ce50733924","series":0,"name":"replace","transplant":{"toString":"txt = txt + (org.apache.commons.codec.language.Caverphone1.SIX_1)","position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^h\", \"A\")","position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-3},{"failures":[],"tindex":"42d98879-121e-11e6-b489-bdd2e3fcc016","series":0,"name":"replace","transplant":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char next = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.SPACE","position":"org.apache.commons.codec.language.Nysiis:281","type":"CtLocalVariableImpl","sourcecode":"final char char = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char"},"status":-2},{"failures":[0,1,2],"tindex":"42d9af8a-121e-11e6-b489-51bf9b2c1567","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('H')","position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"status":-1},{"failures":[],"tindex":"42d9af8b-121e-11e6-b489-3ba0a0fba544","series":0,"name":"replace","transplant":{"toString":"return \"ANY_LANGUAGE\"","position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.language.Nysiis:249","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"42d9af8c-121e-11e6-b489-ff124efd69dc","series":0,"name":"replace","transplant":{"toString":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}"},"variableMap":{"blocksize":"read","altResult":"buffer","keyBytes":"buffer","ctx":"digest","cnt":"read"},"type":"adrStmt","transplantationPoint":{"toString":"digest.update(buffer, 0, read)","position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-2},{"failures":[],"tindex":"42d9af8d-121e-11e6-b489-6b1ed77a8d29","series":0,"name":"replace","transplant":{"toString":"appendAlternate(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"c1"},"type":"adrStmt","transplantationPoint":{"toString":"if (c1 == c2) {\n    continue;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"42d9af8e-121e-11e6-b489-0fc428835bdc","series":0,"name":"replace","transplant":{"toString":"this.soundexMapping = org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING","position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"mapping","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"toString":"this.soundexMapping = new char[mapping.length]","position":"org.apache.commons.codec.language.RefinedSoundex:77","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[mapping.int]"},"status":-3},{"failures":[],"tindex":"42d9d69f-121e-11e6-b489-ed3033b9f13f","series":0,"name":"add","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")","position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")","position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"status":-2},{"failures":[3,4,0,1,2],"tindex":"42d9d6a0-121e-11e6-b489-c7bdb3e967dc","series":0,"name":"replace","transplant":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:302","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"42d9d6a1-121e-11e6-b489-5fc6f31b7dc7","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")","position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))","position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"42d9fdb2-121e-11e6-b489-a5618a2fc952","series":0,"name":"replace","transplant":{"toString":"java.lang.String txt = source","position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"variableMap":{"source":"name"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String replacedName = name.toUpperCase()","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase()"},"status":0},{"failures":[5],"tindex":"42d9fdb3-121e-11e6-b489-bb5847dc71fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (nextCharIsVowel) {\n    return replacementBeforeVowel;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"42d9fdb4-121e-11e6-b489-1dbe8072edee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"inMultilineComment = true","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[18,19,20,21,22,23,24,25],"tindex":"42d9fdb5-121e-11e6-b489-bbc47e5d9b1c","series":0,"name":"replace","transplant":{"toString":"mac.reset()","position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"variableMap":{"mac":"mac"},"type":"adrStmt","transplantationPoint":{"toString":"mac.update(buffer, 0, read)","position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-1},{"failures":[26,27,28,29,30,31,32,33],"tindex":"42d9fdb6-121e-11e6-b489-6f9b09d6e9df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.URLCodec.this.charset = charset","position":"org.apache.commons.codec.net.URLCodec:109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.this.java.lang.String = charset"},"status":-1},{"failures":[],"tindex":"42da24c7-121e-11e6-b489-bd418a5d8767","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme newPhoneme : subBuilder.getPhonemes()) {\n    if (phonemes.containsKey(newPhoneme)) {\n        final org.apache.commons.codec.language.bm.Rule.Phoneme oldPhoneme = phonemes.remove(newPhoneme);\n        final org.apache.commons.codec.language.bm.Rule.Phoneme mergedPhoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n        phonemes.put(mergedPhoneme, mergedPhoneme);\n    } else {\n        phonemes.put(newPhoneme, newPhoneme);\n    }\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:362","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : subBuilder.getPhonemes()) {\n    if (phonemes.containsKey(newPhoneme)) {\n        final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = phonemes.remove(newPhoneme);\n        final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n        phonemes.put(mergedPhoneme, mergedPhoneme);\n    } else {\n        phonemes.put(newPhoneme, newPhoneme);\n    }\n}"},"status":-2},{"failures":[],"tindex":"42da24c8-121e-11e6-b489-f367bf1deab2","series":0,"name":"replace","transplant":{"toString":"last = mapped","position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"nextChar","mapped":"nextChar"},"type":"adrStmt","transplantationPoint":{"toString":"nextChar = input.getNextChar()","position":"org.apache.commons.codec.language.ColognePhonetic:342","type":"CtAssignmentImpl","sourcecode":"nextChar = input.getNextChar()"},"status":-2},{"failures":[],"tindex":"42da24c9-121e-11e6-b489-01f52630c2ec","series":0,"name":"add","transplant":{"toString":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))","position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))","position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-2},{"failures":[],"tindex":"42da4bda-121e-11e6-b489-e12b216f56c3","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Metaphone.this.maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"variableMap":{"maxCodeLen":"b"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-3},{"failures":[13],"tindex":"42da4bdb-121e-11e6-b489-6fa84eaf10d7","series":0,"name":"replace","transplant":{"toString":"final java.lang.String rightCharacter = parts[1]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[1]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String leftCharacter = parts[0]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"42da4bdc-121e-11e6-b489-9f2481aaea58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"name2 = cleanName(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"status":-1},{"failures":[],"tindex":"42da4bdd-121e-11e6-b489-a39d4e35e2a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.phonemes = phonemes","position":"org.apache.commons.codec.language.bm.Rule:180","type":"CtAssignmentImpl","sourcecode":"this.java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme> = phonemes"},"status":-2},{"failures":[],"tindex":"42dbf98e-121e-11e6-b489-23a6aa290580","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))","position":"org.apache.commons.codec.digest.DigestUtils:500","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-2},{"failures":[],"tindex":"42dbf98f-121e-11e6-b489-537026dc0a83","series":0,"name":"replace","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"incl"},"type":"adrStmt","transplantationPoint":{"toString":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}","position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"status":-2},{"failures":[48,22],"tindex":"42dbf990-121e-11e6-b489-3175d400a0d3","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)","position":"org.apache.commons.codec.digest.DigestUtils:334","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}","position":"org.apache.commons.codec.digest.HmacUtils:527","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"42dbf991-121e-11e6-b489-95350fe9e6af","series":0,"name":"add","transplant":{"toString":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")","position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(e)","position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"42dbf992-121e-11e6-b489-531d4fbb3fd3","series":0,"name":"replace","transplant":{"toString":"java.lang.String saltString","position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)","position":"org.apache.commons.codec.binary.Base64:280","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)"},"status":-2},{"failures":[49,50],"tindex":"42dbf993-121e-11e6-b489-17122f55ac41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"d = results[0]","position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-1},{"failures":[],"tindex":"42dc20a4-121e-11e6-b489-87ba57b414b2","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i","position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"variableMap":{"i":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"toString":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX) - (strA.length())))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:337","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())))"},"status":-2},{"failures":[],"tindex":"42dc20a5-121e-11e6-b489-09d58fcc2e7a","series":0,"name":"replace","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"addChars"},"type":"adrStmt","transplantationPoint":{"toString":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value.substring(0, addChars));\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:989","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"status":-2},{"failures":[],"tindex":"42dc20a6-121e-11e6-b489-71f950c488d7","series":0,"name":"replace","transplant":{"toString":"return context.startsWith(pattern)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"variableMap":{"context":"str1","pattern":"str1"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))","position":"org.apache.commons.codec.language.Caverphone:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))"},"status":-3},{"failures":[],"tindex":"42dc20a7-121e-11e6-b489-45f201ff7a3c","series":0,"name":"replace","transplant":{"toString":"for (java.lang.String lang : sl.languages) {\n    ls.add(lang);\n}","position":"org.apache.commons.codec.language.bm.Languages:141","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n    ls.add(lang);\n}"},"variableMap":{"languages":"ls","ls":"ls","sl":"sl"},"type":"adrStmt","transplantationPoint":{"toString":"for (java.lang.String lang : languages) {\n    if (sl.languages.contains(lang)) {\n        ls.add(lang);\n    } \n}","position":"org.apache.commons.codec.language.bm.Languages:123","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n    if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n        ls.add(lang);\n    } \n}"},"status":-3},{"failures":[],"tindex":"42dc47b8-121e-11e6-b489-db502e2eb48f","series":0,"name":"replace","transplant":{"toString":"final char ch = getNextChar()","position":"org.apache.commons.codec.language.ColognePhonetic:274","type":"CtLocalVariableImpl","sourcecode":"final char char = getNextChar()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char last","position":"org.apache.commons.codec.language.RefinedSoundex:187","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[51,52,53,54,55],"tindex":"42dc47b9-121e-11e6-b489-d7fdeb1647be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} ","position":"org.apache.commons.codec.language.Nysiis:296","type":"CtIfImpl","sourcecode":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[56,57,58],"tindex":"42dc47ba-121e-11e6-b489-bf45edfccfe8","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-1},{"failures":[],"tindex":"42dc47bb-121e-11e6-b489-cffbfb2e690d","series":0,"name":"add","transplant":{"toString":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"variableMap":{"b":"lineSeparator","c":"length","u":"length","y":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length)","position":"org.apache.commons.codec.binary.Base64:393","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"42dc47bc-121e-11e6-b489-f56fb1864633","series":0,"name":"replace","transplant":{"toString":"this.maxPhonemes = maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:557","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[59,60,61,62,63,64,65],"tindex":"42dd592d-121e-11e6-b489-776ab6112425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[66,67,68,69,70,71],"tindex":"42dd592e-121e-11e6-b489-bfbc3b91f86d","series":0,"name":"replace","transplant":{"toString":"write(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"variableMap":{"singleByte":"singleByte"},"type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.encode(singleByte, 0, org.apache.commons.codec.binary.BaseNCodec.EOF, context)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"42dd592f-121e-11e6-b489-ad26daa203e7","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.util.Arrays.fill(saltBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"42dd5930-121e-11e6-b489-77c620f26b1f","series":0,"name":"replace","transplant":{"toString":"cnt >>= 1","position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"u"},"type":"adrStmt","transplantationPoint":{"toString":"u >>>= 1","position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"status":0},{"failures":[72,73,74,75,76,77,78,79],"tindex":"42dd8041-121e-11e6-b489-f960ff758cfb","series":0,"name":"replace","transplant":{"toString":"code.append('H')","position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.append(org.apache.commons.codec.binary.StringUtils.newStringUsAscii(rawData))","position":"org.apache.commons.codec.net.RFC1522Codec:79","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.binary.StringUtils.newStringUsAscii(rawData))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":44,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}