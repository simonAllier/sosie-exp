{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":23,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":72,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":18,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeNull":143,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":111,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":109,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":110,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":91,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":137,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":140,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":90,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":95,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":112,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":87,"org.apache.commons.codec.binary.Base64Test.testTriplets":44,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":99,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":74,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":75,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":17,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":55,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":62,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":65,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":122,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":124,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":123,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":11,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":49,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":92,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":83,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":132,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":121,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":119,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":51,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":52,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":120,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":129,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":131,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":41,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":21,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":126,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":139,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":6,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":127,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":8,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":136,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":135,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":58,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":71,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":125,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":15,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":113,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":5,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":27,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":101,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":134,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":38,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":79,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":103,"org.apache.commons.codec.language.SoundexTest.testB650":108,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":66,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":28,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":142,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":45,"org.apache.commons.codec.language.SoundexTest.testNewInstance":116,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":98,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":43,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":130,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":31,"org.apache.commons.codec.language.MetaphoneTest.testTCH":68,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":76,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":80,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":64,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":40,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":57,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":105,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":106,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":107,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":86,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":4,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":53,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":100,"org.apache.commons.codec.binary.Base64Test.testBase64":61,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":82,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":89,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":7,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":30,"org.apache.commons.codec.binary.Base64Test.testUUID":46,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":70,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":39,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":56,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":60,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":12,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":81,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":10,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":84,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":117,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":42,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":67,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":24,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":114,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":97,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":138,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":26,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":32,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":0,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":118,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":104,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":93,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":88,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":20,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":78,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":13,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":141,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":48,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":133,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":77,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":102,"org.apache.commons.codec.language.SoundexTest.testDifference":115,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":96,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":128,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":85,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":69,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":47,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":22,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":73},"transformations":[{"failures":[],"tindex":"ca72edd7-1164-11e6-ba7e-d73a809864eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:817","type":"CtReturnImpl","sourcecode":"return messageDigest"},"status":0},{"failures":[0,1,2,3,4],"tindex":"ca733bf8-1164-11e6-ba7e-cbf295c0be55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:545","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"ca733bf9-1164-11e6-ba7e-39bd119144e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[0,1,5,2,3],"tindex":"ca733bfa-1164-11e6-ba7e-a3c91ad2d2e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"status":-1},{"failures":[],"tindex":"ca73630b-1164-11e6-ba7e-8b3a8c18905e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-2},{"failures":[6,7,8,9,10,11,12,13],"tindex":"ca73630c-1164-11e6-ba7e-67bc49a65d10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[],"tindex":"ca73630d-1164-11e6-ba7e-3f579f91cbfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean"},"variableMap":{"concat":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-3},{"failures":[],"tindex":"ca738a1e-1164-11e6-ba7e-3b14a0345533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"variableMap":{"digit":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-3},{"failures":[],"tindex":"ca738a1f-1164-11e6-ba7e-81da6826eb87","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"variableMap":{"string":"data","charsetName":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[14,15,16,17],"tindex":"ca738a20-1164-11e6-ba7e-bb1b930fcefc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"this","this":"this","content":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"status":-1},{"failures":[18,19,20],"tindex":"ca73b131-1164-11e6-ba7e-753cd6dbde99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"status":-1},{"failures":[],"tindex":"ca73b132-1164-11e6-ba7e-89041b50029d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-2},{"failures":[21,22,23],"tindex":"ca73b133-1164-11e6-ba7e-5f4dfc01be6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:313","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"ca73d844-1164-11e6-ba7e-45c0d3979bed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-3},{"failures":[24,25,26,27,28,29,30,31],"tindex":"ca73d845-1164-11e6-ba7e-0b7501b49605","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"ca73d846-1164-11e6-ba7e-932a3fb4078f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[67],"tindex":"ca73ff57-1164-11e6-ba7e-ebd588d28458","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"status":-1},{"failures":[68],"tindex":"ca73ff58-1164-11e6-ba7e-9340ccb603e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:300","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"ca73ff59-1164-11e6-ba7e-9b783bab1642","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"ca73ff5a-1164-11e6-ba7e-5f52005a0fc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"code","mapped":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"status":-2},{"failures":[],"tindex":"ca74266b-1164-11e6-ba7e-cb05cbf9df28","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:283","type":"CtTryImpl","sourcecode":"try {\n    return new java.lang.String(bytes , charsetName);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e);\n}"},"status":-2},{"failures":[69,70,71,72],"tindex":"ca74266c-1164-11e6-ba7e-99fb1ce6b7c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:740","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('S');\n    index++;\n} else {\n    if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n        result.append(\"KS\");\n    } \n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13],"tindex":"ca74266d-1164-11e6-ba7e-fd32bfcc1407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[],"tindex":"ca744d7e-1164-11e6-ba7e-cf004a7619fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:353","type":"CtAssignmentImpl","sourcecode":"code = '-'"},"status":-2},{"failures":[],"tindex":"ca744d7f-1164-11e6-ba7e-810dc1ddf3e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"status":-2},{"failures":[],"tindex":"ca744d80-1164-11e6-ba7e-f74b62499f9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":0},{"failures":[73,74],"tindex":"ca744d81-1164-11e6-ba7e-2992056c6e50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:360","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 16 ; i++) {\n    if (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.boolean[][i]) {\n        c = (c >>> 2) | (c << 26);\n        d = (d >>> 2) | (d << 26);\n    } else {\n        c = (c >>> 1) | (c << 27);\n        d = (d >>> 1) | (d << 27);\n    }\n    c &= 268435455;\n    d &= 268435455;\n    int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))]);\n    final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))]);\n    schedule[(j++)] = (t << 16) | (s & 65535);\n    s = (s >>> 16) | (t & -65536);\n    s = (s << 4) | (s >>> 28);\n    schedule[(j++)] = s;\n}"},"status":-1},{"failures":[],"tindex":"ca747392-1164-11e6-ba7e-db864e5c228f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"status":-2},{"failures":[],"tindex":"ca747393-1164-11e6-ba7e-13df748a1afe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"status":-2},{"failures":[],"tindex":"ca749aa4-1164-11e6-ba7e-e133b6533a15","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"lastChar = ch"},"variableMap":{"ch":"mapped","lastChar":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:273","type":"CtAssignmentImpl","sourcecode":"mapped = getMappingCode(str, (incount++))"},"status":0},{"failures":[14,15,16,17],"tindex":"ca749aa5-1164-11e6-ba7e-d37ed961da18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:714","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[69,70,71,72],"tindex":"ca749aa6-1164-11e6-ba7e-7b4b19d5c8b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:552","type":"CtIfImpl","sourcecode":"if (conditionL0(value, index)) {\n    result.appendPrimary('L');\n} else {\n    result.append('L');\n}"},"status":-1},{"failures":[],"tindex":"ca749aa7-1164-11e6-ba7e-ab5370027d70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":0},{"failures":[75,76,77,78,79],"tindex":"ca749aa8-1164-11e6-ba7e-a7f1eb53fd4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"status":-1},{"failures":[],"tindex":"ca74c1b9-1164-11e6-ba7e-792b5f7a9905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-2},{"failures":[],"tindex":"ca74c1ba-1164-11e6-ba7e-d5db7c3b0be1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:629","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1"},"status":0},{"failures":[80],"tindex":"ca74c1bb-1164-11e6-ba7e-09e7e6b7db3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[],"tindex":"ca74e8cc-1164-11e6-ba7e-ad8cc3b816f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:512","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"ca74e8cd-1164-11e6-ba7e-d77f18aec23d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"ca74e8ce-1164-11e6-ba7e-a70afa3ce9e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return string.getBytes(charset)"},"status":-2},{"failures":[],"tindex":"ca750fdf-1164-11e6-ba7e-6ffdec319786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:531","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":0},{"failures":[81],"tindex":"ca750fe0-1164-11e6-ba7e-afb59789b90e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:158","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.net.QCodec.this.boolean) {\n    for (int int = 0 ; i < (data.int) ; i++) {\n        if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n            data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n        } \n    }\n} "},"status":-1},{"failures":[82],"tindex":"ca750fe1-1164-11e6-ba7e-b9cf288008ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:290","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[14,16,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"ca750fe2-1164-11e6-ba7e-dfa678017cf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:245","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))"},"status":-1},{"failures":[],"tindex":"ca7536f3-1164-11e6-ba7e-ffbaa904de64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"ca7536f4-1164-11e6-ba7e-b1fad4d4b513","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"status":0},{"failures":[],"tindex":"ca7536f5-1164-11e6-ba7e-b399da48673c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"status":-2},{"failures":[],"tindex":"ca755e06-1164-11e6-ba7e-f35fb628a44e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:684","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.append('T');\n} else {\n    result.append('0', 'T');\n}"},"status":-2},{"failures":[],"tindex":"ca755e07-1164-11e6-ba7e-adc3eefd136a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[],"tindex":"ca755e08-1164-11e6-ba7e-b15d908251d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0},{"failures":[],"tindex":"ca755e09-1164-11e6-ba7e-b92cf3f32b69","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"status":0},{"failures":[69,70,71],"tindex":"ca755e0a-1164-11e6-ba7e-7996a4324d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n    result.append(\"X\", \"SK\");\n} else {\n    result.append(\"SK\");\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:483","type":"CtIfImpl","sourcecode":"if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n    result.append('F');\n} else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} "},"status":-1},{"failures":[],"tindex":"ca75851b-1164-11e6-ba7e-d309076a1daf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"lastChar = ch"},"variableMap":{"ch":"code","lastChar":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"status":-2},{"failures":[95,96,97,98,71,99],"tindex":"ca75851c-1164-11e6-ba7e-ed6e1797583b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:245","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.equals(doubleMetaphone(value1, alternate), doubleMetaphone(value2, alternate))"},"status":-1},{"failures":[0,1,5,2,3,100,101,102,4],"tindex":"ca75851d-1164-11e6-ba7e-0dc7eb0b07ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:138","type":"CtIfImpl","sourcecode":"if (append && ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int))) {\n    java.lang.StringBuilder.append(replacement);\n    if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n        java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n    } \n    java.lang.String = null;\n} "},"status":-1},{"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"ca75ac2e-1164-11e6-ba7e-87ca7a8584f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:269","type":"CtAssignmentImpl","sourcecode":"out[0] = str.charAt(0)"},"status":-1},{"failures":[69,70],"tindex":"ca75ac2f-1164-11e6-ba7e-41c28ec2ef3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[125,126],"tindex":"ca75ac30-1164-11e6-ba7e-2dee6f61ff32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:202","type":"CtAssignmentImpl","sourcecode":"salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])"},"status":-1},{"failures":[],"tindex":"ca75ac31-1164-11e6-ba7e-413151a426fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE","dc":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-2},{"failures":[],"tindex":"ca75ac32-1164-11e6-ba7e-7fa25af681db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:296","type":"CtIfImpl","sourcecode":"if ((context.int) >= (context.int)) {\n    context.byte[] = null;\n} "},"variableMap":{"pos":"length","context":"context","readPos":"length","buffer":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"status":-3},{"failures":[127],"tindex":"ca75ac33-1164-11e6-ba7e-739aeb60d886","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:575","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"ca75ac34-1164-11e6-ba7e-ab8367323c41","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":0},{"failures":[],"tindex":"ca75d345-1164-11e6-ba7e-891f5448f006","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"variableMap":{"t":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE","right":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result"},"status":-2},{"failures":[],"tindex":"ca75d346-1164-11e6-ba7e-bbd08582c4ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:250","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[128,129,130,131,132,133,134,135],"tindex":"ca75d347-1164-11e6-ba7e-0b58268263ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-1},{"failures":[],"tindex":"ca75d348-1164-11e6-ba7e-d747dae00427","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"line":"ph","org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = ph.indexOf(\"[\")"},"status":-3},{"failures":[],"tindex":"ca75d349-1164-11e6-ba7e-bbf893a39720","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:431","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"variableMap":{"pArray":"lineSeparator","org.apache.commons.codec.binary.BaseNCodec.EOF":"currentLinePos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:392","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-2},{"failures":[],"tindex":"ca75d34a-1164-11e6-ba7e-2d84c4fb5528","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:705","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"status":-2},{"failures":[],"tindex":"ca75d34b-1164-11e6-ba7e-1f4a590e6a2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:378","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[69,70],"tindex":"ca75fa5c-1164-11e6-ba7e-51ce919c302d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[18,19,20],"tindex":"ca75fa5d-1164-11e6-ba7e-f148c3028c2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"status":-1},{"failures":[],"tindex":"ca75fa5e-1164-11e6-ba7e-bd16af0f88cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase()"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength)"},"status":-2},{"failures":[],"tindex":"ca75fa5f-1164-11e6-ba7e-9d68a2617af4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"status":0},{"failures":[],"tindex":"ca75fa60-1164-11e6-ba7e-f3bbaab77725","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"diff"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ca75fa61-1164-11e6-ba7e-2fc6ee1cd92c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"variableMap":{"input":"this","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"status":-2},{"failures":[],"tindex":"ca75fa62-1164-11e6-ba7e-71758da637f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"name2Size","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"name2Size","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"name2Size","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"i","minRating":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"name2Size","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"name2Size","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"name1Size","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"name1Size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (name1LtREnd.equals(name2RtLEnd)) {\n    name1Char[(name1Size - i)] = ' ';\n    name2Char[(name2Size - i)] = ' ';\n} "},"status":-3},{"failures":[],"tindex":"ca762173-1164-11e6-ba7e-b90b76e4caf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:99","type":"CtAssignmentImpl","sourcecode":"r = read(byte[], 0, 1)"},"status":0},{"failures":[],"tindex":"ca762174-1164-11e6-ba7e-0d7c434ee561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:791","type":"CtLocalVariableImpl","sourcecode":"final char char = charAt(value, (index + 2))"},"status":-2},{"failures":[],"tindex":"ca762175-1164-11e6-ba7e-91e0520d3077","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)"},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"ca762176-1164-11e6-ba7e-712c96e9bd0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:465","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ca762177-1164-11e6-ba7e-6952e04fcddc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-2},{"failures":[],"tindex":"ca762178-1164-11e6-ba7e-0959018437ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"ca764889-1164-11e6-ba7e-378ea5dc560c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:297","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"))"},"status":-2},{"failures":[],"tindex":"ca76488a-1164-11e6-ba7e-f589d51739ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:296","type":"CtIfImpl","sourcecode":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} "},"variableMap":{"lastChar":"charZero","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"status":-2},{"failures":[],"tindex":"ca76488b-1164-11e6-ba7e-e5d3aa218b1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:254","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"variableMap":{"e":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:509","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"))"},"status":-2},{"failures":[],"tindex":"ca76488c-1164-11e6-ba7e-2d9c689c6f6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"variableMap":{"name2":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:192","type":"CtAssignmentImpl","sourcecode":"saltString = m.group(1)"},"status":-2},{"failures":[136,21,137,23,138,139,140,141],"tindex":"ca76488d-1164-11e6-ba7e-4fb7e02740ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-1},{"failures":[],"tindex":"ca76488e-1164-11e6-ba7e-03627bc93e3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"pObject"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:110","type":"CtIfImpl","sourcecode":"if (!(pObject instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\");\n} "},"status":-3},{"failures":[],"tindex":"ca76488f-1164-11e6-ba7e-d5dd5d4ec373","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:174","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    if (b == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        hasUnderscores = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ca766fa0-1164-11e6-ba7e-39fc9e4fa71a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[142,143],"tindex":"ca766fa1-1164-11e6-ba7e-19ad62b82442","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:176","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[108,109,117,122,123,124],"tindex":"ca766fa2-1164-11e6-ba7e-33c7d6b14499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"variableMap":{"ch":"preHWChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ca766fa3-1164-11e6-ba7e-13b93aa1b53f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"variableMap":{"ctx1":"ctx","saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:166","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"status":-3},{"failures":[69,70],"tindex":"ca766fa4-1164-11e6-ba7e-b7792f250c15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":94,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}