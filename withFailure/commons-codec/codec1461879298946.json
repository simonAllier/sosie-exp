{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":35,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":9,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":27,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":32,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":31,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":28,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":30,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":18,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":20,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":23,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":29,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":14,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":7,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":25,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":33,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":12,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":26,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":17,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":19},"transformations":[{"failures":[0],"tindex":"0eb40bec-0d89-11e6-9ccc-87aed7c44e10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:109","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:160","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1"},"status":-1},{"failures":[1,2,3,4,5],"tindex":"0eb432fd-0d89-11e6-9ccc-d768a26e6d01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"hex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:145","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-1},{"failures":[],"tindex":"0eb432fe-0d89-11e6-9ccc-cf0eae57e670","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (printable == null) {\n    printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL","printable":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[],"tindex":"0eb45a0f-0d89-11e6-9ccc-bd8b5f88e927","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"status":-2},{"failures":[],"tindex":"0eb45a10-0d89-11e6-9ccc-37213dad13aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:435","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim()"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.HASH_INCLUDE":"text","line":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-3},{"failures":[6,7,8,9,10,11,12,13],"tindex":"0eb45a11-0d89-11e6-9ccc-7dc4e5e7a0d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:46","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(keyBytes, null)"},"variableMap":{"keyBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:155","type":"CtReturnImpl","sourcecode":"return new java.lang.String(data , charset)"},"status":-1},{"failures":[],"tindex":"0eb45a12-0d89-11e6-9ccc-cdc8a8b4f5ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"org.apache.commons.codec.language.Caverphone2.TEN_1","txt":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-2},{"failures":[14,15],"tindex":"0eb48123-0d89-11e6-9ccc-7765e67d06fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"status":-1},{"failures":[],"tindex":"0eb48124-0d89-11e6-9ccc-efc2dbe94c54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"variableMap":{"altCtx":"altCtx","saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-3},{"failures":[],"tindex":"0eb48125-0d89-11e6-9ccc-e7a3a3cfda6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[],"tindex":"0eb48126-0d89-11e6-9ccc-9bc613918ce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[16,17,18],"tindex":"0eb48127-0d89-11e6-9ccc-7b44e91e4796","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:878","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[17,18],"tindex":"0eb48128-0d89-11e6-9ccc-71dc2ae4d00b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:805","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[19],"tindex":"0eb4a839-0d89-11e6-9ccc-3751fab51c87","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"0eb4a83a-0d89-11e6-9ccc-515ba7c7ea98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:179","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (lsScanner.hasNextLine()) {\n        final java.lang.String java.lang.String = lsScanner.nextLine().trim();\n        if (inExtendedComment) {\n            if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = false;\n            } \n        } else {\n            if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = true;\n            } else if ((line.length()) > 0) {\n                ls.add(line);\n            } \n        }\n    }\n} finally {\n    lsScanner.close();\n}"},"status":-1},{"failures":[],"tindex":"0eb4a83b-0d89-11e6-9ccc-9bc8656937ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:375","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs))"},"status":-2},{"failures":[],"tindex":"0eb4a83c-0d89-11e6-9ccc-3dcaf9e4bef5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:366","type":"CtIfImpl","sourcecode":"if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"0eb4cf4d-0d89-11e6-9ccc-fd1701fdee9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:263","type":"CtCaseImpl","sourcecode":"case 'K' :\n    if (n > 0) {\n        if (!(isPreviousChar(local, n, 'C'))) {\n            code.append(symb);\n        } \n    } else {\n        code.append(symb);\n    }\n    break;"},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}