{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":63,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":109,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":35,"org.apache.commons.codec.binary.HexTest.testCustomCharset":94,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":67,"org.apache.commons.codec.language.NysiisTest.testSnat":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":126,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":125,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":22,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":108,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":113,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":21,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":31,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":115,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":77,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":16,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":74,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":128,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":68,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":90,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":56,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":104,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":26,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":71,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":129,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":47,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":12,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":7,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":30,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":48,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":106,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":111,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":69,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":102,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":50,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":78,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":99,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":105,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":98,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":75,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":34,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":87,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":88,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":9,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":45,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":27,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":58,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":55,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":6,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":40,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":84,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":124,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":95,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":61,"org.apache.commons.codec.language.NysiisTest.testTranan":120,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":81,"org.apache.commons.codec.language.NysiisTest.testSnad":116,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR":41,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":70,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":51,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":44,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":39,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":3,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":80,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":15,"org.apache.commons.codec.language.NysiisTest.testDropBy":118,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":20,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":127,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":18,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":100,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":17,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":79,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":97,"org.apache.commons.codec.binary.Base64Test.testConstructors":0,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":103,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":92,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":122,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":96,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":82,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":121,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":86,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":25,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":83,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":93,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":72,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":85,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":110,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":123,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":65,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":24,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":101,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":53,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":73,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":107,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":114,"org.apache.commons.codec.language.NysiisTest.testOthers":119,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":52,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":91,"org.apache.commons.codec.language.SoundexTest.testDifference":10,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":112,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":14,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":76,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN":43,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":89},"transformations":[{"failures":[],"tindex":"e832b4aa-0cc0-11e6-a4dd-39634ab1024a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:190","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (str.length()) ; i++) {\n    current = getMappingCode(str.charAt(i));\n    if (current == last) {\n        continue;\n    } else if (current != 0) {\n        sBuf.append(current);\n    } \n    last = current;\n}"},"status":-2},{"failures":[],"tindex":"e832dbbb-0cc0-11e6-a4dd-e7441d91e22e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-2},{"failures":[0,1],"tindex":"e83302cc-0cc0-11e6-a4dd-0d52d3fd66fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == element) || (isInAlphabet(element))) {\n    return true;\n} "},"status":-1},{"failures":[2,3,4,5,6],"tindex":"e83302cd-0cc0-11e6-a4dd-67d08e0c06aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:247","type":"CtIfImpl","sourcecode":"if ((n > 0) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n - 1)))) >= 0)) {\n    break;\n} "},"status":-1},{"failures":[7,8,9],"tindex":"e83302ce-0cc0-11e6-a4dd-53f58da41ef7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"variableMap":{"last":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[10],"tindex":"e83302cf-0cc0-11e6-a4dd-3934ce7ee0a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:260","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"e83329e0-0cc0-11e6-a4dd-a31063cd311f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:183","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"status":-2},{"failures":[],"tindex":"e83329e1-0cc0-11e6-a4dd-a146c5d34d3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))"},"status":-2},{"failures":[11],"tindex":"e83329e2-0cc0-11e6-a4dd-4f13c1393f82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:89","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"e83350f3-0cc0-11e6-a4dd-9d11f4e31f63","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"index","t":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:613","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"e83350f4-0cc0-11e6-a4dd-e5d31bd2cdd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[],"tindex":"e83350f5-0cc0-11e6-a4dd-e32de438d2b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:260","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"e83350f6-0cc0-11e6-a4dd-0d47202273f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_512"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"e8337807-0cc0-11e6-a4dd-4f0bcaa1510c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"variableMap":{"tempResult":"out","pBytes":"out","keyLen":"len","cp":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:88","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; j < len ; i++) {\n    int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4;\n    j++;\n    f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j));\n    j++;\n    out[i] = ((byte)(f & 255));\n}"},"status":-2},{"failures":[],"tindex":"e8337808-0cc0-11e6-a4dd-1be3226cddd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:385","type":"CtReturnImpl","sourcecode":"return encode(input, languageSet)"},"status":-2},{"failures":[],"tindex":"e8337809-0cc0-11e6-a4dd-573fd38f878f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[],"tindex":"e8339f1a-0cc0-11e6-a4dd-4d5d085d76da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"status":0},{"failures":[],"tindex":"e833c62b-0cc0-11e6-a4dd-018824a5b531","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} "},"status":-2},{"failures":[30],"tindex":"e833c62c-0cc0-11e6-a4dd-0302f8b0afc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:188","type":"CtIfImpl","sourcecode":"if ((isPreviousChar(local, n, 'S')) && (isNextChar(local, n, 'H'))) {\n    code.append('K');\n    break;\n} "},"variableMap":{"code":"local","local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:224","type":"CtIfImpl","sourcecode":"if ((n > 0) && ((regionMatch(local, n, \"GN\")) || (regionMatch(local, n, \"GNED\")))) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"e833c62d-0cc0-11e6-a4dd-5d389142ad92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])"},"variableMap":{"b":"buf","offset":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:114","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[31],"tindex":"e833ed3e-0cc0-11e6-a4dd-c1678ed66587","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:506","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-1},{"failures":[],"tindex":"e833ed3f-0cc0-11e6-a4dd-dd88743c6ecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:614","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"SIO\", \"SIA\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"SIAN\"))) {\n    if (slavoGermanic) {\n        result.append('S');\n    } else {\n        result.append('S', 'X');\n    }\n    index += 3;\n} else if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[26,27,28,29],"tindex":"e8341450-0cc0-11e6-a4dd-1dbbbfbd6be3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"status":-1},{"failures":[],"tindex":"e8341451-0cc0-11e6-a4dd-f56c062004ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"status":-2},{"failures":[],"tindex":"e8341452-0cc0-11e6-a4dd-69d157a488e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","left":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[],"tindex":"e8341453-0cc0-11e6-a4dd-a57abd1f579d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[32,33,34,35,36,37],"tindex":"e8343b64-0cc0-11e6-a4dd-a9d1331d6996","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:622","type":"CtIfImpl","sourcecode":"if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:569","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'H') {\n    result.append('F');\n    index += 2;\n} else {\n    result.append('P');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"P\", \"B\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[],"tindex":"e8343b65-0cc0-11e6-a4dd-4be2bf1fbb7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(((byte[])(raw)))"},"variableMap":{"raw":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(((java.lang.String)(source)))"},"status":-2},{"failures":[],"tindex":"e8346276-0cc0-11e6-a4dd-41a3f8c421d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (isLastChar(wdsz, n)) {\n    break;\n} "},"variableMap":{"wdsz":"c","n":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:115","type":"CtIfImpl","sourcecode":"if (c > 0) {\n    java.io.OutputStream.write(buf, 0, c);\n} "},"status":-2},{"failures":[],"tindex":"e8346277-0cc0-11e6-a4dd-41039e5a4d56","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-2},{"failures":[],"tindex":"e8346278-0cc0-11e6-a4dd-e16aacabed75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-2},{"failures":[34,35,36,37],"tindex":"e8348989-0cc0-11e6-a4dd-9b991998de5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:425","type":"CtIfImpl","sourcecode":"if ((index == 0) && (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    result.append('K', 'J');\n    index += 2;\n} else if (((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ER\")) || ((charAt(value, (index + 1))) == 'Y')) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"E\", \"I\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"RGY\", \"OGY\")))) {\n    result.append('K', 'J');\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"status":-1},{"failures":[38,39],"tindex":"e834898a-0cc0-11e6-a4dd-e91c4e24b679","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-1},{"failures":[],"tindex":"e834b09b-0cc0-11e6-a4dd-1f8a2ecd67c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:87","type":"CtInvocationImpl","sourcecode":"java.nio.charset.Charset.defaultCharset()"},"status":0},{"failures":[],"tindex":"e834b09c-0cc0-11e6-a4dd-3f6944584f8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-2},{"failures":[40,41,42,43],"tindex":"e834b09d-0cc0-11e6-a4dd-6d2400945ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[44],"tindex":"e834d7ae-0cc0-11e6-a4dd-69de999038e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"data","lastThree":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:720","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"status":-1},{"failures":[],"tindex":"e834d7af-0cc0-11e6-a4dd-2bc06ed53d59","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"status":-2},{"failures":[33,34,35,36,37],"tindex":"e834d7b0-0cc0-11e6-a4dd-4d1f006e74f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:136","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[45],"tindex":"e834fec1-0cc0-11e6-a4dd-89986cf82acd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"status":-1},{"failures":[7,46,47,8,48,49,50,9],"tindex":"e834fec2-0cc0-11e6-a4dd-833614e76bb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:394","type":"CtIfImpl","sourcecode":"if ((code != '-') && ((((lastCode != code) && ((code != '0') || (lastCode == '/'))) || (code < '0')) || (code > '8'))) {\n    output.addRight(code);\n} "},"status":-1},{"failures":[],"tindex":"e834fec3-0cc0-11e6-a4dd-11fa11817f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"status":-2},{"failures":[],"tindex":"e834fec4-0cc0-11e6-a4dd-c9e30e22f034","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:334","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"e834fec5-0cc0-11e6-a4dd-1702122a02ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"name","key":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[],"tindex":"e83525d6-0cc0-11e6-a4dd-6116dd90b7bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60],"tindex":"e83525d7-0cc0-11e6-a4dd-a37a596d0ab7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[],"tindex":"e83525d8-0cc0-11e6-a4dd-df1a03930ed4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:187","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"e83525d9-0cc0-11e6-a4dd-4b15228c58ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:705","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:709","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"e8354cea-0cc0-11e6-a4dd-313dc09627b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"status":-2},{"failures":[],"tindex":"e8354ceb-0cc0-11e6-a4dd-c5c6977debd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:427","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:426","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.Arrays.asList(input.split(\"\\\\s+\"))"},"status":-2},{"failures":[],"tindex":"e8354cec-0cc0-11e6-a4dd-a7c215870480","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[26,27,28,29],"tindex":"e8354ced-0cc0-11e6-a4dd-5b00e61eba07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:121","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-1},{"failures":[34],"tindex":"e8354cee-0cc0-11e6-a4dd-b5edf12d1a91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"variableMap":{"b":"index","t":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"e83573ff-0cc0-11e6-a4dd-b3a03dc01267","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:135","type":"CtIfImpl","sourcecode":"if (len == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (readLen == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(buf);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return readLen;\n}"},"status":-1},{"failures":[],"tindex":"e8357400-0cc0-11e6-a4dd-5f464077f4c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"hex1","chr":"hex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:186","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-2},{"failures":[84,85,86,87,88],"tindex":"e8357401-0cc0-11e6-a4dd-8f7a5a7ca169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"status":-1},{"failures":[89,90],"tindex":"e8357402-0cc0-11e6-a4dd-df9a466209eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.boolean[][i]) {\n    c = (c >>> 2) | (c << 26);\n    d = (d >>> 2) | (d << 26);\n} else {\n    c = (c >>> 1) | (c << 27);\n    d = (d >>> 1) | (d << 27);\n}"},"status":-1},{"failures":[91,92],"tindex":"e8357403-0cc0-11e6-a4dd-bb6945ef8bea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"e8357404-0cc0-11e6-a4dd-27e529749778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"variableMap":{"keyBytes":"keyBytes","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:70","type":"CtIfImpl","sourcecode":"if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt);\n}"},"status":-2},{"failures":[],"tindex":"e8359b15-0cc0-11e6-a4dd-ab2f9018c7fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[93,94,95,96,97,98,99,100,101,102,103,44,104,105,106,107,108,109,110,111,112,113,114],"tindex":"e8359b16-0cc0-11e6-a4dd-4152eab96027","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:321","type":"CtAssignmentImpl","sourcecode":"name2Char[i] = ' '"},"variableMap":{"name2Char":"out","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[],"tindex":"e8359b17-0cc0-11e6-a4dd-5570097c10d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"variableMap":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos","context":"context","modulus":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:400","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"e8359b18-0cc0-11e6-a4dd-017ed4014576","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key), valueToDigest)"},"variableMap":{"valueToDigest":"valueToDigest","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key), valueToDigest)"},"status":0},{"failures":[],"tindex":"e8359b19-0cc0-11e6-a4dd-f9d8f054191f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:87","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : charsToTrim) {\n    upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"e8359b1a-0cc0-11e6-a4dd-c1a980229c36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"e835c22b-0cc0-11e6-a4dd-55cee79363bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[115,116,117,118,119,120,121],"tindex":"e835c22c-0cc0-11e6-a4dd-e15282ed1f50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((curr == 'S') && (next == 'C')) && (aNext == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"next":"curr","org.apache.commons.codec.language.Nysiis.CHARS_SSS":"org.apache.commons.codec.language.Nysiis.CHARS_G","curr":"curr","aNext":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (curr == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'M') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[],"tindex":"e835c22d-0cc0-11e6-a4dd-e93b7131f695","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[],"tindex":"e835c22e-0cc0-11e6-a4dd-13ec86a4ae3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"variableMap":{"altResult":"obj","buffer":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"e835c22f-0cc0-11e6-a4dd-f18466a28716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"encodeSize","lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[],"tindex":"e835c230-0cc0-11e6-a4dd-5b72ceddb6b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"local.setCharAt(0, 'W')"},"status":-2},{"failures":[35,36,37],"tindex":"e835c231-0cc0-11e6-a4dd-9fa8bce9bb67","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"e835e942-0cc0-11e6-a4dd-e5dcc213b8c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"variableMap":{"buffer":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-2},{"failures":[110],"tindex":"e835e943-0cc0-11e6-a4dd-8d61b3e7aad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"key","key":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[122],"tindex":"e835e944-0cc0-11e6-a4dd-6170c7dcafe2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:312","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)))"},"status":-1},{"failures":[],"tindex":"e835e945-0cc0-11e6-a4dd-3b8848df9ae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:65","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[123,124,125,126],"tindex":"e835e946-0cc0-11e6-a4dd-dbe0c80bbfbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:95","type":"CtInvocationImpl","sourcecode":"branch.java.lang.StringBuilder.append(toString())"},"status":-1},{"failures":[],"tindex":"e835e947-0cc0-11e6-a4dd-3dbf30de87af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-2},{"failures":[],"tindex":"e835e948-0cc0-11e6-a4dd-311333a211f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"variableMap":{"data":"org.apache.commons.codec.binary.Base32.DECODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:288","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"e835e949-0cc0-11e6-a4dd-d94376924d93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"status":-2},{"failures":[],"tindex":"e836105a-0cc0-11e6-a4dd-fb7ae5f1d061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-2},{"failures":[11],"tindex":"e836105b-0cc0-11e6-a4dd-23862ad7c230","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:89","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[61,63,65,70,127,128],"tindex":"e836105c-0cc0-11e6-a4dd-bdd430871d22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:358","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result"},"status":-1},{"failures":[129],"tindex":"e836105d-0cc0-11e6-a4dd-d3f34206333f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(false, pad)"},"status":-1},{"failures":[34,36,37],"tindex":"e836105e-0cc0-11e6-a4dd-49fd4a13e8ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[36,37],"tindex":"e836376f-0cc0-11e6-a4dd-133a9b400405","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:803","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:844","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'M') {\n    return true;\n} "},"status":-1},{"failures":[36,37],"tindex":"e8365e80-0cc0-11e6-a4dd-691e556103d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"right = t"},"variableMap":{"t":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":87,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}