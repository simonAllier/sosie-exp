{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":56,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":69,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":66,"org.apache.commons.codec.language.NysiisTest.testSnat":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":71,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":104,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":35,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":33,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":117,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":116,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":9,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":6,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":103,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":7,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":92,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":75,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":48,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":47,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":88,"org.apache.commons.codec.language.NysiisTest.testCap":10,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":84,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":118,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":121,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":111,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":45,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":76,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":90,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":130,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":44,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":91,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":127,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":93,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":124,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":52,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":70,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":5,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":105,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":110,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":27,"org.apache.commons.codec.language.SoundexTest.testB650":32,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":68,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":131,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":74,"org.apache.commons.codec.language.SoundexTest.testNewInstance":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":78,"org.apache.commons.codec.language.NysiisTest.testTranan":25,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":102,"org.apache.commons.codec.language.NysiisTest.testFal":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":59,"org.apache.commons.codec.language.NysiisTest.testSnad":20,"org.apache.commons.codec.language.MetaphoneTest.testTCH":125,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":107,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":62,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":126,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":30,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":58,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":1,"org.apache.commons.codec.language.NysiisTest.testDropBy":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":79,"org.apache.commons.codec.binary.Base64Test.testBase64":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":115,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":55,"org.apache.commons.codec.binary.Base64Test.testUUID":86,"org.apache.commons.codec.binary.Base64Test.testSingletons":96,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":114,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":122,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":113,"org.apache.commons.codec.binary.Base64Test.testPairs":85,"org.apache.commons.codec.language.NysiisTest.testRule2":15,"org.apache.commons.codec.language.NysiisTest.testRule1":14,"org.apache.commons.codec.language.NysiisTest.testRule7":18,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":99,"org.apache.commons.codec.language.NysiisTest.testRule6":17,"org.apache.commons.codec.language.NysiisTest.testRule5":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":60,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":81,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":41,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":22,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":83,"org.apache.commons.codec.language.NysiisTest.testBran":19,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":26,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":51,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":120,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":61,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":94,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":100,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":95,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":128,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":65,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":42,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":106,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":109,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":123,"org.apache.commons.codec.language.NysiisTest.testDad":11,"org.apache.commons.codec.language.NysiisTest.testOthers":24,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":97,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":82,"org.apache.commons.codec.language.SoundexTest.testDifference":39,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":8,"org.apache.commons.codec.language.NysiisTest.testDan":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":72,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":112,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":67,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":87,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":77},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"0e2e7a92-11a2-11e6-ace4-0112dd01aa53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:154","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"0e2ec8b3-11a2-11e6-ace4-f51d49056f13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":-1},{"failures":[],"tindex":"0e2ec8b4-11a2-11e6-ace4-7f39d748404f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"status":-2},{"failures":[54,55,56],"tindex":"0e2ec8b5-11a2-11e6-ace4-27e310cf50f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"status":-1},{"failures":[57,56],"tindex":"0e2ec8b6-11a2-11e6-ace4-8df294a44823","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"variableMap":{"replacedName":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:76","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value, false)"},"status":-1},{"failures":[],"tindex":"0e2ec8b7-11a2-11e6-ace4-f16bf1320f1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"status":-2},{"failures":[],"tindex":"0e2eefc8-11a2-11e6-ace4-a944e6d87626","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:69","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0e2eefc9-11a2-11e6-ace4-ff165426bb64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[58],"tindex":"0e2eefca-11a2-11e6-ace4-df02aef9bddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:225","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"0e2eefcb-11a2-11e6-ace4-875b0535d2c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-2},{"failures":[],"tindex":"0e2eefcc-11a2-11e6-ace4-7352e58e5549","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:465","type":"CtIfImpl","sourcecode":"if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n    return false;\n} "},"variableMap":{"pad":"pad","arrayOctet":"arrayOctet","allowWSPad":"allowWSPad","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0e2f16dd-11a2-11e6-ace4-adbb2cab89a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"variableMap":{"str":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:96","type":"CtAssignmentImpl","sourcecode":"branch.java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"0e2f16de-11a2-11e6-ace4-d15b88a635b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:145","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":0},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"0e2f16df-11a2-11e6-ace4-d73bd288eaae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"name2Char","name1Size":"i","i":"name2Size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":-1},{"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"0e2f16e0-11a2-11e6-ace4-19117dfd43f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:429","type":"CtIfImpl","sourcecode":"if (context.boolean) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"0e2f3df1-11a2-11e6-ace4-995c06b3d9b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"status":-2},{"failures":[],"tindex":"0e2f3df2-11a2-11e6-ace4-e3b6b9426834","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"variableMap":{"key":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"status":-2},{"failures":[103,104,105,106,107,108,109,110],"tindex":"0e2f3df3-11a2-11e6-ace4-170af1dc3e7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:317","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-1},{"failures":[111,0,112,1,2,113,114,3,115,116,117,118,119,120,4,5,6,7],"tindex":"0e2f3df4-11a2-11e6-ace4-8b9b7b1512ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:423","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-1},{"failures":[],"tindex":"0e2f3df5-11a2-11e6-ace4-dd6da6966fbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:501","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = regex.endsWith(\"$\")"},"variableMap":{"regex":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:552","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = boxContent.startsWith(\"^\")"},"status":0},{"failures":[],"tindex":"0e2f6506-11a2-11e6-ace4-dfbf2add31ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-2},{"failures":[],"tindex":"0e2f6507-11a2-11e6-ace4-e71c5d5d79e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"0e2f6508-11a2-11e6-ace4-8fba9695da0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"this","this":"this","content":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"status":-2},{"failures":[121,122,123],"tindex":"0e2f6509-11a2-11e6-ace4-3d397189dad5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"status":-1},{"failures":[],"tindex":"0e2f650a-11a2-11e6-ace4-17b7358696f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"variableMap":{"text1":"letter","text2":"letter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"status":-2},{"failures":[],"tindex":"0e2f8c1b-11a2-11e6-ace4-0b37ae18e3bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"b","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:317","type":"CtForImpl","sourcecode":"for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n    b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n}"},"status":-2},{"failures":[],"tindex":"0e2f8c1c-11a2-11e6-ace4-e78cc0f8562f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:149","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 3) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n    } \n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n    final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n    final boolean boolean = parts[2].equals(\"true\");\n    rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n}"},"status":0},{"failures":[],"tindex":"0e2f8c1d-11a2-11e6-ace4-61abb760bf5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:349","type":"CtAssignmentImpl","sourcecode":"subBuilder = rulesApplication.getPhonemeBuilder()"},"variableMap":{"rulesApplication":"rulesApplication","subBuilder":"phonemeBuilder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:473","type":"CtAssignmentImpl","sourcecode":"phonemeBuilder = rulesApplication.getPhonemeBuilder()"},"status":-3},{"failures":[],"tindex":"0e2f8c1e-11a2-11e6-ace4-eb649d51f02b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"status":-2},{"failures":[],"tindex":"0e2fb32f-11a2-11e6-ace4-0b5638f2f867","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"status":-2},{"failures":[],"tindex":"0e2fb330-11a2-11e6-ace4-e1fcdfc9b6f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())"},"variableMap":{"value":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:283","type":"CtTryImpl","sourcecode":"try {\n    return new java.lang.String(bytes , charsetName);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e);\n}"},"status":-2},{"failures":[],"tindex":"0e2fb331-11a2-11e6-ace4-1947b3788666","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"status":-2},{"failures":[124],"tindex":"0e2fb332-11a2-11e6-ace4-b77277275218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[54,55,124,56],"tindex":"0e2fb333-11a2-11e6-ace4-ffbd43353eab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (!slavoGermanic)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"IE\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, \"ME\", \"MA\")))) {\n    result.appendAlternate('R');\n} else {\n    result.append('R');\n}"},"status":-1},{"failures":[125,126,127,128,129,130,131],"tindex":"0e2fb334-11a2-11e6-ace4-5d8992d0e160","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"matches = substring.equals(test)"},"status":-1},{"failures":[],"tindex":"0e2fda45-11a2-11e6-ace4-7f03602e04f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"status":-2},{"failures":[],"tindex":"0e2fda46-11a2-11e6-ace4-95681e4c4edc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:154","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":37,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}