{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":82,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":92,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":122,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":153,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":159,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":158,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":148,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":128,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":147,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":142,"org.apache.commons.codec.binary.Base64Test.testTriplets":34,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":79,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":3,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":86,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":161,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":136,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":137,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":73,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":119,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":91,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":22,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":49,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":62,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":90,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":67,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":9,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":8,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":43,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":149,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":81,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":138,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":152,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":6,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":45,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":46,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":11,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":71,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":2,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":87,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":113,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":123,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":52,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":26,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":127,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":57,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":15,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":1,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":104,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":37,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":111,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":98,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":85,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":21,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":68,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":112,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":157,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":36,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":120,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":126,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":135,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":80,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":77,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":69,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":121,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":115,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":88,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":83,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":64,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":70,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":18,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":51,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":105,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":141,"org.apache.commons.codec.language.NysiisTest.testDropBy":155,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":47,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":12,"org.apache.commons.codec.binary.Base64Test.testBase64":61,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":118,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":78,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":146,"org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters":134,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.binary.Base64Test.testUUID":40,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":114,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":50,"org.apache.commons.codec.binary.Base64Test.testSingletons":56,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":99,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":96,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":117,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":75,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":60,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":144,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":143,"org.apache.commons.codec.binary.Base64Test.testPairs":39,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":124,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":74,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":65,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":95,"org.apache.commons.codec.binary.Base64Test.testCodec112":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":125,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":20,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":106,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":139,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":102,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":35,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1":131,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":72,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3":132,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":32,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5":133,"org.apache.commons.codec.binary.Base64Test.testCodec68":58,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":109,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":130,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":151,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":17,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":33,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":10,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":23,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":54,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":66,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":110,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":100,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":19,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":55,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":103,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":93,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":129,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":156,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":84,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":97,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":150,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":145,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":76,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":24,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":42,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":160,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":154,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":101,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":140,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":27,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":41,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"882ffba9-0d8b-11e6-9d70-5d32a95d67f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:208","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"883022ba-0d8b-11e6-9d70-954e2ef012e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[0,1,2,3],"tindex":"883022bb-0d8b-11e6-9d70-ab3d45595927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; j < 6 ; j++) {\n    c <<= 1;\n    if (((b[y]) & u) != 0) {\n        c |= 1;\n    } \n    u >>>= 1;\n    if (u == 0) {\n        y++;\n        u = 128;\n    } \n    buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n}"},"status":-1},{"failures":[4,5],"tindex":"883049cc-0d8b-11e6-9d70-9dad8bf68dec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:343","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"883049cd-0d8b-11e6-9d70-8308af04f8a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"883049ce-0d8b-11e6-9d70-01df0e97cbe4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"variableMap":{"index":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[6],"tindex":"883049cf-0d8b-11e6-9d70-7bd2b28af0e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"status":-1},{"failures":[],"tindex":"883049d0-0d8b-11e6-9d70-b37ecd7e743d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"object","ascii":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-3},{"failures":[],"tindex":"883049d1-0d8b-11e6-9d70-1120f65e12d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:481","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 27))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"pos","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:405","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-3},{"failures":[],"tindex":"883070e2-0d8b-11e6-9d70-4366f5a74dd4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = ph.indexOf(\"[\")"},"status":-2},{"failures":[7,8,9,10,11,12,13,14],"tindex":"883070e3-0d8b-11e6-9d70-c5ca962d75ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"key","element":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"883070e4-0d8b-11e6-9d70-73ca5692c5d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-3},{"failures":[4,5,15],"tindex":"883070e5-0d8b-11e6-9d70-33f229e7b274","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:397","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"883097f6-0d8b-11e6-9d70-33d2d5554493","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:161","type":"CtAssignmentImpl","sourcecode":"data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte"},"variableMap":{"data":"buffer","i":"pos","org.apache.commons.codec.net.QCodec.UNDERSCORE":"pad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:467","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[16],"tindex":"883097f7-0d8b-11e6-9d70-31661a7f2a31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls)"},"status":-1},{"failures":[],"tindex":"883097f8-0d8b-11e6-9d70-c56ee6ee4b34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:288","type":"CtIfImpl","sourcecode":"if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    pos = 1;\n}"},"status":-3},{"failures":[],"tindex":"883097f9-0d8b-11e6-9d70-6d1158d35b5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:621","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, isChunked, false)"},"status":-2},{"failures":[17,18,19,20,21],"tindex":"883097fa-0d8b-11e6-9d70-9dba57f03a06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:247","type":"CtIfImpl","sourcecode":"if ((n > 0) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n - 1)))) >= 0)) {\n    break;\n} "},"status":-1},{"failures":[0,3],"tindex":"8830bf0b-0d8b-11e6-9d70-c1958208fac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"status":-1},{"failures":[],"tindex":"8830bf0c-0d8b-11e6-9d70-273d46d2c956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:481","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"8830bf0d-0d8b-11e6-9d70-1dda7bd4d1f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + remainder"},"variableMap":{"remainder":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:302","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[0,3],"tindex":"8830bf0e-0d8b-11e6-9d70-3575826e6611","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"8830bf0f-0d8b-11e6-9d70-3f37bf6fd34c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:250","type":"CtAssignmentImpl","sourcecode":"context.byte[] = new byte[getDefaultBufferSize()]"},"status":-1},{"failures":[0,3],"tindex":"8830e620-0d8b-11e6-9d70-39eeccfef03a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)"},"status":-1},{"failures":[],"tindex":"8830e621-0d8b-11e6-9d70-5d5e641fac1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"variableMap":{"singleByte":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-3},{"failures":[],"tindex":"8830e622-0d8b-11e6-9d70-f9ffda9e4b1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:500","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"8830e623-0d8b-11e6-9d70-8f72662d1abb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:504","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[],"tindex":"8830e624-0d8b-11e6-9d70-f3ee151db29b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","l_ascii":"buffer","bits":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[104,16],"tindex":"8830e625-0d8b-11e6-9d70-0b1249dc2712","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"88310d36-0d8b-11e6-9d70-e7b102dea30a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"line","org.apache.commons.codec.language.Caverphone1.SIX_1":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:423","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-3},{"failures":[105],"tindex":"88310d37-0d8b-11e6-9d70-fb5177254ba2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:225","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[106,107,108],"tindex":"88310d38-0d8b-11e6-9d70-2d9872bbfa62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"88310d39-0d8b-11e6-9d70-c5e8594c32d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:453","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (!slavoGermanic)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"IE\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, \"ME\", \"MA\")))) {\n    result.appendAlternate('R');\n} else {\n    result.append('R');\n}"},"status":-2},{"failures":[4,5,15],"tindex":"88310d3a-0d8b-11e6-9d70-d1f003853af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:368","type":"CtIfImpl","sourcecode":"if (index > 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n        result.append('K');\n    } else {\n        result.append('X', 'K');\n    }\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"8831344b-0d8b-11e6-9d70-9349e970ec8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"variableMap":{"languages":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:117","type":"CtReturnImpl","sourcecode":"return other"},"status":-3},{"failures":[109,110,111,112,113,114,115],"tindex":"8831344c-0d8b-11e6-9d70-43202dfbb2af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"8831344d-0d8b-11e6-9d70-f3f08259de1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-3},{"failures":[],"tindex":"8831344e-0d8b-11e6-9d70-498c08fd607c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; i <= (rounds - 1) ; i++) {\n    ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm);\n    if ((i & 1) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } else {\n        ctx.update(altResult, 0, blocksize);\n    }\n    if ((i % 3) != 0) {\n        ctx.update(sBytes, 0, saltLen);\n    } \n    if ((i % 7) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } \n    if ((i & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(pBytes, 0, keyLen);\n    }\n    altResult = ctx.digest();\n}"},"status":-2},{"failures":[],"tindex":"8831344f-0d8b-11e6-9d70-5b250de1299f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:97","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"88313450-0d8b-11e6-9d70-25e33cf8e3bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:430","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())"},"variableMap":{"str":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text)"},"status":-2},{"failures":[],"tindex":"88313451-0d8b-11e6-9d70-f103be72507d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:260","type":"CtIfImpl","sourcecode":"if (inMultilineComment) {\n    if (line.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        inMultilineComment = false;\n    } \n    continue;\n} "},"variableMap":{"line":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","inMultilineComment":"inMultilineComment","org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"status":-2},{"failures":[],"tindex":"88315b62-0d8b-11e6-9d70-b3e59bd29fd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"pos","l_ascii":"buffer","bits":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:488","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[],"tindex":"88315b63-0d8b-11e6-9d70-cbe3a1ba05e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:342","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[],"tindex":"88315b64-0d8b-11e6-9d70-c30dabcff054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"status":-2},{"failures":[],"tindex":"88315b65-0d8b-11e6-9d70-2da4d8a854f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:220","type":"CtIfImpl","sourcecode":"if (rule.boolean) {\n    langs.retainAll(rule.java.util.Set<java.lang.String>);\n} else {\n    langs.removeAll(rule.java.util.Set<java.lang.String>);\n}"},"status":-2},{"failures":[],"tindex":"88315b66-0d8b-11e6-9d70-cbe82049ebf2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"variableMap":{"pos":"length","context":"context","length":"length","buffer":"pArray","lineSeparator":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-3},{"failures":[116],"tindex":"88315b67-0d8b-11e6-9d70-2b544f6de4e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"variableMap":{"resizedBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:445","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key), valueToDigest).doFinal()"},"status":-1},{"failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"88315b68-0d8b-11e6-9d70-cf35b93eda70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"status":-1},{"failures":[78,79,80,88,89,90,91,92,94,95,96],"tindex":"88315b69-0d8b-11e6-9d70-bd8566315310","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:464","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) << 4))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"8831827a-0d8b-11e6-9d70-b7ccd3e70598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"code","mapped":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-2},{"failures":[131,132,133,134,135],"tindex":"8831827b-0d8b-11e6-9d70-5997abf00ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-1},{"failures":[136,104,16,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"8831827c-0d8b-11e6-9d70-c7b383766e3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-1},{"failures":[],"tindex":"8831827d-0d8b-11e6-9d70-4d975c213fe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:98","type":"CtWhileImpl","sourcecode":"while (r == 0) {\n    r = read(byte[], 0, 1);\n}"},"variableMap":{"r":"length","singleByte":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-3},{"failures":[],"tindex":"8831827e-0d8b-11e6-9d70-d594e322af96","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"variableMap":{"languages":"org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:134","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n        ls.add(lang);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"8831827f-0d8b-11e6-9d70-5df730511ed3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"variableMap":{"source":"dc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"status":-2},{"failures":[152,153],"tindex":"88318280-0d8b-11e6-9d70-91b539bf1c8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[139],"tindex":"88318281-0d8b-11e6-9d70-43d3fe6c6543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"8831a992-0d8b-11e6-9d70-6f7b3b21618e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":-2},{"failures":[],"tindex":"8831a993-0d8b-11e6-9d70-43425e61004a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"variableMap":{"c":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"out[1] = right"},"status":-2},{"failures":[],"tindex":"8831a994-0d8b-11e6-9d70-dfda93a9f17a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"txt","txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":-3},{"failures":[],"tindex":"8831a995-0d8b-11e6-9d70-839606703a9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"status":-2},{"failures":[],"tindex":"8831a996-0d8b-11e6-9d70-e5107528d520","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:150","type":"CtCaseImpl","sourcecode":"case '\\u00d1' :\n    result.append('N');\n    index++;\n    break;"},"status":-3},{"failures":[],"tindex":"8831a997-0d8b-11e6-9d70-d9d7f7067ed3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[],"tindex":"8831a998-0d8b-11e6-9d70-33053b825f5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"TCH\")) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"8831a999-0d8b-11e6-9d70-dd0264ca98ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-3},{"failures":[154,155],"tindex":"8831d0aa-0d8b-11e6-9d70-f5c24bdd9e38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:120","type":"CtIfImpl","sourcecode":"if ((curr == 'E') && (next == 'V')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[156,157,158,159],"tindex":"8831d0ab-0d8b-11e6-9d70-65a8f333e0e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:95","type":"CtInvocationImpl","sourcecode":"branch.java.lang.StringBuilder.append(toString())"},"status":-1},{"failures":[],"tindex":"8831d0ac-0d8b-11e6-9d70-eb2077b443e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":-2},{"failures":[160,161],"tindex":"8831d0ad-0d8b-11e6-9d70-a9a1d2afb184","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[],"tindex":"8831d0ae-0d8b-11e6-9d70-fdfd379f2ae5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":70,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}