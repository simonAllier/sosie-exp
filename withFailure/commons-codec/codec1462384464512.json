{"failureDictionary":{"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":28,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":29,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":5,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":34,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":32,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":13,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":10,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":22,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":8,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":19,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":17,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":47,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":16,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":0,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":15,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":44,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":42,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":43,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":21,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":49,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":23,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":36,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":41,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":27,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":12,"org.apache.commons.codec.language.SoundexTest.testB650":31,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":51,"org.apache.commons.codec.language.SoundexTest.testNewInstance":39,"org.apache.commons.codec.language.SoundexTest.testDifference":38,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":4},"transformations":[{"failures":[],"tindex":"3cd87ca1-1221-11e6-a82a-a5eb513f211b","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('$')","position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(')')","position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"status":0},{"failures":[],"tindex":"3cd8a3b2-1221-11e6-a82a-95e99c3eed00","series":0,"name":"replace","transplant":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"hex2"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.write(hex2)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:187","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-2},{"failures":[],"tindex":"3cd8cac3-1221-11e6-a82a-5b4267af65b7","series":0,"name":"replace","transplant":{"toString":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE);\n} else {\n    ctx1.update(keyBytes);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"variableMap":{"ctx1":"ctx","keyBytes":"keyBytes","finalb":"keyBytes","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"ii","i":"ii"},"type":"adrStmt","transplantationPoint":{"toString":"if ((ii & 1) == 1) {\n    ctx.update(finalb[j]);\n} else {\n    ctx.update(keyBytes[j]);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((ii & 1) == 1) {\n    ctx.update(finalb[j]);\n} else {\n    ctx.update(keyBytes[j]);\n}"},"status":-3},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"3cd8cac4-1221-11e6-a82a-9549e54712c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} ","position":"org.apache.commons.codec.language.bm.Lang:154","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-1},{"failures":[],"tindex":"3cd8cac5-1221-11e6-a82a-272b1c922287","series":0,"name":"replace","transplant":{"toString":"final char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.RADIX))","position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"b","org.apache.commons.codec.net.URLCodec.RADIX":"b"},"type":"adrStmt","transplantationPoint":{"toString":"final char hex2 = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-3},{"failures":[],"tindex":"3cd8f1d6-1221-11e6-a82a-9d1027231f91","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('[')","position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('*')","position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"status":0},{"failures":[],"tindex":"3cd8f1d7-1221-11e6-a82a-99fe2ff13dd9","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[0], b, 0)","position":"org.apache.commons.codec.digest.UnixCrypt:228","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[0], b, 0)"},"variableMap":{"b":"ascii","out":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"toString":"for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];\n    } \n}","position":"org.apache.commons.codec.binary.BinaryCodec:209","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-2},{"failures":[],"tindex":"3cd918e8-1221-11e6-a82a-af72e98ee7b4","series":0,"name":"replace","transplant":{"toString":"int r = read(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:97","type":"CtLocalVariableImpl","sourcecode":"int int = read(byte[], 0, 1)"},"variableMap":{"singleByte":"original"},"type":"adrStmt","transplantationPoint":{"toString":"final int iChar = original[i]","position":"org.apache.commons.codec.digest.UnixCrypt:221","type":"CtLocalVariableImpl","sourcecode":"final int int = original[i]"},"status":-3},{"failures":[],"tindex":"3cd918e9-1221-11e6-a82a-67c74cea656a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (doEncode) {\n    baseNCodec.encode(buf, 0, c, context);\n} else {\n    baseNCodec.decode(buf, 0, c, context);\n}","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"3cd918ea-1221-11e6-a82a-134fff0234b4","series":0,"name":"replace","transplant":{"toString":"final char charOne = salt.charAt(1)","position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"variableMap":{"salt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"final char mappedChar = org.apache.commons.codec.language.Soundex.this.map(str.charAt(index))","position":"org.apache.commons.codec.language.Soundex:185","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(str.charAt(index))"},"status":-1},{"failures":[],"tindex":"3cd93ffb-1221-11e6-a82a-4329ddfe0434","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)","position":"org.apache.commons.codec.net.QCodec:232","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"3cd93ffc-1221-11e6-a82a-83aa1142ffc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"r = read(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:99","type":"CtAssignmentImpl","sourcecode":"r = read(byte[], 0, 1)"},"status":0},{"failures":[49,50,51],"tindex":"3cd93ffd-1221-11e6-a82a-f1ec6ba801e3","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ly\", \"Ly\")","position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"l$\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l$\", \"3\")"},"status":-1},{"failures":[],"tindex":"3cd93ffe-1221-11e6-a82a-353d66e9ee61","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[49,52,50,51],"tindex":"3cd9670f-1221-11e6-a82a-e1f67ab23519","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"r\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"b\", \"p\")","position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"status":-1},{"failures":[],"tindex":"3cd96710-1221-11e6-a82a-5dc33a4f06c1","series":0,"name":"replace","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"r"},"type":"adrStmt","transplantationPoint":{"toString":"while (r == 0) {\n    r = read(singleByte, 0, 1);\n}","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:98","type":"CtWhileImpl","sourcecode":"while (r == 0) {\n    r = read(byte[], 0, 1);\n}"},"status":-2},{"failures":[],"tindex":"3cd96711-1221-11e6-a82a-118a998b9b1e","series":0,"name":"replace","transplant":{"toString":"phonemes.put(mergedPhoneme, mergedPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:366","type":"CtInvocationImpl","sourcecode":"phonemes.put(mergedPhoneme, mergedPhoneme)"},"variableMap":{"mergedPhoneme":"newPhoneme","phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"toString":"phonemes.put(newPhoneme, newPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:368","type":"CtInvocationImpl","sourcecode":"phonemes.put(newPhoneme, newPhoneme)"},"status":-2},{"failures":[],"tindex":"3cd96712-1221-11e6-a82a-e35ba1a6fe62","series":0,"name":"add","transplant":{"toString":"final org.apache.commons.codec.language.bm.Languages.LanguageSet ls = guessLanguages(text)","position":"org.apache.commons.codec.language.bm.Lang:203","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = guessLanguages(text)"},"variableMap":{"text":"input"},"type":"adrStmt","transplantationPoint":{"toString":"final org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet = org.apache.commons.codec.language.bm.PhoneticEngine.this.lang.guessLanguages(input)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:384","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.Lang.guessLanguages(input)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}