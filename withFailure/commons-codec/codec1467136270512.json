{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":37,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":138,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":105,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":77,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":97,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":132,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":41,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":96,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":122,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":1,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":90,"org.apache.commons.codec.binary.Base64Test.testTriplets":126,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":14,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":10,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":28,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":86,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":121,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":85,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":87,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":18,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":54,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":62,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":64,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":141,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":130,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":48,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":6,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":53,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":50,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":51,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":72,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":11,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":110,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":22,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":23,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":58,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":75,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":125,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":0,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":92,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":95,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":137,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":115,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":79,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":123,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":76,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":9,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":120,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":31,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":94,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":116,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":19,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":5,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":20,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":133,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":39,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":40,"org.apache.commons.codec.language.MetaphoneTest.testTCH":136,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":12,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":140,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":117,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":129,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":71,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":55,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":69,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":89,"org.apache.commons.codec.language.NysiisTest.testDropBy":108,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":52,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":101,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":98,"org.apache.commons.codec.binary.Base64Test.testBase64":61,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":17,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":13,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.binary.Base64Test.testUUID":46,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":111,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":131,"org.apache.commons.codec.binary.Base64Test.testSingletons":57,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":80,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":128,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":15,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":60,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":68,"org.apache.commons.codec.binary.Base64Test.testPairs":45,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":24,"org.apache.commons.codec.binary.Base64Test.testCodec112":56,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":88,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":102,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":134,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":104,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":73,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":109,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":142,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":113,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":70,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":106,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":114,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":81,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":83,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":135,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":93,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":91,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":124,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":119,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":30,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":84,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":127,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":118,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":100,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":107,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":139,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":82,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":103,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":47,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":42,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":33},"transformations":[{"failures":[0,1],"tindex":"e5ef4be9-3d58-11e6-a34b-15b5af1e1848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)"},"status":-1},{"failures":[],"tindex":"e5ef72fa-3d58-11e6-a34b-7b2287c4e0e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:296","type":"CtIfImpl","sourcecode":"if ((context.int) >= (context.int)) {\n    context.byte[] = null;\n} "},"status":-2},{"failures":[],"tindex":"e5ef72fb-3d58-11e6-a34b-895137e3cd91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:192","type":"CtAssignmentImpl","sourcecode":"saltString = m.group(1)"},"status":-2},{"failures":[2,3,4],"tindex":"e5ef9a0c-3d58-11e6-a34b-ed95749ab498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"index","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"e5ef9a0d-3d58-11e6-a34b-1de14e4e3db4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"java.lang.Character.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.java.lang.Character.char"},"status":-2},{"failures":[],"tindex":"e5ef9a0e-3d58-11e6-a34b-7bd4441cf95e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} "},"variableMap":{"arrayOctet":"org.apache.commons.codec.binary.Base64.DECODE_TABLE","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:510","type":"CtReturnImpl","sourcecode":"return (octet == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.byte)) || (((octet >= 0) && (octet < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) && ((org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][octet]) != (-1)))"},"status":-2},{"failures":[],"tindex":"e5ef9a0f-3d58-11e6-a34b-2f3c7d1bf8f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"sBuf.append(current)"},"variableMap":{"current":"value","sBuf":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":0},{"failures":[],"tindex":"e5ef9a10-3d58-11e6-a34b-8dc91c50b19b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 1 :\n        break;\n    case 2 :\n        context.int = (context.int) >> 4;\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        context.int = (context.int) >> 2;\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"variableMap":{"ibitWorkArea":"length","pos":"modulus","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"decodeTable","modulus":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n        context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"e5efc121-3d58-11e6-a34b-9d33f00e70eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, null)"},"variableMap":{"keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:46","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(keyBytes, null)"},"status":0},{"failures":[],"tindex":"e5efc122-3d58-11e6-a34b-4537b6ea5afa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":0},{"failures":[],"tindex":"e5efc123-3d58-11e6-a34b-abd404a188dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"e5efc124-3d58-11e6-a34b-4d5b210def79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('+')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"status":0},{"failures":[],"tindex":"e5efc125-3d58-11e6-a34b-f38a0d8cc20f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[],"tindex":"e5efc126-3d58-11e6-a34b-e3dfb5a41604","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:763","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"e5efc127-3d58-11e6-a34b-f1edb31ad750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String java.lang.String = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14],"tindex":"e5efc128-3d58-11e6-a34b-31105033ee0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[2,3],"tindex":"e5efe839-3d58-11e6-a34b-c7d2038449e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"status":-1},{"failures":[],"tindex":"e5efe83a-3d58-11e6-a34b-91cf71c43e5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:67","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"e5efe83b-3d58-11e6-a34b-01cd7d564552","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(';')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"status":-1},{"failures":[],"tindex":"e5efe83c-3d58-11e6-a34b-250d00073a51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:347","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '0';\n} else if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n    if (lastCode == '/') {\n        continue;\n    } \n    code = '-';\n} else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"e5f00f4d-3d58-11e6-a34b-8726a8eb3d7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"n","to":"wdsz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:194","type":"CtIfImpl","sourcecode":"if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n    code.append('K');\n} else {\n    code.append('X');\n}"},"status":-2},{"failures":[27,28],"tindex":"e5f00f4e-3d58-11e6-a34b-055ad1e0e133","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:344","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"e5f00f4f-3d58-11e6-a34b-c5df2f06875d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}"},"status":-1},{"failures":[29,30],"tindex":"e5f00f50-3d58-11e6-a34b-f7a17141fdb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":-1},{"failures":[31,2,3,32,4,33],"tindex":"e5f00f51-3d58-11e6-a34b-b357477ea990","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:97","type":"CtWhileImpl","sourcecode":"while ((!(result.isComplete())) && (index <= ((value.length()) - 1))) {\n    switch (value.charAt(index)) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n        case 'Y' :\n            index = handleAEIOUY(result, index);\n            break;\n        case 'B' :\n            result.append('P');\n            index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n            break;\n        case '\\u00c7' :\n            result.append('S');\n            index++;\n            break;\n        case 'C' :\n            index = handleC(value, result, index);\n            break;\n        case 'D' :\n            index = handleD(value, result, index);\n            break;\n        case 'F' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n            break;\n        case 'G' :\n            index = handleG(value, result, index, slavoGermanic);\n            break;\n        case 'H' :\n            index = handleH(value, result, index);\n            break;\n        case 'J' :\n            index = handleJ(value, result, index, slavoGermanic);\n            break;\n        case 'K' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n            break;\n        case 'L' :\n            index = handleL(value, result, index);\n            break;\n        case 'M' :\n            result.append('M');\n            index = conditionM0(value, index) ? index + 2 : index + 1;\n            break;\n        case 'N' :\n            result.append('N');\n            index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n            break;\n        case '\\u00d1' :\n            result.append('N');\n            index++;\n            break;\n        case 'P' :\n            index = handleP(value, result, index);\n            break;\n        case 'Q' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n            break;\n        case 'R' :\n            index = handleR(value, result, index, slavoGermanic);\n            break;\n        case 'S' :\n            index = handleS(value, result, index, slavoGermanic);\n            break;\n        case 'T' :\n            index = handleT(value, result, index);\n            break;\n        case 'V' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n            break;\n        case 'W' :\n            index = handleW(value, result, index);\n            break;\n        case 'X' :\n            index = handleX(value, result, index);\n            break;\n        case 'Z' :\n            index = handleZ(value, result, index, slavoGermanic);\n            break;\n        default :\n            index++;\n            break;\n    }\n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41],"tindex":"e5f03662-3d58-11e6-a34b-018d16c5fc76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:337","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())))"},"status":-1},{"failures":[2,3],"tindex":"e5f20b23-3d58-11e6-a34b-1d14e1fcd7ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:375","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[42],"tindex":"e5f20b24-3d58-11e6-a34b-cdcaec521a74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"e5f20b25-3d58-11e6-a34b-b5460bbe9301","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"name2","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:315","type":"CtAssignmentImpl","sourcecode":"name2RtLStart = name2.substring(i, (i + 1))"},"status":-2},{"failures":[27,28],"tindex":"e5f20b26-3d58-11e6-a34b-9b47a0242067","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:348","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"e5f20b27-3d58-11e6-a34b-d1a637cc263b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"org.apache.commons.codec.binary.Base64.MASK_6BITS","lineSeparator":"org.apache.commons.codec.binary.Base64.STANDARD_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-1},{"failures":[],"tindex":"e5f20b28-3d58-11e6-a34b-a97e28a26249","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"value","dc":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:876","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]) {\n    if (value.startsWith(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-2},{"failures":[84],"tindex":"e5f23239-3d58-11e6-a34b-e9a91c1d3701","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"status":-1},{"failures":[],"tindex":"e5f2323a-3d58-11e6-a34b-f791a2451a2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"e5f2323b-3d58-11e6-a34b-11b3be9c4795","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"num","minRating":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"num","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"num"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:74","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())));\n}"},"status":-2},{"failures":[85,86,87],"tindex":"e5f2323c-3d58-11e6-a34b-8915795ea469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:222","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean)) {\n    patternLength = 1;\n} "},"status":-1},{"failures":[],"tindex":"e5f2323d-3d58-11e6-a34b-f7f49df06f8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:249","type":"CtIfImpl","sourcecode":"if ((context.byte[]) == null) {\n    context.byte[] = new byte[getDefaultBufferSize()];\n    context.int = 0;\n    context.int = 0;\n} else {\n    final byte[] byte[] = new byte[(context.byte[].int) * (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)];\n    java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int);\n    context.byte[] = b;\n}"},"variableMap":{"pos":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR":"org.apache.commons.codec.binary.BaseNCodec.EOF","context":"context","this":"baseNCodec","length":"org.apache.commons.codec.binary.BaseNCodec.EOF","buffer":"singleByte","readPos":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"e5f2323e-3d58-11e6-a34b-87bb1606ee65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:338","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"e5f2323f-3d58-11e6-a34b-45b7d72f4446","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"variableMap":{"strict":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-2},{"failures":[],"tindex":"e5f23240-3d58-11e6-a34b-df084a78e2b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[88,89,90,91,85,92,86,87],"tindex":"e5f25951-3d58-11e6-a34b-c9410a5f46b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:121","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"e5f25952-3d58-11e6-a34b-25e780e7f951","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"variableMap":{"t":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"status":-2},{"failures":[],"tindex":"e5f25953-3d58-11e6-a34b-57a4ff8f6a10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[],"tindex":"e5f25954-3d58-11e6-a34b-2715eef5cbdf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"len","to":"startSrc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((bigInt.bitLength()) % 8) == 0) {\n    startSrc = 1;\n    len--;\n} "},"status":-2},{"failures":[],"tindex":"e5f25955-3d58-11e6-a34b-b1d86a1e6bc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":-2},{"failures":[],"tindex":"e5f25956-3d58-11e6-a34b-cfc799db5e04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"minRating","d":"org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[88,91,85,92,86,87],"tindex":"e5f25957-3d58-11e6-a34b-897129bfc631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-1},{"failures":[],"tindex":"e5f25958-3d58-11e6-a34b-b1d178e317e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:103","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('~')"},"status":0},{"failures":[],"tindex":"e5f25959-3d58-11e6-a34b-23065e28d337","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[2,4],"tindex":"e5f2595a-3d58-11e6-a34b-433dfa008dbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:694","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"e5f2595b-3d58-11e6-a34b-5b7193d55356","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"status":-1},{"failures":[106],"tindex":"e5f2595c-3d58-11e6-a34b-a16a3d706b1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[107,108,109],"tindex":"e5f2595d-3d58-11e6-a34b-47e3cd48dcf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:282","type":"CtLocalVariableImpl","sourcecode":"final char char = i < (len - 2) ? chars[(i + 2)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char"},"variableMap":{"len":"i","i":"i","org.apache.commons.codec.language.Nysiis.SPACE":"org.apache.commons.codec.language.Nysiis.SPACE","chars":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:281","type":"CtLocalVariableImpl","sourcecode":"final char char = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char"},"status":-1},{"failures":[],"tindex":"e5f2806e-3d58-11e6-a34b-bdd33b3cb541","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:302","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e5f2806f-3d58-11e6-a34b-efaa122b5b63","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"status":-2},{"failures":[],"tindex":"e5f28070-3d58-11e6-a34b-e97b176ffaf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"status":-2},{"failures":[],"tindex":"e5f28071-3d58-11e6-a34b-231ebeadcee1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:47","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e5f28072-3d58-11e6-a34b-251842d94ff6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (r > 0) {\n    final byte byte = byte[][0];\n    return b < 0 ? 256 + b : b;\n} "},"status":-2},{"failures":[110,111,112,113,114,115,116],"tindex":"e5f28073-3d58-11e6-a34b-018ac1e33935","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"variableMap":{"ctx1":"ctx","keyBytes":"keyBytes","finalb":"keyBytes","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((ii & 1) == 1) {\n    ctx.update(finalb[j]);\n} else {\n    ctx.update(keyBytes[j]);\n}"},"status":-1},{"failures":[],"tindex":"e5f28074-3d58-11e6-a34b-31d3ed5b6338","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + ch))"},"status":-2},{"failures":[],"tindex":"e5f28075-3d58-11e6-a34b-7f8009febd4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[2,3],"tindex":"e5f28076-3d58-11e6-a34b-d3ce58709bdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:530","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[117,118,119,120,121,122,123,124],"tindex":"e5f28077-3d58-11e6-a34b-c3ee35ce55f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"e5f28078-3d58-11e6-a34b-adfe75583da1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = accentedWord.length()"},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:45","type":"CtLocalVariableImpl","sourcecode":"final int int = str.length()"},"status":-2},{"failures":[2,3,125],"tindex":"e5f28079-3d58-11e6-a34b-7db7ba522d66","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[126,43,44,45,46,47,127,48,49,50,51,52,53,54,128,55,57,58,59,60,61,62,63,129,64,65,66,67,70,71,72,73,74,76,80,81,82,83],"tindex":"e5f2a68a-3d58-11e6-a34b-c1e8bc30feb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"inPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:381","type":"CtLocalVariableImpl","sourcecode":"int int = in[(inPos++)]"},"status":-1},{"failures":[],"tindex":"e5f2a68b-3d58-11e6-a34b-17cf97ed457d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:319","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"e5f2a68c-3d58-11e6-a34b-dde2ed0861f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"name1","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":-2},{"failures":[117,118,119,120,121,122,123,124],"tindex":"e5f2a68d-3d58-11e6-a34b-6320d3f4553d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"ctx.reset()"},"variableMap":{"ctx":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:276","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"e5f2a68e-3d58-11e6-a34b-af5099e4813b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"variableMap":{"i":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"status":-2},{"failures":[],"tindex":"e5f2a68f-3d58-11e6-a34b-4ffedf568e45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:551","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'L') {\n    if (conditionL0(value, index)) {\n        result.appendPrimary('L');\n    } else {\n        result.append('L');\n    }\n    index += 2;\n} else {\n    index++;\n    result.append('L');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"status":-2},{"failures":[],"tindex":"e5f2a690-3d58-11e6-a34b-af41655afc19","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"status":-2},{"failures":[],"tindex":"e5f2a691-3d58-11e6-a34b-739ea1d40d01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-2},{"failures":[],"tindex":"e5f2a692-3d58-11e6-a34b-dbb44c4cbc40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"name","org.apache.commons.codec.language.Caverphone1.SIX_1":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"status":-2},{"failures":[130,131],"tindex":"e5f2a693-3d58-11e6-a34b-b3e4944c2927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[],"tindex":"e5f2a694-3d58-11e6-a34b-0b8b2edfe86d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[2,3,125,4],"tindex":"e5f2cda5-3d58-11e6-a34b-8b1ad0dad667","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:345","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[15,16,17,132,19,133,81,82,134],"tindex":"e5f2cda6-3d58-11e6-a34b-258ce720e577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(0, open)"},"variableMap":{"ph":"text","open":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:138","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-1},{"failures":[],"tindex":"e5f2cda7-3d58-11e6-a34b-851dc7143a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:225","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"variableMap":{"b":"length","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n        }\n    } else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        buffer.write(b);\n    } \n}"},"status":-2},{"failures":[],"tindex":"e5f2cda8-3d58-11e6-a34b-3f5b5ebabad0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[93,94,95,96,97],"tindex":"e5f2cda9-3d58-11e6-a34b-0bcd9e9dc4c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:540","type":"CtIfImpl","sourcecode":"if (branching) {\n    currentBranches.clear();\n    currentBranches.addAll(nextBranches);\n} "},"status":-1},{"failures":[],"tindex":"e5f2cdaa-3d58-11e6-a34b-e1c0a03cb75b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:682","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[135],"tindex":"e5f2cdab-3d58-11e6-a34b-2551ef74493a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-1},{"failures":[],"tindex":"e5f2cdac-3d58-11e6-a34b-a3e859a671ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:100","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('{')"},"status":0},{"failures":[],"tindex":"e5f2cdad-3d58-11e6-a34b-a77715cfca7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-2},{"failures":[],"tindex":"e5f2cdae-3d58-11e6-a34b-5bf43449b74d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":0},{"failures":[136,137,138],"tindex":"e5f2cdaf-3d58-11e6-a34b-1328c21c0540","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[3],"tindex":"e5f2cdb0-3d58-11e6-a34b-993f07a475a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:361","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[139,140],"tindex":"e5f2cdb1-3d58-11e6-a34b-e778c089a453","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:132","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[],"tindex":"e5f2cdb2-3d58-11e6-a34b-5b15c2b5154b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:207","type":"CtAssignmentImpl","sourcecode":"this.char[] = data"},"variableMap":{"data":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:109","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[],"tindex":"e5f2f4c3-3d58-11e6-a34b-479e2a9d6499","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:362","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (((index + (test.length())) - 1) < (string.length()))) {\n    final java.lang.String java.lang.String = string.substring(index, (index + (test.length())));\n    matches = substring.equals(test);\n} "},"variableMap":{"test":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX","string":"buffer","index":"rounds","matches":"roundsCustom"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:424","type":"CtIfImpl","sourcecode":"if (roundsCustom) {\n    buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String);\n    buffer.append(rounds);\n    buffer.append(\"$\");\n} "},"status":-2},{"failures":[16,141],"tindex":"e5f2f4c4-3d58-11e6-a34b-351804ecd3d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"variableMap":{"roundsCustom":"encodeBlanks"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-1},{"failures":[],"tindex":"e5f2f4c5-3d58-11e6-a34b-9562b387a5cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":-2},{"failures":[],"tindex":"e5f2f4c6-3d58-11e6-a34b-93b4bd507edd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'I') {\n    result.append('J');\n} else {\n    result.append('K');\n}"},"status":-2},{"failures":[142],"tindex":"e5f2f4c7-3d58-11e6-a34b-215b4f1dff37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:238","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"status":-1},{"failures":[],"tindex":"e5f2f4c8-3d58-11e6-a34b-eb836df9d2c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"e5f2f4c9-3d58-11e6-a34b-fb53599ff205","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"variableMap":{"upperName":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"failures":[2,3,125],"tindex":"e5f2f4ca-3d58-11e6-a34b-07228fa16b08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[],"tindex":"e5f2f4cb-3d58-11e6-a34b-6f95e1e178f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"nextReplacement","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"nextReplacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:530","type":"CtInvocationImpl","sourcecode":"nextBranch.processNextReplacement(nextReplacement, force)"},"status":-2},{"failures":[],"tindex":"e5f2f4cc-3d58-11e6-a34b-c1aace8ef84f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.class":"org.apache.commons.codec.language.bm.Languages.class","languageRulesResourceName":"languagesResourceName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}