{"failureDictionary":{"org.apache.commons.codec.language.NysiisTest.testSnat":7,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":41,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":22,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":17,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":73,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":39,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":29,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":27,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":52,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":66,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":70,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":91,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":43,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":59,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":86,"org.apache.commons.codec.language.NysiisTest.testCap":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":24,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":81,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":87,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":54,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":13,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":88,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":89,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":76,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":93,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":74,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":56,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":57,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":102,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":61,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":51,"org.apache.commons.codec.language.NysiisTest.testTranan":11,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":103,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":77,"org.apache.commons.codec.language.NysiisTest.testFal":4,"org.apache.commons.codec.language.NysiisTest.testSnad":6,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":60,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":99,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":16,"org.apache.commons.codec.language.NysiisTest.testDropBy":9,"org.apache.commons.codec.binary.Base64Test.testBase64":98,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":21,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":53,"org.apache.commons.codec.binary.Base64Test.testUUID":83,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":36,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":92,"org.apache.commons.codec.binary.Base64Test.testSingletons":96,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":48,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":18,"org.apache.commons.codec.binary.Base64Test.testPairs":82,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":44,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":67,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":100,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":45,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":14,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":32,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":65,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":8,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":55,"org.apache.commons.codec.language.NysiisTest.testBran":5,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":78,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":79,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":71,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":94,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":101,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":63,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":95,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":47,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":33,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":20,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":69,"org.apache.commons.codec.language.NysiisTest.testDad":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":72,"org.apache.commons.codec.language.NysiisTest.testOthers":10,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":85,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":97,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":0,"org.apache.commons.codec.language.NysiisTest.testDan":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":46,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":15,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":75,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":84},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"5a4b2fd9-1163-11e6-8fac-0bd211e0ff3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:101","type":"CtReturnImpl","sourcecode":"return ((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"5a4b56ea-1163-11e6-8fac-e75680b795c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-1},{"failures":[],"tindex":"5a4b56eb-1163-11e6-8fac-ef8030ebf67f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"status":0},{"failures":[],"tindex":"5a4b56ec-1163-11e6-8fac-ad5b8175d284","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"status":0},{"failures":[31,32],"tindex":"5a4b56ed-1163-11e6-8fac-4160bbe14369","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, null)"},"status":-1},{"failures":[33,34,35,36,37,38,39],"tindex":"5a4b56ee-1163-11e6-8fac-83aee88fc909","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:144","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[],"tindex":"5a4b56ef-1163-11e6-8fac-9f8689ea0645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:405","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":-3},{"failures":[],"tindex":"5a4b7e00-1163-11e6-8fac-990d893dce41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"lineLength","y":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:392","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-2},{"failures":[],"tindex":"5a4b7e01-1163-11e6-8fac-33d0950a452a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:468","type":"CtIfImpl","sourcecode":"if ((++index) < (branches.int)) {\n    sb.append('|');\n} "},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"5a4b7e02-1163-11e6-8fac-ffa3f0f03540","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-1},{"failures":[],"tindex":"5a4b7e03-1163-11e6-8fac-07dfeaf0bb34","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":0},{"failures":[],"tindex":"5a4ba514-1163-11e6-8fac-15da0c59df0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:270","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"D\")"},"status":-2},{"failures":[34,35,36,38,39],"tindex":"5a4ba515-1163-11e6-8fac-d9e8655c5a76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"5a4ba516-1163-11e6-8fac-c570e0c5d772","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"variableMap":{"a":"maxLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"status":0},{"failures":[],"tindex":"5a4ba517-1163-11e6-8fac-43faf0e8a590","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"sumLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-2},{"failures":[],"tindex":"5a4ba518-1163-11e6-8fac-ff41880fa3f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:368","type":"CtInvocationImpl","sourcecode":"phonemes.put(newPhoneme, newPhoneme)"},"variableMap":{"newPhoneme":"mergedPhoneme","phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:366","type":"CtInvocationImpl","sourcecode":"phonemes.put(mergedPhoneme, mergedPhoneme)"},"status":0},{"failures":[],"tindex":"5a4bcc29-1163-11e6-8fac-e1be3b8ee1ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:99","type":"CtIfImpl","sourcecode":"if (txtLength == 1) {\n    return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":0},{"failures":[52,53,54,55,56,57],"tindex":"5a4bcc2a-1163-11e6-8fac-236e1587a7e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"variableMap":{"name1":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:240","type":"CtAssignmentImpl","sourcecode":"name2 = getFirst3Last3(name2)"},"status":-1},{"failures":[],"tindex":"5a4bcc2b-1163-11e6-8fac-f93879b4bdde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"ibitWorkArea","i":"org.apache.commons.codec.binary.Base64.MASK_6BITS","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"5a4bcc2c-1163-11e6-8fac-c569171da0cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"variableMap":{"name2":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[58,59],"tindex":"5a4bcc2d-1163-11e6-8fac-1f12b7b217c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[60],"tindex":"5a4bcc2e-1163-11e6-8fac-1f07021c67c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-1},{"failures":[],"tindex":"5a4bf33f-1163-11e6-8fac-352d866c8530","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:559","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:188","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":-3},{"failures":[61,62],"tindex":"5a4bf340-1163-11e6-8fac-37d64993262a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"variableMap":{"code":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"status":-1},{"failures":[63,64,65,66,67,68,69,34,35,36,70,71,72,73,74,75,37,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"5a4bf341-1163-11e6-8fac-c12fef7115db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:438","type":"CtIfImpl","sourcecode":"if (b == (byte)) {\n    context.boolean = true;\n    break;\n} else {\n    if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n        final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n        if (result >= 0) {\n            context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n            context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n            if ((context.int) == 0) {\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            } \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"5a4bf342-1163-11e6-8fac-4d6ba5102875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"5a4c1a53-1163-11e6-8fac-8d8159aff3a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:304","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location))"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":27,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}