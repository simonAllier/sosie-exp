{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":82,"org.apache.commons.codec.binary.HexTest.testCustomCharset":96,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":106,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":104,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":111,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData":113,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":10,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":59,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":81,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":86,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":58,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":119,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":53,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":22,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":65,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":94,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":63,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":66,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":112,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":128,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":105,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":34,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":70,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":69,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":60,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":133,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":49,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le":33,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":48,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":68,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData":36,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":118,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":72,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":125,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":77,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":79,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":84,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":37,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":91,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":140,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":74,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":88,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":142,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":78,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":99,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":121,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":28,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":67,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":75,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":64,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":9,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":24,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":134,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":122,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":21,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":40,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":138,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":45,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":139,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":97,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":4,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":127,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":41,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":6,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":18,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":93,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":35,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":136,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":124,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":52,"org.apache.commons.codec.language.NysiisTest.testDropBy":115,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":12,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":73,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":57,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":141,"org.apache.commons.codec.binary.Base64Test.testUUID":31,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":38,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":47,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":123,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":130,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":55,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":146,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":54,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":98,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":92,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":129,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":17,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":144,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":143,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":50,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":108,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":114,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":30,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":110,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":29,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt":39,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":126,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":26,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":62,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":100,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":95,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":71,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":120,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":83,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":43,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":137,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":103,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":101,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":102,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":5,"org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":61,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":56,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":25,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":131,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":20,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":147,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":80,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":87,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":135,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":14,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":117,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":51,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":109,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":76,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":132,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"65938f41-3dab-11e6-9409-cdd4c4ee3bd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"status":-2},{"failures":[],"tindex":"65938f42-3dab-11e6-9409-31b4dbb9a638","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-2},{"failures":[],"tindex":"65938f43-3dab-11e6-9409-ab408688f0ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:90","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[0,1],"tindex":"6593b654-3dab-11e6-9409-3555aad0825d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"6593b655-3dab-11e6-9409-01d4324dde89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:352","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"6593b656-3dab-11e6-9409-a3bb4ca01a75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"status":-2},{"failures":[],"tindex":"6593b657-3dab-11e6-9409-27792bdf5797","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15],"tindex":"6593b658-3dab-11e6-9409-dd74619c9c7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"ch","c2":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n} "},"status":-1},{"failures":[],"tindex":"6593b659-3dab-11e6-9409-4165337e911c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"lContext":"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[16,17],"tindex":"6593b65a-3dab-11e6-9409-6fbf209b8aaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"6593dd6b-3dab-11e6-9409-5b0f30e9e3c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"6593dd6c-3dab-11e6-9409-4b84310a3497","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:287","type":"CtAssignmentImpl","sourcecode":"index = handleCH(value, result, index)"},"status":-2},{"failures":[18,19,20,21,22,23,24,25],"tindex":"6593dd6d-3dab-11e6-9409-c56e86a41c73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[26],"tindex":"6593dd6e-3dab-11e6-9409-b3a130323673","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:238","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"status":-1},{"failures":[],"tindex":"6593dd6f-3dab-11e6-9409-c5844630aa4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"l_raw","key":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-2},{"failures":[],"tindex":"6593dd70-3dab-11e6-9409-b517ea6116cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"6593dd71-3dab-11e6-9409-97d7731e156a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"str2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1).equals(org.apache.commons.codec.language.AbstractCaverphone.this.encode(str2))"},"status":-2},{"failures":[27],"tindex":"6593dd72-3dab-11e6-9409-9ba10b501ef8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[],"tindex":"65940483-3dab-11e6-9409-73c326c30ead","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:319","type":"CtIfImpl","sourcecode":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} "},"status":-2},{"failures":[],"tindex":"65940484-3dab-11e6-9409-898dc3187599","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:317","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"schedule"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:381","type":"CtReturnImpl","sourcecode":"return schedule"},"status":-2},{"failures":[28],"tindex":"65940485-3dab-11e6-9409-89792e46fd53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"65940486-3dab-11e6-9409-a5fec55acbba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[1], b, 4)"},"status":0},{"failures":[29,30,31,32],"tindex":"65940487-3dab-11e6-9409-e3cdaa6e75f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"variableMap":{"bytes":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-1},{"failures":[],"tindex":"65940488-3dab-11e6-9409-71f3b80af3e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"65940489-3dab-11e6-9409-4384e1aa0851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"variableMap":{"urlsafe":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[],"tindex":"6594048a-3dab-11e6-9409-67dddf0863c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:230","type":"CtLocalVariableImpl","sourcecode":"final int int = ch - 'A'"},"status":-2},{"failures":[],"tindex":"65942b9b-3dab-11e6-9409-f7a87af51629","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:423","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[],"tindex":"65942b9c-3dab-11e6-9409-8f31ea56204b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.contains(language)"},"status":0},{"failures":[33],"tindex":"65942b9d-3dab-11e6-9409-ab4a02763ce0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:367","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"65942b9e-3dab-11e6-9409-f19e08bf6911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"failures":[34,27,35],"tindex":"65942b9f-3dab-11e6-9409-cb8e29ace3e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"65942ba0-3dab-11e6-9409-15793f504764","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:85","type":"CtIfImpl","sourcecode":"if (!(source instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\");\n} "},"status":0},{"failures":[],"tindex":"65942ba1-3dab-11e6-9409-c3b336c6e2d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"value","salt":"value","prefix":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n    if ((((index == 0) && ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n        result.append('H');\n    } else {\n        result.append('J', 'H');\n    }\n    index++;\n} else {\n    if ((index == 0) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")))) {\n        result.append('J', 'A');\n    } else if (((isVowel(charAt(value, (index - 1)))) && (!slavoGermanic)) && (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))) {\n        result.append('J', 'H');\n    } else if (index == ((value.length()) - 1)) {\n        result.append('J', ' ');\n    } else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n        result.append('J');\n    } \n    if ((charAt(value, (index + 1))) == 'J') {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[36,37,38,39,40,41],"tindex":"659452b2-3dab-11e6-9409-b12a5667a984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:161","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"status":-1},{"failures":[],"tindex":"659452b3-3dab-11e6-9409-a10327d7e7fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"l_raw","ascii":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-2},{"failures":[],"tindex":"659452b4-3dab-11e6-9409-231af037b598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[37,38,41,42,43,44,45],"tindex":"659452b5-3dab-11e6-9409-cd254f6deedc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:223","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb, 0, (ii > 16 ? 16 : ii))"},"status":-1},{"failures":[7],"tindex":"659452b6-3dab-11e6-9409-ad8e08692de1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:195","type":"CtReturnImpl","sourcecode":"return ((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')"},"status":-1},{"failures":[],"tindex":"659452b7-3dab-11e6-9409-a9789d69ccd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-2},{"failures":[46,47],"tindex":"659452b8-3dab-11e6-9409-4b6eee07ee0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"status":-1},{"failures":[48],"tindex":"659452b9-3dab-11e6-9409-e35a18a03ea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('-')"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15],"tindex":"659452ba-3dab-11e6-9409-53690e3d872a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:433","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = aWord.split(\"'\")"},"variableMap":{"aWord":"inputContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:519","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'))"},"status":-1},{"failures":[18,19,20,21,22,23,24,25],"tindex":"659479cb-3dab-11e6-9409-31f6706cc330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"659479cc-3dab-11e6-9409-b75e32999fad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + remainder"},"variableMap":{"remainder":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-1},{"failures":[67],"tindex":"659479cd-3dab-11e6-9409-8d9eb46819c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","ascii":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:153","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[68,69,70,71,72,73,74,75],"tindex":"659479ce-3dab-11e6-9409-cf6e7c0081c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"status":-1},{"failures":[],"tindex":"659479cf-3dab-11e6-9409-a58164172d8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"l_ascii","bigBytes":"l_ascii","len":"jj","startSrc":"length","startDst":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:249","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}"},"status":-2},{"failures":[],"tindex":"659479d0-3dab-11e6-9409-27b7b4745bec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"variableMap":{"currentLine":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:446","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[76,77],"tindex":"659479d1-3dab-11e6-9409-47a899e3cded","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byteToCheck) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"variableMap":{"byteToCheck":"pad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:465","type":"CtIfImpl","sourcecode":"if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n    return false;\n} "},"status":-1},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,29,98,99],"tindex":"659479d2-3dab-11e6-9409-1563f9187f9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"toDigits","name1Size":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[],"tindex":"6594a0e3-3dab-11e6-9409-ed07fe984e76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE","text":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>)"},"status":-2},{"failures":[],"tindex":"6594a0e4-3dab-11e6-9409-5f797c380b2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"status":-2},{"failures":[],"tindex":"6594a0e5-3dab-11e6-9409-635d6cbe9c07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:369","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n        code = '4';\n    } else {\n        code = '8';\n    }\n} else {\n    if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '8';\n    } else {\n        code = '4';\n    }\n}"},"status":-2},{"failures":[],"tindex":"6594a0e6-3dab-11e6-9409-43828379004b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:300","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-2},{"failures":[100,101,102,103,104,105],"tindex":"6594a0e7-3dab-11e6-9409-5b159c07e65e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[106,46,47],"tindex":"6594a0e8-3dab-11e6-9409-453cbcd50bb7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"6594a0e9-3dab-11e6-9409-db56330d999f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:92","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,29,98,99],"tindex":"6594a0ea-3dab-11e6-9409-afc486f3ca5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[],"tindex":"6594a0eb-3dab-11e6-9409-bfc9e0e89aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:317","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"))"},"status":-2},{"failures":[],"tindex":"6594a0ec-3dab-11e6-9409-2bbf46adeee0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"context.byte[] = b"},"status":-2},{"failures":[83],"tindex":"6594a0ed-3dab-11e6-9409-dd136fba433a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:617","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"6594a0ee-3dab-11e6-9409-737d11a9ecc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"pos","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:510","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"6594a0ef-3dab-11e6-9409-2d144fdb9270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:424","type":"CtIfImpl","sourcecode":"if (roundsCustom) {\n    buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String);\n    buffer.append(rounds);\n    buffer.append(\"$\");\n} "},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX":"input","buffer":"input","roundsCustom":"found","rounds":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:210","type":"CtIfImpl","sourcecode":"if (rules != null) {\n    for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n        final java.lang.String java.lang.String = rule.getPattern();\n        patternLength = pattern.length();\n        if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n            break;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"6594c800-3dab-11e6-9409-99b3bf72aa9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-2},{"failures":[107],"tindex":"6594c801-3dab-11e6-9409-d31774ad0a45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"status":-1},{"failures":[46,47],"tindex":"6594c802-3dab-11e6-9409-253089eb3c29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:763","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[47],"tindex":"6594c803-3dab-11e6-9409-653e9224b63a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"variableMap":{"buffer":"alternate","rounds":"addChars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars))"},"status":-1},{"failures":[],"tindex":"6594c804-3dab-11e6-9409-b9ac7b6cba85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"org.apache.commons.codec.net.QuotedPrintableCodec.CR","data":"bytes","length":"i","org.apache.commons.codec.net.QCodec.UNDERSCORE":"org.apache.commons.codec.net.QuotedPrintableCodec.CR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,108,109,110,111],"tindex":"6594c805-3dab-11e6-9409-ebaeffb48508","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:280","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[112],"tindex":"6594c806-3dab-11e6-9409-b536b44121d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} "},"status":-1},{"failures":[],"tindex":"6594c807-3dab-11e6-9409-037fc2dfddd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:339","type":"CtWhileImpl","sourcecode":"while (cp < (saltLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"jj","sBytes":"l_ascii","tempResult":"l_ascii","saltLen":"jj","cp":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:249","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}"},"status":-2},{"failures":[],"tindex":"6594c808-3dab-11e6-9409-111f03ceb6c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:703","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.bm.Rule.this.java.lang.String.length()"},"variableMap":{"pattern":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = name.length()"},"status":-2},{"failures":[],"tindex":"6594c809-3dab-11e6-9409-53cf569bec1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[],"tindex":"6594c80a-3dab-11e6-9409-3f38188f8662","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.language.Nysiis.CHARS_A"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[113,114],"tindex":"6594c80b-3dab-11e6-9409-e34d95d4dd93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, null)"},"status":-1},{"failures":[],"tindex":"6594ef1c-3dab-11e6-9409-95a9d5420152","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-2},{"failures":[115],"tindex":"6594ef1d-3dab-11e6-9409-55a7a52df9cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Nysiis.isVowel(curr)) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"curr":"next","org.apache.commons.codec.language.Nysiis.CHARS_A":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (next == 'N') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n}"},"status":-1},{"failures":[],"tindex":"6594ef1e-3dab-11e6-9409-816bd6c2700b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:516","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.clear();\n} "},"status":0},{"failures":[116,28,106,46,47],"tindex":"6594ef1f-3dab-11e6-9409-8ff1e1cdf240","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:313","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"6594ef20-3dab-11e6-9409-4bc3003cce74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:285","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = line.split(\"=\")"},"status":-2},{"failures":[],"tindex":"6594ef21-3dab-11e6-9409-933047bcfe48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"ch = java.lang.Character.toLowerCase(ch)"},"variableMap":{"ch":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"lastChar = ch"},"status":-2},{"failures":[28,106,46,47],"tindex":"6594ef22-3dab-11e6-9409-339da2d307e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:346","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[79,82],"tindex":"6594ef23-3dab-11e6-9409-e7d4d1f6a992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:388","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"6594ef24-3dab-11e6-9409-73532e44fdd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"this":"this","primary":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-2},{"failures":[117,118,48,119,120,121],"tindex":"6594ef25-3dab-11e6-9409-d9c0cde4172f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-1},{"failures":[],"tindex":"6594ef26-3dab-11e6-9409-5bb4ab5f4da3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"variableMap":{"resizedBytes":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"failures":[122,123,124,125,126,127],"tindex":"6594ef27-3dab-11e6-9409-7d67cf293b2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:340","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:337","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n    if ((0 == (context.int)) && ((int) == 0)) {\n        return ;\n    } \n    final byte[] byte[] = ensureBufferSize(int, context);\n    final int int = context.int;\n    switch (context.int) {\n        case 0 :\n            break;\n        case 1 :\n            buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n                buffer[((context.int)++)] = byte;\n                buffer[((context.int)++)] = byte;\n            } \n            break;\n        case 2 :\n            buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n                buffer[((context.int)++)] = byte;\n            } \n            break;\n        default :\n            throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n    }\n    context.int += (context.int) - savedPos;\n    if (((int) > 0) && ((context.int) > 0)) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n    } \n} else {\n    for (int int = 0 ; i < inAvail ; i++) {\n        final byte[] byte[] = ensureBufferSize(int, context);\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n        int int = in[(inPos++)];\n        if (b < 0) {\n            b += 256;\n        } \n        context.int = ((context.int) << 8) + b;\n        if (0 == (context.int)) {\n            buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n            if (((int) > 0) && ((int) <= (context.int))) {\n                java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n                context.int += byte[].int;\n                context.int = 0;\n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"65951638-3dab-11e6-9409-77cfb3b6d0f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:503","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"status":0},{"failures":[128,129,130,131,30,132,133,134,135,136,137,138],"tindex":"65951639-3dab-11e6-9409-f93c9ad06d6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"pArray","key":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"failures":[],"tindex":"6595163a-3dab-11e6-9409-09e2eaca3501","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"nextChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:370","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}"},"status":-2},{"failures":[28,106,46,47],"tindex":"6595163b-3dab-11e6-9409-6d6bf3ef9c05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:769","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[139],"tindex":"6595163c-3dab-11e6-9409-5b67e8520edd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[46,47],"tindex":"6595163d-3dab-11e6-9409-71071c9ba503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"6595163e-3dab-11e6-9409-27e74b34c21c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"buffer","bigBytes":"buffer","len":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","startSrc":"modulus","startDst":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:359","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[],"tindex":"6595163f-3dab-11e6-9409-dd32bf863ef7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:227","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"65951640-3dab-11e6-9409-39a91156f400","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"variableMap":{"minRating":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"65953d51-3dab-11e6-9409-b156599ad510","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"variableMap":{"singleLetter":"txt","replacedName":"txt","dc":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-2},{"failures":[],"tindex":"65953d52-3dab-11e6-9409-1f2245294a07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":0},{"failures":[79,82],"tindex":"65953d53-3dab-11e6-9409-81c436cd3022","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[140,141,142,143,144,145,146,147],"tindex":"65953d54-3dab-11e6-9409-a3aaf3909ca3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}