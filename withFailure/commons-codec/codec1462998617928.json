{"failureDictionary":{"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":40,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":16,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":17,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":2,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":22,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":35,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":20,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":21,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":39,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":37,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":6,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":23,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":24,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":7,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":15,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":5,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":11,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":4,"org.apache.commons.codec.language.SoundexTest.testB650":19,"org.apache.commons.codec.language.SoundexTest.testNewInstance":27,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":0,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":31,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":33,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":9,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":32,"org.apache.commons.codec.language.SoundexTest.testDifference":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":28,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":10,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":34,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":29,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":30,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":36,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":12},"transformations":[{"failures":[],"tindex":"2ccec07b-17b7-11e6-9dc0-93af30a7d3a1","series":0,"name":"replace","transplant":{"toString":"return new char[]{ curr }","position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"variableMap":{"curr":"prev"},"type":"adrStmt","transplantationPoint":{"toString":"return new char[]{ prev }","position":"org.apache.commons.codec.language.Nysiis:159","type":"CtReturnImpl","sourcecode":"return new char[]{ prev }"},"status":-3},{"failures":[],"tindex":"2ccee78c-17b7-11e6-9dc0-3715e820611e","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return isInAlphabet(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(basen), true)","position":"org.apache.commons.codec.binary.BaseNCodec:483","type":"CtReturnImpl","sourcecode":"return isInAlphabet(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(basen), true)"},"status":0},{"failures":[0],"tindex":"2ccee78d-17b7-11e6-9dc0-1d419c67ba1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e)","position":"org.apache.commons.codec.net.URLCodec:176","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e)"},"status":-1},{"failures":[],"tindex":"2ccee78e-17b7-11e6-9dc0-777afd6f7537","series":0,"name":"add","transplant":{"toString":"cnt -= blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"encodeSize","cnt":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"this.decodeSize = (org.apache.commons.codec.binary.Base64.this.encodeSize) - 1","position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"status":-2},{"failures":[1,2,3,4,5,6,7,8],"tindex":"2ccf0e9f-17b7-11e6-9dc0-f74a86ce6b37","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return phonemeBuilder.makeString()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:481","type":"CtReturnImpl","sourcecode":"return phonemeBuilder.makeString()"},"status":-1},{"failures":[],"tindex":"2ccf0ea0-17b7-11e6-9dc0-a530082dace2","series":0,"name":"replace","transplant":{"toString":"this.chunkSeparatorLength = chunkSeparatorLength","position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"n"},"type":"adrStmt","transplantationPoint":{"toString":"a = (a ^ t) ^ (t >>> (16 - n))","position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"a = (a ^ t) ^ (t >>> (16 - n))"},"status":-2},{"failures":[],"tindex":"2ccf0ea1-17b7-11e6-9dc0-7d196071da12","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"ly\", \"Ly\")","position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"pattern"},"type":"adrStmt","transplantationPoint":{"toString":"this.pattern = pattern","position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"status":-2},{"failures":[9],"tindex":"2ccf35b2-17b7-11e6-9dc0-19ef32187f85","series":0,"name":"replace","transplant":{"toString":"l_ascii[(jj - bits)] = '0'","position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"i","l_ascii":"data","bits":"i"},"type":"adrStmt","transplantationPoint":{"toString":"data[i] = org.apache.commons.codec.net.QCodec.UNDERSCORE","position":"org.apache.commons.codec.net.QCodec:161","type":"CtAssignmentImpl","sourcecode":"data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte"},"status":-1},{"failures":[],"tindex":"2ccf35b3-17b7-11e6-9dc0-b141a6115004","series":0,"name":"replace","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"source"},"type":"adrStmt","transplantationPoint":{"toString":"if (source == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"2ccf35b4-17b7-11e6-9dc0-35f8871a2fa4","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"3$\", \"A\")","position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"toString":"cachedString = builder.toString()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:153","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"2ccf35b5-17b7-11e6-9dc0-2b21a5c180e8","series":0,"name":"replace","transplant":{"toString":"key.deleteCharAt(((key.length()) - 1))","position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"-\").append(encode(word))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"result.append(\"-\").append(encode(word))"},"status":-2},{"failures":[10,11],"tindex":"2ccf5cc6-17b7-11e6-9dc0-89e4b2a1101c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:609","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[12,13],"tindex":"2ccf5cc7-17b7-11e6-9dc0-31acb0b12960","series":0,"name":"replace","transplant":{"toString":"rightLength++","position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c &= 268435455","position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"status":-1},{"failures":[],"tindex":"2ccf5cc8-17b7-11e6-9dc0-171e56c3c65a","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_FF","position":"org.apache.commons.codec.language.Nysiis:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"2ccf5cc9-17b7-11e6-9dc0-89fc515fe346","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(',')","position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set('_')","position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"2ccf83da-17b7-11e6-9dc0-779d48de5f57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (mapped != 0) {\n    if ((mapped != '0') && (mapped != last)) {\n        out[(count++)] = mapped;\n    } \n    last = mapped;\n} ","position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (mapped != 0) {\n    if ((mapped != '0') && (mapped != last)) {\n        out[(count++)] = mapped;\n    } \n    last = mapped;\n} "},"status":-1},{"failures":[34,35,36,37],"tindex":"2ccf83db-17b7-11e6-9dc0-c3c94e11ddbf","series":0,"name":"replace","transplant":{"toString":"code = '6'","position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"variableMap":{"code":"nextChar"},"type":"adrStmt","transplantationPoint":{"toString":"nextChar = input.getNextChar()","position":"org.apache.commons.codec.language.ColognePhonetic:342","type":"CtAssignmentImpl","sourcecode":"nextChar = input.getNextChar()"},"status":-1},{"failures":[],"tindex":"2ccf83dc-17b7-11e6-9dc0-0d9b1d5876a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^cough\", \"cou2f\")","position":"org.apache.commons.codec.language.Caverphone2:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"status":0},{"failures":[10,11,38,39,40],"tindex":"2ccf83dd-17b7-11e6-9dc0-6fe6dc152b14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String element : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}","position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}