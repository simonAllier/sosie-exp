{"failureDictionary":{"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":37,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":34,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":12,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":16,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":0,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":36,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":5,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":13,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":39,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":23,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":38,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":22,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":31,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":28,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":33},"transformations":[{"failures":[0,1],"tindex":"fdcd4c08-17b8-11e6-a355-87ca2f6fc0b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((binaryData == null) || ((binaryData.length) == 0)) {\n    return binaryData;\n} ","position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"status":-1},{"failures":[],"tindex":"fdcd7319-17b8-11e6-a355-857ecc25fa5b","series":0,"name":"replace","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"toString":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"fdcd9a2a-17b8-11e6-a355-f555e82f9b52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"continue","position":"org.apache.commons.codec.language.bm.Lang:162","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"fdcd9a2b-17b8-11e6-a355-637182357c38","series":0,"name":"replace","transplant":{"toString":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found)) {\n    patternLength = 1;\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:222","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean)) {\n    patternLength = 1;\n} "},"variableMap":{"found":"inExtendedComment","patternLength":"length"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START)) {\n    inExtendedComment = true;\n} else {\n    final int cmtI = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.CMT);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    final java.lang.String[] parts = line.split(\"\\\\s+\");\n    if ((parts.length) != 3) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n    } \n    final java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(parts[0]);\n    final java.lang.String[] langs = parts[1].split(\"\\\\+\");\n    final boolean accept = parts[2].equals(\"true\");\n    rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n}","position":"org.apache.commons.codec.language.bm.Lang:149","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 3) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n    } \n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n    final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n    final boolean boolean = parts[2].equals(\"true\");\n    rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n}"},"status":-3},{"failures":[28],"tindex":"fdcdc13c-17b8-11e6-a355-ed9580848350","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.Soundex.this.soundexMapping, 0, mapping.length)","position":"org.apache.commons.codec.language.Soundex:97","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.Soundex.this.char[], 0, mapping.int)"},"status":-1},{"failures":[29],"tindex":"fdcdc13d-17b8-11e6-a355-0f49fc303bb6","series":0,"name":"replace","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.URLCodec:245","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[30],"tindex":"fdcdc13e-17b8-11e6-a355-2f62dc9109d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index += 3","position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[31,32],"tindex":"fdcdc13f-17b8-11e6-a355-e1838a8c965c","series":0,"name":"replace","transplant":{"toString":"result.appendPrimary('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:688","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"fdcde850-17b8-11e6-a355-a543da71f7dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('@')","position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"status":0},{"failures":[],"tindex":"fdcde851-17b8-11e6-a355-47d7ecb7bb79","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.length = 0","position":"org.apache.commons.codec.language.ColognePhonetic:213","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = 0"},"variableMap":{"length":"i"},"type":"adrStmt","transplantationPoint":{"toString":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)","position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"status":-3},{"failures":[],"tindex":"fdceaba2-17b8-11e6-a355-f902436f9a43","series":0,"name":"replace","transplant":{"toString":"result = true","position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"accept"},"type":"adrStmt","transplantationPoint":{"toString":"rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept))","position":"org.apache.commons.codec.language.bm.Lang:177","type":"CtInvocationImpl","sourcecode":"rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept))"},"status":-2},{"failures":[33,34,35,36],"tindex":"fdceaba3-17b8-11e6-a355-f756dc2d6656","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"status":-1},{"failures":[],"tindex":"fdceaba4-17b8-11e6-a355-13b0d0f24b4b","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.isBase64(arrayOctet)","position":"org.apache.commons.codec.binary.Base64:498","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(arrayOctet)"},"variableMap":{"arrayOctet":"org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"toString":"return (org.apache.commons.codec.binary.Base64.this.encodeTable) == (org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE)","position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"status":-2},{"failures":[37],"tindex":"fdceaba5-17b8-11e6-a355-959c009aefcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"builder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH, builder.length())","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"status":-1},{"failures":[31,32],"tindex":"fdceaba6-17b8-11e6-a355-b559e1fbd484","series":0,"name":"add","transplant":{"toString":"a ^= t << n","position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"a ^= t << n"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"fdced2b7-17b8-11e6-a355-fb9c259e3f56","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"l3\", \"L3\")","position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"toString":"this.name = name","position":"org.apache.commons.codec.language.bm.RuleType:38","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[38],"tindex":"fdced2b8-17b8-11e6-a355-f7ad1283df49","series":0,"name":"replace","transplant":{"toString":"inMultilineComment = false","position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"hasUnderscores"},"type":"adrStmt","transplantationPoint":{"toString":"hasUnderscores = true","position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"status":-1},{"failures":[],"tindex":"fdced2b9-17b8-11e6-a355-2f49150b3a1d","series":0,"name":"replace","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"other"},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this) == other) {\n    return true;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:102","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this) == other) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"fdced2ba-17b8-11e6-a355-e5bcfeeb0e6f","series":0,"name":"replace","transplant":{"toString":"c |= 1","position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":0},{"failures":[],"tindex":"fdced2bb-17b8-11e6-a355-bfb2e7796dfd","series":0,"name":"add","transplant":{"toString":"lsScanner.close()","position":"org.apache.commons.codec.language.bm.Languages:196","type":"CtInvocationImpl","sourcecode":"lsScanner.close()"},"variableMap":{"lsScanner":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:413","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"fdced2bc-17b8-11e6-a355-d37c5a244c94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.BCodec:177","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[11,15],"tindex":"fdcef9cd-17b8-11e6-a355-e33c2392fc71","series":0,"name":"replace","transplant":{"toString":"return other","position":"org.apache.commons.codec.language.bm.Languages:137","type":"CtReturnImpl","sourcecode":"return other"},"variableMap":{"other":"ls"},"type":"adrStmt","transplantationPoint":{"toString":"return ls.equals(org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES) ? org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE : ls","position":"org.apache.commons.codec.language.bm.Lang:229","type":"CtReturnImpl","sourcecode":"return ls.equals(org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet) ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : ls"},"status":-1},{"failures":[39,40],"tindex":"fdcef9ce-17b8-11e6-a355-f11ae0359a2f","series":0,"name":"replace","transplant":{"toString":"index += 3","position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"compareCode"},"type":"adrStmt","transplantationPoint":{"toString":"compareCode = s1.compareTo(s2)","position":"org.apache.commons.codec.StringEncoderComparator:84","type":"CtAssignmentImpl","sourcecode":"compareCode = s1.compareTo(s2)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":23,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}