{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":87,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":69,"org.apache.commons.codec.binary.HexTest.testCustomCharset":94,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":18,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":33,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":58,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":120,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":170,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":168,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":169,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":86,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":141,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":140,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":67,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":126,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":137,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":150,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":38,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":81,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":122,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":52,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":57,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":101,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":99,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":102,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":61,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":145,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":159,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":160,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":22,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":109,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":114,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":111,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":177,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":74,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":130,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":132,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":73,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":158,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":142,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":133,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":13,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":176,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":72,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":174,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":154,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":12,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":175,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":76,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":119,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":147,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":84,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":89,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":39,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":20,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":46,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":79,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":83,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":98,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":16,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":68,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":80,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":100,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":127,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":152,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":2,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":6,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":59,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":65,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":56,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":125,"org.apache.commons.codec.language.SoundexTest.testB650":167,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":112,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":163,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":45,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":123,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":34,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":106,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":95,"org.apache.commons.codec.language.SoundexTest.testNewInstance":171,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":21,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":162,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":149,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":17,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":11,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":41,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":82,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":118,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":53,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":51,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":146,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":155,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":165,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":166,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":161,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":110,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":136,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":8,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":5,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":78,"org.apache.commons.codec.binary.Base64Test.testBase64":108,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":139,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":40,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":71,"org.apache.commons.codec.binary.Base64Test.testUUID":153,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":66,"org.apache.commons.codec.binary.Base64Test.testSingletons":157,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":30,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":116,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":47,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":97,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":23,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":115,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":24,"org.apache.commons.codec.binary.Base64Test.testCodec112":156,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":134,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":29,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":172,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":105,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":96,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":148,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":42,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":128,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":144,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":151,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":131,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":93,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":75,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":88,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":43,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":27,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":103,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":77,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":63,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":64,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":173,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":164,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":113,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":143,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":138,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":60,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":55,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":85,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":92,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":104,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":14,"org.apache.commons.codec.language.NysiisTest.testOthers":124,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":107,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":54,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":7,"org.apache.commons.codec.language.SoundexTest.testDifference":129,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":25,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":28,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":135,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":9,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":70,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":121},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"3b371db6-0d93-11e6-858e-eda4f7565a63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:555","type":"CtInvocationImpl","sourcecode":"branch.finish()"},"variableMap":{"branch":"branch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:523","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : replacements) {\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n    final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n    nextBranch.processNextReplacement(nextReplacement, force);\n    if (branching) {\n        nextBranches.add(nextBranch);\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"3b3744c7-0d93-11e6-858e-bb0de942dd3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:116","type":"CtIfImpl","sourcecode":"if ((newPhonemes.size()) >= maxPhonemes) {\n    break EXPR;\n} "},"status":0},{"failures":[],"tindex":"3b3744c8-0d93-11e6-858e-c1298c75e4e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:153","type":"CtReturnImpl","sourcecode":"return soundex(((java.lang.String)(obj)))"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"3b3744c9-0d93-11e6-858e-6b8904d3c210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"3b3744ca-0d93-11e6-858e-79453377c3c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:236","type":"CtAssignmentImpl","sourcecode":"name2 = removeDoubleConsonants(name2)"},"status":-2},{"failures":[],"tindex":"3b3744cb-0d93-11e6-858e-ad8b2c2c2579","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:364","type":"CtInvocationImpl","sourcecode":"input.addLeft('S')"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:358","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"3b376bdc-0d93-11e6-858e-9daffceaadee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"text1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtInvocationImpl","sourcecode":"colognePhonetic(text1)"},"status":-2},{"failures":[],"tindex":"3b376bdd-0d93-11e6-858e-5dc5caba67d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3b376bde-0d93-11e6-858e-a10824ff9f21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[35,36,37,38],"tindex":"3b376bdf-0d93-11e6-858e-cda2fd589e70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:408","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[39,40,41,42,43,44,45],"tindex":"3b376be0-0d93-11e6-858e-796abafbb427","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"3b376be1-0d93-11e6-858e-c11f8e31745d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[46,47,48,49,50,51,52],"tindex":"3b376be2-0d93-11e6-858e-2d5b49f26158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:796","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    digest.update(buffer, 0, read);\n    read = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int);\n}"},"status":-1},{"failures":[],"tindex":"3b3791f3-0d93-11e6-858e-c3b55127f52b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[53,54,55,56,57,58,59,60],"tindex":"3b3791f4-0d93-11e6-858e-4b418fc94eeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:251","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"3b3791f5-0d93-11e6-858e-013294d5f550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:803","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"variableMap":{"index":"thisStart","value":"substring"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:51","type":"CtIfImpl","sourcecode":"if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n    return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n} "},"status":-2},{"failures":[],"tindex":"3b3791f6-0d93-11e6-858e-f160a8f155e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3b3791f7-0d93-11e6-858e-4113b1a5363b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:284","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3b3791f8-0d93-11e6-858e-d9883a06a1ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = ctx1.digest()"},"status":-2},{"failures":[30,31,32,61,34],"tindex":"3b3791f9-0d93-11e6-858e-d5adc4020193","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:211","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"status":-1},{"failures":[],"tindex":"3b37b90a-0d93-11e6-858e-65f6f3cc0257","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:153","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(text.substring(from, to))"},"status":-3},{"failures":[62,63,37,38,64,65,66],"tindex":"3b37b90b-0d93-11e6-858e-017cf4efde45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:91","type":"CtIfImpl","sourcecode":"if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":-1},{"failures":[67,68,69,70,71],"tindex":"3b37b90c-0d93-11e6-858e-d9d08a3fc676","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:123","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"status":-1},{"failures":[],"tindex":"3b37b90d-0d93-11e6-858e-93212c2d7e2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:70","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"3b37b90e-0d93-11e6-858e-6dc750db5c58","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (name2.length()) - 1"},"variableMap":{"name2":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:256","type":"CtLocalVariableImpl","sourcecode":"final int int = leftToRightThenRightToLeftProcessing(name1, name2)"},"status":-2},{"failures":[69,70,71],"tindex":"3b37b90f-0d93-11e6-858e-0b2e54ad8f88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:520","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"status":-1},{"failures":[],"tindex":"3b37b910-0d93-11e6-858e-9f5a67e4c5f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(object)))"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[55,58],"tindex":"3b37e021-0d93-11e6-858e-7f8d77a4f5df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:246","type":"CtAssignmentImpl","sourcecode":"cnt = keyBytes.int"},"status":-1},{"failures":[],"tindex":"3b37e022-0d93-11e6-858e-39f17c17611d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"variableMap":{"txt":"org.apache.commons.codec.language.bm.Languages.ANY","org.apache.commons.codec.language.Caverphone1.SIX_1":"org.apache.commons.codec.language.bm.Languages.ANY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:204","type":"CtReturnImpl","sourcecode":"return ls.isSingleton() ? ls.getAny() : org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.String"},"status":-2},{"failures":[],"tindex":"3b37e023-0d93-11e6-858e-83705db77f67","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    ctx1.update(keyBytes);\n}"},"status":-2},{"failures":[],"tindex":"3b37e024-0d93-11e6-858e-47b432b86793","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"variableMap":{"hard":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"3b37e025-0d93-11e6-858e-13806db75adc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"status":-2},{"failures":[],"tindex":"3b37e026-0d93-11e6-858e-433a666df9ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 1 :\n        break;\n    case 2 :\n        context.int = (context.int) >> 4;\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        context.int = (context.int) >> 2;\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"variableMap":{"ibitWorkArea":"length","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"decodeTable","modulus":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n        context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82],"tindex":"3b380737-0d93-11e6-858e-75fe4b78283a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"status":-1},{"failures":[],"tindex":"3b380738-0d93-11e6-858e-6d70ca8d88db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"variableMap":{"ii":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[83,84,85,86,87,88,89,90,91,92,46,47,48,49,50,51,52,93,94,95,96,97,98],"tindex":"3b380739-0d93-11e6-858e-79972f66ad0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"toDigits","name1Size":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[99,100,101,102],"tindex":"3b38073a-0d93-11e6-858e-a595c5f0a3f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:234","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls)"},"status":-1},{"failures":[],"tindex":"3b38073b-0d93-11e6-858e-df1e17c0601f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:305","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes)"},"variableMap":{"bytes":"bytes","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:173","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-3},{"failures":[],"tindex":"3b38073c-0d93-11e6-858e-390fb012f034","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"variableMap":{"original":"pArray","length":"length","key":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:430","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, pArray.int, context)"},"status":-2},{"failures":[],"tindex":"3b38073d-0d93-11e6-858e-35647b040740","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-2},{"failures":[],"tindex":"3b38073e-0d93-11e6-858e-1911909c2aad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3b382e4f-0d93-11e6-858e-23c569b6662d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:366","type":"CtIfImpl","sourcecode":"if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"3b382e50-0d93-11e6-858e-6fe4b3f1e24c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"data","raw":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"status":-3},{"failures":[27,28,103,30,31,32,61,34],"tindex":"3b382e51-0d93-11e6-858e-231e188056c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:79","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.binary.StringUtils.newStringUsAscii(rawData))"},"status":-1},{"failures":[],"tindex":"3b382e52-0d93-11e6-858e-e7b94398740b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"txt","upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":-3},{"failures":[],"tindex":"3b382e53-0d93-11e6-858e-057223500a78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:518","type":"CtIfImpl","sourcecode":"if ((((index == 0) && ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n    result.append('H');\n} else {\n    result.append('J', 'H');\n}"},"status":-3},{"failures":[],"tindex":"3b382e54-0d93-11e6-858e-8dde0d084633","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == element) || (isInAlphabet(element))) {\n    return true;\n} "},"variableMap":{"pad":"octet","element":"octet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:537","type":"CtReturnImpl","sourcecode":"return ((octet >= 0) && (octet < (byte[].int))) && ((byte[][octet]) != (-1))"},"status":-3},{"failures":[],"tindex":"3b382e55-0d93-11e6-858e-4f1b0e951926","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:481","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[99,100,101,102],"tindex":"3b382e56-0d93-11e6-858e-013106956aed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:708","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3b382e57-0d93-11e6-858e-e10ff7d01427","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:176","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(ascii.int) >> 3]"},"status":-2},{"failures":[],"tindex":"3b385568-0d93-11e6-858e-8b767e4c4fd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:321","type":"CtAssignmentImpl","sourcecode":"name2Char[i] = ' '"},"variableMap":{"name2Char":"name1Char","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"status":-3},{"failures":[],"tindex":"3b385569-0d93-11e6-858e-2b0a77072bf4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"variableMap":{"data":"out","start":"count","length":"count","newData":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (mapped != 0) {\n    if ((mapped != '0') && (mapped != last)) {\n        out[(count++)] = mapped;\n    } \n    last = mapped;\n} "},"status":-3},{"failures":[],"tindex":"3b38556a-0d93-11e6-858e-9f1e4e43c3a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:153","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"3b38556b-0d93-11e6-858e-0b0805335fde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"a = (a ^ t) ^ (t >>> (16 - n))"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:457","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[104,62,63,105,106,107,108,109,110,111,112,64,113,114,115,116,117],"tindex":"3b38556c-0d93-11e6-858e-7710b0a8a64e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"3b38556d-0d93-11e6-858e-ad09808d9b91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset.name()"},"status":0},{"failures":[],"tindex":"3b38556e-0d93-11e6-858e-f136712697aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (isLastChar(wdsz, n)) {\n    break;\n} "},"variableMap":{"wdsz":"n","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:174","type":"CtIfImpl","sourcecode":"if (((isPreviousChar(local, n, 'S')) && (!(isLastChar(wdsz, n)))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"3b38556f-0d93-11e6-858e-015c3d57c3bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:104","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"3b385570-0d93-11e6-858e-29d3e1f11b5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[],"tindex":"3b385571-0d93-11e6-858e-d92eaa6ee1a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:315","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = key.toString()"},"status":-2},{"failures":[],"tindex":"3b387c82-0d93-11e6-858e-718435c22fa3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:238","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"status":-2},{"failures":[72,73,75,76,80],"tindex":"3b387c83-0d93-11e6-858e-e96238d3c7ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:353","type":"CtAssignmentImpl","sourcecode":"code = '-'"},"status":-1},{"failures":[83,84,85,86,87,88,89,90,91,92,118,46,47,48,119,49,50,51,52,94,96,98],"tindex":"3b387c84-0d93-11e6-858e-b5b803beec0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"status":-1},{"failures":[],"tindex":"3b387c85-0d93-11e6-858e-696ed17e6cb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"status":0},{"failures":[120],"tindex":"3b387c86-0d93-11e6-858e-d7ca0f52365e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[],"tindex":"3b387c87-0d93-11e6-858e-837cfc612955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:638","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[121,122],"tindex":"3b387c88-0d93-11e6-858e-85166dcff507","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"b","offset":"offset","iValue":"iValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"status":-1},{"failures":[],"tindex":"3b38a399-0d93-11e6-858e-4be511e691bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"nextChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:362","type":"CtIfImpl","sourcecode":"if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"3b38a39a-0d93-11e6-858e-e537ccd49978","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3b38a39b-0d93-11e6-858e-ed6bcf860879","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-2},{"failures":[123,124,125,126,127,128,129,130,131,132],"tindex":"3b38a39c-0d93-11e6-858e-1181bf0acd74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"variableMap":{"es1":"str","es2":"str","i":"count","diff":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":-1},{"failures":[0,1,3,4],"tindex":"3b38a39d-0d93-11e6-858e-8da17d6dad09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:95","type":"CtInvocationImpl","sourcecode":"branch.java.lang.StringBuilder.append(toString())"},"status":-1},{"failures":[],"tindex":"3b38a39e-0d93-11e6-858e-673dd8472497","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:317","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-2},{"failures":[121,122],"tindex":"3b38a39f-0d93-11e6-858e-5d092c43e8fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-1},{"failures":[],"tindex":"3b38a3a0-0d93-11e6-858e-a1f84ad3606a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:94","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,99,100,101,102],"tindex":"3b38a3a1-0d93-11e6-858e-17075f5b7549","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-1},{"failures":[145],"tindex":"3b38a3a2-0d93-11e6-858e-1f54cc627652","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[],"tindex":"3b38cab3-0d93-11e6-858e-73d00fc3d4ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:638","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":0},{"failures":[],"tindex":"3b38cab4-0d93-11e6-858e-95a2853b2dc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])"},"status":-2},{"failures":[],"tindex":"3b38cab5-0d93-11e6-858e-bd5f1d0671a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:119","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[70,71],"tindex":"3b38cab6-0d93-11e6-858e-f32b206d03a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:607","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n    result.append('S');\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[146,147,148,149,150,151,152,153,154,155,156,157,107,110,111,65,66],"tindex":"3b38cab7-0d93-11e6-858e-85e55d7add55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:353","type":"CtIfImpl","sourcecode":"if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n    buffer[((context.int)++)] = byte;\n    buffer[((context.int)++)] = byte;\n} "},"status":-1},{"failures":[70,71],"tindex":"3b38cab8-0d93-11e6-858e-b92b3a50f287","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:389","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[105,153,110,94,96,98],"tindex":"3b38cab9-0d93-11e6-858e-c7f2b9833088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"status":-1},{"failures":[],"tindex":"3b38caba-0d93-11e6-858e-fbbb38f87fc9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"pos","to":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:386","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"status":-2},{"failures":[158,159],"tindex":"3b38cabb-0d93-11e6-858e-7da4e987bd54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"l_ascii","offset":"jj","iValue":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"status":-1},{"failures":[],"tindex":"3b38cabc-0d93-11e6-858e-69eb56cf98a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:190","type":"CtIfImpl","sourcecode":"if ((line.length()) > 0) {\n    ls.add(line);\n} "},"variableMap":{"line":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","ls":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:183","type":"CtIfImpl","sourcecode":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = true;\n    } else if ((line.length()) > 0) {\n        ls.add(line);\n    } \n}"},"status":-2},{"failures":[],"tindex":"3b38cabd-0d93-11e6-858e-6b441ee0b37a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"status":-2},{"failures":[37,38,65,66],"tindex":"3b38f1ce-0d93-11e6-858e-ab7f9765879a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":-1},{"failures":[134,138,99,100,101,102,160],"tindex":"3b38f1cf-0d93-11e6-858e-7de68cf73d27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:98","type":"CtIfImpl","sourcecode":"if ((o1.java.lang.StringBuilder.length()) < (o2.java.lang.StringBuilder.length())) {\n    return -1;\n} "},"variableMap":{"o1":"o1","o2":"o1","phonemeText":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:88","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (o1.java.lang.StringBuilder.length()) ; i++) {\n    if (i >= (o2.java.lang.StringBuilder.length())) {\n        return +1;\n    } \n    final int int = (o1.java.lang.StringBuilder.charAt(i)) - (o2.java.lang.StringBuilder.charAt(i));\n    if (c != 0) {\n        return c;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3b38f1d0-0d93-11e6-858e-f74d3fa80b6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":-2},{"failures":[],"tindex":"3b38f1d1-0d93-11e6-858e-0140f53d1f78","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[161,162,69,70,71,163],"tindex":"3b38f1d2-0d93-11e6-858e-9100895ad266","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:133","type":"CtAssignmentImpl","sourcecode":"index = handleJ(value, result, index, slavoGermanic)"},"status":-1},{"failures":[],"tindex":"3b38f1d3-0d93-11e6-858e-31e48653c523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"upperName = removeAccents(upperName)"},"variableMap":{"upperName":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"status":-2},{"failures":[68,70,71],"tindex":"3b38f1d4-0d93-11e6-858e-9daf524fea9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:845","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"3b38f1d5-0d93-11e6-858e-137b32ced083","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:309","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:434","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[((parts.int) - 1)]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"3b38f1d6-0d93-11e6-858e-2ba2c2f12db6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"ch = java.lang.Character.toLowerCase(ch)"},"status":-1},{"failures":[],"tindex":"3b38f1d7-0d93-11e6-858e-19d70b7862b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"status":-2},{"failures":[125,164,165,166,167,168,169,170,126,127,128,129,171,172,173,174,175,176,177,130],"tindex":"3b38f1d8-0d93-11e6-858e-df1acd894878","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:138","type":"CtAssignmentImpl","sourcecode":"inwd[0] = 'S'"},"variableMap":{"inwd":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:269","type":"CtAssignmentImpl","sourcecode":"out[0] = str.charAt(0)"},"status":-1},{"failures":[53,54,55,56,57],"tindex":"3b38f1d9-0d93-11e6-858e-c75614842bfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}