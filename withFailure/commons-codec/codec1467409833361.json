{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":22,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":180,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":197,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":201,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":192,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":187,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":28,"org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull":181,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":96,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":170,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":34,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":76,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":146,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":207,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":2,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":1,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":133,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":100,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":196,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":138,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":208,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":135,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":136,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":223,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":4,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":152,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":80,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":111,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":142,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":20,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":7,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":79,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":225,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":103,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":122,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":175,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":199,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":10,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":42,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":129,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16":174,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":194,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":210,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":33,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":169,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":204,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":228,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":213,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":177,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":27,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":148,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":151,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":191,"org.apache.commons.codec.language.NysiisTest.testDropBy":155,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":211,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":85,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":40,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":94,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":97,"org.apache.commons.codec.binary.Base64Test.testUUID":130,"org.apache.commons.codec.binary.Base64Test.testSingletons":164,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":39,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":172,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":144,"org.apache.commons.codec.binary.Base64Test.testPairs":159,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":171,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":188,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":115,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":229,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":107,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":109,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":184,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":193,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":63,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":127,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse":219,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":189,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":162,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":125,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":163,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":227,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":13,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":93,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":17,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":121,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":119,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":132,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":215,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":222,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":202,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":203,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":209,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse":217,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":200,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":11,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":214,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":92,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":126,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull":83,"org.apache.commons.codec.binary.Base64Test.testTriplets":128,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":95,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse":216,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":48,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":46,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":49,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":69,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":185,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":15,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":139,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":149,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":176,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":61,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":158,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":114,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":14,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":113,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch":220,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":161,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":66,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":21,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":166,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":102,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":44,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":90,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":82,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":150,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":190,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":186,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":182,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":205,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":65,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":74,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":154,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":206,"org.apache.commons.codec.language.MetaphoneTest.testTCH":179,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":120,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":178,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":53,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":147,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":224,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":88,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":137,"org.apache.commons.codec.binary.Base64Test.testBase64":145,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch":218,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":58,"org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":24,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":91,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":140,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":78,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":56,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":117,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":55,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":35,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":77,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":167,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":212,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":156,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":226,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":157,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1":70,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":101,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":153,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5":72,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":221,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":168,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":123,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":195,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":9,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":75,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":62,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":45,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":173,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":118,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":8,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":143,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":87,"org.apache.commons.codec.language.SoundexTest.testDifference":183,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":81,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange":99,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":124,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":52,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":198,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":106,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":160,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":104,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":131},"transformations":[{"failures":[],"tindex":"d618eba2-3fd5-11e6-92dd-65163122b3e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"d61912b3-3fd5-11e6-92dd-a33d73cb3e91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"key","element":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[8],"tindex":"d61912b4-3fd5-11e6-92dd-6f0a827503c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"variableMap":{"charset":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-1},{"failures":[9,10,11,12],"tindex":"d61912b5-3fd5-11e6-92dd-eb9bb3b1c1a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:95","type":"CtInvocationImpl","sourcecode":"branch.java.lang.StringBuilder.append(toString())"},"status":-1},{"failures":[13,14,15,16,17,18,19,20],"tindex":"d61939c6-3fd5-11e6-92dd-5ba1270b2828","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos))"},"status":-1},{"failures":[21,22,23,24],"tindex":"d61939c7-3fd5-11e6-92dd-a3780012b594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:748","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"status":-1},{"failures":[25,26],"tindex":"d61939c8-3fd5-11e6-92dd-5904c04751b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"v"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"status":-1},{"failures":[],"tindex":"d61939c9-3fd5-11e6-92dd-a711917ffd43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"status":-2},{"failures":[27],"tindex":"d61939ca-3fd5-11e6-92dd-5fffb6136b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"status":-1},{"failures":[21,22,23,24],"tindex":"d61960db-3fd5-11e6-92dd-fd6f906cae4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DG\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n        result.append('J');\n        index += 3;\n    } else {\n        result.append(\"TK\");\n        index += 2;\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DT\", \"DD\")) {\n    result.append('T');\n    index += 2;\n} else {\n    result.append('T');\n    index++;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:684","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.append('T');\n} else {\n    result.append('0', 'T');\n}"},"status":-1},{"failures":[28,29],"tindex":"d61960dc-3fd5-11e6-92dd-0b4d122fa00c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"d61960dd-3fd5-11e6-92dd-e7331be8356b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"variableMap":{"currentLine":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:366","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-1},{"failures":[43,44,45],"tindex":"d61960de-3fd5-11e6-92dd-bd28beaaf422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-1},{"failures":[],"tindex":"d61987ef-3fd5-11e6-92dd-d1c14e31a2c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"status":-2},{"failures":[25,26],"tindex":"d61987f0-3fd5-11e6-92dd-e7a8e68581bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:313","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[],"tindex":"d61987f1-3fd5-11e6-92dd-5784e0c79e86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"variableMap":{"encodedBlockSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:303","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"d61987f2-3fd5-11e6-92dd-7d41c2390c49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"failures":[],"tindex":"d61987f3-3fd5-11e6-92dd-6dec4965998f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls)"},"variableMap":{"ls":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:134","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n        ls.add(lang);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"d619af04-3fd5-11e6-92dd-49520a427789","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:93","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[64],"tindex":"d619af05-3fd5-11e6-92dd-a536123e94d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-1},{"failures":[],"tindex":"d619af06-3fd5-11e6-92dd-396cfbe99f1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:304","type":"CtAssignmentImpl","sourcecode":"right = results[1]"},"status":-2},{"failures":[],"tindex":"d619af07-3fd5-11e6-92dd-8767964e8251","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:65","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[30,31,32,35,36,65,66,67,38,68,39,40,69,42],"tindex":"d619af08-3fd5-11e6-92dd-13231d990b45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"b","org.apache.commons.codec.net.URLCodec.RADIX":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-1},{"failures":[],"tindex":"d619d619-3fd5-11e6-92dd-73e1fd4c8de1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:120","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":0},{"failures":[],"tindex":"d619d61a-3fd5-11e6-92dd-43fb8fdf9c7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"variableMap":{"t":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:292","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[],"tindex":"d619d61b-3fd5-11e6-92dd-c134fbac7c07","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d619d61c-3fd5-11e6-92dd-971940eb8e9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:379","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[70,71,72,73,74],"tindex":"d619fd2d-3fd5-11e6-92dd-1fe8376e61b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-1},{"failures":[],"tindex":"d619fd2e-3fd5-11e6-92dd-9b13b213132a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:571","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"d619fd2f-3fd5-11e6-92dd-ed1994edd51e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":0},{"failures":[],"tindex":"d619fd30-3fd5-11e6-92dd-aba0b583c854","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:370","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}"},"variableMap":{"org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX":"org.apache.commons.codec.language.ColognePhonetic.SZ","code":"nextChar","nextChar":"nextChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:369","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n        code = '4';\n    } else {\n        code = '8';\n    }\n} else {\n    if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '8';\n    } else {\n        code = '4';\n    }\n}"},"status":-2},{"failures":[],"tindex":"d619fd31-3fd5-11e6-92dd-a5508859d434","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":0},{"failures":[],"tindex":"d61a2442-3fd5-11e6-92dd-a70f9ee8dbfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"status":-2},{"failures":[75,76,77,78],"tindex":"d61a2443-3fd5-11e6-92dd-d1efb43b2fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":-1},{"failures":[22,23,24],"tindex":"d61a2444-3fd5-11e6-92dd-432ac5f204ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"index","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:524","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[25,79,80,26],"tindex":"d61a2445-3fd5-11e6-92dd-13cfee4efc75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"c","tempResult":"b","pBytes":"b","cp":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"status":-1},{"failures":[81,21,22,23,24,82],"tindex":"d61a2446-3fd5-11e6-92dd-17dd250905d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:637","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"d61a4b57-3fd5-11e6-92dd-ffe25fc318a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"length","lineSeparator":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d61a4b58-3fd5-11e6-92dd-0717e45012be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"body","dc":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-2},{"failures":[],"tindex":"d61a4b59-3fd5-11e6-92dd-57006f718d20","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:77","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[83],"tindex":"d61a4b5a-3fd5-11e6-92dd-e537d61407f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:597","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"d61a4b5b-3fd5-11e6-92dd-571ef563ce7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"status":0},{"failures":[],"tindex":"d61a726c-3fd5-11e6-92dd-cd02d4cdefcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:443","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chrs)"},"status":-2},{"failures":[],"tindex":"d61a726d-3fd5-11e6-92dd-f3679d2199bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"org.apache.commons.codec.binary.Base32.MASK_5BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[56],"tindex":"d61a726e-3fd5-11e6-92dd-b56fd635a4d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:111","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.size()) == 1"},"status":-1},{"failures":[9,10,84,11,12,85,86,87,88],"tindex":"d61a726f-3fd5-11e6-92dd-758a70b517d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:555","type":"CtInvocationImpl","sourcecode":"branch.finish()"},"variableMap":{"branch":"nextBranch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.add(nextBranch);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"d61a7270-3fd5-11e6-92dd-bb8d06bff73e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:132","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-2},{"failures":[],"tindex":"d61a7271-3fd5-11e6-92dd-c11f8222ab15","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:541","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"status":-2},{"failures":[],"tindex":"d61a9982-3fd5-11e6-92dd-5beac2299ab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"value1","name2":"value1","name1":"value2","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":-2},{"failures":[],"tindex":"d61a9983-3fd5-11e6-92dd-b5c4a758cfd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"rightLength","name2Size":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:341","type":"CtIfImpl","sourcecode":"if ((rightLength = input.length()) > 0) {\n    nextChar = input.getNextChar();\n} else {\n    nextChar = '-';\n}"},"status":-2},{"failures":[25,26],"tindex":"d61a9984-3fd5-11e6-92dd-754947016367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"i","name2Size":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.boolean[][i]) {\n    c = (c >>> 2) | (c << 26);\n    d = (d >>> 2) | (d << 26);\n} else {\n    c = (c >>> 1) | (c << 27);\n    d = (d >>> 1) | (d << 27);\n}"},"status":-1},{"failures":[89,90,91,92,93,94,95],"tindex":"d61a9985-3fd5-11e6-92dd-bd7b2d6a7906","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-1},{"failures":[96,13,97,14,98,15,99,100,16,17,101,102,103,104,105,19,106,20],"tindex":"d61ac096-3fd5-11e6-92dd-5330ea8e3b5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:369","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"d61ac097-3fd5-11e6-92dd-a79e52a06bb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:160","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.util.Map<org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.Languages>.put(s, org.apache.commons.codec.language.bm.Languages.getInstance(org.apache.commons.codec.language.bm.Languages.langResourceName(s)));\n}"},"status":-1},{"failures":[],"tindex":"d61ac098-3fd5-11e6-92dd-8be223f36f7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:241","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"status":-2},{"failures":[],"tindex":"d61ac099-3fd5-11e6-92dd-bf7768b5cc2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:281","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[9,10,84,11,12,85,86,87,88,107,108,109,110],"tindex":"d61ac09a-3fd5-11e6-92dd-614bd5eca5b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:279","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"d61ae7ab-3fd5-11e6-92dd-e509bbe8de67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:177","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[43,44,45],"tindex":"d61ae7ac-3fd5-11e6-92dd-597e81f17c25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-1},{"failures":[],"tindex":"d61ae7ad-3fd5-11e6-92dd-a5a59ee9dc0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:332","type":"CtIfImpl","sourcecode":"if (context.boolean) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"d61ae7ae-3fd5-11e6-92dd-df3635c7b164","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.Base32.ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:287","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"d61ae7af-3fd5-11e6-92dd-a1bcec853829","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:100","type":"CtReturnImpl","sourcecode":"return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":0},{"failures":[],"tindex":"d61ae7b0-3fd5-11e6-92dd-29523c386b40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"variableMap":{"encodedBlockSize":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"right = t"},"status":-2},{"failures":[111,112,113,114,115,116,117,118],"tindex":"d61b0ec1-3fd5-11e6-92dd-19442b717541","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":-1},{"failures":[],"tindex":"d61b0ec2-3fd5-11e6-92dd-5d2e5f8021f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"variableMap":{"current":"lastChar","last":"lastChar","sBuf":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"status":-2},{"failures":[],"tindex":"d61b0ec3-3fd5-11e6-92dd-a54d567ec77c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"status":-2},{"failures":[9,10,11,12,86,88],"tindex":"d61b0ec4-3fd5-11e6-92dd-9d83218d22ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:506","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    continue;\n} "},"variableMap":{"rules":"ruleList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:241","type":"CtInvocationImpl","sourcecode":"java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n    @java.lang.Override\n    public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n        return (rule2.getPatternLength()) - (rule1.getPatternLength());\n    }\n})"},"status":-1},{"failures":[33,119],"tindex":"d61b35d5-3fd5-11e6-92dd-f7c7d7bd0c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:45","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)) + \"): \") + b))"},"status":-1},{"failures":[28,120,29,121,122],"tindex":"d61b35d6-3fd5-11e6-92dd-3d16e3457587","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-1},{"failures":[123,124,125,90,91,126,92,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"d61b35d7-3fd5-11e6-92dd-6f03195ffd3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[],"tindex":"d61b35d8-3fd5-11e6-92dd-5b73ee5cc270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[155],"tindex":"d61b5ce9-3fd5-11e6-92dd-3794ee86dc9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:282","type":"CtLocalVariableImpl","sourcecode":"final char char = i < (len - 2) ? chars[(i + 2)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char"},"status":-1},{"failures":[],"tindex":"d61b5cea-3fd5-11e6-92dd-b1697c38fe6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)"},"status":-2},{"failures":[],"tindex":"d61b5ceb-3fd5-11e6-92dd-855468967a6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l$\", \"3\")"},"status":0},{"failures":[],"tindex":"d61b5cec-3fd5-11e6-92dd-6d108a5ef533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n    if ((((index == 0) && ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n        result.append('H');\n    } else {\n        result.append('J', 'H');\n    }\n    index++;\n} else {\n    if ((index == 0) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")))) {\n        result.append('J', 'A');\n    } else if (((isVowel(charAt(value, (index - 1)))) && (!slavoGermanic)) && (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))) {\n        result.append('J', 'H');\n    } else if (index == ((value.length()) - 1)) {\n        result.append('J', ' ');\n    } else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n        result.append('J');\n    } \n    if ((charAt(value, (index + 1))) == 'J') {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[123,124,156,157,158,159,130,131,132,133,134,135,136,138,139,140,160,161,162,163,164,143,165,145,166,148,167,168,150,169,170,171,172,173],"tindex":"d61b5ced-3fd5-11e6-92dd-edc2dcb536eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"result","key":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"failures":[],"tindex":"d61b83fe-3fd5-11e6-92dd-e97483d4acad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:146","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"d61b83ff-3fd5-11e6-92dd-776680617a16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"status":0},{"failures":[174],"tindex":"d61b8400-3fd5-11e6-92dd-a7ded2276db8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"variableMap":{"keyBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:335","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"d61b8401-3fd5-11e6-92dd-4bdeb62a9e9f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:545","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.startsWith(\"[\")"},"variableMap":{"content":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"status":-2},{"failures":[175,176,177,178],"tindex":"d61b8402-3fd5-11e6-92dd-bd59aed3500c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[],"tindex":"d61b8403-3fd5-11e6-92dd-c1896bd6b327","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:349","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"d61b8404-3fd5-11e6-92dd-49f4aae2450c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:130","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (urlsafe.get(b)) {\n        if (b == ' ') {\n            b = '+';\n        } \n        buffer.write(b);\n    } else {\n        buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte);\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n        buffer.write(hex1);\n        buffer.write(hex2);\n    }\n}"},"status":0},{"failures":[],"tindex":"d61b8405-3fd5-11e6-92dd-8ddcabac2054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:548","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset"},"status":0},{"failures":[],"tindex":"d61bab16-3fd5-11e6-92dd-03f9d701be38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"variableMap":{"nextChar":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:339","type":"CtAssignmentImpl","sourcecode":"chr = input.removeNext()"},"status":-2},{"failures":[46,47,48,49,51,57],"tindex":"d61bab17-3fd5-11e6-92dd-afaa6e94ceca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-1},{"failures":[],"tindex":"d61bab18-3fd5-11e6-92dd-9b9a6232f926","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"d61bab19-3fd5-11e6-92dd-436741e99ee9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:180","type":"CtLocalVariableImpl","sourcecode":"final int int = keyBytes.int"},"variableMap":{"keyBytes":"bigBytes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"status":-2},{"failures":[179,180],"tindex":"d61bab1a-3fd5-11e6-92dd-894fc05f6a35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:315","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[181],"tindex":"d61bab1b-3fd5-11e6-92dd-a74d1e4aa70f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"d61bab1c-3fd5-11e6-92dd-7fa358a2d9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"status":0},{"failures":[182,183],"tindex":"d61bab1d-3fd5-11e6-92dd-011359c00f6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-1},{"failures":[184,185],"tindex":"d61bab1e-3fd5-11e6-92dd-0bdf322ea10b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[186,187,188,189,190,191,192,193,96,194,195,13,196,197,198,97,14,199,98,200,201,15,202,203,204,99,205,206,207,208,209,100,210,16,17,101,211,102,18,103,212,213,104,19,106,20,214,215],"tindex":"d61bd22f-3fd5-11e6-92dd-65956ac95602","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.UNICODE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:359","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < n ; i++) {\n    final char char = accentedWord.charAt(i);\n    final int int = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.indexOf(c);\n    if (pos > (-1)) {\n        sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n    } else {\n        sb.append(c);\n    }\n}"},"status":-1},{"failures":[216,217,218,219,220],"tindex":"d61bd230-3fd5-11e6-92dd-c324cda997f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[221,222,223,224,225,226,227,228,229],"tindex":"d61bd231-3fd5-11e6-92dd-216420d904f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[23,24],"tindex":"d61bd232-3fd5-11e6-92dd-3771f1d061c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[],"tindex":"d61bf843-3fd5-11e6-92dd-a3a83c00d3e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"j","lineSeparator":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; j < 6 ; j++) {\n    c <<= 1;\n    if (((b[y]) & u) != 0) {\n        c |= 1;\n    } \n    u >>>= 1;\n    if (u == 0) {\n        y++;\n        u = 128;\n    } \n    buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n}"},"status":-2},{"failures":[],"tindex":"d61bf844-3fd5-11e6-92dd-ef7b5ef1b7b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:78","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = algorithm"},"variableMap":{"algorithm":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"status":-2},{"failures":[],"tindex":"d61bf845-3fd5-11e6-92dd-d966f4fb4c73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}