{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":9,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":100,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":158,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":19,"org.apache.commons.codec.language.NysiisTest.testSnat":123,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":88,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":80,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":169,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":136,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":168,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":5,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":114,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":163,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":28,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":20,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":91,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":79,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":175,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":132,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":173,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":176,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":17,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":0,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":62,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":3,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":46,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":2,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":142,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":41,"org.apache.commons.codec.language.NysiisTest.testCap":29,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":37,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":170,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":8,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":159,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":25,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":43,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":72,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":133,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":44,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":130,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":21,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":103,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":137,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":139,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":48,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":84,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":148,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":149,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":174,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":95,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":151,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":108,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":81,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":153,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":67,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":18,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":73,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":78,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":23,"org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull":179,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":127,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":55,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":101,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":135,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":86,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":109,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":145,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":7,"org.apache.commons.codec.language.NysiisTest.testTranan":126,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":56,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":98,"org.apache.commons.codec.language.NysiisTest.testFal":116,"org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException":150,"org.apache.commons.codec.language.NysiisTest.testSnad":122,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":105,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":83,"org.apache.commons.codec.language.MetaphoneTest.testTCH":102,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":110,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":15,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":74,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":111,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":52,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":14,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":162,"org.apache.commons.codec.language.NysiisTest.testDropBy":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":94,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":89,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":152,"org.apache.commons.codec.binary.Base64Test.testBase64":51,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":27,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":167,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":138,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":35,"org.apache.commons.codec.binary.Base64Test.testUUID":38,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":104,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":47,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":68,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":6,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":64,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":143,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":165,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":112,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":164,"org.apache.commons.codec.language.NysiisTest.testRule2":118,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":63,"org.apache.commons.codec.language.NysiisTest.testRule1":117,"org.apache.commons.codec.language.NysiisTest.testRule7":31,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":53,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":134,"org.apache.commons.codec.language.NysiisTest.testRule6":120,"org.apache.commons.codec.language.NysiisTest.testRule5":119,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":99,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":141,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":140,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":155,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":160,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":77,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":71,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":96,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":36,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":124,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":157,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":33,"org.apache.commons.codec.language.NysiisTest.testBran":121,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":147,"org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull":178,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":106,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":172,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":61,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":92,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":57,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":146,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":54,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":107,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":69,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":180,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":10,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":49,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":97,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":128,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":85,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":16,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":66,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":171,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":166,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":82,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":131,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":65,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":76,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":144,"org.apache.commons.codec.language.NysiisTest.testDad":115,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":58,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":40,"org.apache.commons.codec.language.NysiisTest.testOthers":125,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":75,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":154,"org.apache.commons.codec.language.SoundexTest.testDifference":177,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":113,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":93,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":24,"org.apache.commons.codec.language.NysiisTest.testDan":30,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":161,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":156,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":39,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":90},"transformations":[{"failures":[],"tindex":"87a8f969-3dbd-11e6-aac2-a572d1f80223","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:154","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"87a9207a-3dbd-11e6-aac2-65abd7bcee36","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:280","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)"},"status":-2},{"failures":[0],"tindex":"87a9207b-3dbd-11e6-aac2-f794845e6109","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"variableMap":{"byteArray":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"87a9207c-3dbd-11e6-aac2-3db41efae381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"decodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:288","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-1},{"failures":[],"tindex":"87a9207d-3dbd-11e6-aac2-fbdddf1a367e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:225","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-2},{"failures":[],"tindex":"87a9207e-3dbd-11e6-aac2-0d5b947f49cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"variableMap":{"negate":"slavoGermanic","boxContent":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:98","type":"CtSwitchImpl","sourcecode":"switch (value.charAt(index)) {\n    case 'A' :\n    case 'E' :\n    case 'I' :\n    case 'O' :\n    case 'U' :\n    case 'Y' :\n        index = handleAEIOUY(result, index);\n        break;\n    case 'B' :\n        result.append('P');\n        index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n        break;\n    case '\\u00c7' :\n        result.append('S');\n        index++;\n        break;\n    case 'C' :\n        index = handleC(value, result, index);\n        break;\n    case 'D' :\n        index = handleD(value, result, index);\n        break;\n    case 'F' :\n        result.append('F');\n        index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n        break;\n    case 'G' :\n        index = handleG(value, result, index, slavoGermanic);\n        break;\n    case 'H' :\n        index = handleH(value, result, index);\n        break;\n    case 'J' :\n        index = handleJ(value, result, index, slavoGermanic);\n        break;\n    case 'K' :\n        result.append('K');\n        index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n        break;\n    case 'L' :\n        index = handleL(value, result, index);\n        break;\n    case 'M' :\n        result.append('M');\n        index = conditionM0(value, index) ? index + 2 : index + 1;\n        break;\n    case 'N' :\n        result.append('N');\n        index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n        break;\n    case '\\u00d1' :\n        result.append('N');\n        index++;\n        break;\n    case 'P' :\n        index = handleP(value, result, index);\n        break;\n    case 'Q' :\n        result.append('K');\n        index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n        break;\n    case 'R' :\n        index = handleR(value, result, index, slavoGermanic);\n        break;\n    case 'S' :\n        index = handleS(value, result, index, slavoGermanic);\n        break;\n    case 'T' :\n        index = handleT(value, result, index);\n        break;\n    case 'V' :\n        result.append('F');\n        index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n        break;\n    case 'W' :\n        index = handleW(value, result, index);\n        break;\n    case 'X' :\n        index = handleX(value, result, index);\n        break;\n    case 'Z' :\n        index = handleZ(value, result, index, slavoGermanic);\n        break;\n    default :\n        index++;\n        break;\n}"},"status":-2},{"failures":[29,30,31,32,33],"tindex":"87a9478f-3dbd-11e6-aac2-b9f9e5bab20c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:296","type":"CtIfImpl","sourcecode":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} "},"variableMap":{"lastChar":"lastChar","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"87a94790-3dbd-11e6-aac2-8fca61fb9e6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:552","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = boxContent.startsWith(\"^\")"},"status":-2},{"failures":[],"tindex":"87a94791-3dbd-11e6-aac2-d3e39b2dbde1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:139","type":"CtAssignmentImpl","sourcecode":"name = removeDoubleConsonants(name)"},"status":-2},{"failures":[34,35],"tindex":"87a94792-3dbd-11e6-aac2-6beb6d3d7624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:375","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"87a94793-3dbd-11e6-aac2-b9cd0f8147ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[],"tindex":"87a96ea4-3dbd-11e6-aac2-e7b0c14f558b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"input","name2":"input","name1":"prefix","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"87a96ea5-3dbd-11e6-aac2-29badbe2cab0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:170","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"87a96ea6-3dbd-11e6-aac2-29aebb5f8245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"variableMap":{"sBytes":"pBytes","tempResult":"tempResult","saltLen":"blocksize","cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"status":-1},{"failures":[84],"tindex":"87a96ea7-3dbd-11e6-aac2-61ec3eaa4e2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (slavoGermanic) {\n    result.append('S');\n} else {\n    result.append('S', 'X');\n}"},"status":-1},{"failures":[34,35],"tindex":"87a96ea8-3dbd-11e6-aac2-af8ca48d0f81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"status":-1},{"failures":[],"tindex":"87a96ea9-3dbd-11e6-aac2-cfeff4661c5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"status":-2},{"failures":[],"tindex":"87a96eaa-3dbd-11e6-aac2-fb8faff8f2bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:554","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n    branch.finish();\n    result[(index++)] = branch.toString();\n}"},"status":-2},{"failures":[80,81,82],"tindex":"87a995bb-3dbd-11e6-aac2-f1f54d1bea37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer)"},"status":-1},{"failures":[],"tindex":"87a995bc-3dbd-11e6-aac2-8d7c866acb58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:70","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('%')"},"status":0},{"failures":[66,67,68,27,28],"tindex":"87a995bd-3dbd-11e6-aac2-0144731ddd21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:340","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize)"},"variableMap":{"sBytes":"b","blocksize":"offset","tempResult":"b","cp":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"87a995be-3dbd-11e6-aac2-b1998fef6c44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)"},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:180","type":"CtLocalVariableImpl","sourcecode":"final int int = keyBytes.int"},"status":-2},{"failures":[],"tindex":"87a995bf-3dbd-11e6-aac2-37283d18ac96","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:144","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"87a995c0-3dbd-11e6-aac2-79e9c3c8c000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"lastCode = code"},"variableMap":{"code":"code","lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-2},{"failures":[],"tindex":"87a9bcd1-3dbd-11e6-aac2-cd4571c779ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"salt","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-2},{"failures":[85,86,87,88,89],"tindex":"87a9bcd2-3dbd-11e6-aac2-7bcbd0da0d93","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:388","type":"CtInvocationImpl","sourcecode":"sb.append(ch)"},"status":-1},{"failures":[90,91],"tindex":"87a9bcd3-3dbd-11e6-aac2-4d40fe27be79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return index + 2"},"variableMap":{"index":"el"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"failures":[],"tindex":"87a9bcd4-3dbd-11e6-aac2-a14665855bab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = name.length()"},"status":-2},{"failures":[92,93,94,95,96,97,98,99,100,101],"tindex":"87a9bcd5-3dbd-11e6-aac2-75949030be6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[92,102],"tindex":"87a9bcd6-3dbd-11e6-aac2-91c27961741f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[103,104,105,106,107,108,109],"tindex":"87a9bcd7-3dbd-11e6-aac2-3b7a1b1784ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"variableMap":{"finalb":"finalb","passwd":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"status":-1},{"failures":[],"tindex":"87a9bcd8-3dbd-11e6-aac2-a9c7c02333a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"status":-2},{"failures":[34,35],"tindex":"87a9bcd9-3dbd-11e6-aac2-2f3b6174a2f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:609","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"87a9e3ea-3dbd-11e6-aac2-a5f2c6bed983","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"encodeTable","bigBytes":"buffer","len":"org.apache.commons.codec.binary.Base32.MASK_5BITS","startSrc":"modulus","startDst":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:447","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 3))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 2))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 11))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 6))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 1))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 4))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        break;\n    case 3 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 19))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 14))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 9))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 4))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 1))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        buffer[((context.int)++)] = byte;\n        break;\n    case 4 :\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 27))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 22))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 17))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 12))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 7))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 2))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) << 3))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte;\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[],"tindex":"87a9e3eb-3dbd-11e6-aac2-49ba1382d44f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:989","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"variableMap":{"alternate":"builder","addChars":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH","value":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:116","type":"CtWhileImpl","sourcecode":"while ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.append('0');\n    java.lang.String = null;\n}"},"status":-2},{"failures":[],"tindex":"87a9e3ec-3dbd-11e6-aac2-b1caa898c596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"variableMap":{"roundsCustom":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[34,35,84],"tindex":"87a9e3ed-3dbd-11e6-aac2-0b87fc0f40dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:455","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[84],"tindex":"87a9e3ee-3dbd-11e6-aac2-6da3f9aacddc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[89],"tindex":"87aa0aff-3dbd-11e6-aac2-3d00636b9446","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:286","type":"CtIfImpl","sourcecode":"if ((parts.int) != 2) {\n    throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n} else {\n    final java.lang.String java.lang.String = parts[0];\n    final java.lang.String java.lang.String = parts[1];\n    if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n    } \n    asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n}"},"status":-1},{"failures":[34,35,84],"tindex":"87aa0b00-3dbd-11e6-aac2-9372b11e4032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:591","type":"CtReturnImpl","sourcecode":"return (charAt(value, (index + 1))) == 'R' ? index + 2 : index + 1"},"status":-1},{"failures":[110,111,112],"tindex":"87aa0b01-3dbd-11e6-aac2-ebf13f73869a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"status":-1},{"failures":[],"tindex":"87aa0b02-3dbd-11e6-aac2-0317aa9ecbeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:46","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[],"tindex":"87aa0b03-3dbd-11e6-aac2-b9ea8148d7e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:336","type":"CtIfImpl","sourcecode":"if ((strA.length()) > (strB.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())));\n}"},"status":-2},{"failures":[],"tindex":"87aa0b04-3dbd-11e6-aac2-ddc02d0c582a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"bitlen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"status":-2},{"failures":[113,114,29,115,30,116,117,118,119,120,31,121,122,123,124,32,125,126,33],"tindex":"87aa0b05-3dbd-11e6-aac2-c7e7cc26097e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.int, string.length())) : string"},"status":-1},{"failures":[],"tindex":"87aa0b06-3dbd-11e6-aac2-af73a570b5d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-2},{"failures":[],"tindex":"87aa0b07-3dbd-11e6-aac2-ad37fe0380af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[127],"tindex":"87aa3218-3dbd-11e6-aac2-eb4290f46e0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()"},"status":-1},{"failures":[],"tindex":"87aa3219-3dbd-11e6-aac2-f995c819af50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"status":-2},{"failures":[92,93,102,128,129,130,131,96,97,99,132,133,134,100,101,135,136],"tindex":"87aa321a-3dbd-11e6-aac2-25ddb3d759f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"variableMap":{"roundsCustom":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:346","type":"CtAssignmentImpl","sourcecode":"matches = (string.charAt((index - 1))) == c"},"status":-1},{"failures":[],"tindex":"87aa321b-3dbd-11e6-aac2-736b5af5dff7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:95","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txtLength = txt.length()) == 0)) {\n    return \"\";\n} "},"status":-2},{"failures":[],"tindex":"87aa321c-3dbd-11e6-aac2-35ed3a52156b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"variableMap":{"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH":"length","builder":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-2},{"failures":[],"tindex":"87aa321d-3dbd-11e6-aac2-73671be0d947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"status":-2},{"failures":[73,74,75,76,78,79,80,81,82],"tindex":"87aa321e-3dbd-11e6-aac2-a329ace5ca0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((prefix + saltString) + \"$\"))"},"variableMap":{"saltString":"saltPrefix","prefix":"saltPrefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:423","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(saltPrefix)"},"status":-1},{"failures":[137,138,139,140,141,142,143,144],"tindex":"87aa321f-3dbd-11e6-aac2-0d7f4b9da1da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[145,146,147,148,149],"tindex":"87aa3220-3dbd-11e6-aac2-ad16e796af74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"status":-1},{"failures":[34,35],"tindex":"87aa3221-3dbd-11e6-aac2-b3aa6406baae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[80,81,82],"tindex":"87aa3222-3dbd-11e6-aac2-3d172fe9a4f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:480","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[53], altResult[11], altResult[32], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"status":-1},{"failures":[],"tindex":"87aa3223-3dbd-11e6-aac2-d190419b13b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:293","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.this.java.util.Set<java.lang.String>"},"status":0},{"failures":[150],"tindex":"87aa5934-3dbd-11e6-aac2-c3e060af78f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-1},{"failures":[74,75,76,78,79,80,81,82],"tindex":"87aa5935-3dbd-11e6-aac2-512b39d72e07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:386","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} "},"status":-1},{"failures":[85,86,151,87,88,152,153,154,89,155,156,157,158],"tindex":"87aa5936-3dbd-11e6-aac2-dbcd928a3553","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"line","leftCharacter":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END","rightCharacter":"line","location":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:261","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    inMultilineComment = false;\n} "},"status":-1},{"failures":[],"tindex":"87aa5937-3dbd-11e6-aac2-17f6932bb746","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:451","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1])"},"status":-2},{"failures":[],"tindex":"87aa5938-3dbd-11e6-aac2-ed9fdf6fed18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"87aa5939-3dbd-11e6-aac2-cfa60ccfe706","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"rt","ruleType":"rt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:221","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : ls.getLanguages()) {\n    try {\n        rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n    } catch (final java.lang.IllegalStateException e) {\n        throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n    }\n}"},"status":-1},{"failures":[],"tindex":"87aa593a-3dbd-11e6-aac2-155782341792","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","name2":"value","name1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:847","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"UMB\")) && (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"ER\")))"},"status":-2},{"failures":[97],"tindex":"87aa593b-3dbd-11e6-aac2-ddf081ca1377","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"status":-1},{"failures":[80,81,82],"tindex":"87aa593c-3dbd-11e6-aac2-6b7d10813885","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-1},{"failures":[85,86,151,87,88,152,153,154,89,158],"tindex":"87aa593d-3dbd-11e6-aac2-85b79f4c8a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 1))"},"variableMap":{"str":"input","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:497","type":"CtLocalVariableImpl","sourcecode":"final char char = input.charAt(index)"},"status":-1},{"failures":[34,35],"tindex":"87aa593e-3dbd-11e6-aac2-b990021632b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"87aa593f-3dbd-11e6-aac2-0b4d2f7676de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:339","type":"CtIfImpl","sourcecode":"if (context.boolean) {\n    return ;\n} "},"variableMap":{"context":"context","eof":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:337","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n    if ((0 == (context.int)) && ((int) == 0)) {\n        return ;\n    } \n    final byte[] byte[] = ensureBufferSize(int, context);\n    final int int = context.int;\n    switch (context.int) {\n        case 0 :\n            break;\n        case 1 :\n            buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n                buffer[((context.int)++)] = byte;\n                buffer[((context.int)++)] = byte;\n            } \n            break;\n        case 2 :\n            buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n                buffer[((context.int)++)] = byte;\n            } \n            break;\n        default :\n            throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n    }\n    context.int += (context.int) - savedPos;\n    if (((int) > 0) && ((context.int) > 0)) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n    } \n} else {\n    for (int int = 0 ; i < inAvail ; i++) {\n        final byte[] byte[] = ensureBufferSize(int, context);\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n        int int = in[(inPos++)];\n        if (b < 0) {\n            b += 256;\n        } \n        context.int = ((context.int) << 8) + b;\n        if (0 == (context.int)) {\n            buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n            if (((int) > 0) && ((int) <= (context.int))) {\n                java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n                context.int += byte[].int;\n                context.int = 0;\n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"87aa8050-3dbd-11e6-aac2-79e04a561e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:273","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length())"},"status":-2},{"failures":[],"tindex":"87aa8051-3dbd-11e6-aac2-1d2bf4e318bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"variableMap":{"line":"lang","ls":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-2},{"failures":[],"tindex":"87aa8052-3dbd-11e6-aac2-4d39f8a8783a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"variableMap":{"b":"encodeTable","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"87aa8053-3dbd-11e6-aac2-e71fdb0da168","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"variableMap":{"index":"i","value":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:241","type":"CtIfImpl","sourcecode":"if ((chars.charAt(i)) == input) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"87aa8054-3dbd-11e6-aac2-d118481e9007","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"87aa8055-3dbd-11e6-aac2-cb118fe623ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":0},{"failures":[177],"tindex":"87aa8056-3dbd-11e6-aac2-a9a7b058f088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.Soundex.this, s1, s2)"},"status":-1},{"failures":[],"tindex":"87aa8057-3dbd-11e6-aac2-43bafb3aeb63","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"value","name2":"value","name1":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"status":-2},{"failures":[],"tindex":"87aa8058-3dbd-11e6-aac2-2f752ae9040e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-2},{"failures":[178,179],"tindex":"87aa8059-3dbd-11e6-aac2-01e906d3c628","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:178","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"87aa805a-3dbd-11e6-aac2-ffb1a9450c65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:516","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.clear();\n} "},"status":0},{"failures":[],"tindex":"87aa805b-3dbd-11e6-aac2-2fcc9bc7bcf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"status":-2},{"failures":[],"tindex":"87aaa76c-3dbd-11e6-aac2-fb3abdfea782","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[132,134],"tindex":"87aaa76d-3dbd-11e6-aac2-af6be707842c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"status":-1},{"failures":[180,177,145],"tindex":"87aaa76e-3dbd-11e6-aac2-3ba1b9acb603","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"87aaa76f-3dbd-11e6-aac2-27eab97315e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"variableMap":{"index":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":-2},{"failures":[],"tindex":"87aaa770-3dbd-11e6-aac2-37cff025669c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_512"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"87aaa771-3dbd-11e6-aac2-4d70c0649bc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"status":0},{"failures":[],"tindex":"87aaa772-3dbd-11e6-aac2-75c1bbf72904","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":0},{"failures":[],"tindex":"87aaa773-3dbd-11e6-aac2-1ba8afa6683f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"87aaa774-3dbd-11e6-aac2-c5ecd39ac305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:129","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (readLen == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(buf);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return readLen;\n}"},"status":-2},{"failures":[],"tindex":"87aaa775-3dbd-11e6-aac2-755c65c79875","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":0},{"failures":[5],"tindex":"87aaa776-3dbd-11e6-aac2-cdb8d88360ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"variableMap":{"todo":"len","len":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"status":-1},{"failures":[],"tindex":"87aaa777-3dbd-11e6-aac2-6fd14af5d8f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"o2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:79","type":"CtTryImpl","sourcecode":"try {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.lang.Comparable<java.lang.Comparable<?>> java.lang.Comparable<java.lang.Comparable<?>> = ((java.lang.Comparable<java.lang.Comparable<?>>)(org.apache.commons.codec.StringEncoderComparator.this.org.apache.commons.codec.StringEncoder.encode(o1)));\n    final java.lang.Comparable<?> java.lang.Comparable<?> = ((java.lang.Comparable<?>)(org.apache.commons.codec.StringEncoderComparator.this.org.apache.commons.codec.StringEncoder.encode(o2)));\n    compareCode = s1.compareTo(s2);\n} catch (final org.apache.commons.codec.EncoderException ee) {\n    compareCode = 0;\n}"},"status":-2},{"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"87aaa778-3dbd-11e6-aac2-534fe562c9c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"boxContent","leftCharacter":"boxContent","rightCharacter":"boxContent","location":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"status":-1},{"failures":[],"tindex":"87aace89-3dbd-11e6-aac2-a5c3a74d99e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[],"tindex":"87aace8a-3dbd-11e6-aac2-8746abe91808","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"87aace8b-3dbd-11e6-aac2-291c164661cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"status":-2},{"failures":[],"tindex":"87aace8c-3dbd-11e6-aac2-b34f3dffe9dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"variableMap":{"c":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:303","type":"CtAssignmentImpl","sourcecode":"left = results[0]"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}