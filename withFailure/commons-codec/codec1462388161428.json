{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":18,"org.apache.commons.codec.binary.HexTest.testCustomCharset":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":21,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":14,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":39,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":13,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":32,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":34,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":44,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":10,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":0,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":31,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":20,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":35,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":2,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":19,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":24,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":33,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":36,"org.apache.commons.codec.binary.Base64Test.testUUID":41,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":8,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":12,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":3,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":30,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":9,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":22,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":15,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":23,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":25,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":17,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":29,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":40,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":11,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":16,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":26,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":28},"transformations":[{"failures":[],"tindex":"d861b5c6-1229-11e6-92e1-e15078ca47dd","series":0,"name":"replace","transplant":{"toString":"if (input == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (count == len) {\n    return str.toUpperCase(java.util.Locale.ENGLISH);\n} ","position":"org.apache.commons.codec.language.SoundexUtils:53","type":"CtIfImpl","sourcecode":"if (count == len) {\n    return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"d861dcd7-1229-11e6-92e1-8782371a6561","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 10))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"d86203e8-1229-11e6-92e1-cb78b62485e6","series":0,"name":"add","transplant":{"toString":"this.maxPhonemes = maxPhonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = handleGH(value, result, index)","position":"org.apache.commons.codec.language.DoubleMetaphone:411","type":"CtAssignmentImpl","sourcecode":"index = handleGH(value, result, index)"},"status":-2},{"failures":[],"tindex":"d8631559-1229-11e6-92e1-2547ab9acad1","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"mb$\", \"m2\")","position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"toString":"name = getFirst3Last3(name)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":-2},{"failures":[],"tindex":"d863155a-1229-11e6-92e1-454d42b85f38","series":0,"name":"replace","transplant":{"toString":"final byte[] buf = new byte[avail]","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"length"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] l_ascii = new byte[(raw.length) << 3]","position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"d8633c6b-1229-11e6-92e1-25318f8338a2","series":0,"name":"add","transplant":{"toString":"this.soundexMapping = org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING","position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"soundexMapping","soundexMapping":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"toString":"this.soundexMapping = mapping.toCharArray()","position":"org.apache.commons.codec.language.Soundex:109","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[],"tindex":"d8633c6c-1229-11e6-92e1-a1bdece25a10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START)) {\n        inExtendedComment = true;\n    } else {\n        final int cmtI = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.CMT);\n        if (cmtI >= 0) {\n            line = line.substring(0, cmtI);\n        } \n        line = line.trim();\n        if ((line.length()) == 0) {\n            continue;\n        } \n        final java.lang.String[] parts = line.split(\"\\\\s+\");\n        if ((parts.length) != 3) {\n            throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n        } \n        final java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(parts[0]);\n        final java.lang.String[] langs = parts[1].split(\"\\\\+\");\n        final boolean accept = parts[2].equals(\"true\");\n        rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n    }\n}","position":"org.apache.commons.codec.language.bm.Lang:143","type":"CtIfImpl","sourcecode":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = true;\n    } else {\n        final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n        if (cmtI >= 0) {\n            line = line.substring(0, cmtI);\n        } \n        line = line.trim();\n        if ((line.length()) == 0) {\n            continue;\n        } \n        final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n        if ((parts.int) != 3) {\n            throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n        } \n        final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n        final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n        final boolean boolean = parts[2].equals(\"true\");\n        rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n    }\n}"},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22],"tindex":"d863637d-1229-11e6-92e1-89fc45663f48","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.ISO_8859_1)","position":"org.apache.commons.codec.binary.StringUtils:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"d8638a8e-1229-11e6-92e1-7bf739b0023a","series":0,"name":"add","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"appendPrimary(primary)","position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[],"tindex":"d8638a8f-1229-11e6-92e1-0ffc38a6cd40","series":0,"name":"add","transplant":{"toString":"s = (s << 4) | (s >>> 28)","position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:707","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"d863b1a0-1229-11e6-92e1-bb58415a3436","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('~')","position":"org.apache.commons.codec.net.QCodec:103","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('~')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(',')","position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[],"tindex":"d863b1a1-1229-11e6-92e1-57a8e7ce1e07","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found = true","position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"roundsCustom"},"type":"adrStmt","transplantationPoint":{"toString":"roundsCustom = true","position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"status":-3},{"failures":[],"tindex":"d863b1a2-1229-11e6-92e1-ab098926cf02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"d863d8b3-1229-11e6-92e1-0941c5aab851","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"mac.reset()","position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":-2},{"failures":[23,24],"tindex":"d863d8b4-1229-11e6-92e1-c3189049f71e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[25,26,27,28,29,30,31,32],"tindex":"d863d8b5-1229-11e6-92e1-b5bc76d730f2","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, true)","position":"org.apache.commons.codec.binary.Base64:606","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, true)"},"variableMap":{"binaryData":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)","position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"status":-1},{"failures":[33,34,35,36],"tindex":"d863ffc6-1229-11e6-92e1-1d500446f532","series":0,"name":"add","transplant":{"toString":"code.append('H')","position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\"|\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"status":-1},{"failures":[],"tindex":"d863ffc7-1229-11e6-92e1-5f5fe55d6c58","series":0,"name":"add","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)","position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"status":-2},{"failures":[37,38,39,40,41,42],"tindex":"d863ffc8-1229-11e6-92e1-8b26728e0b07","series":0,"name":"replace","transplant":{"toString":"l_ascii[(jj - bits)] = '1'","position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"i","l_ascii":"out","bits":"i"},"type":"adrStmt","transplantationPoint":{"toString":"out[i] = ((byte)(f & 255))","position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"status":-1},{"failures":[],"tindex":"d86426d9-1229-11e6-92e1-4508862f2710","series":0,"name":"replace","transplant":{"toString":"final java.lang.String[] charsToTrim = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] parts = aWord.split(\"'\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:433","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = aWord.split(\"'\")"},"status":-2},{"failures":[],"tindex":"d86426da-1229-11e6-92e1-4952181d6299","series":0,"name":"replace","transplant":{"toString":"return str","position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return decodeText(str)","position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"status":-2},{"failures":[43],"tindex":"d86426db-1229-11e6-92e1-f5cd1d3b18f8","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")","position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN)))","position":"org.apache.commons.codec.language.bm.Lang:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"d8644dec-1229-11e6-92e1-6d61608e90a1","series":0,"name":"replace","transplant":{"toString":"urlsafe = org.apache.commons.codec.net.URLCodec.WWW_FORM_URL","position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"variableMap":{"urlsafe":"printable","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"printable"},"type":"adrStmt","transplantationPoint":{"toString":"printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS","position":"org.apache.commons.codec.net.QuotedPrintableCodec:278","type":"CtAssignmentImpl","sourcecode":"printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet"},"status":-3},{"failures":[44],"tindex":"d8644ded-1229-11e6-92e1-f78e992990c7","series":0,"name":"replace","transplant":{"toString":"code.append('J')","position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('H')","position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":24,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}