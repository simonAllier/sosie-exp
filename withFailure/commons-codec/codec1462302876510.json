{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":63,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":91,"org.apache.commons.codec.language.NysiisTest.testSnat":85,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":107,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":114,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":61,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":75,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":106,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":46,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":62,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":15,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":109,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":112,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":57,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":74,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":93,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":117,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":28,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":47,"org.apache.commons.codec.language.NysiisTest.testCap":79,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":99,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":53,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":60,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":65,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":97,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":0,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":54,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":115,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":94,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":78,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":96,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":98,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":105,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":5,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":76,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":44,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":100,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":73,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":66,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":30,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":37,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":104,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":116,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":35,"org.apache.commons.codec.language.NysiisTest.testTranan":87,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":113,"org.apache.commons.codec.language.NysiisTest.testFal":82,"org.apache.commons.codec.language.NysiisTest.testSnad":84,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":2,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":48,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":41,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":29,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":70,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":49,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":56,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":39,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":69,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":101,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":108,"org.apache.commons.codec.binary.Base64Test.testBase64":24,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":18,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":1,"org.apache.commons.codec.binary.Base64Test.testUUID":21,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":58,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":90,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":45,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":23,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":51,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":55,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":118,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":119,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":95,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":102,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":110,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":34,"org.apache.commons.codec.language.NysiisTest.testBran":83,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":88,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":16,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":32,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":64,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":4,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":36,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":17,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":103,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":40,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":13,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":52,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":77,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":72,"org.apache.commons.codec.language.NysiisTest.testDad":80,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":7,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":68,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":92,"org.apache.commons.codec.language.NysiisTest.testOthers":86,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":38,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":71,"org.apache.commons.codec.language.NysiisTest.testDan":81,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":120,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":67,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":89,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":14,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":42,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":111},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"469bf85b-1163-11e6-a13a-731eb0835a98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"variableMap":{"b":"ii","t":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"status":-1},{"failures":[],"tindex":"469c1f6c-1163-11e6-a13a-ef8890dd2178","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"pArray","ascii":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"status":-3},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"469c1f6d-1163-11e6-a13a-5933df422c39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:235","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[69],"tindex":"469c467e-1163-11e6-a13a-b90a7c06774c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:269","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[];\n} "},"status":-1},{"failures":[],"tindex":"469c467f-1163-11e6-a13a-23820b89a348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:162","type":"CtIfImpl","sourcecode":"if (nameLength > (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int);\n    final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength);\n    return firstThree + lastThree;\n} else {\n    return name;\n}"},"status":-2},{"failures":[],"tindex":"469c4680-1163-11e6-a13a-31d5300ed503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:210","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-2},{"failures":[],"tindex":"469c6d91-1163-11e6-a13a-dbd1ea23f716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"))"},"status":-2},{"failures":[],"tindex":"469c6d92-1163-11e6-a13a-096c9406c76b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"status":-3},{"failures":[],"tindex":"469c6d93-1163-11e6-a13a-db2765f6b42b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:545","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.startsWith(\"[\")"},"variableMap":{"content":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:552","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = boxContent.startsWith(\"^\")"},"status":0},{"failures":[],"tindex":"469c94a4-1163-11e6-a13a-954002db6dfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"status":0},{"failures":[],"tindex":"469c94a5-1163-11e6-a13a-353955085b7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar)"},"status":-2},{"failures":[70,71,72,73,74,75,76,77],"tindex":"469c94a6-1163-11e6-a13a-b3cbd9658396","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"tempResult = altCtx.digest()"},"variableMap":{"tempResult":"altResult","altCtx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:405","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":-1},{"failures":[],"tindex":"469cbbb7-1163-11e6-a13a-899f2d7765e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:69","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":0},{"failures":[78],"tindex":"469cbbb8-1163-11e6-a13a-4f738a3c0b81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:78","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.RefinedSoundex.this.char[], 0, mapping.int)"},"status":-1},{"failures":[],"tindex":"469cbbb9-1163-11e6-a13a-c70aaaea7f49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:381","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[79,80,81,82,83,84,85,86,87,88],"tindex":"469cbbba-1163-11e6-a13a-7d2563644c6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-1},{"failures":[],"tindex":"469ce2cb-1163-11e6-a13a-59ff96396e69","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text)"},"variableMap":{"text":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"469ce2cc-1163-11e6-a13a-f79da4be4fd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:312","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)))"},"status":-2},{"failures":[],"tindex":"469ce2cd-1163-11e6-a13a-ed5a928c9620","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","iValue":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"469d09de-1163-11e6-a13a-7bc0a58c9a54","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"variableMap":{"lines":"rules"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"status":-2},{"failures":[],"tindex":"469d09df-1163-11e6-a13a-775d76054f46","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = l + remainder"},"variableMap":{"l":"text","remainder":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:138","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-2},{"failures":[89,90,91],"tindex":"469d09e0-1163-11e6-a13a-e1283cb23152","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[92],"tindex":"469d09e1-1163-11e6-a13a-732b108ac66a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"469d30f2-1163-11e6-a13a-0f54703142ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"folding"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"status":-2},{"failures":[75,76,77],"tindex":"469d30f3-1163-11e6-a13a-6153e7cdfb94","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer)"},"status":-1},{"failures":[],"tindex":"469d30f4-1163-11e6-a13a-e5b2ef3c8445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"status":-2},{"failures":[93],"tindex":"469d5805-1163-11e6-a13a-7fd9836f86b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"status":-1},{"failures":[],"tindex":"469d5806-1163-11e6-a13a-ab73b974cb28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHIA\")) {\n    return true;\n} else if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:844","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'M') {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"469d5807-1163-11e6-a13a-0f24131e3db9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:377","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":-2},{"failures":[89,90,94,91],"tindex":"469d5808-1163-11e6-a13a-67f4c0f2a069","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:559","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"469d7f19-1163-11e6-a13a-25844c2363b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":0},{"failures":[95],"tindex":"469d7f1a-1163-11e6-a13a-69588ed48658","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:180","type":"CtIfImpl","sourcecode":"if (hasUnderscores) {\n    final byte[] byte[] = new byte[bytes.int];\n    for (int int = 0 ; i < (bytes.int) ; i++) {\n        final byte byte = bytes[i];\n        if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n            tmp[i] = b;\n        } else {\n            tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n        }\n    }\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp);\n} "},"status":-1},{"failures":[96,97],"tindex":"469d7f1b-1163-11e6-a13a-3fca849a8061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:412","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"original"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original, null)"},"status":-1},{"failures":[98],"tindex":"469d7f1c-1163-11e6-a13a-27b1ea943dc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:153","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[],"tindex":"469da62d-1163-11e6-a13a-61259cf83271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER":"rContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:684","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"469da62e-1163-11e6-a13a-8ddf380e1cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:646","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))"},"variableMap":{"lContext":"rContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"status":-2},{"failures":[],"tindex":"469da62f-1163-11e6-a13a-b9084a798915","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((ii & 1) == 1) {\n    ctx.update(finalb[j]);\n} else {\n    ctx.update(keyBytes[j]);\n}"},"status":-2},{"failures":[],"tindex":"469dcd40-1163-11e6-a13a-9146bce9c31c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:314","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"status":-3},{"failures":[99,100],"tindex":"469dcd41-1163-11e6-a13a-2d7d527c3799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"status":-1},{"failures":[89,90,101,94,91],"tindex":"469df452-1163-11e6-a13a-5926dff273bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[102],"tindex":"469df453-1163-11e6-a13a-b31766a1a282","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:540","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.endsWith(input, content)"},"status":-1},{"failures":[],"tindex":"469df454-1163-11e6-a13a-23eb240bda5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"status":0},{"failures":[],"tindex":"469df455-1163-11e6-a13a-9bd2c7f6b43b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER":"rContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:684","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"469e1b66-1163-11e6-a13a-97f0662c08bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"e0","len":"e0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"status":-2},{"failures":[103,104,105,106,107],"tindex":"469e1b67-1163-11e6-a13a-f338d0c93f63","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.add(nextBranch);\n} else {\n    break;\n}"},"variableMap":{"nextBranches":"nextBranches","nextBranch":"branch","branching":"branchingRequired"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:523","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : replacements) {\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n    final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n    nextBranch.processNextReplacement(nextReplacement, force);\n    if (branching) {\n        nextBranches.add(nextBranch);\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"469e1b68-1163-11e6-a13a-afb0a91566f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"nextChar","c2":"nextChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:341","type":"CtIfImpl","sourcecode":"if ((rightLength = input.length()) > 0) {\n    nextChar = input.getNextChar();\n} else {\n    nextChar = '-';\n}"},"status":-2},{"failures":[108,109,110],"tindex":"469e4279-1163-11e6-a13a-d7e5c2d2e082","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:161","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine = new org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getNameType() , ruleType , org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat() , org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes())"},"status":-1},{"failures":[70,71,72,73,74,75,76,77],"tindex":"469e427a-1163-11e6-a13a-337d5b8eb9e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"variableMap":{"sBytes":"altResult","saltLen":"keyLen","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:368","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} else {\n    ctx.update(altResult, 0, blocksize);\n}"},"status":-1},{"failures":[111,112],"tindex":"469e427b-1163-11e6-a13a-2b98cc9e4afb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"status":-1},{"failures":[],"tindex":"469e427c-1163-11e6-a13a-8f589c3ef63c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n    return false;\n} "},"status":0},{"failures":[111,112],"tindex":"469e698d-1163-11e6-a13a-a76795d780a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"status":-1},{"failures":[113,114,115,116,117,118,119,120,121],"tindex":"469e698e-1163-11e6-a13a-73f64cdfe91a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:410","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":52,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}