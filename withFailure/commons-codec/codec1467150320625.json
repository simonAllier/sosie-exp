{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":93,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeNull":97,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":117,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":61,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":57,"org.apache.commons.codec.binary.Base64Test.testTriplets":126,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":121,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":9,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":47,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":68,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":109,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":49,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":66,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":69,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":72,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":113,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":90,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":39,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":41,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":75,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":82,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":81,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":25,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":63,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":89,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":80,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":6,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":27,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":103,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":28,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":14,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":84,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":48,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":86,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":52,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":95,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":71,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":87,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":67,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":21,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":111,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":107,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":118,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":11,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":104,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":116,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":102,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":78,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":42,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":99,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":106,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":7,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":96,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":98,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":20,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":123,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":101,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":76,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":124,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":114,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":10,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":77,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":129,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":13,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":73,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":32,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":110,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":56,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":29,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":85,"org.apache.commons.codec.binary.Base64Test.testBase64":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":60,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":120,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.binary.Base64Test.testUUID":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":94,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":12,"org.apache.commons.codec.binary.Base64Test.testSingletons":34,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":128,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":122,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":58,"org.apache.commons.codec.binary.Base64Test.testPairs":22,"org.apache.commons.codec.binary.Base64Test.testConstructors":50,"org.apache.commons.codec.binary.Base64Test.testCodec112":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":51,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":74,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":70,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":54,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":100,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":112,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":15,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":105,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":65,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":19,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":83,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":43,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":4,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":91,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":59,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":119,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":92,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":115,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":127,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":108,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":44,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":55,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":125,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":24,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":8},"transformations":[{"failures":[0,1,2,3],"tindex":"9c71a7c7-3d79-11e6-bff7-313d26ffc0c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:591","type":"CtReturnImpl","sourcecode":"return (charAt(value, (index + 1))) == 'R' ? index + 2 : index + 1"},"status":-1},{"failures":[4,5,6,7],"tindex":"9c71ced8-3d79-11e6-bff7-3ff2cf85ccd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:277","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[8,9],"tindex":"9c71ced9-3d79-11e6-bff7-a197025150aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"variableMap":{"f":"offset","i":"offset","out":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"status":-1},{"failures":[],"tindex":"9c71ceda-3d79-11e6-bff7-2b2d014cd42e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"name2Char","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":0},{"failures":[],"tindex":"9c71cedb-3d79-11e6-bff7-01ba0ec66bf6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:506","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    continue;\n} "},"variableMap":{"rules":"ruleList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:241","type":"CtInvocationImpl","sourcecode":"java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n    @java.lang.Override\n    public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n        return (rule2.getPatternLength()) - (rule1.getPatternLength());\n    }\n})"},"status":0},{"failures":[8,9],"tindex":"9c71cedc-3d79-11e6-bff7-7de3c68a25c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"variableMap":{"c":"left","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:303","type":"CtAssignmentImpl","sourcecode":"left = results[0]"},"status":-1},{"failures":[],"tindex":"9c71cedd-3d79-11e6-bff7-274746e505f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:212","type":"CtAssignmentImpl","sourcecode":"this.byte = pad"},"status":-2},{"failures":[10],"tindex":"9c71cede-3d79-11e6-bff7-63ac63510c41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)"},"status":-1},{"failures":[2,3],"tindex":"9c71cedf-3d79-11e6-bff7-910bca80344d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:530","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"9c71f5f0-3d79-11e6-bff7-49108dbf4630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bitlen / 8]"},"variableMap":{"bitlen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:342","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[46,47],"tindex":"9c71f5f1-3d79-11e6-bff7-616160d4334a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd2Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"status":-1},{"failures":[],"tindex":"9c71f5f2-3d79-11e6-bff7-35ef5ba483f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:94","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:525","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch"},"status":-2},{"failures":[],"tindex":"9c71f5f3-3d79-11e6-bff7-b554f610962f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"n","e1":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:329","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"status":-2},{"failures":[1,2,3],"tindex":"9c71f5f4-3d79-11e6-bff7-cd80b8c0198b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"9c71f5f5-3d79-11e6-bff7-47838fb22103","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"status":0},{"failures":[],"tindex":"9c71f5f6-3d79-11e6-bff7-cfc8d0dd79e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"status":-2},{"failures":[],"tindex":"9c721d07-3d79-11e6-bff7-99d0985380bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:203","type":"CtReturnImpl","sourcecode":"return java.lang.String.format(\"org/apache/commons/codec/language/bm/%s_languages.txt\", nameType.getName())"},"status":-2},{"failures":[],"tindex":"9c721d08-3d79-11e6-bff7-991cba7b56d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:247","type":"CtTryImpl","sourcecode":"try {\n    return encode(str, getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"9c721d09-3d79-11e6-bff7-4354a36d1560","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:139","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"9c721d0a-3d79-11e6-bff7-0fde2189b2b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"newData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:243","type":"CtReturnImpl","sourcecode":"return newData"},"status":-2},{"failures":[],"tindex":"9c721d0b-3d79-11e6-bff7-091aba9895f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[2,3],"tindex":"9c721d0c-3d79-11e6-bff7-bf59bb21636e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"status":-1},{"failures":[],"tindex":"9c721d0d-3d79-11e6-bff7-b96f97f94ac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"variableMap":{"data":"bytes","length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:202","type":"CtLocalVariableImpl","sourcecode":"int int = bytes[index]"},"status":-2},{"failures":[48],"tindex":"9c721d0e-3d79-11e6-bff7-95629f79518e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r$\", \"3\")"},"status":-1},{"failures":[],"tindex":"9c721d0f-3d79-11e6-bff7-83928ad82dc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9c724420-3d79-11e6-bff7-8d6bb414a355","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"prefix","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"status":-2},{"failures":[],"tindex":"9c724421-3d79-11e6-bff7-af26bc670250","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:367","type":"CtIfImpl","sourcecode":"if (open >= 0) {\n    if (!(ph.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n    } \n    final java.lang.String java.lang.String = ph.substring(0, open);\n    final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet);\n}"},"status":-2},{"failures":[],"tindex":"9c724422-3d79-11e6-bff7-13ffa64492d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-2},{"failures":[],"tindex":"9c724423-3d79-11e6-bff7-b55d22ec3e18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":-2},{"failures":[49],"tindex":"9c724424-3d79-11e6-bff7-5b8b598e20bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"status":-1},{"failures":[],"tindex":"9c724425-3d79-11e6-bff7-8be5ecee278f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"lang","key":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:249","type":"CtReturnImpl","sourcecode":"return java.lang.String.format(\"org/apache/commons/codec/language/bm/%s_%s_%s.txt\", nameType.getName(), rt.getName(), lang)"},"status":-2},{"failures":[50],"tindex":"9c724426-3d79-11e6-bff7-cdde2c1a55ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":-1},{"failures":[],"tindex":"9c726b37-3d79-11e6-bff7-414fe8149b5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:89","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}"},"status":0},{"failures":[51,52],"tindex":"9c726b38-3d79-11e6-bff7-4ba831e530f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:296","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"9c726b39-3d79-11e6-bff7-fd9b2bf637ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(s, java.util.Collections.unmodifiableMap(rts))"},"status":-1},{"failures":[],"tindex":"9c726b3a-3d79-11e6-bff7-ed2cacc240af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:111","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[8,9],"tindex":"9c726b3b-3d79-11e6-bff7-49924568406d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"9c726b3c-3d79-11e6-bff7-39ac9e25958e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":-2},{"failures":[0,1,2,3],"tindex":"9c726b3d-3d79-11e6-bff7-fb91c0d0f077","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:387","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('J');\n    index += 3;\n} else {\n    result.append(\"TK\");\n    index += 2;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:765","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (slavoGermanic && ((index > 0) && ((charAt(value, (index - 1))) != 'T')))) {\n    result.append(\"S\", \"TS\");\n} else {\n    result.append('S');\n}"},"status":-1},{"failures":[],"tindex":"9c726b3e-3d79-11e6-bff7-7bfb8f670577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"status":-2},{"failures":[],"tindex":"9c726b3f-3d79-11e6-bff7-91e5284c3255","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"9c726b40-3d79-11e6-bff7-fdf72122e95b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"variableMap":{"ctx1":"ctx1","saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:273","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":0},{"failures":[1,2,3],"tindex":"9c726b41-3d79-11e6-bff7-9131f547377d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:692","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[70],"tindex":"9c729252-3d79-11e6-bff7-972999a6366e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:174","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    if (b == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        hasUnderscores = true;\n        break;\n    } \n}"},"status":-1},{"failures":[71,72,73],"tindex":"9c729253-3d79-11e6-bff7-9d31f14238f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:183","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-1},{"failures":[],"tindex":"9c729254-3d79-11e6-bff7-17c7f3410999","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:302","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[74,75,76,77],"tindex":"9c729255-3d79-11e6-bff7-79c6a974eaec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":-1},{"failures":[],"tindex":"9c729256-3d79-11e6-bff7-1135d425cc14","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"status":-2},{"failures":[],"tindex":"9c729257-3d79-11e6-bff7-e5b02a42a1c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"status":-2},{"failures":[],"tindex":"9c729258-3d79-11e6-bff7-4174b8790ba1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"name1","org.apache.commons.codec.language.Caverphone1.SIX_1":"name1LtREnd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-2},{"failures":[78,79],"tindex":"9c729259-3d79-11e6-bff7-bd8abebfeb91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[80,81,82,83,84,85,86,87],"tindex":"9c72925a-3d79-11e6-bff7-e390cd9f9007","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:78","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.RefinedSoundex.this.char[], 0, mapping.int)"},"variableMap":{"mapping":"newData","soundexMapping":"data","length":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"status":-1},{"failures":[88,89,90,91,92,93,94,95],"tindex":"9c72925b-3d79-11e6-bff7-07c5a9299daf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos))"},"status":-1},{"failures":[],"tindex":"9c72925c-3d79-11e6-bff7-01ab8767b588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:278","type":"CtIfImpl","sourcecode":"if (lineSeparator != null) {\n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n    } \n    if (lineLength > 0) {\n        this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n        this.byte[] = new byte[lineSeparator.int];\n        java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n    } else {\n        this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n        this.byte[] = null;\n    }\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[0,2,3],"tindex":"9c72925d-3d79-11e6-bff7-39248c8daac6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:628","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"9c72925e-3d79-11e6-bff7-2d7cbfc6b5f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"status":-2},{"failures":[],"tindex":"9c72b96f-3d79-11e6-bff7-897463d5a4ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"9c72b970-3d79-11e6-bff7-67c53d0d7d22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"variableMap":{"pArray":"binaryData","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"status":-2},{"failures":[],"tindex":"9c72b971-3d79-11e6-bff7-df382879ef1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"chars","prefix":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"9c72b972-3d79-11e6-bff7-6d5468b4f975","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:468","type":"CtIfImpl","sourcecode":"if ((++index) < (branches.int)) {\n    sb.append('|');\n} "},"status":-2},{"failures":[],"tindex":"9c72b973-3d79-11e6-bff7-d350074521e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"9c72b974-3d79-11e6-bff7-0fc64961113f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:226","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[96,97],"tindex":"9c72b975-3d79-11e6-bff7-0bc1547925c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:176","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[98],"tindex":"9c72b976-3d79-11e6-bff7-87f791971f07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:96","type":"CtAssignmentImpl","sourcecode":"branch.java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this.java.lang.String"},"status":-1},{"failures":[80,84,86,87],"tindex":"9c72b977-3d79-11e6-bff7-05c45871cb02","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:377","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-1},{"failures":[],"tindex":"9c72b978-3d79-11e6-bff7-13b39817c14e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"upperName":"name1LtREnd","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-2},{"failures":[],"tindex":"9c72e089-3d79-11e6-bff7-45af318d4f9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"status":-2},{"failures":[],"tindex":"9c72e08a-3d79-11e6-bff7-57b79b3b3145","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[],"tindex":"9c72e08b-3d79-11e6-bff7-e120daa820ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"status":0},{"failures":[],"tindex":"9c72e08c-3d79-11e6-bff7-092836607dcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"input","content":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:529","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}"},"status":-2},{"failures":[],"tindex":"9c72e08d-3d79-11e6-bff7-4b3848c648bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:504","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(index)"},"variableMap":{"input":"text","index":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-2},{"failures":[],"tindex":"9c72e08e-3d79-11e6-bff7-7d3f739fc7a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"status":-2},{"failures":[],"tindex":"9c72e08f-3d79-11e6-bff7-d73865fe3f77","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:144","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"variableMap":{"e":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:144","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)"},"status":-2},{"failures":[1,2,3],"tindex":"9c72e090-3d79-11e6-bff7-cbc60ec31c64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"variableMap":{"result":"result","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (!slavoGermanic)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"IE\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, \"ME\", \"MA\")))) {\n    result.appendAlternate('R');\n} else {\n    result.append('R');\n}"},"status":-1},{"failures":[],"tindex":"9c72e091-3d79-11e6-bff7-bb118e626958","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":0},{"failures":[],"tindex":"9c72e092-3d79-11e6-bff7-3df82fc1752d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"variableMap":{"binaryData":"pArray","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"status":-2},{"failures":[],"tindex":"9c72e093-3d79-11e6-bff7-9f4fc6c81710","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:66","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('!')"},"status":0},{"failures":[],"tindex":"9c72e094-3d79-11e6-bff7-3f66df35a7e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"variableMap":{"a":"avail","b":"avail","m":"avail","n":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:114","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"9c7306a5-3d79-11e6-bff7-559a6c172dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-2},{"failures":[],"tindex":"9c7306a6-3d79-11e6-bff7-e9ab5a89a601","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:266","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"variableMap":{"altCtx":"ctx","algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:361","type":"CtAssignmentImpl","sourcecode":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":0},{"failures":[2,3],"tindex":"9c7306a7-3d79-11e6-bff7-4d3592a39164","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"9c7306a8-3d79-11e6-bff7-cff0a628546e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"basen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:483","type":"CtReturnImpl","sourcecode":"return isInAlphabet(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(basen), true)"},"status":-2},{"failures":[],"tindex":"9c7306a9-3d79-11e6-bff7-3ba382ca95eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":0},{"failures":[99,76,77],"tindex":"9c7306aa-3d79-11e6-bff7-1586df307e92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[],"tindex":"9c7306ab-3d79-11e6-bff7-bb66c997cc71","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:190","type":"CtReturnImpl","sourcecode":"return alternate ? result.getAlternate() : result.getPrimary()"},"status":-2},{"failures":[100,101,102,103,104,105,106,107],"tindex":"9c7306ac-3d79-11e6-bff7-298a78e79011","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:465","type":"CtInvocationImpl","sourcecode":"sb.append(\", pat='\").append(pat).append('\\'')"},"variableMap":{"pat":"org.apache.commons.codec.digest.B64.B64T","sb":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"status":-1},{"failures":[108,109],"tindex":"9c7306ad-3d79-11e6-bff7-ab4e8893f3a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"status":-1},{"failures":[51,52],"tindex":"9c7306ae-3d79-11e6-bff7-e9fc0bf2d58e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:298","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[110,111,112],"tindex":"9c7306af-3d79-11e6-bff7-49bf8c2ee384","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:278","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":-1},{"failures":[113],"tindex":"9c7306b0-3d79-11e6-bff7-f33685fdcdee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('^')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:82","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[114,108,115,116,109,117,118,119],"tindex":"9c7306b1-3d79-11e6-bff7-7b1a8f697e79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"9c732dc2-3d79-11e6-bff7-4b51610c256f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"9c732dc3-3d79-11e6-bff7-6bdedaa84d41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"status":0},{"failures":[],"tindex":"9c732dc4-3d79-11e6-bff7-b5cf6d7e3ee6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:369","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"variableMap":{"pBytes":"altResult","ctx":"ctx","keyLen":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-2},{"failures":[],"tindex":"9c732dc5-3d79-11e6-bff7-8d2816f50c3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:153","type":"CtReturnImpl","sourcecode":"return soundex(((java.lang.String)(obj)))"},"status":-2},{"failures":[8,9],"tindex":"9c732dc6-3d79-11e6-bff7-a7476807f408","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"status":-1},{"failures":[],"tindex":"9c732dc7-3d79-11e6-bff7-e143c231cba8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"variableMap":{"mappedChar":"c","preHWChar":"c","firstCode":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"status":-2},{"failures":[120,121,122,123,124],"tindex":"9c732dc8-3d79-11e6-bff7-fd4d17a4089b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[11,12,13,14,15,16,17,125,18,19,126,20,23,24,127,25,26,27,28,29,30,31,128,32,35,36,37,38,39,40,129,41,42,43,44,45],"tindex":"9c732dc9-3d79-11e6-bff7-5379596c3a7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:379","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"9c732dca-3d79-11e6-bff7-6bc5d8874037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:401","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType, \"common\")"},"variableMap":{"nameType":"nameType","ruleType":"rt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:355","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.get(nameType).get(rt).get(lang)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}