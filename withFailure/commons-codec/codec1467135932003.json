{"failureDictionary":{"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":83,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":184,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":17,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":195,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":85,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":26,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":25,"org.apache.commons.codec.language.NysiisTest.testCap":108,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":24,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":28,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":191,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":33,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":3,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":125,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":31,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":32,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":128,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":77,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":21,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":138,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":72,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":176,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":86,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":183,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":174,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":188,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":194,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":181,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":22,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":97,"org.apache.commons.codec.language.NysiisTest.testDropBy":121,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":139,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":76,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":160,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":4,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":88,"org.apache.commons.codec.binary.Base64Test.testUUID":166,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":168,"org.apache.commons.codec.binary.Base64Test.testConstructors":23,"org.apache.commons.codec.language.NysiisTest.testRule2":113,"org.apache.commons.codec.language.NysiisTest.testRule1":112,"org.apache.commons.codec.language.NysiisTest.testRule7":116,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":96,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":102,"org.apache.commons.codec.language.NysiisTest.testRule6":115,"org.apache.commons.codec.language.NysiisTest.testRule5":114,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":153,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":80,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":82,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":147,"org.apache.commons.codec.language.NysiisTest.testBran":117,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":124,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":99,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":105,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":63,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":159,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":27,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":135,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":91,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":178,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":148,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":182,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":162,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":156,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":130,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":190,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":95,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":20,"org.apache.commons.codec.language.NysiisTest.testDad":109,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":127,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":150,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":19,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":180,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":106,"org.apache.commons.codec.language.NysiisTest.testDan":110,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":140,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":42,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":149,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":157,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":132,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":14,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":133,"org.apache.commons.codec.language.NysiisTest.testSnat":119,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":75,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":74,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":185,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":60,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":129,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":141,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":158,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":152,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":161,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":15,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":66,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":64,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":67,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":100,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":134,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":151,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":173,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":43,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":9,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":186,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":61,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":131,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":51,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":126,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":136,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":87,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":192,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":5,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":30,"org.apache.commons.codec.language.Caverphone2Test.testLocaleIndependence":13,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":104,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":154,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":65,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":73,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":92,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":40,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":163,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":175,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":179,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":93,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":103,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":146,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":177,"org.apache.commons.codec.language.NysiisTest.testTranan":123,"org.apache.commons.codec.language.NysiisTest.testFal":111,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":47,"org.apache.commons.codec.language.NysiisTest.testSnad":118,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":89,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":142,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":187,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":84,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":54,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":68,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":170,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":79,"org.apache.commons.codec.binary.Base64Test.testBase64":169,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":58,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":196,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":164,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":36,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":189,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":56,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":193,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":171,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":155,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":52,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":34,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":120,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":165,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":144,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":90,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":145,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":172,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":137,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":62,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":46,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":11,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":143,"org.apache.commons.codec.language.NysiisTest.testOthers":122,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":167,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":78,"org.apache.commons.codec.language.Caverphone2Test.testEncodeEmpty":12,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":53,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":81},"transformations":[{"failures":[],"tindex":"1c2a01c2-3d58-11e6-9f65-fb94bdad839d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"variableMap":{"lastReplacement":"txt","replacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":0},{"failures":[],"tindex":"1c2a28d3-3d58-11e6-9f65-ad2faaab91be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:801","type":"CtReturnImpl","sourcecode":"return digest"},"variableMap":{"digest":"messageDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:817","type":"CtReturnImpl","sourcecode":"return messageDigest"},"status":-2},{"failures":[],"tindex":"1c2a28d4-3d58-11e6-9f65-a505e40dcd76","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"status":-2},{"failures":[0],"tindex":"1c2a28d5-3d58-11e6-9f65-6b74463ea8ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-1},{"failures":[1,2],"tindex":"1c2a28d6-3d58-11e6-9f65-ebb402846428","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13],"tindex":"1c2a4fe7-3d58-11e6-9f65-118e28a79256","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"status":-1},{"failures":[],"tindex":"1c2a4fe8-3d58-11e6-9f65-87177b1b72d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(';')"},"status":0},{"failures":[],"tindex":"1c2a4fe9-3d58-11e6-9f65-b9f90f98dcd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"valueToDigest","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"valueToDigest","text":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"1c2a4fea-3d58-11e6-9f65-1fabe27053d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[14,15],"tindex":"1c2a4feb-3d58-11e6-9f65-05a9954ed4b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"variableMap":{"u":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"status":-1},{"failures":[],"tindex":"1c2a4fec-3d58-11e6-9f65-b1dfdb1c3c86","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[16,1,2],"tindex":"1c2a4fed-3d58-11e6-9f65-4f04190c3d0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"result.append('X', 'K')"},"status":-1},{"failures":[17,18,19,20,21],"tindex":"1c2a4fee-3d58-11e6-9f65-5d4ce8a537c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-1},{"failures":[22,23],"tindex":"1c2a76ff-3d58-11e6-9f65-ef34811fa61b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"arrayOctet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:499","type":"CtForEachImpl","sourcecode":"for (final byte byte : arrayOctet) {\n    if (((byte) == element) || (isInAlphabet(element))) {\n        return true;\n    } \n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31],"tindex":"1c2a7700-3d58-11e6-9f65-e57751f5579f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:224","type":"CtReturnImpl","sourcecode":"return new java.lang.String(copyData(0, int))"},"status":-1},{"failures":[14,32,33,15],"tindex":"1c2a7701-3d58-11e6-9f65-c9609fbd0be4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"status":-1},{"failures":[],"tindex":"1c2a7702-3d58-11e6-9f65-d5c9931e66a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"variableMap":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos","context":"context","modulus":"savedPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-2},{"failures":[14,32,33,15],"tindex":"1c2a7703-3d58-11e6-9f65-9daf5b82a408","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"status":-1},{"failures":[],"tindex":"1c2a7704-3d58-11e6-9f65-83a01f097195","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"variableMap":{"replacedName":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":0},{"failures":[34,35],"tindex":"1c2a7705-3d58-11e6-9f65-cd279c651eac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:222","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[36],"tindex":"1c2a7706-3d58-11e6-9f65-655723be99e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang));\n} "},"status":-1},{"failures":[],"tindex":"1c2a7707-3d58-11e6-9f65-d3cfaacd9db1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"lineSeparator","bigBytes":"buffer","len":"lineLength","startSrc":"currentLinePos","startDst":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:495","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-2},{"failures":[16,1,2],"tindex":"1c2a7708-3d58-11e6-9f65-dd92aea041b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"1c2a9e19-3d58-11e6-9f65-a1353d6e82b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_256"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[14,15],"tindex":"1c2a9e1a-3d58-11e6-9f65-11ab3c71da21","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"variableMap":{"cnt":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"a ^= t << n"},"status":-1},{"failures":[17,18,19,20,37,21],"tindex":"1c2a9e1b-3d58-11e6-9f65-51bd18fea7d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"status":-1},{"failures":[],"tindex":"1c2a9e1c-3d58-11e6-9f65-2b346fab2d11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"upperName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"upperName = removeAccents(upperName)"},"status":-2},{"failures":[38],"tindex":"1c2a9e1d-3d58-11e6-9f65-ebec645f2967","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"urlsafe"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:135","type":"CtIfImpl","sourcecode":"if (urlsafe.get(b)) {\n    if (b == ' ') {\n        b = '+';\n    } \n    buffer.write(b);\n} else {\n    buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte);\n    final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n    final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n    buffer.write(hex1);\n    buffer.write(hex2);\n}"},"status":-1},{"failures":[],"tindex":"1c2a9e1e-3d58-11e6-9f65-31c1e9294cca","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:521","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, null)"},"variableMap":{"keyBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"status":-2},{"failures":[],"tindex":"1c2a9e1f-3d58-11e6-9f65-25ccd3c97269","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"variableMap":{"binaryData":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:172","type":"CtIfImpl","sourcecode":"if ((ascii == null) || ((ascii.int) == 0)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-2},{"failures":[39,40,41],"tindex":"1c2ac530-3d58-11e6-9f65-65cd1b48f638","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer)"},"status":-1},{"failures":[42,43,44,45,46],"tindex":"1c2ac531-3d58-11e6-9f65-e9b6ef877ebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:215","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"1c2ac532-3d58-11e6-9f65-fbc40a353943","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"sBuf.append(current)"},"variableMap":{"current":"symb","sBuf":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:277","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-2},{"failures":[],"tindex":"1c2ac533-3d58-11e6-9f65-4974db329ac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"status":0},{"failures":[17,39,40,41,18,19,20,21],"tindex":"1c2ac534-3d58-11e6-9f65-594a70731954","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:257","type":"CtAssignmentImpl","sourcecode":"ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{"ctx1":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:307","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-1},{"failures":[],"tindex":"1c2ac535-3d58-11e6-9f65-558fe29dced9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[47],"tindex":"1c2ac536-3d58-11e6-9f65-875203dbcbed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"status":-1},{"failures":[48,47,49,50,38],"tindex":"1c2ac537-3d58-11e6-9f65-9d94a1c5ee8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:145","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-1},{"failures":[51,52,53,54,55,56,36,57,58,59,60,61,62,63,64,65,66,67],"tindex":"1c2ac538-3d58-11e6-9f65-a3f3bfda167c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:475","type":"CtAssignmentImpl","sourcecode":"rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>()"},"status":-1},{"failures":[68,69,70],"tindex":"1c2aec49-3d58-11e6-9f65-c12e2e954f83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:245","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"1c2aec4a-3d58-11e6-9f65-737896ec71e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:411","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"variableMap":{"pArray":"buffer","org.apache.commons.codec.binary.BaseNCodec.EOF":"length","this":"this","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:249","type":"CtIfImpl","sourcecode":"if ((context.byte[]) == null) {\n    context.byte[] = new byte[getDefaultBufferSize()];\n    context.int = 0;\n    context.int = 0;\n} else {\n    final byte[] byte[] = new byte[(context.byte[].int) * (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)];\n    java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int);\n    context.byte[] = b;\n}"},"status":-2},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"1c2b135b-3d58-11e6-9f65-bd1206009ad7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"patternKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    ruleMapping.put(patternKey, rules);\n} "},"status":-1},{"failures":[14,15],"tindex":"1c2b3a6c-3d58-11e6-9f65-0b9cae31eda6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-1},{"failures":[],"tindex":"1c2b3a6d-3d58-11e6-9f65-9d0194de238c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:93","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":0},{"failures":[84,85,86],"tindex":"1c2b3a6e-3d58-11e6-9f65-77dde4e9fde6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:163","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)"},"status":-1},{"failures":[],"tindex":"1c2b3a6f-3d58-11e6-9f65-81b8eaa2a9cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"variableMap":{"f":"pos","i":"org.apache.commons.codec.binary.Base32.MASK_5BITS","out":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:510","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[87,88,89,90,91,92,93],"tindex":"1c2b3a70-3d58-11e6-9f65-dd1d8b35dde6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"finalb = ctx.digest()"},"status":-1},{"failures":[94],"tindex":"1c2b3a71-3d58-11e6-9f65-f1ffe218f594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[87,88,89,90,91,92,93],"tindex":"1c2b3a72-3d58-11e6-9f65-0def8acdecc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"variableMap":{"ctx1":"ctx","saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}"},"status":-1},{"failures":[],"tindex":"1c2b3a73-3d58-11e6-9f65-d13e8520db04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"unencodedBlockSize","encodeSize":"unencodedBlockSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"status":-2},{"failures":[95],"tindex":"1c2b3a74-3d58-11e6-9f65-c500e1c47d8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:87","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : charsToTrim) {\n    upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String);\n}"},"status":-1},{"failures":[14,15],"tindex":"1c2b3a75-3d58-11e6-9f65-49848c9c6a3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"out[1] = right"},"status":-1},{"failures":[96,94],"tindex":"1c2b3a76-3d58-11e6-9f65-b3709aa85f42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-1},{"failures":[97],"tindex":"1c2b6087-3d58-11e6-9f65-d71df77c0105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:225","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"1c2b6088-3d58-11e6-9f65-ab4987f17a66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:509","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"))"},"status":-2},{"failures":[],"tindex":"1c2b6089-3d58-11e6-9f65-671691c53d70","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:317","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"schedule"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:381","type":"CtReturnImpl","sourcecode":"return schedule"},"status":-2},{"failures":[17,39,40,41,18,19,20,21],"tindex":"1c2b608a-3d58-11e6-9f65-972ea6a45341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; i <= (rounds - 1) ; i++) {\n    ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm);\n    if ((i & 1) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } else {\n        ctx.update(altResult, 0, blocksize);\n    }\n    if ((i % 3) != 0) {\n        ctx.update(sBytes, 0, saltLen);\n    } \n    if ((i % 7) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } \n    if ((i & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(pBytes, 0, keyLen);\n    }\n    altResult = ctx.digest();\n}"},"status":-1},{"failures":[98],"tindex":"1c2b608b-3d58-11e6-9f65-bdcc1c8e807d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"status":-1},{"failures":[],"tindex":"1c2b608c-3d58-11e6-9f65-89db43992f5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"status":-2},{"failures":[1,2],"tindex":"1c2b608d-3d58-11e6-9f65-0fae01c859a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:711","type":"CtIfImpl","sourcecode":"if (isVowel(charAt(value, (index + 1)))) {\n    result.append('A', 'F');\n} else {\n    result.append('A');\n}"},"status":-1},{"failures":[99,100,98],"tindex":"1c2b608e-3d58-11e6-9f65-af1457235763","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:209","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-1},{"failures":[],"tindex":"1c2b608f-3d58-11e6-9f65-cfca06934abd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:283","type":"CtIfImpl","sourcecode":"if (line.contains(\"=\")) {\n    final java.lang.String[] java.lang.String[] = line.split(\"=\");\n    if ((parts.int) != 2) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        final java.lang.String java.lang.String = parts[0];\n        final java.lang.String java.lang.String = parts[1];\n        if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n            throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n        } \n        asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n    }\n} else {\n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 4) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        try {\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n            final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n            final char char = r.java.lang.String.charAt(0);\n            java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n            if (rules == null) {\n                rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                ruleMapping.put(patternKey, rules);\n            } \n            rules.add(r);\n        } catch (final java.lang.IllegalArgumentException e) {\n            throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"1c2b6090-3d58-11e6-9f65-0b15b68c2c8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"b","d":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:133","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":-2},{"failures":[17,18,19,20,21],"tindex":"1c2b6091-3d58-11e6-9f65-6bf9e06e8883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[101,102,103,104,105],"tindex":"1c2b6092-3d58-11e6-9f65-7b1020deda81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"variableMap":{"keyLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:287","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-1},{"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"1c2b87a3-3d58-11e6-9f65-a9c949d0a8f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)"},"status":-1},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"1c2b87a4-3d58-11e6-9f65-d1bc617c2326","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"status":-1},{"failures":[143],"tindex":"1c2b87a5-3d58-11e6-9f65-fb9b0dcf2153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"variableMap":{"keyBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:709","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"1c2b87a6-3d58-11e6-9f65-63da20f392fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-2},{"failures":[],"tindex":"1c2b87a7-3d58-11e6-9f65-1d3adef935e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"1c2b87a8-3d58-11e6-9f65-59a3ccaa192c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 1 :\n        break;\n    case 2 :\n        context.int = (context.int) >> 4;\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        context.int = (context.int) >> 2;\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"variableMap":{"ibitWorkArea":"c","pos":"c","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"c","context":"context","buffer":"buf","modulus":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"1c2b87a9-3d58-11e6-9f65-61831c1138e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:314","type":"CtLocalVariableImpl","sourcecode":"final char char = r.java.lang.String.charAt(0)"},"status":-2},{"failures":[],"tindex":"1c2b87aa-3d58-11e6-9f65-bd619202d3c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer)"},"status":-2},{"failures":[144],"tindex":"1c2baebb-3d58-11e6-9f65-814f6573de46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,125,126,184,129,133,135,136,138,140,143,185,186,187,188,0,189,190,191,192,193,194,195,196],"tindex":"1c2baebc-3d58-11e6-9f65-0d99e0486bc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:235","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"1c2baebd-3d58-11e6-9f65-bbe4684e3e0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[saltLen]"},"variableMap":{"saltLen":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"status":-2},{"failures":[],"tindex":"1c2baebe-3d58-11e6-9f65-493f048420ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"maxResultSize","to":"maxResultSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:670","type":"CtIfImpl","sourcecode":"if (len > maxResultSize) {\n    throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize));\n} "},"status":-2},{"failures":[],"tindex":"1c2baebf-3d58-11e6-9f65-2761de0e05d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"str","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:272","type":"CtWhileImpl","sourcecode":"while ((incount < (str.length())) && (count < (out.int))) {\n    mapped = getMappingCode(str, (incount++));\n    if (mapped != 0) {\n        if ((mapped != '0') && (mapped != last)) {\n            out[(count++)] = mapped;\n        } \n        last = mapped;\n    } \n}"},"status":-2},{"failures":[],"tindex":"1c2baec0-3d58-11e6-9f65-4129440f8d96","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"w"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"status":-2},{"failures":[],"tindex":"1c2baec1-3d58-11e6-9f65-6bdde8499bc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:241","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes[j])"},"variableMap":{"keyBytes":"finalb","ctx":"ctx","j":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:239","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb[j])"},"status":-2},{"failures":[64,65,66,67],"tindex":"1c2baec2-3d58-11e6-9f65-c1f918fe62ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:577","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n    }\n}"},"variableMap":{"input":"input","bContent":"bContent","shouldMatch":"endsWith"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:559","type":"CtIfImpl","sourcecode":"if (startsWith && endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (startsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n        }\n    };\n} "},"status":-1},{"failures":[],"tindex":"1c2baec3-3d58-11e6-9f65-d16620d53ce7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"1c2bd5d4-3d58-11e6-9f65-734d9e787f73","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-2},{"failures":[],"tindex":"1c2bd5d5-3d58-11e6-9f65-6351b94bb9ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:498","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(arrayOctet)"},"variableMap":{"arrayOctet":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:222","type":"CtReturnImpl","sourcecode":"return (context.byte[]) != null"},"status":-2},{"failures":[],"tindex":"1c2bd5d6-3d58-11e6-9f65-01744aff1cca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"1c2bd5d7-3d58-11e6-9f65-b9ea3abc2ab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":0},{"failures":[1,2],"tindex":"1c2bd5d8-3d58-11e6-9f65-b32e4032bc90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:387","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('J');\n    index += 3;\n} else {\n    result.append(\"TK\");\n    index += 2;\n}"},"status":-1},{"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"1c2bd5d9-3d58-11e6-9f65-b99d812e9411","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"1c2bd5da-3d58-11e6-9f65-a1ce5c69947c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[],"tindex":"1c2bd5db-3d58-11e6-9f65-d3b55b56d6aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:250","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[17,18,19,20,21],"tindex":"1c2bd5dc-3d58-11e6-9f65-fb0e50695a72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)"},"status":-1},{"failures":[],"tindex":"1c2bd5dd-3d58-11e6-9f65-2b58f5b6029a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"variableMap":{"c":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-2},{"failures":[],"tindex":"1c2bd5de-3d58-11e6-9f65-3f14c9f49a4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-2},{"failures":[71,72,73,74,75,79],"tindex":"1c2bd5df-3d58-11e6-9f65-87b840dd0bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:533","type":"CtInvocationImpl","sourcecode":"nextBranches.add(nextBranch)"},"status":-1},{"failures":[],"tindex":"1c2bd5e0-3d58-11e6-9f65-cdb7f0507d1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:296","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[1,2],"tindex":"1c2bfcf1-3d58-11e6-9f65-3f26538cb0d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[24,28],"tindex":"1c2bfcf2-3d58-11e6-9f65-b58d0dfa0bc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:383","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-1},{"failures":[],"tindex":"1c2bfcf3-3d58-11e6-9f65-0d13fe86d750","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:336","type":"CtIfImpl","sourcecode":"if ((strA.length()) > (strB.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())));\n}"},"status":-2},{"failures":[51,52,53,54,55,56,36,57,58,59,60,61,62,63,64,65,66,67],"tindex":"1c2bfcf4-3d58-11e6-9f65-7d98bd17dc03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:429","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"1c2bfcf5-3d58-11e6-9f65-d5894df34b41","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}