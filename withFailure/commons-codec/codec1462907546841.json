{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":0,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":22,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":58,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":52,"org.apache.commons.codec.language.NysiisTest.testSnat":8,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":41,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":56,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":70,"org.apache.commons.codec.language.NysiisTest.testDropBy":10,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":45,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":48,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":37,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":25,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":65,"org.apache.commons.codec.binary.Base64Test.testUUID":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":19,"org.apache.commons.codec.binary.Base64Test.testSingletons":54,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":63,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":35,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":47,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":66,"org.apache.commons.codec.language.NysiisTest.testRule2":28,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":44,"org.apache.commons.codec.language.NysiisTest.testRule1":27,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":68,"org.apache.commons.codec.language.NysiisTest.testRule7":31,"org.apache.commons.codec.language.NysiisTest.testRule6":30,"org.apache.commons.codec.binary.Base64Test.testCodec112":53,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":73,"org.apache.commons.codec.language.NysiisTest.testRule5":29,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":36,"org.apache.commons.codec.language.NysiisTest.testCap":2,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":17,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":34,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":9,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":72,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":60,"org.apache.commons.codec.language.NysiisTest.testBran":6,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":13,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":51,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":59,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":49,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":21,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":32,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":64,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":14,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":71,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":62,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":23,"org.apache.commons.codec.language.NysiisTest.testDad":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":15,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":39,"org.apache.commons.codec.language.NysiisTest.testOthers":11,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":55,"org.apache.commons.codec.language.NysiisTest.testTranan":12,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":61,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":20,"org.apache.commons.codec.language.NysiisTest.testDan":4,"org.apache.commons.codec.language.NysiisTest.testFal":5,"org.apache.commons.codec.language.NysiisTest.testSnad":7,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":33,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":67,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":24},"transformations":[{"failures":[0],"tindex":"2234ed23-16e3-11e6-9c08-850dc1e778ef","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"gh\", \"22\")","position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")","position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"22351434-16e3-11e6-9c08-ed32d618ca28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.BCodec:120","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"22351435-16e3-11e6-9c08-cf625f0a7bed","series":0,"name":"replace","transplant":{"toString":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} ","position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"curr","prev":"curr","curr":"curr"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.Nysiis.isVowel(curr)) {\n    return org.apache.commons.codec.language.Nysiis.CHARS_A;\n} ","position":"org.apache.commons.codec.language.Nysiis:125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Nysiis.isVowel(curr)) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[14,15],"tindex":"22353b46-16e3-11e6-9c08-81d152208b30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"lastReplacement = replacement","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"status":-1},{"failures":[16,17],"tindex":"22353b47-16e3-11e6-9c08-8d174848b909","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, true)","position":"org.apache.commons.codec.binary.Base64:606","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, true)"},"variableMap":{"binaryData":"binaryData"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)","position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)"},"status":-1},{"failures":[18,19,20,21,22,23],"tindex":"22353b48-16e3-11e6-9c08-2d4d600a8a23","series":0,"name":"replace","transplant":{"toString":"result.appendPrimary('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n    result.appendAlternate('S');\n} else {\n    result.append('S');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:633","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n    result.appendAlternate('S');\n} else {\n    result.append('S');\n}"},"status":-1},{"failures":[18,19,21],"tindex":"22353b49-16e3-11e6-9c08-151a50f3f96a","series":0,"name":"add","transplant":{"toString":"result.append('J', ' ')","position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if (index > 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n        result.append('K');\n    } else {\n        result.append('X', 'K');\n    }\n} else {\n    result.append('X');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:368","type":"CtIfImpl","sourcecode":"if (index > 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n        result.append('K');\n    } else {\n        result.append('X', 'K');\n    }\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"2235625a-16e3-11e6-9c08-2fb86eed0173","series":0,"name":"replace","transplant":{"toString":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} ","position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"variableMap":{"last2Char":"current","lastChar":"current","key":"sBuf"},"type":"adrStmt","transplantationPoint":{"toString":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"status":-2},{"failures":[],"tindex":"2235625b-16e3-11e6-9c08-71be093d7365","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"line","salt":"line","prefix":"line"},"type":"adrStmt","transplantationPoint":{"toString":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} ","position":"org.apache.commons.codec.language.bm.Rule:422","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-2},{"failures":[],"tindex":"2235625c-16e3-11e6-9c08-1b689c49479b","series":0,"name":"replace","transplant":{"toString":"int u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int diff = 0","position":"org.apache.commons.codec.language.SoundexUtils:115","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2235896d-16e3-11e6-9c08-699d95a2c2ec","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")","position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))","position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"2235896e-16e3-11e6-9c08-df41b912c10b","series":0,"name":"add","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return buffer.toString()","position":"org.apache.commons.codec.digest.Sha2Crypt:506","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-2},{"failures":[24,25],"tindex":"2235896f-16e3-11e6-9c08-712e96a1e959","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 32 ; i += 4) {\n    left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n    right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n}","position":"org.apache.commons.codec.digest.UnixCrypt:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 32 ; i += 4) {\n    left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n    right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n}"},"status":-1},{"failures":[1,26,2,3,4,5,27,28,29,30,31,6,7,8,9,10,11,12,13],"tindex":"22358970-16e3-11e6-9c08-31e1b43e37e3","series":0,"name":"replace","transplant":{"toString":"code.append('K')","position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"toString":"key.append(chars[i])","position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"key.append(chars[i])"},"status":-1},{"failures":[],"tindex":"2235b081-16e3-11e6-9c08-81028ccfafdd","series":0,"name":"add","transplant":{"toString":"appendAlternate(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"location"},"type":"adrStmt","transplantationPoint":{"toString":"lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)))","position":"org.apache.commons.codec.language.bm.Rule:440","type":"CtInvocationImpl","sourcecode":"lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)))"},"status":-2},{"failures":[],"tindex":"2235b082-16e3-11e6-9c08-f7029889d19d","series":0,"name":"replace","transplant":{"toString":"code = '8'","position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = chr","position":"org.apache.commons.codec.language.ColognePhonetic:391","type":"CtAssignmentImpl","sourcecode":"code = chr"},"status":0},{"failures":[32,33,34,35,36,37,38,39],"tindex":"2235b083-16e3-11e6-9c08-c9e1ef7abc07","series":0,"name":"replace","transplant":{"toString":"final java.lang.String combined = l + remainder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = l + remainder"},"variableMap":{"l":"text","remainder":"text"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String encoding = text.substring(from, to)","position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-1},{"failures":[],"tindex":"2235d794-16e3-11e6-9c08-c5bd71d56a4c","series":0,"name":"replace","transplant":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"context.currentLinePos += (context.pos) - savedPos","position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-2},{"failures":[],"tindex":"2235d795-16e3-11e6-9c08-4382c4f5b8cd","series":0,"name":"replace","transplant":{"toString":"this.phonemes = new java.util.LinkedHashSet<org.apache.commons.codec.language.bm.Rule.Phoneme>()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:78","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme> = new java.util.LinkedHashSet<org.apache.commons.codec.language.bm.Rule.Phoneme>()"},"variableMap":{"phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"toString":"this.phonemes = phonemes","position":"org.apache.commons.codec.language.bm.PhoneticEngine:83","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme> = phonemes"},"status":-3},{"failures":[],"tindex":"2237ac56-16e3-11e6-9c08-efb73c1267e4","series":0,"name":"replace","transplant":{"toString":"result.append('S', 'X')","position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"KN\", \"N\")","position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"status":0},{"failures":[],"tindex":"2237ac57-16e3-11e6-9c08-9fa80c9022d2","series":0,"name":"add","transplant":{"toString":"final java.lang.String body = ph.substring(1, ((ph.length()) - 1))","position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1))"},"variableMap":{"ph":"name"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String firstLetter = name.substring(0, 1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"status":-2},{"failures":[],"tindex":"2237ac58-16e3-11e6-9c08-b11b0ac82a44","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.Metaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"length"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.length = 0","position":"org.apache.commons.codec.language.ColognePhonetic:213","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = 0"},"status":-2},{"failures":[],"tindex":"22386fa9-16e3-11e6-9c08-b5075be14679","series":0,"name":"add","transplant":{"toString":"int patternLength = 1","position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int b = bytes[i]","position":"org.apache.commons.codec.net.QuotedPrintableCodec:358","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-2},{"failures":[],"tindex":"22386faa-16e3-11e6-9c08-0be8c84ff7df","series":0,"name":"replace","transplant":{"toString":"c = (c >>> 2) | (c << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"maxLength"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.Soundex.this.maxLength = maxLength","position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"status":-2},{"failures":[40,41,42,43,44,45,46,35,36,37,47,39],"tindex":"22386fab-16e3-11e6-9c08-09492cd7bb96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final byte c : bytes) {\n    int b = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"status":-1},{"failures":[48,49,50,16,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"223896bc-16e3-11e6-9c08-a1965112ee1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = pad","position":"org.apache.commons.codec.binary.Base64:355","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-1},{"failures":[],"tindex":"223896bd-16e3-11e6-9c08-2bd5dba60485","series":0,"name":"replace","transplant":{"toString":"final int[] results = new int[2]","position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int[] schedule = new int[32]","position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"status":-2},{"failures":[],"tindex":"223896be-16e3-11e6-9c08-55258fbad91c","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"ctx.reset()","position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"ctx.reset()"},"status":-2},{"failures":[],"tindex":"223896bf-16e3-11e6-9c08-9b49971f9e2f","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))","position":"org.apache.commons.codec.digest.DigestUtils:412","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))","position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"status":-2},{"failures":[64,65],"tindex":"223896c0-16e3-11e6-9c08-97d2dbf060f8","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.language.bm.Rule:242","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"223896c1-16e3-11e6-9c08-51502a1377a9","series":0,"name":"replace","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return sb.toString()","position":"org.apache.commons.codec.language.bm.Rule:469","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":0},{"failures":[],"tindex":"2238bdd2-16e3-11e6-9c08-5f3ea287c137","series":0,"name":"replace","transplant":{"toString":"(length)++","position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"from"},"type":"adrStmt","transplantationPoint":{"toString":"from = to + 1","position":"org.apache.commons.codec.net.RFC1522Codec:151","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-3},{"failures":[],"tindex":"2238bdd3-16e3-11e6-9c08-b1b39927b2b1","series":0,"name":"replace","transplant":{"toString":"value = cleanInput(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:87","type":"CtAssignmentImpl","sourcecode":"value = cleanInput(value)"},"variableMap":{"value":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"w3\", \"W3\")","position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":-2},{"failures":[],"tindex":"2238bdd4-16e3-11e6-9c08-7b0e3a5d687d","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"t"},"type":"adrStmt","transplantationPoint":{"toString":"b ^= t","position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-2},{"failures":[],"tindex":"2238bdd5-16e3-11e6-9c08-d3b5484894a1","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"variableMap":{"name":"original"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original.getBytes(org.apache.commons.codec.Charsets.UTF_8))","position":"org.apache.commons.codec.digest.UnixCrypt:263","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-3},{"failures":[66],"tindex":"2238bdd6-16e3-11e6-9c08-351c614ead81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (ascii instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)));\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (ascii instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)));\n} "},"status":-1},{"failures":[],"tindex":"2238bdd7-16e3-11e6-9c08-b30b68f32ed0","series":0,"name":"replace","transplant":{"toString":"sb.append(\", loc='\").append(loc).append('\\'')","position":"org.apache.commons.codec.language.bm.Rule:464","type":"CtInvocationImpl","sourcecode":"sb.append(\", loc='\").append(java.lang.String).append('\\'')"},"variableMap":{"loc":"value","sb":"alternate"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:990","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-3},{"failures":[32,33,34],"tindex":"2238e4e8-16e3-11e6-9c08-6b6439373aca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (context.eof) {\n    return ;\n} ","position":"org.apache.commons.codec.binary.Base64:429","type":"CtIfImpl","sourcecode":"if (context.boolean) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"2238e4e9-16e3-11e6-9c08-796fd3fa5569","series":0,"name":"replace","transplant":{"toString":"decode(pArray, 0, pArray.length, context)","position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"variableMap":{"pArray":"org.apache.commons.codec.binary.Base64.DECODE_TABLE","length":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < inAvail ; i++) {\n    final byte[] buffer = ensureBufferSize(decodeSize, context);\n    final byte b = in[(inPos++)];\n    if (b == (pad)) {\n        context.eof = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.DECODE_TABLE.length))) {\n            final int result = org.apache.commons.codec.binary.Base64.DECODE_TABLE[b];\n            if (result >= 0) {\n                context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK);\n                context.ibitWorkArea = ((context.ibitWorkArea) << (org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE)) + result;\n                if ((context.modulus) == 0) {\n                    buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n                    buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n                    buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n                } \n            } \n        } \n    }\n}","position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"2238e4ea-16e3-11e6-9c08-4fe24dcf5bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"tch\", \"2ch\")","position":"org.apache.commons.codec.language.Caverphone2:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[],"tindex":"2238e4eb-16e3-11e6-9c08-292c2493433c","series":0,"name":"replace","transplant":{"toString":"return context.eof ? 0 : 1","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.Context.boolean ? 0 : 1"},"variableMap":{"context":"context","eof":"eof"},"type":"adrStmt","transplantationPoint":{"toString":"return context.eof ? org.apache.commons.codec.binary.BaseNCodec.EOF : 0","position":"org.apache.commons.codec.binary.BaseNCodec:301","type":"CtReturnImpl","sourcecode":"return context.boolean ? org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int : 0"},"status":-3},{"failures":[67,68],"tindex":"22390bfc-16e3-11e6-9c08-211541475176","series":0,"name":"replace","transplant":{"toString":"final int count = leftToRightThenRightToLeftProcessing(name1, name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:256","type":"CtLocalVariableImpl","sourcecode":"final int int = leftToRightThenRightToLeftProcessing(name1, name2)"},"variableMap":{"name2":"name","name1":"name"},"type":"adrStmt","transplantationPoint":{"toString":"final int nameLength = name.length()","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = name.length()"},"status":-1},{"failures":[],"tindex":"22390bfd-16e3-11e6-9c08-ab3cf857f973","series":0,"name":"add","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"result.append('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-2},{"failures":[1,26,2,3,4,5,27,28,29,30,31,6,7,8,9,10,11,12,13],"tindex":"22390bfe-16e3-11e6-9c08-aba89ab8d714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"key.append(str.charAt(0))","position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"22390bff-16e3-11e6-9c08-114ca4fabbf5","series":0,"name":"replace","transplant":{"toString":"pos = 1","position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:469","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"22390c00-16e3-11e6-9c08-e364968fd39c","series":0,"name":"replace","transplant":{"toString":"d = (d >>> 2) | (d << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"22393311-16e3-11e6-9c08-6fac315feba2","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"sh\", \"s2\")","position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = str.substring(0, ((str.length()) - 1))","position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[69,70,71,72,73],"tindex":"22393312-16e3-11e6-9c08-a704ef16846d","series":0,"name":"replace","transplant":{"toString":"nextChar = '-'","position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"variableMap":{"nextChar":"last"},"type":"adrStmt","transplantationPoint":{"toString":"last = getMappingCode(str, 0)","position":"org.apache.commons.codec.language.Soundex:271","type":"CtAssignmentImpl","sourcecode":"last = getMappingCode(str, 0)"},"status":-1},{"failures":[18,19,21],"tindex":"22393313-16e3-11e6-9c08-89ef9dc09fe2","series":0,"name":"replace","transplant":{"toString":"result.append('J', 'A')","position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"22393314-16e3-11e6-9c08-efc7796b8bb9","series":0,"name":"replace","transplant":{"toString":"this.maxLength = maxLength","position":"org.apache.commons.codec.language.DoubleMetaphone:943","type":"CtAssignmentImpl","sourcecode":"this.int = maxLength"},"variableMap":{"maxLength":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:601","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":50,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}