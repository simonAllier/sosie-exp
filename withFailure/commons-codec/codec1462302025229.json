{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":31,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":33,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":35,"org.apache.commons.codec.language.NysiisTest.testSnat":23,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":6,"org.apache.commons.codec.language.Caverphone2Test.testLocaleIndependence":43,"org.apache.commons.codec.language.NysiisTest.testDropBy":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":7,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":4,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":30,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":3,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":1,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":32,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":34,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":40,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":41,"org.apache.commons.codec.language.NysiisTest.testDad":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":2,"org.apache.commons.codec.language.NysiisTest.testRule2":17,"org.apache.commons.codec.language.NysiisTest.testRule1":16,"org.apache.commons.codec.language.NysiisTest.testOthers":26,"org.apache.commons.codec.language.NysiisTest.testRule7":20,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":0,"org.apache.commons.codec.language.NysiisTest.testRule6":19,"org.apache.commons.codec.language.NysiisTest.testRule5":18,"org.apache.commons.codec.language.NysiisTest.testTranan":27,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":38,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":39,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":10,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":37,"org.apache.commons.codec.language.Caverphone2Test.testEncodeEmpty":42,"org.apache.commons.codec.language.NysiisTest.testDan":14,"org.apache.commons.codec.language.NysiisTest.testFal":15,"org.apache.commons.codec.language.NysiisTest.testCap":12,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":36,"org.apache.commons.codec.language.NysiisTest.testSnad":22,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":24,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":44,"org.apache.commons.codec.language.NysiisTest.testBran":21,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":28,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":29},"transformations":[{"failures":[],"tindex":"4b331e86-1161-11e6-b14e-d185c8f1054a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"status":0},{"failures":[0],"tindex":"4b334597-1161-11e6-b14e-237298ef6403","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[1,2],"tindex":"4b336ca8-1161-11e6-b14e-ab0036c53ef7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"status":-1},{"failures":[],"tindex":"4b336ca9-1161-11e6-b14e-5b8533115496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"status":-2},{"failures":[],"tindex":"4b336caa-1161-11e6-b14e-77d164056358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:185","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = phonemeBuilder"},"variableMap":{"phonemeBuilder":"phonemeBuilder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:479","type":"CtAssignmentImpl","sourcecode":"phonemeBuilder = applyFinalRules(phonemeBuilder, finalRules2)"},"status":-2},{"failures":[],"tindex":"4b336cab-1161-11e6-b14e-d70be4825302","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"txt","txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-3},{"failures":[],"tindex":"4b336cac-1161-11e6-b14e-6d767ede3b12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"variableMap":{"mac":"mac"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:183","type":"CtInvocationImpl","sourcecode":"mac.init(keySpec)"},"status":-2},{"failures":[],"tindex":"4b336cad-1161-11e6-b14e-255bd85f6721","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:597","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[3,4],"tindex":"4b3393be-1161-11e6-b14e-834219f535d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"variableMap":{"binaryData":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:420","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"4b3393bf-1161-11e6-b14e-6b6a0f0ea81a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:274","type":"CtLocalVariableImpl","sourcecode":"final char char = getNextChar()"},"status":-2},{"failures":[5,6,7,8,9],"tindex":"4b3393c0-1161-11e6-b14e-bf2b0e37f735","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"4b3393c1-1161-11e6-b14e-cd50fc43e089","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return metaphone(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"4b3393c2-1161-11e6-b14e-f56a3b738d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} "},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"4b33bad3-1161-11e6-b14e-376be89840e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"4b33bad4-1161-11e6-b14e-3fa8bd6a3d7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-2},{"failures":[],"tindex":"4b33bad5-1161-11e6-b14e-7786ad017959","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:368","type":"CtInvocationImpl","sourcecode":"phonemes.put(newPhoneme, newPhoneme)"},"variableMap":{"newPhoneme":"mergedPhoneme","phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:366","type":"CtInvocationImpl","sourcecode":"phonemes.put(mergedPhoneme, mergedPhoneme)"},"status":0},{"failures":[],"tindex":"4b33bad6-1161-11e6-b14e-13dbcc49b2e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[29,30,31,32],"tindex":"4b33bad7-1161-11e6-b14e-0d63c99763bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:250","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43],"tindex":"4b33e1e8-1161-11e6-b14e-43f15197403b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"status":-1},{"failures":[],"tindex":"4b33e1e9-1161-11e6-b14e-3118c0e20bed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    ctx.update(finalb, 0, (ii > 16 ? 16 : ii));\n    ii -= 16;\n}"},"variableMap":{"ii":"j","finalb":"finalb","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:239","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb[j])"},"status":-2},{"failures":[],"tindex":"4b33e1ea-1161-11e6-b14e-299c526ea64f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:179","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (lsScanner.hasNextLine()) {\n        final java.lang.String java.lang.String = lsScanner.nextLine().trim();\n        if (inExtendedComment) {\n            if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = false;\n            } \n        } else {\n            if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = true;\n            } else if ((line.length()) > 0) {\n                ls.add(line);\n            } \n        }\n    }\n} finally {\n    lsScanner.close();\n}"},"status":-2},{"failures":[],"tindex":"4b33e1eb-1161-11e6-b14e-8f85b26b16c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (input.length()) - 1, int int = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"4b3408fc-1161-11e6-b14e-65c725d741a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (target.equals(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"found","target":"phonemeText","element":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:351","type":"CtIfImpl","sourcecode":"if (!found) {\n    subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n} "},"status":-2},{"failures":[44,5,7],"tindex":"4b3408fd-1161-11e6-b14e-ad2b8a8842a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:787","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[12,14,20,25,28],"tindex":"4b3408fe-1161-11e6-b14e-33416f3e2d8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"4b3408ff-1161-11e6-b14e-178ab02a072b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"cs1","name2":"cs2","name1":"cs1","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"status":-3},{"failures":[],"tindex":"4b340900-1161-11e6-b14e-9bba67e7e11c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":27,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}