{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":125,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":32,"org.apache.commons.codec.binary.HexTest.testCustomCharset":73,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":144,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":138,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":137,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":56,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":124,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":129,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":55,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":86,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":103,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":60,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":48,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":85,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":3,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":100,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse":145,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":153,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":6,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":18,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":66,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":113,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":44,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":64,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":67,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":116,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":102,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":148,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":91,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":97,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":42,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse":155,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":80,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":34,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":36,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":78,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":122,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":115,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":127,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":101,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":110,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":95,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":104,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":107,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":121,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch":156,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":75,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":151,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":90,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":114,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":65,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":8,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":136,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":158,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":93,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":20,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":140,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":99,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":94,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":54,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":117,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":81,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":135,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":132,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":69,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":82,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":119,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":120,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":105,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":88,"org.apache.commons.codec.language.MetaphoneTest.testTCH":76,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":83,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":22,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":112,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":77,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":157,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":118,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":47,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":72,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":142,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":45,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":139,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch":149,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":52,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":89,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":28,"org.apache.commons.codec.binary.Base64Test.testUUID":71,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":50,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":108,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":49,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":133,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":61,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":111,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":31,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":43,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":57,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":70,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":159,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":143,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":92,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":106,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":15,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":63,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":4,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse":150,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":126,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":11,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":134,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":62,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":109,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":51,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":154,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":24,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":96,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":123,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":130,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":38,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":141,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":33,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":68,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":41,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":128,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":46,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":147,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse":146},"transformations":[{"failures":[],"tindex":"58617881-0d01-11e6-b0f4-35f32254c648","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:530","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:313","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[0,1],"tindex":"5861c6a2-0d01-11e6-b0f4-d93f6ac67786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"5861c6a3-0d01-11e6-b0f4-05f9e6a0123a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:218","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Lang.LangRule org.apache.commons.codec.language.bm.Lang.LangRule : org.apache.commons.codec.language.bm.Lang.this.java.util.List<org.apache.commons.codec.language.bm.Lang.LangRule>) {\n    if (rule.matches(text)) {\n        if (rule.boolean) {\n            langs.retainAll(rule.java.util.Set<java.lang.String>);\n        } else {\n            langs.removeAll(rule.java.util.Set<java.lang.String>);\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"5861c6a4-0d01-11e6-b0f4-69af8090a3cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"variableMap":{"original":"buffer","length":"ibitWorkArea","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[],"tindex":"5861edb5-0d01-11e6-b0f4-2fa365fdc550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":0},{"failures":[2,3],"tindex":"5861edb6-0d01-11e6-b0f4-ed2322887685","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:353","type":"CtAssignmentImpl","sourcecode":"d = results[1]"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"5861edb7-0d01-11e6-b0f4-c980370a1896","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:346","type":"CtAssignmentImpl","sourcecode":"matches = (string.charAt((index - 1))) == c"},"status":-1},{"failures":[18,19,20,21,22,23,24,25],"tindex":"586214c8-0d01-11e6-b0f4-c995d225f4fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"variableMap":{"ctx1":"altCtx","keyBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= (16 + ((altResult[0]) & 255)) ; i++) {\n    altCtx.update(saltBytes);\n}"},"status":-1},{"failures":[26,27,28],"tindex":"586214c9-0d01-11e6-b0f4-f3756f216275","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"status":-1},{"failures":[2,3],"tindex":"586214ca-0d01-11e6-b0f4-8d2ecc5fff23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"out[1] = right"},"status":-1},{"failures":[27,28],"tindex":"586214cb-0d01-11e6-b0f4-fd6d78865881","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"status":-1},{"failures":[],"tindex":"58623bdc-0d01-11e6-b0f4-f971189008b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:268","type":"CtTryImpl","sourcecode":"try {\n    return decodeText(str);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"58623bdd-0d01-11e6-b0f4-b5b56e7065c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[29],"tindex":"58623bde-0d01-11e6-b0f4-0f38da3478c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"status":-1},{"failures":[],"tindex":"58623bdf-0d01-11e6-b0f4-8b32eaf752c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:659","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key), valueToDigest).doFinal()"},"status":-2},{"failures":[11,30,31],"tindex":"586262f0-0d01-11e6-b0f4-37e2c80b9729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:320","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"586262f1-0d01-11e6-b0f4-01014a01f030","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[26,27,28],"tindex":"586262f2-0d01-11e6-b0f4-95a209ef1ef8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"status":-1},{"failures":[],"tindex":"586262f3-0d01-11e6-b0f4-67617b38a7a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:94","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[26,32,27,28],"tindex":"58628a04-0d01-11e6-b0f4-8327ef908dc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:694","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"58628a05-0d01-11e6-b0f4-990b99463bb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:232","type":"CtConstructorCallImpl","sourcecode":"new java.lang.String(array , getCharset())"},"status":0},{"failures":[33,34,35,36,37,38,39,40],"tindex":"58628a06-0d01-11e6-b0f4-f1bb46ac8d33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"status":-1},{"failures":[41],"tindex":"58628a07-0d01-11e6-b0f4-4760c624002b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"5862b118-0d01-11e6-b0f4-71aac26bc5c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:154","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-1},{"failures":[],"tindex":"5862b119-0d01-11e6-b0f4-2da0b3045992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String java.lang.String = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}"},"status":-2},{"failures":[],"tindex":"5862b11a-0d01-11e6-b0f4-1398b774bca5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"5862d82b-0d01-11e6-b0f4-493d4c3b21a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"5862d82c-0d01-11e6-b0f4-23a4a3d82d29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(object)))"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"status":0},{"failures":[],"tindex":"5862d82d-0d01-11e6-b0f4-dfc2f5fc51b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:894","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[68,30,31,69],"tindex":"5862d82e-0d01-11e6-b0f4-5b103a55aaff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:119","type":"CtIfImpl","sourcecode":"if ((inwd[1]) == 'E') {\n    local.append(inwd, 1, ((inwd.int) - 1));\n} else {\n    local.append(inwd);\n}"},"status":-1},{"failures":[],"tindex":"5862ff3f-0d01-11e6-b0f4-4f5906f5292b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:437","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"status":-2},{"failures":[],"tindex":"5862ff40-0d01-11e6-b0f4-5d1b646d11e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:359","type":"CtIfImpl","sourcecode":"if (conditionCH0(value, index)) {\n    result.append('K');\n    return index + 2;\n} else if (conditionCH1(value, index)) {\n    result.append('K');\n    return index + 2;\n} else {\n    if (index > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n            result.append('K');\n        } else {\n            result.append('X', 'K');\n        }\n    } else {\n        result.append('X');\n    }\n    return index + 2;\n}"},"status":-2},{"failures":[70,71,72,73,74,75],"tindex":"5862ff41-0d01-11e6-b0f4-89d5c6984d37","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:92","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"status":-1},{"failures":[],"tindex":"5862ff42-0d01-11e6-b0f4-d5ce5efa7c70","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:312","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:288","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[42,43,46,47,48,51,52,55,56,58,62,63,64,65,66,67],"tindex":"58632653-0d01-11e6-b0f4-67552900e772","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:181","type":"CtWhileImpl","sourcecode":"while (lsScanner.hasNextLine()) {\n    final java.lang.String java.lang.String = lsScanner.nextLine().trim();\n    if (inExtendedComment) {\n        if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            inExtendedComment = false;\n        } \n    } else {\n        if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            inExtendedComment = true;\n        } else if ((line.length()) > 0) {\n            ls.add(line);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"58632654-0d01-11e6-b0f4-f5afdf9871da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:72","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"58632655-0d01-11e6-b0f4-a55bbf8142a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"TCH\")) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"58634d66-0d01-11e6-b0f4-11dda70154e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:767","type":"CtLocalVariableImpl","sourcecode":"int int = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int)"},"status":-2},{"failures":[],"tindex":"58634d67-0d01-11e6-b0f4-c961067f4e85","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_G"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[4,76,77,78,11,79,80,81,17],"tindex":"58634d68-0d01-11e6-b0f4-7ba0047cbc9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"local.setCharAt(0, 'W')"},"variableMap":{"local":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:362","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (((index + (test.length())) - 1) < (string.length()))) {\n    final java.lang.String java.lang.String = string.substring(index, (index + (test.length())));\n    matches = substring.equals(test);\n} "},"status":-1},{"failures":[26,32,27],"tindex":"58634d69-0d01-11e6-b0f4-95adcf9b02e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:980","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"status":-1},{"failures":[],"tindex":"5863747a-0d01-11e6-b0f4-b51ca1675f2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"5863747b-0d01-11e6-b0f4-3d42e9ce5cdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"pos","tempResult":"buffer","pBytes":"lineSeparator","keyLen":"pos","cp":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:495","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-2},{"failures":[],"tindex":"5863747c-0d01-11e6-b0f4-c53e8cf1e96f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-2},{"failures":[],"tindex":"5863747d-0d01-11e6-b0f4-8156d739b444","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"variableMap":{"cs1":"input","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"status":0},{"failures":[32,27,28],"tindex":"5863747e-0d01-11e6-b0f4-7d4f87423a23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[27,28],"tindex":"58639b8f-0d01-11e6-b0f4-9f900ce4b98d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"5863c2a0-0d01-11e6-b0f4-594512c70054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[82,83,84,85,86,87],"tindex":"5863c2a1-0d01-11e6-b0f4-5bdb24db0da8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[2,3],"tindex":"5863c2a2-0d01-11e6-b0f4-bf76d3e2b055","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"c","to":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"status":-1},{"failures":[],"tindex":"5863c2a3-0d01-11e6-b0f4-1167e0eacf34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[88,89,90,91,92,93,94],"tindex":"5863c2a4-0d01-11e6-b0f4-7998e0feac09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:336","type":"CtIfImpl","sourcecode":"if ((strA.length()) > (strB.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())));\n}"},"status":-1},{"failures":[],"tindex":"5863e9b5-0d01-11e6-b0f4-11ffba361fc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:476","type":"CtAssignmentImpl","sourcecode":"context.int = (context.int) >> 2"},"status":-2},{"failures":[95,96],"tindex":"5863e9b6-0d01-11e6-b0f4-c53514a6255a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[],"tindex":"5863e9b7-0d01-11e6-b0f4-e5cb5d79a8ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:401","type":"CtReturnImpl","sourcecode":"return output.toString()"},"status":-2},{"failures":[],"tindex":"5863e9b8-0d01-11e6-b0f4-19655a3384a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:348","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = rulesApplication.isFound()"},"status":-2},{"failures":[2,3],"tindex":"5863e9b9-0d01-11e6-b0f4-75ec7c8a23ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[18,19,20,21,22,23,24,25],"tindex":"5863e9ba-0d01-11e6-b0f4-49e018c63ece","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"pBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:387","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-1},{"failures":[],"tindex":"5863e9bb-0d01-11e6-b0f4-370d6b68cf7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":0},{"failures":[97,98,99,100,101,102,103,104,105,106],"tindex":"586410cc-0d01-11e6-b0f4-fd1b708f3e1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-1},{"failures":[],"tindex":"586410cd-0d01-11e6-b0f4-a9de250e547a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:102","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this) == other) {\n    return true;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:109","type":"CtReturnImpl","sourcecode":"return toString().equals(((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch)(other)).toString())"},"status":-2},{"failures":[],"tindex":"586410ce-0d01-11e6-b0f4-0970eaa5051d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"variableMap":{"b":"org.apache.commons.codec.net.URLCodec.RADIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"status":-2},{"failures":[],"tindex":"586410cf-0d01-11e6-b0f4-b363b41b4c63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)"},"status":-2},{"failures":[],"tindex":"586410d0-0d01-11e6-b0f4-8346f5f42e91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:72","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"586410d1-0d01-11e6-b0f4-199df031e412","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH","to":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:312","type":"CtIfImpl","sourcecode":"if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n} "},"status":-2},{"failures":[],"tindex":"586410d2-0d01-11e6-b0f4-7f856652c740","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:208","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[18,23],"tindex":"586437e3-0d01-11e6-b0f4-8bf648e3851c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:150","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Integer.parseInt(m.group(3))"},"status":-1},{"failures":[],"tindex":"586437e4-0d01-11e6-b0f4-cd18e091a9ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"586437e5-0d01-11e6-b0f4-d9519d229475","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"status":-2},{"failures":[],"tindex":"586437e6-0d01-11e6-b0f4-939e59631406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"variableMap":{"text1":"value2","text2":"value2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":-2},{"failures":[],"tindex":"586437e7-0d01-11e6-b0f4-cf2ef53ec970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][charOne]) << 4"},"status":-2},{"failures":[],"tindex":"586437e8-0d01-11e6-b0f4-67f6856bd245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[107,108,109,110,111,112,113],"tindex":"586437e9-0d01-11e6-b0f4-53264d115605","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-1},{"failures":[],"tindex":"58645efa-0d01-11e6-b0f4-e1d0ae1657ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:265","type":"CtIfImpl","sourcecode":"if (!(isPreviousChar(local, n, 'C'))) {\n    code.append(symb);\n} "},"status":-2},{"failures":[],"tindex":"58645efb-0d01-11e6-b0f4-75aaae72691e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[2,114,115,3],"tindex":"58645efc-0d01-11e6-b0f4-edce6baf5d2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:378","type":"CtAssignmentImpl","sourcecode":"schedule[(j++)] = s"},"variableMap":{"schedule":"results","s":"left","j":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:313","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[110],"tindex":"58645efd-0d01-11e6-b0f4-6d7bd9c79cbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:500","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-1},{"failures":[],"tindex":"58645efe-0d01-11e6-b0f4-4315a1593b52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-2},{"failures":[116],"tindex":"58645eff-0d01-11e6-b0f4-d1f3db43577b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"status":-1},{"failures":[19,20,21],"tindex":"58645f00-0d01-11e6-b0f4-ad1280d8128f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":-1},{"failures":[117,118,119,32,27,28],"tindex":"58645f01-0d01-11e6-b0f4-198734dfe94a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:526","type":"CtIfImpl","sourcecode":"if ((index == 0) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")))) {\n    result.append('J', 'A');\n} else if (((isVowel(charAt(value, (index - 1)))) && (!slavoGermanic)) && (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))) {\n    result.append('J', 'H');\n} else if (index == ((value.length()) - 1)) {\n    result.append('J', ' ');\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n    result.append('J');\n} "},"status":-1},{"failures":[120,26,32,27,28],"tindex":"58648612-0d01-11e6-b0f4-91b984597402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[107,108,109,110,111,112,113,121,122,123,124,125,126,127,128,129,130,131,73,132,74,133,75],"tindex":"58648613-0d01-11e6-b0f4-e1060ebafa9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:138","type":"CtAssignmentImpl","sourcecode":"inwd[0] = 'S'"},"variableMap":{"inwd":"toDigits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[],"tindex":"58648614-0d01-11e6-b0f4-19cacd10b4fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[134,135,136,137,138,139,140,141,142,143,144],"tindex":"58648615-0d01-11e6-b0f4-eb677a6da059","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"variableMap":{"input":"source","l":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = cleanup(source)"},"status":-1},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"58648616-0d01-11e6-b0f4-2fe72dc61675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:220","type":"CtIfImpl","sourcecode":"if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"name2":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE","name1":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"status":-1},{"failures":[157,158,159],"tindex":"5864ad27-0d01-11e6-b0f4-abc48ad751e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"variableMap":{"name2Char":"l_ascii","i":"jj","name2Size":"bits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":87,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}