{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":126,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.binary.HexTest.testCustomCharset":132,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":23,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":87,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":96,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":113,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":125,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":129,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":27,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":89,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":19,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":80,"org.apache.commons.codec.binary.Base64Test.testTriplets":51,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":83,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":112,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":16,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":122,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":86,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":24,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":64,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":73,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":85,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":102,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":76,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":5,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":58,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":59,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":63,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":60,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":61,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":48,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":123,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":29,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":7,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":120,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":100,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":117,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":37,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":136,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":109,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":69,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":40,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":32,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":33,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":53,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":18,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":41,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":92,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":43,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":39,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":77,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":13,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":28,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":52,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":97,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":108,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":133,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":101,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":78,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":50,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":22,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":98,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":9,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":79,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":121,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":75,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":47,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":66,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":0,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":17,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":74,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":62,"org.apache.commons.codec.binary.Base64Test.testBase64":72,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":95,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":82,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":4,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":8,"org.apache.commons.codec.binary.Base64Test.testUUID":55,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":65,"org.apache.commons.codec.binary.Base64Test.testSingletons":68,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":93,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":91,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":94,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":71,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":114,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":118,"org.apache.commons.codec.binary.Base64Test.testPairs":54,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":135,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":107,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":103,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":90,"org.apache.commons.codec.binary.Base64Test.testCodec112":67,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":104,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":34,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":20,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":49,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":134,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":25,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":31,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":110,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":14,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":81,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":131,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":30,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":127,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":11,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":44,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":21,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":46,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":15,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":88,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":106,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":84,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":119,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":42,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":36,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":124,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":130,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":57,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":70,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":26,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":105,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":45,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":128,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":115,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":56,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":111},"transformations":[{"failures":[],"tindex":"426c42f0-0cf9-11e6-be46-9f74dab8fba6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"status":0},{"failures":[0,1,2,3,4],"tindex":"426c9111-0cf9-11e6-be46-a9b805c5b68c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[5,6],"tindex":"426c9112-0cf9-11e6-be46-d9e41a7e65e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"status":-1},{"failures":[],"tindex":"426c9113-0cf9-11e6-be46-a368cf897734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13],"tindex":"426c9114-0cf9-11e6-be46-01ebacbe8a2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-1},{"failures":[],"tindex":"426cb825-0cf9-11e6-be46-61c00c9dacdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:349","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[7,8,9,10,11,12,13],"tindex":"426cb826-0cf9-11e6-be46-f39a4883adbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":-1},{"failures":[],"tindex":"426cb827-0cf9-11e6-be46-99161738d0d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:293","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(available(context), bAvail)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"426cdf38-0cf9-11e6-be46-a11bae84ab4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:346","type":"CtAssignmentImpl","sourcecode":"matches = (string.charAt((index - 1))) == c"},"status":-1},{"failures":[],"tindex":"426cdf39-0cf9-11e6-be46-c57eb8abe861","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"result.append(\"-\")"},"status":0},{"failures":[],"tindex":"426cdf3a-0cf9-11e6-be46-1b3d1bd25e09","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e)"},"status":-2},{"failures":[3,4],"tindex":"426cdf3b-0cf9-11e6-be46-49b8f0086bcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"426cdf3c-0cf9-11e6-be46-6f74868ba286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"status":0},{"failures":[],"tindex":"426d064d-0cf9-11e6-be46-7da9b536de21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":0},{"failures":[28],"tindex":"426d064e-0cf9-11e6-be46-07dcc9559893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = name.length()"},"variableMap":{"name":"es2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"status":-1},{"failures":[],"tindex":"426d064f-0cf9-11e6-be46-13e9e6d2ef34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"426d2d60-0cf9-11e6-be46-75698bebb2d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"426d2d61-0cf9-11e6-be46-0f736acc795f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[29],"tindex":"426d2d62-0cf9-11e6-be46-e517897bb7f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:261","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"426d2d63-0cf9-11e6-be46-0380760cf50c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:367","type":"CtIfImpl","sourcecode":"if (open >= 0) {\n    if (!(ph.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n    } \n    final java.lang.String java.lang.String = ph.substring(0, open);\n    final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet);\n}"},"status":-2},{"failures":[28,30,31,32,33],"tindex":"426d5474-0cf9-11e6-be46-c5752ca84b73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return result.substring(1)"},"variableMap":{"result":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return sBuf.toString()"},"status":-1},{"failures":[],"tindex":"426d5475-0cf9-11e6-be46-7b2fd0d5bd78","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:251","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object))"},"status":-2},{"failures":[],"tindex":"426d5476-0cf9-11e6-be46-85794ba3809a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"status":0},{"failures":[],"tindex":"426d7b87-0cf9-11e6-be46-d10b8493b0f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:203","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = guessLanguages(text)"},"variableMap":{"text":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:384","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.Lang.guessLanguages(input)"},"status":-2},{"failures":[],"tindex":"426d7b88-0cf9-11e6-be46-0dc77f7ae6d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-2},{"failures":[34],"tindex":"426d7b89-0cf9-11e6-be46-83f0445edf02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:203","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(ascii.int) >> 3]"},"variableMap":{"length":"length","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:181","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bytes.int]"},"status":-1},{"failures":[],"tindex":"426da29a-0cf9-11e6-be46-c550a816ebe4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"index","e1":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[3,4],"tindex":"426da29b-0cf9-11e6-be46-0d754c535188","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"426da29c-0cf9-11e6-be46-47463623f397","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:382","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"status":-2},{"failures":[],"tindex":"426da29d-0cf9-11e6-be46-b56b489476a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:284","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[35,36],"tindex":"426dc9ae-0cf9-11e6-be46-55b929dab15a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[],"tindex":"426dc9af-0cf9-11e6-be46-27638bc38242","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:144","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)"},"status":-2},{"failures":[],"tindex":"426dc9b0-0cf9-11e6-be46-798110ae45b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"numSaltChars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:203","type":"CtInvocationImpl","sourcecode":"randomGenerator.nextInt(numSaltChars)"},"status":0},{"failures":[],"tindex":"426dc9b1-0cf9-11e6-be46-0312c9cbf777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:939","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"status":0},{"failures":[],"tindex":"426dc9b2-0cf9-11e6-be46-27f215ee75d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:229","type":"CtReturnImpl","sourcecode":"return ls.equals(org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet) ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : ls"},"status":-2},{"failures":[],"tindex":"426df0c3-0cf9-11e6-be46-3911f53a606c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"variableMap":{"tempResult":"altResult","pBytes":"altResult","keyLen":"blocksize","cp":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:249","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-2},{"failures":[],"tindex":"426df0c4-0cf9-11e6-be46-35d9dd82ee46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"status":0},{"failures":[37,29],"tindex":"426df0c5-0cf9-11e6-be46-39f3c85b97fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:231","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key), valueToDigest)"},"status":-1},{"failures":[],"tindex":"426e17d6-0cf9-11e6-be46-759cd720a767","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:118","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"426e17d7-0cf9-11e6-be46-db937a6e54b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[],"tindex":"426e17d8-0cf9-11e6-be46-c9c1eb5876ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.RFC1522Codec.this.encodeText(text, java.nio.charset.Charset.forName(charsetName))"},"variableMap":{"text":"str","charsetName":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:292","type":"CtTryImpl","sourcecode":"try {\n    return decode(str, getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"426e3ee9-0cf9-11e6-be46-05122d2be07f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"variableMap":{"buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-2},{"failures":[1,2,3,4],"tindex":"426e3eea-0cf9-11e6-be46-e598ba8ccfe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:719","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.appendAlternate('F');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:422","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"LI\")) && (!slavoGermanic)) {\n    result.append(\"KL\", \"L\");\n    index += 2;\n} else if ((index == 0) && (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    result.append('K', 'J');\n    index += 2;\n} else if (((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ER\")) || ((charAt(value, (index + 1))) == 'Y')) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"E\", \"I\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"RGY\", \"OGY\")))) {\n    result.append('K', 'J');\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"status":-1},{"failures":[],"tindex":"426e3eeb-0cf9-11e6-be46-5945390bea1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-2},{"failures":[38],"tindex":"426e65fc-0cf9-11e6-be46-dbc21502228f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[39,40],"tindex":"426e65fd-0cf9-11e6-be46-0523a470588f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[41,42,43],"tindex":"426e65fe-0cf9-11e6-be46-6d3cc5efa873","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"salt","key":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt)"},"status":-1},{"failures":[],"tindex":"426e65ff-0cf9-11e6-be46-5ff854bbc309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(pObject)))"},"variableMap":{"pObject":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return metaphone(((java.lang.String)(obj)))"},"status":0},{"failures":[],"tindex":"426e6600-0cf9-11e6-be46-c39a7e482f38","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"status":-2},{"failures":[],"tindex":"426e8d11-0cf9-11e6-be46-c1ea62f975e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:531","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"426e8d12-0cf9-11e6-be46-39f3ca3eaf77","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:777","type":"CtReturnImpl","sourcecode":"return messageDigest"},"variableMap":{"messageDigest":"digest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:801","type":"CtReturnImpl","sourcecode":"return digest"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"426eb423-0cf9-11e6-be46-afd2f1f01ff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"426eb424-0cf9-11e6-be46-c17097746058","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:360","type":"CtTryImpl","sourcecode":"try {\n    if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        continue;\n    } \n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n    buffer.write(((char)((u << 4) + l)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n}"},"status":-1},{"failures":[],"tindex":"426edb35-0cf9-11e6-be46-f1866107ca1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"status":-2},{"failures":[],"tindex":"426edb36-0cf9-11e6-be46-c39a0c70f371","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-2},{"failures":[],"tindex":"426edb37-0cf9-11e6-be46-0f573a6de787","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":0},{"failures":[107],"tindex":"426f0248-0cf9-11e6-be46-f5c28bdddbec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-1},{"failures":[],"tindex":"426f0249-0cf9-11e6-be46-7704ef12d91f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:353","type":"CtAssignmentImpl","sourcecode":"code = '-'"},"status":-2},{"failures":[],"tindex":"426f024a-0cf9-11e6-be46-7dee79c52b0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:517","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"variableMap":{"currentLinePos":"pos","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:471","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[102,104,108,109,110],"tindex":"426f024b-0cf9-11e6-be46-a9f89c72bef6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:318","type":"CtAssignmentImpl","sourcecode":"b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-1},{"failures":[1,2,3,4],"tindex":"426f295c-0cf9-11e6-be46-c7a8e1352eb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:477","type":"CtIfImpl","sourcecode":"if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:301","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"426f295d-0cf9-11e6-be46-6bd951e8b177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:682","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[],"tindex":"426f295e-0cf9-11e6-be46-67544a548391","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"426f506f-0cf9-11e6-be46-6bafb8e53e99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"status":0},{"failures":[111,112],"tindex":"426f5070-0cf9-11e6-be46-09ab3d9e9606","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[],"tindex":"426f5071-0cf9-11e6-be46-b7b940ec9370","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"variableMap":{"a":"start","b":"start","m":"start","n":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"status":-2},{"failures":[],"tindex":"426f5072-0cf9-11e6-be46-7733e7f6b1d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:384","type":"CtIfImpl","sourcecode":"if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"patternKey","chr":"patternKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    ruleMapping.put(patternKey, rules);\n} "},"status":-2},{"failures":[113,41,42],"tindex":"426f7783-0cf9-11e6-be46-27b1c21fbd80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)"},"status":-1},{"failures":[28,30,31,32,33],"tindex":"426f7784-0cf9-11e6-be46-bb7b5c19e0b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"status":-1},{"failures":[4],"tindex":"426f7785-0cf9-11e6-be46-95829f2cc78d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"variableMap":{"buffer":"alternate","rounds":"addChars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars))"},"status":-1},{"failures":[114],"tindex":"426f9e96-0cf9-11e6-be46-e130a5ae397b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:320","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.asList(lang)"},"status":-1},{"failures":[],"tindex":"426f9e97-0cf9-11e6-be46-53299934a8d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"variableMap":{"name1":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[],"tindex":"426f9e98-0cf9-11e6-be46-3366f7c3058d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:260","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[115],"tindex":"426f9e99-0cf9-11e6-be46-b751963b412c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:433","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"status":-1},{"failures":[111,112],"tindex":"426f9e9a-0cf9-11e6-be46-8f3a41b55240","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"status":-1},{"failures":[],"tindex":"426fc5ab-0cf9-11e6-be46-cde0950c560c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"426fc5ac-0cf9-11e6-be46-73e40d0f38dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"to","left":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:143","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-2},{"failures":[],"tindex":"426fc5ad-0cf9-11e6-be46-d135f9d359b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"status":0},{"failures":[116],"tindex":"426fc5ae-0cf9-11e6-be46-835a330d76ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:89","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"426fc5af-0cf9-11e6-be46-69a70fd01cc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:116","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[117,118,119,120,107,121,122,37,123,124,125,126,127,29,128,129,130,131,132,133,134,135,136],"tindex":"426fc5b0-0cf9-11e6-be46-999d000c7dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"toDigits","name1Size":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[],"tindex":"426fc5b1-0cf9-11e6-be46-0702bbee6fd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:361","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"426fecc2-0cf9-11e6-be46-5775db374749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"pos","right":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:407","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"426fecc3-0cf9-11e6-be46-7530a8f72e17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n}"},"status":-2},{"failures":[],"tindex":"426fecc4-0cf9-11e6-be46-7777533f818f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"lastCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:360","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":85,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}