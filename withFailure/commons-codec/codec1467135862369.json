{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":135,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":110,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":125,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":102,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":101,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":116,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":73,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":74,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":115,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":127,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":64,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":75,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":153,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":149,"org.apache.commons.codec.binary.Base64Test.testTriplets":158,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":121,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":25,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":139,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":1,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":31,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":124,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":146,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":89,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":30,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":123,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":167,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":84,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":169,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":86,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":85,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":67,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":7,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":41,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":36,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":42,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":134,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":45,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":114,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":83,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":81,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":43,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":4,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":44,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":82,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":143,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":24,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":91,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":140,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":154,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":47,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":113,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":150,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":164,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":23,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":61,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":76,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":160,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":100,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":96,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":104,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":117,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":131,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":138,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":177,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":68,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":26,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":56,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":63,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":97,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":99,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":17,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":112,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":159,"org.apache.commons.codec.language.SoundexTest.testNewInstance":78,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":133,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":65,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":145,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":57,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":66,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":155,"org.apache.commons.codec.language.NysiisTest.testEncodeNull":178,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":3,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":88,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":93,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":9,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":141,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":62,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":136,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":174,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":53,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":142,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":70,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":162,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":71,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":72,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":27,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":168,"org.apache.commons.codec.language.NysiisTest.testDropBy":172,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":106,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":161,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":103,"org.apache.commons.codec.binary.Base64Test.testBase64":52,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":58,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":15,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":120,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":21,"org.apache.commons.codec.binary.Base64Test.testUUID":38,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":92,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":46,"org.apache.commons.codec.binary.Base64Test.testSingletons":50,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":132,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":13,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":129,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":59,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":166,"org.apache.commons.codec.binary.Base64Test.testPairs":37,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":32,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":54,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":128,"org.apache.commons.codec.language.NysiisTest.testRule7":179,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":111,"org.apache.commons.codec.binary.Base64Test.testCodec112":163,"org.apache.commons.codec.language.NysiisTest.testRule6":171,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":14,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":107,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":176,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":12,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":79,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":35,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":119,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":109,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":144,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":156,"org.apache.commons.codec.binary.Base64Test.testCodec68":165,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":77,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":157,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":87,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":5,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":90,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":147,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":48,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":55,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":95,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":10,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":49,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":170,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":98,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":137,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":130,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":80,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":69,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":122,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":118,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":175,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":148,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":40,"org.apache.commons.codec.language.NysiisTest.testOthers":173,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":51,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":0,"org.apache.commons.codec.language.SoundexTest.testDifference":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":105,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":2,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":11,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":20,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":152,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":108,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":151,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":29},"transformations":[{"failures":[],"tindex":"f2a72d2c-3d57-11e6-897e-597fefe2e613","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:469","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[0,1],"tindex":"f2a7543d-3d57-11e6-897e-17fa5ebbd3ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"f2a7543e-3d57-11e6-897e-339f6077187d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:144","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-1},{"failures":[],"tindex":"f2a7543f-3d57-11e6-897e-df4bd2568559","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-2},{"failures":[7,8],"tindex":"f2a75440-3d57-11e6-897e-49698a1c1265","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"altCtx.reset()"},"variableMap":{"altCtx":"messageDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[],"tindex":"f2a75441-3d57-11e6-897e-3b2fa8d78076","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"status":-2},{"failures":[],"tindex":"f2a77a52-3d57-11e6-897e-57bb6429f256","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(algorithm);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[],"tindex":"f2a77a53-3d57-11e6-897e-1ba87bf7cec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:446","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[9],"tindex":"f2a77a54-3d57-11e6-897e-5d5be1014268","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":-1},{"failures":[10,11,12,13,14,15,16,17],"tindex":"f2a77a55-3d57-11e6-897e-f595e5193caa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"status":-1},{"failures":[],"tindex":"f2a77a56-3d57-11e6-897e-63f5db457160","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"variableMap":{"encodeTable":"other","org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:109","type":"CtReturnImpl","sourcecode":"return toString().equals(((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch)(other)).toString())"},"status":-2},{"failures":[],"tindex":"f2a77a57-3d57-11e6-897e-19d3d0c3f3b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:48","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[18],"tindex":"f2a77a58-3d57-11e6-897e-f1df8979343d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:260","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"f2a77a59-3d57-11e6-897e-1fe4b3408693","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"variableMap":{"current":"code","last":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:353","type":"CtAssignmentImpl","sourcecode":"code = '-'"},"status":-2},{"failures":[],"tindex":"f2a77a5a-3d57-11e6-897e-cdda495143a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"variableMap":{"lastChar":"symb","key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:265","type":"CtIfImpl","sourcecode":"if (!(isPreviousChar(local, n, 'C'))) {\n    code.append(symb);\n} "},"status":-2},{"failures":[],"tindex":"f2a7a16b-3d57-11e6-897e-e7d090dfe856","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"variableMap":{"alternate":"code","value":"symb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:277","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-2},{"failures":[],"tindex":"f2a7a16c-3d57-11e6-897e-394e18b6ec28","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:300","type":"CtReturnImpl","sourcecode":"return passwd.toString()"},"status":-2},{"failures":[],"tindex":"f2a7a16d-3d57-11e6-897e-9ffbe66564cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:388","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 24"},"status":0},{"failures":[],"tindex":"f2a7a16e-3d57-11e6-897e-c953277975a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[19,20,21],"tindex":"f2a7a16f-3d57-11e6-897e-4335c49c6690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"value","line":"value","inMultilineComment":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:876","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]) {\n    if (value.startsWith(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f2a7a170-3d57-11e6-897e-b35ef52c845e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"pos","i":"pos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"f2a7a171-3d57-11e6-897e-5d536ada0b35","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"f2a7c882-3d57-11e6-897e-d323b33f6a67","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"org.apache.commons.codec.language.bm.RuleType.RULES","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:213","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    final java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> = new java.util.EnumMap<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.java.lang.Class);\n    for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n        final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n        final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n        for (final java.lang.String java.lang.String : ls.getLanguages()) {\n            try {\n                rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n            } catch (final java.lang.IllegalStateException e) {\n                throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n            }\n        }\n        if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n            rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n        } \n        rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n    }\n    org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(s, java.util.Collections.unmodifiableMap(rts));\n}"},"status":-2},{"failures":[22,23,24,25],"tindex":"f2a7c883-3d57-11e6-897e-05f8309ff2b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; j < 6 ; j++) {\n    c <<= 1;\n    if (((b[y]) & u) != 0) {\n        c |= 1;\n    } \n    u >>>= 1;\n    if (u == 0) {\n        y++;\n        u = 128;\n    } \n    buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n}"},"status":-1},{"failures":[26,27,28,29,20,21],"tindex":"f2a7c884-3d57-11e6-897e-b1fb8da82d3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:190","type":"CtReturnImpl","sourcecode":"return alternate ? result.getAlternate() : result.getPrimary()"},"status":-1},{"failures":[30],"tindex":"f2a7c885-3d57-11e6-897e-0f1e6cc60403","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"context.byte[] = b"},"status":-1},{"failures":[],"tindex":"f2a7c886-3d57-11e6-897e-d3e66154f71b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:503","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"f2a7c887-3d57-11e6-897e-352b7c4f9ea0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:498","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(arrayOctet)"},"variableMap":{"arrayOctet":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-2},{"failures":[],"tindex":"f2a7ef98-3d57-11e6-897e-b59b60018d77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"currentLinePos","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","minRating":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"currentLinePos","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"modulus","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:508","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,30,46,47,48,49,50,51,52,53,54,55,56,57,10,11,12],"tindex":"f2a7ef99-3d57-11e6-897e-ab70a309f9c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-1},{"failures":[],"tindex":"f2a7ef9a-3d57-11e6-897e-5107a6a22603","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"variableMap":{"languages":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:137","type":"CtReturnImpl","sourcecode":"return other"},"status":-2},{"failures":[],"tindex":"f2a7ef9b-3d57-11e6-897e-850366a5a593","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"status":-2},{"failures":[],"tindex":"f2a7ef9c-3d57-11e6-897e-8913174bb792","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:179","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (lsScanner.hasNextLine()) {\n        final java.lang.String java.lang.String = lsScanner.nextLine().trim();\n        if (inExtendedComment) {\n            if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = false;\n            } \n        } else {\n            if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = true;\n            } else if ((line.length()) > 0) {\n                ls.add(line);\n            } \n        }\n    }\n} finally {\n    lsScanner.close();\n}"},"status":-2},{"failures":[],"tindex":"f2a816ad-3d57-11e6-897e-a9d382e4942e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:172","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementBeforeVowel.split(\"\\\\|\")"},"variableMap":{"replacementBeforeVowel":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:171","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementAtStart.split(\"\\\\|\")"},"status":-2},{"failures":[],"tindex":"f2a816ae-3d57-11e6-897e-5b95268d148d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"status":-2},{"failures":[58],"tindex":"f2a816af-3d57-11e6-897e-c5fd079c0c4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:245","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"f2a816b0-3d57-11e6-897e-7357a77954db","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:266","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-2},{"failures":[],"tindex":"f2a816b1-3d57-11e6-897e-ffece46b1275","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(charArray)"},"variableMap":{"charArray":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":-2},{"failures":[],"tindex":"f2a816b2-3d57-11e6-897e-afb438bf946f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + remainder"},"variableMap":{"remainder":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:372","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1))"},"status":-2},{"failures":[],"tindex":"f2a816b3-3d57-11e6-897e-1b3c0fb7b089","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"status":-2},{"failures":[19,20,21],"tindex":"f2a816b4-3d57-11e6-897e-5bc2639610cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[59],"tindex":"f2a816b5-3d57-11e6-897e-9133f628bb16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:890","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"f2a816b6-3d57-11e6-897e-a3672be7495f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"eSwap1","to":"eSwap1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"status":-2},{"failures":[60,61,62],"tindex":"f2a83dc7-3d57-11e6-897e-e14ff2c13183","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[20,21],"tindex":"f2a83dc8-3d57-11e6-897e-b3e9fb828857","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:370","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"f2a83dc9-3d57-11e6-897e-cd15971f6b0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"value","c2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:957","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} "},"status":-2},{"failures":[],"tindex":"f2a83dca-3d57-11e6-897e-bfeb19eb0de3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f2a83dcb-3d57-11e6-897e-c7f7a311f9fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[],"tindex":"f2a83dcc-3d57-11e6-897e-e1d8e02b67b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:194","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":0},{"failures":[],"tindex":"f2a83dcd-3d57-11e6-897e-6192eabff101","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-2},{"failures":[63],"tindex":"f2a83dce-3d57-11e6-897e-0bb879e387af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[64,65,19,20,21],"tindex":"f2a83dcf-3d57-11e6-897e-7bb0e532c785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,66],"tindex":"f2a83dd0-3d57-11e6-897e-0da444be9004","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"encoding","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"encoding","text":"encoding"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"status":-1},{"failures":[19],"tindex":"f2a83dd1-3d57-11e6-897e-3d714c7d8fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"index","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:621","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[19,28,20,21],"tindex":"f2a864e2-3d57-11e6-897e-73e7b0b052c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:765","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (slavoGermanic && ((index > 0) && ((charAt(value, (index - 1))) != 'T')))) {\n    result.append(\"S\", \"TS\");\n} else {\n    result.append('S');\n}"},"status":-1},{"failures":[],"tindex":"f2a864e3-3d57-11e6-897e-a3a4b7c7346f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:609","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"f2a864e4-3d57-11e6-897e-b1a5e31c8c0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"variableMap":{"context":"input","pattern":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:605","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (prefix.charAt(i))) {\n    return false;\n} "},"status":-2},{"failures":[20,21],"tindex":"f2a864e5-3d57-11e6-897e-e57ba3de0996","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:611","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[67,68,69,70,71,72,73,74,75,76,77,18,78,79,80,81,82,83,84,85,86,87,88],"tindex":"f2a864e6-3d57-11e6-897e-894a1bec7491","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-1},{"failures":[],"tindex":"f2a864e7-3d57-11e6-897e-63066dd7c005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[89,90],"tindex":"f2a864e8-3d57-11e6-897e-e53dc028a1f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"status":-1},{"failures":[19,20,21],"tindex":"f2a864e9-3d57-11e6-897e-a71cb39f93ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:716","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"status":-1},{"failures":[],"tindex":"f2a864ea-3d57-11e6-897e-a790396f9d11","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:617","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"variableMap":{"valueToDigest":"name","key":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:162","type":"CtIfImpl","sourcecode":"if (nameLength > (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int);\n    final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength);\n    return firstThree + lastThree;\n} else {\n    return name;\n}"},"status":-2},{"failures":[91,92,93,94,95,96,97],"tindex":"f2a864eb-3d57-11e6-897e-3b410e3cbb12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-1},{"failures":[],"tindex":"f2a864ec-3d57-11e6-897e-bb7d7011f2f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text)"},"status":-2},{"failures":[],"tindex":"f2a864ed-3d57-11e6-897e-4d94333f1e19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean"},"variableMap":{"concat":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"f2a864ee-3d57-11e6-897e-51ce475acd35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:310","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"status":-1},{"failures":[98,99,101,102,103,104,106],"tindex":"f2a88bff-3d57-11e6-897e-31fce46c0986","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:144","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-1},{"failures":[],"tindex":"f2a88c00-3d57-11e6-897e-63d763fb34ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"f2a88c01-3d57-11e6-897e-ad827738f0f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"b","right":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":0},{"failures":[],"tindex":"f2a88c02-3d57-11e6-897e-3125ccbe5635","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"status":-2},{"failures":[111,112,113],"tindex":"f2a88c03-3d57-11e6-897e-d5291e6d62eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[2,4,114,115,5,6],"tindex":"f2a88c04-3d57-11e6-897e-d51802c023e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-1},{"failures":[116,117,118],"tindex":"f2a88c05-3d57-11e6-897e-bd933cf2b6b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer)"},"status":-1},{"failures":[116,117,118],"tindex":"f2a88c06-3d57-11e6-897e-bf719348826c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"status":-1},{"failures":[],"tindex":"f2a88c07-3d57-11e6-897e-a17d023dd7d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:467","type":"CtInvocationImpl","sourcecode":"sb.append(\", rcon='\").append(rCon).append('\\'')"},"variableMap":{"rCon":"phonemeText","sb":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-2},{"failures":[119],"tindex":"f2a88c08-3d57-11e6-897e-4581f166e5ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.int, string.length())) : string"},"status":-1},{"failures":[],"tindex":"f2a88c09-3d57-11e6-897e-bf4167dd1709","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:293","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.this.java.util.Set<java.lang.String>"},"status":-2},{"failures":[116,117,118],"tindex":"f2a88c0a-3d57-11e6-897e-37877eaffcae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":-1},{"failures":[],"tindex":"f2a8b31b-3d57-11e6-897e-db2cb5ee24de","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:121","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-2},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,31,32,33,34,145,146,147,148,149,150,151,152,153,154,155,156,157,158,35,159,160,36,37,38,39,40,41,42,43,44,161,45,30,46,162,47,163,48,49,50,164,165,51,166,52,167,168,53,54,55,169,56,57,10,11,12,170],"tindex":"f2a8b31c-3d57-11e6-897e-21a26859741b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:250","type":"CtAssignmentImpl","sourcecode":"context.byte[] = new byte[getDefaultBufferSize()]"},"status":-1},{"failures":[171,172,173],"tindex":"f2a8b31d-3d57-11e6-897e-ebfd4e859ae8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-1},{"failures":[95,96],"tindex":"f2a8b31e-3d57-11e6-897e-e53daab75b4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"status":-1},{"failures":[174,0,175,176,177,1],"tindex":"f2a8b31f-3d57-11e6-897e-85149e097fb1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106],"tindex":"f2a8b320-3d57-11e6-897e-af07577e6b4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:388","type":"CtInvocationImpl","sourcecode":"sb.append(ch)"},"status":-1},{"failures":[120,121,130,131,132,133,137,141,148,149,153,157],"tindex":"f2a8b321-3d57-11e6-897e-515d9f15a205","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:252","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-1},{"failures":[],"tindex":"f2a8b322-3d57-11e6-897e-e9f0ac704896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"variableMap":{"singleLetter":"txt","replacedName":"txt","dc":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"status":-2},{"failures":[],"tindex":"f2a8b323-3d57-11e6-897e-bf05215c24d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"status":-2},{"failures":[],"tindex":"f2a8b324-3d57-11e6-897e-e14a7bc3e316","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:252","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f2a8b325-3d57-11e6-897e-1998ad06d8f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:278","type":"CtLocalVariableImpl","sourcecode":"final int int = chars.int"},"status":-2},{"failures":[116,117,118],"tindex":"f2a8da36-3d57-11e6-897e-1be11c4b268f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer)"},"status":-1},{"failures":[178],"tindex":"f2a8da37-3d57-11e6-897e-fd1fa234ba26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[133,157],"tindex":"f2a8da38-3d57-11e6-897e-858dcce51337","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:103","type":"CtReturnImpl","sourcecode":"return b < 0 ? 256 + b : b"},"status":-1},{"failures":[],"tindex":"f2a8da39-3d57-11e6-897e-c783adec236a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"status":-2},{"failures":[],"tindex":"f2a8da3a-3d57-11e6-897e-a57b68ebe71f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[19,20,21],"tindex":"f2a8da3b-3d57-11e6-897e-3b32ad25e1f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"f2a8da3c-3d57-11e6-897e-e93b12086afa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":0},{"failures":[22,25],"tindex":"f2a8da3d-3d57-11e6-897e-b1f92fc530da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"status":-1},{"failures":[],"tindex":"f2a8da3e-3d57-11e6-897e-29d05654c67d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":0},{"failures":[171,179,172],"tindex":"f2a8da3f-3d57-11e6-897e-fbc59d644f4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"variableMap":{"nextChar":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:298","type":"CtAssignmentImpl","sourcecode":"lastChar = key.charAt(((key.length()) - 1))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}