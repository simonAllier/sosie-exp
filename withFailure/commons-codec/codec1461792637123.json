{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":103,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":122,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":97,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":104,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":130,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":90,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":85,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":77,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":52,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN":42,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":105,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":112,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":36,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":35,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":76,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":115,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":100,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":113,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":38,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":56,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":20,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":62,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":7,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":40,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":16,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":30,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":129,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":41,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":55,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":121,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":82,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":123,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":47,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":101,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":84,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":61,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":79,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":110,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":93,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":116,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":108,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":111,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":125,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":54,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":48,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":29,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":72,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":89,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":83,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":120,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":39,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":67,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":21,"org.apache.commons.codec.language.Caverphone1Test.testEncodeNull":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":99,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":33,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":128,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":9,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":10,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":86,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":23,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":73,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":124,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":119,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":91,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":12,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":87,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":59,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":69,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":95,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange":127,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":117,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":118,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":50,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":25,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":106,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":11,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange":109,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":126,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":114,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":44},"transformations":[{"failures":[],"tindex":"483e7b74-0cbf-11e6-ac2a-e3a5810946ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"status":-2},{"failures":[],"tindex":"483ea285-0cbf-11e6-ac2a-05243381f8c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:194","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = saltString.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"483ea286-0cbf-11e6-ac2a-4b4b9ee264b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:261","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"483ec997-0cbf-11e6-ac2a-5dbe169a21ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:147","type":"CtInvocationImpl","sourcecode":"result.append('N')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:617","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"483ec998-0cbf-11e6-ac2a-635ff682b56f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:371","type":"CtIfImpl","sourcecode":"if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    buffer.write(b);\n} "},"status":-1},{"failures":[],"tindex":"483ec999-0cbf-11e6-ac2a-ed301e8df6c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"status":-2},{"failures":[],"tindex":"483ef0aa-0cbf-11e6-ac2a-75f1cef5137c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:407","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"483ef0ab-0cbf-11e6-ac2a-f973b04bbadf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[12],"tindex":"483ef0ac-0cbf-11e6-ac2a-b56405a5a780","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"483f17bd-0cbf-11e6-ac2a-5f200c5aa8aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"483f17be-0cbf-11e6-ac2a-f31d199573c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"encodeTable","offset":"org.apache.commons.codec.binary.Base64.MASK_6BITS","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:351","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[0,1,2,13,14,4,5,6,7,8,9,10,15,16,17,18,19],"tindex":"483f17bf-0cbf-11e6-ac2a-577efa14ebe9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:282","type":"CtIfImpl","sourcecode":"if (strict) {\n    int int = 1;\n    for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n        int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            pos = 1;\n        }\n    }\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes);\n    boolean boolean = (!(printable.get(b))) || ((org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)) && (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    } \n    for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n} else {\n    for (final byte byte : bytes) {\n        int int = c;\n        if (b < 0) {\n            b = 256 + b;\n        } \n        if (printable.get(b)) {\n            buffer.write(b);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"483f3ed0-0cbf-11e6-ac2a-1b584384764a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:278","type":"CtLocalVariableImpl","sourcecode":"final int int = chars.int"},"status":-2},{"failures":[],"tindex":"483f3ed1-0cbf-11e6-ac2a-a7078fee618e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":0},{"failures":[],"tindex":"483f65e2-0cbf-11e6-ac2a-23d742193e55","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:296","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)"},"status":-2},{"failures":[],"tindex":"483f65e3-0cbf-11e6-ac2a-4f78ab06f0f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:121","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"483f65e4-0cbf-11e6-ac2a-a5eec80a73b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"status":0},{"failures":[],"tindex":"483f65e5-0cbf-11e6-ac2a-8788861afb92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[20,21,22,23,24,25],"tindex":"483f8cf6-0cbf-11e6-ac2a-3944ac4ae114","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[],"tindex":"483f8cf7-0cbf-11e6-ac2a-fb5a0172019d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"variableMap":{"bytes":"data","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"status":-2},{"failures":[],"tindex":"483f8cf8-0cbf-11e6-ac2a-cd742a58244c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return metaphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:530","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"483fb409-0cbf-11e6-ac2a-2f9d02108372","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"variableMap":{"source":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:247","type":"CtTryImpl","sourcecode":"try {\n    return encode(str, getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"483fb40a-0cbf-11e6-ac2a-c940028e006d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"input = input.trim()"},"status":-2},{"failures":[],"tindex":"483fb40b-0cbf-11e6-ac2a-4dae43d1f942","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"variableMap":{"encoding":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:437","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location))"},"status":-2},{"failures":[],"tindex":"483fb40c-0cbf-11e6-ac2a-fb8bba6082bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:220","type":"CtIfImpl","sourcecode":"if (rule.boolean) {\n    langs.retainAll(rule.java.util.Set<java.lang.String>);\n} else {\n    langs.removeAll(rule.java.util.Set<java.lang.String>);\n}"},"status":-2},{"failures":[],"tindex":"483fdb1d-0cbf-11e6-ac2a-d129203f9a0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-2},{"failures":[],"tindex":"483fdb1e-0cbf-11e6-ac2a-9985d069a364","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"status":-2},{"failures":[],"tindex":"483fdb1f-0cbf-11e6-ac2a-2fe1b7401f62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"483fdb20-0cbf-11e6-ac2a-b54345eca201","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:461","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 11))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"48400231-0cbf-11e6-ac2a-19509cc23dc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"t = left"},"variableMap":{"t":"pos","left":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:468","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"48400232-0cbf-11e6-ac2a-b39fac979702","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"variableMap":{"buf":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"48400233-0cbf-11e6-ac2a-998ead5ac8bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-2},{"failures":[],"tindex":"48402944-0cbf-11e6-ac2a-11df70d7ad04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:439","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"status":-2},{"failures":[26,27,28],"tindex":"48402945-0cbf-11e6-ac2a-9f54da037355","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:469","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[21], altResult[42], 4, buffer)"},"status":-1},{"failures":[29],"tindex":"48402946-0cbf-11e6-ac2a-99092d47fbbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:172","type":"CtIfImpl","sourcecode":"if ((ascii == null) || ((ascii.int) == 0)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[30,31,32,33],"tindex":"48405057-0cbf-11e6-ac2a-49d19dd13e6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:680","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41],"tindex":"48405058-0cbf-11e6-ac2a-370651906b3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:395","type":"CtInvocationImpl","sourcecode":"output.addRight(code)"},"status":-1},{"failures":[],"tindex":"48405059-0cbf-11e6-ac2a-5ba052e53d2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"status":-2},{"failures":[],"tindex":"4840776a-0cbf-11e6-ac2a-d331139f2f25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[1], b, 4)"},"status":-2},{"failures":[42,43],"tindex":"4840776b-0cbf-11e6-ac2a-5f1d5dcaf370","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[],"tindex":"4840776c-0cbf-11e6-ac2a-8383c4485692","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:162","type":"CtIfImpl","sourcecode":"if (nameLength > (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int);\n    final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength);\n    return firstThree + lastThree;\n} else {\n    return name;\n}"},"status":-2},{"failures":[44,45],"tindex":"48409e7d-0cbf-11e6-ac2a-4d99bd105ef2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:301","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"variableMap":{"left":"left","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:309","type":"CtAssignmentImpl","sourcecode":"left = results[0]"},"status":-1},{"failures":[],"tindex":"48409e7e-0cbf-11e6-ac2a-09d73b7c36cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:312","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"48409e7f-0cbf-11e6-ac2a-03b9e0aecc91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:267","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[46,47],"tindex":"4840c590-0cbf-11e6-ac2a-336154acd105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[48,49,50,51,52,26,27,28],"tindex":"4840c591-0cbf-11e6-ac2a-4ba7fa47a3fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"variableMap":{"messageDigest":"ctx","valueToDigest":"pBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:369","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-1},{"failures":[53],"tindex":"4840c592-0cbf-11e6-ac2a-1d6a61f937e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:181","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"4840c593-0cbf-11e6-ac2a-6bb1ff0acc8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:200","type":"CtIfImpl","sourcecode":"if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"4840c594-0cbf-11e6-ac2a-5f473403a0e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"result.append(\"-\")"},"status":0},{"failures":[],"tindex":"4840c595-0cbf-11e6-ac2a-fda180d5c7d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"variableMap":{"rawLine":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"status":-2},{"failures":[54],"tindex":"4840eca6-0cbf-11e6-ac2a-db69361b0879","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[44,55,56,45],"tindex":"4840eca7-0cbf-11e6-ac2a-d1ac7a81bc45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:234","type":"CtForImpl","sourcecode":"for ( ; i < 13 ; i++) {\n    int int = 0;\n    int int = 0;\n    for ( ; j < 6 ; j++) {\n        c <<= 1;\n        if (((b[y]) & u) != 0) {\n            c |= 1;\n        } \n        u >>>= 1;\n        if (u == 0) {\n            y++;\n            u = 128;\n        } \n        buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n    }\n}"},"status":-1},{"failures":[],"tindex":"4840eca8-0cbf-11e6-ac2a-71c706f24f14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:215","type":"CtIfImpl","sourcecode":"if ((isLastChar(wdsz, (n + 1))) && (isNextChar(local, n, 'H'))) {\n    break;\n} "},"variableMap":{"wdsz":"u","n":"c","local":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; j < 6 ; j++) {\n    c <<= 1;\n    if (((b[y]) & u) != 0) {\n        c |= 1;\n    } \n    u >>>= 1;\n    if (u == 0) {\n        y++;\n        u = 128;\n    } \n    buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n}"},"status":-2},{"failures":[57,58,59,60,61,62,63,64],"tindex":"4840eca9-0cbf-11e6-ac2a-29a21f40edf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-1},{"failures":[65,66,67,68],"tindex":"4840ecaa-0cbf-11e6-ac2a-151168e2c3cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:391","type":"CtAssignmentImpl","sourcecode":"context.long = (context.long) >> 1"},"variableMap":{"context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:403","type":"CtAssignmentImpl","sourcecode":"context.long = (context.long) >> 3"},"status":-1},{"failures":[],"tindex":"4840ecab-0cbf-11e6-ac2a-0f93caba3c4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"484113bc-0cbf-11e6-ac2a-19d91a826e40","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[69,70,71,0,1,2,13,14],"tindex":"484113bd-0cbf-11e6-ac2a-f35fab2330f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"status":-1},{"failures":[],"tindex":"484113be-0cbf-11e6-ac2a-f550b65d8046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"484113bf-0cbf-11e6-ac2a-ab552f292de8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"key","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":0},{"failures":[72,73],"tindex":"484113c0-0cbf-11e6-ac2a-a1636834023b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"484113c1-0cbf-11e6-ac2a-1b1046676fbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:273","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length())"},"variableMap":{"str":"saltPrefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:423","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(saltPrefix)"},"status":-2},{"failures":[54],"tindex":"484113c2-0cbf-11e6-ac2a-2b20cc062135","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":-1},{"failures":[],"tindex":"48413ad3-0cbf-11e6-ac2a-7192b29d3871","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"48413ad4-0cbf-11e6-ac2a-5d5e858a457f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"status":-2},{"failures":[],"tindex":"48413ad5-0cbf-11e6-ac2a-f9e24f9dfa1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:192","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[74],"tindex":"48413ad6-0cbf-11e6-ac2a-a18360c8b006","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"48413ad7-0cbf-11e6-ac2a-83fb07b8903f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:399","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType, languageSet)"},"variableMap":{"nameType":"nameType","org.apache.commons.codec.language.bm.RuleType.RULES":"ruleType","languageSet":"languageSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:403","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType, languageSet)"},"status":-2},{"failures":[30,32,33],"tindex":"48413ad8-0cbf-11e6-ac2a-c5c03f7b9614","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:719","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.appendAlternate('F');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:683","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[],"tindex":"484161e9-0cbf-11e6-ac2a-41fdee4a2c49","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"variableMap":{"source":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:230","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"status":-2},{"failures":[75,76],"tindex":"484161ea-0cbf-11e6-ac2a-cf87ea489fcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"status":-1},{"failures":[],"tindex":"484161eb-0cbf-11e6-ac2a-73d4f5025337","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"alternate","salt":"alternate","prefix":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[30,31,77,32,33],"tindex":"484161ec-0cbf-11e6-ac2a-dda0c8596227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:148","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1"},"status":-1},{"failures":[],"tindex":"484161ed-0cbf-11e6-ac2a-5da8621fa60d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"484161ee-0cbf-11e6-ac2a-a74470cdc162","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"484161ef-0cbf-11e6-ac2a-edcd395fc606","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"variableMap":{"base64":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:831","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"status":-2},{"failures":[],"tindex":"48418900-0cbf-11e6-ac2a-d3f98a29a78f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:383","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-2},{"failures":[78,79,80,81,82,83],"tindex":"48418901-0cbf-11e6-ac2a-7b36ec821853","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"status":-1},{"failures":[],"tindex":"48418902-0cbf-11e6-ac2a-f7a18451a0c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:293","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.this.java.util.Set<java.lang.String>"},"status":-2},{"failures":[],"tindex":"48418903-0cbf-11e6-ac2a-639aef5eb4ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.decodeBase64(pArray)"},"variableMap":{"pArray":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"48418904-0cbf-11e6-ac2a-551c9c749f59","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:337","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strA.length())))"},"status":-2},{"failures":[],"tindex":"48418905-0cbf-11e6-ac2a-e76aef4616cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == element) || (isInAlphabet(element))) {\n    return true;\n} "},"status":0},{"failures":[57,59,60,61,62,63,64],"tindex":"48418906-0cbf-11e6-ac2a-97505bbafbc5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"variableMap":{"keyBytes":"saltBytes","ctx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[32,33],"tindex":"4841b017-0cbf-11e6-ac2a-d5e06472dfe9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"4841b018-0cbf-11e6-ac2a-1b040fd9d667","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:210","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"4841b019-0cbf-11e6-ac2a-ad43cb173c24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"variableMap":{"maxLength":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"status":-2},{"failures":[],"tindex":"4841b01a-0cbf-11e6-ac2a-699170d9993d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"C\")"},"status":-2},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,43,129,130,131],"tindex":"4841b01b-0cbf-11e6-ac2a-c56bec036751","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:369","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":88,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}