{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":168,"org.apache.commons.codec.binary.HexTest.testCustomCharset":75,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":135,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":9,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":64,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":155,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":19,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":30,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":154,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":37,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":47,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":65,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":29,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":107,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":24,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":149,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":136,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":90,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":170,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":18,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":173,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":42,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":100,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":63,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":104,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt":94,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":10,"org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks":44,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":57,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":62,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":187,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":142,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":88,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":83,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":141,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":114,"org.apache.commons.codec.language.NysiisTest.testCap":48,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":112,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":115,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":118,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":140,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":72,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt":96,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":99,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":116,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":117,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":144,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":182,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":131,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":167,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":82,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":159,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":59,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":108,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":147,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":77,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":120,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":89,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":172,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":74,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":148,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":153,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":165,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":157,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":26,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":17,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":127,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":132,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":163,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":92,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":45,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":152,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":166,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":35,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":43,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":185,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":86,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":68,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":134,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":184,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":81,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":31,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":109,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":171,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":161,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":150,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":98,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":69,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":60,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":14,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":124,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":181,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":71,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":3,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":80,"org.apache.commons.codec.language.NysiisTest.testDropBy":53,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":70,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":146,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":156,"org.apache.commons.codec.binary.Base64Test.testBase64":123,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":41,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":23,"org.apache.commons.codec.binary.Base64Test.testUUID":79,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":139,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":160,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":27,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":119,"org.apache.commons.codec.binary.Base64Test.testSingletons":178,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":67,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":102,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":186,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":84,"org.apache.commons.codec.binary.Base64Test.testPairs":176,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":33,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":101,"org.apache.commons.codec.language.NysiisTest.testRule7":52,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":66,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":125,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":174,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":34,"org.apache.commons.codec.language.NysiisTest.testRule6":51,"org.apache.commons.codec.language.NysiisTest.testRule5":50,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":179,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":175,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":93,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":95,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":6,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":130,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt":97,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":78,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":76,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":183,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":55,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":110,"org.apache.commons.codec.language.NysiisTest.testBran":180,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":39,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":162,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":111,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":143,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":105,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":126,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":164,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":177,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":128,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":7,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":121,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":1,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":145,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":151,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":28,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":25,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":61,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":91,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":103,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":16,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":85,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":106,"org.apache.commons.codec.language.NysiisTest.testOthers":54,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":113,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":122,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":15,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":12,"org.apache.commons.codec.language.SoundexTest.testDifference":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":158,"org.apache.commons.codec.language.NysiisTest.testDan":49,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":129,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":138,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":87,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":56,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":137,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":169},"transformations":[{"failures":[],"tindex":"b5dc5d8c-3d98-11e6-86af-2b9ab480b4e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"b5dc849d-3d98-11e6-86af-b775bfbb610a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:346","type":"CtAssignmentImpl","sourcecode":"matches = (string.charAt((index - 1))) == c"},"status":-1},{"failures":[],"tindex":"b5dc849e-3d98-11e6-86af-dfa747c9b653","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"variableMap":{"b":"buffer","context":"context","length":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22],"tindex":"b5dc849f-3d98-11e6-86af-43fffd63591b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"buffer.append(saltString)"},"status":-1},{"failures":[23,24,25,26,27,28,29],"tindex":"b5dc84a0-3d98-11e6-86af-7baa74ef75f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:180","type":"CtLocalVariableImpl","sourcecode":"final int int = keyBytes.int"},"variableMap":{"keyBytes":"buf","length":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:114","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[30],"tindex":"b5dc84a1-3d98-11e6-86af-f9be64ce5afd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"b5dc84a2-3d98-11e6-86af-5b7cce208ef4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i)"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"printable","i":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}"},"status":-1},{"failures":[44],"tindex":"b5dcabb3-3d98-11e6-86af-7172172f9c4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"b5dcabb4-3d98-11e6-86af-7948dcf00778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"status":-2},{"failures":[],"tindex":"b5dcabb5-3d98-11e6-86af-5f1037cc8835","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}"},"status":-2},{"failures":[45,46],"tindex":"b5dcabb6-3d98-11e6-86af-fd82e557e475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55],"tindex":"b5dcabb7-3d98-11e6-86af-79aeddac8149","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"status":-1},{"failures":[56,57,58,59,60],"tindex":"b5dcabb8-3d98-11e6-86af-41a8f7284a6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[23,24,61,62,63,64,65,66,67,68,28,69],"tindex":"b5dcabb9-3d98-11e6-86af-6926924ee05b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"b5dcabba-3d98-11e6-86af-c9f6c63f3b07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"variableMap":{"content":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase()"},"status":-2},{"failures":[70],"tindex":"b5dcd2cb-3d98-11e6-86af-d5208920e57a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"variableMap":{"ch":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n} "},"status":-1},{"failures":[],"tindex":"b5dcd2cc-3d98-11e6-86af-5bab99d05fbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"status":0},{"failures":[0,3,4,8,11,13],"tindex":"b5dcd2cd-3d98-11e6-86af-0747bea80179","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:353","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (index < ((string.length()) - 1))) {\n    matches = (string.charAt((index + 1))) == c;\n} "},"variableMap":{"c":"c","string":"string","index":"index","matches":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:344","type":"CtIfImpl","sourcecode":"if ((index > 0) && (index < (string.length()))) {\n    matches = (string.charAt((index - 1))) == c;\n} "},"status":-1},{"failures":[],"tindex":"b5dcd2ce-3d98-11e6-86af-6ba109dc3009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":-2},{"failures":[],"tindex":"b5dcd2cf-3d98-11e6-86af-31808f4843c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:202","type":"CtAssignmentImpl","sourcecode":"salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])"},"status":-2},{"failures":[],"tindex":"b5dcd2d0-3d98-11e6-86af-676a3a5d20cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:809","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b5dcd2d1-3d98-11e6-86af-41eefe461c1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:335","type":"CtReturnImpl","sourcecode":"return phonemeBuilder"},"variableMap":{"phonemeBuilder":"phonemeBuilder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:196","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"},"status":0},{"failures":[],"tindex":"b5dcf9e2-3d98-11e6-86af-d578d9033b0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return firstLetter + name"},"status":-2},{"failures":[71,72],"tindex":"b5dcf9e3-3d98-11e6-86af-e189ebe87062","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:316","type":"CtAssignmentImpl","sourcecode":"name2RtLEnd = name2.substring((name2Size - i), ((name2Size - i) + 1))"},"status":-1},{"failures":[],"tindex":"b5dcf9e4-3d98-11e6-86af-d5205fe4fdd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:313","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[65],"tindex":"b5dcf9e5-3d98-11e6-86af-21ed747e56b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-1},{"failures":[31,32,73,34,35,36,39],"tindex":"b5dcf9e6-3d98-11e6-86af-e17772aea875","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[23,24,61,62,63,64,65,66,67,68,28,69],"tindex":"b5dcf9e7-3d98-11e6-86af-bd1f93f8fbae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[74],"tindex":"b5dcf9e8-3d98-11e6-86af-7f9088f6ee03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[75,76,77,78,79,80],"tindex":"b5dcf9e9-3d98-11e6-86af-bdf2fe9c7eae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"out","offset":"f","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"status":-1},{"failures":[],"tindex":"b5dcf9ea-3d98-11e6-86af-a1d289d2d6c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"this":"result","primary":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (!slavoGermanic)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"IE\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, \"ME\", \"MA\")))) {\n    result.appendAlternate('R');\n} else {\n    result.append('R');\n}"},"status":-2},{"failures":[],"tindex":"b5dd20fb-3d98-11e6-86af-f76cd1665533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"sBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"b5dd20fc-3d98-11e6-86af-2511f107030f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"status":-2},{"failures":[81],"tindex":"b5dd20fd-3d98-11e6-86af-698962d0c765","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:441","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[82,83,84,85],"tindex":"b5dd20fe-3d98-11e6-86af-dd505d70391c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"status":-1},{"failures":[1,5,6,7,8,86,11],"tindex":"b5dd20ff-3d98-11e6-86af-0fb36cee28f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:295","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name1.toCharArray()"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale).toCharArray()"},"status":-1},{"failures":[82],"tindex":"b5dd2100-3d98-11e6-86af-571073909c6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":-1},{"failures":[],"tindex":"b5dd2101-3d98-11e6-86af-2bbbcb2dbfad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}"},"variableMap":{"es1":"salt","es2":"salt","diff":"length","lengthToMatch":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)]);\n} else if (!(salt.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[],"tindex":"b5dd2102-3d98-11e6-86af-b966187a6bfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:301","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:209","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.get(java.lang.CharSequence.subSequence(int, ((int) + patternLength)))"},"status":-2},{"failures":[],"tindex":"b5dd2103-3d98-11e6-86af-85dd06bfeb30","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-2},{"failures":[87,88,89,90,91],"tindex":"b5dd2104-3d98-11e6-86af-a1241727baf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:215","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[92,93],"tindex":"b5dd2105-3d98-11e6-86af-d54eddddf0d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:85","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"b5dd4816-3d98-11e6-86af-5ba70e610926","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"lastCode = code"},"variableMap":{"code":"code","lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"status":-2},{"failures":[14,94,15,16,95,17,18,96,19,97,20,21,98,99,22],"tindex":"b5dd4817-3d98-11e6-86af-bf085470c2ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:146","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-1},{"failures":[],"tindex":"b5dd4818-3d98-11e6-86af-c5ddc285e84e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":0},{"failures":[25,26,27,100,101,102,103,104,105,106,107,29,108,109,110,111,78,112,79,56,113,114,115,116,117,118,57,119,120,121,122,123,124,125,126,127,81,128,129,130],"tindex":"b5dd4819-3d98-11e6-86af-2be0875d1720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[131],"tindex":"b5dd481a-3d98-11e6-86af-071f2b3de9f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b5dd481b-3d98-11e6-86af-b185fb3c85d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"variableMap":{"ii":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[132,133,134,74,135,136,137,138,139],"tindex":"b5dd481c-3d98-11e6-86af-9179616b3593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-1},{"failures":[140,141,142,143,144,145,146,147,148,149,150],"tindex":"b5dd481d-3d98-11e6-86af-210c3a7a6203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"data","soundexMapping":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:212","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[buffSize]"},"status":-1},{"failures":[],"tindex":"b5dd481e-3d98-11e6-86af-09801e711bad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":0},{"failures":[151,152,153,154,155,156,157,158,70],"tindex":"b5dd481f-3d98-11e6-86af-6b38a6f03bb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"ch","c2":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n} "},"status":-1},{"failures":[],"tindex":"b5dd4820-3d98-11e6-86af-ff5cc19aff43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:524","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"b5dd6f31-3d98-11e6-86af-5761a6b5cb01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:442","type":"CtIfImpl","sourcecode":"if ((0 == (context.int)) && ((int) == 0)) {\n    return ;\n} "},"variableMap":{"context":"context","lineLength":"ibitWorkArea","modulus":"org.apache.commons.codec.binary.Base64.MASK_6BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:337","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n    if ((0 == (context.int)) && ((int) == 0)) {\n        return ;\n    } \n    final byte[] byte[] = ensureBufferSize(int, context);\n    final int int = context.int;\n    switch (context.int) {\n        case 0 :\n            break;\n        case 1 :\n            buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n                buffer[((context.int)++)] = byte;\n                buffer[((context.int)++)] = byte;\n            } \n            break;\n        case 2 :\n            buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n                buffer[((context.int)++)] = byte;\n            } \n            break;\n        default :\n            throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n    }\n    context.int += (context.int) - savedPos;\n    if (((int) > 0) && ((context.int) > 0)) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n    } \n} else {\n    for (int int = 0 ; i < inAvail ; i++) {\n        final byte[] byte[] = ensureBufferSize(int, context);\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n        int int = in[(inPos++)];\n        if (b < 0) {\n            b += 256;\n        } \n        context.int = ((context.int) << 8) + b;\n        if (0 == (context.int)) {\n            buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n            context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n            if (((int) > 0) && ((int) <= (context.int))) {\n                java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n                context.int += byte[].int;\n                context.int = 0;\n            } \n        } \n    }\n}"},"status":-2},{"failures":[1,5,6,7,8,86,11],"tindex":"b5dd6f32-3d98-11e6-86af-1313ced5bc67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale).toCharArray()"},"status":-1},{"failures":[],"tindex":"b5dd6f33-3d98-11e6-86af-15ddf3ce367c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[159,160,161,162,163,164,165,166],"tindex":"b5dd6f34-3d98-11e6-86af-492e45c9fd4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":-1},{"failures":[14,15,16,17,18],"tindex":"b5dd6f35-3d98-11e6-86af-0fd36d5e5333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"status":-1},{"failures":[167,168],"tindex":"b5dd6f36-3d98-11e6-86af-4d962ba3fd08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"b5dd6f37-3d98-11e6-86af-9914ad60d48e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":0},{"failures":[],"tindex":"b5dd6f38-3d98-11e6-86af-4bfd7aa56b8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:176","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(ascii.int) >> 3]"},"status":-2},{"failures":[],"tindex":"b5dd6f39-3d98-11e6-86af-3d32741a45a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:533","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[138,139],"tindex":"b5dd964a-3d98-11e6-86af-29d835ff4427","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:666","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"b5dd964b-3d98-11e6-86af-3bf663af29f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"b5dd964c-3d98-11e6-86af-b31f3e8d46eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":0},{"failures":[],"tindex":"b5dd964d-3d98-11e6-86af-3df0654f8230","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:260","type":"CtReturnImpl","sourcecode":"return count >= minRating"},"status":-2},{"failures":[159,160,161,162,164,165,166],"tindex":"b5dd964e-3d98-11e6-86af-0d004d4868a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[169,170],"tindex":"b5dd964f-3d98-11e6-86af-435bc3ade2ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"right = t"},"variableMap":{"t":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":-1},{"failures":[171,172],"tindex":"b5dd9650-3d98-11e6-86af-6324f81a7865","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"b5dd9651-3d98-11e6-86af-87e148ec1317","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat()"},"status":-2},{"failures":[],"tindex":"b5dd9652-3d98-11e6-86af-9fc1ff6f204c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-2},{"failures":[],"tindex":"b5dd9653-3d98-11e6-86af-9f5d6732b061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:157","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[boolean ? 4096 : 8192]"},"status":-2},{"failures":[],"tindex":"b5dd9654-3d98-11e6-86af-ab8f1874abb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.iterator().next()"},"status":-2},{"failures":[74,138,139],"tindex":"b5dd9655-3d98-11e6-86af-c7e6b325f346","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:366","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":-1},{"failures":[173,174],"tindex":"b5ddbd66-3d98-11e6-86af-0d0b0367eb36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"status":-1},{"failures":[74,135,138],"tindex":"b5ddbd67-3d98-11e6-86af-21fac67914cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:981","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"b5ddbd68-3d98-11e6-86af-493bee4356f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[175],"tindex":"b5ddbd69-3d98-11e6-86af-23e0916e1928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"b5ddbd6a-3d98-11e6-86af-810d356f0584","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"status":-2},{"failures":[169,170],"tindex":"b5ddbd6b-3d98-11e6-86af-55d0f9f921be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"status":-1},{"failures":[25,26,27,100,101,102,103,104,105,106,107,29,108,109,110,111,78,112,176,79,56,113,114,115,116,117,118,57,119,120,177,121,178,122,123,124,125,126,127,81,128,129,130],"tindex":"b5ddbd6c-3d98-11e6-86af-050dc98a1bda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:446","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)"},"status":-1},{"failures":[],"tindex":"b5ddbd6d-3d98-11e6-86af-9745169389ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"b5ddbd6e-3d98-11e6-86af-d72de6e84912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":0},{"failures":[179],"tindex":"b5ddbd6f-3d98-11e6-86af-87f530760d25","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"tmp","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"tmp[i] = b"},"status":-1},{"failures":[],"tindex":"b5ddbd70-3d98-11e6-86af-e1ea8862ee91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:411","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"variableMap":{"pArray":"buf","org.apache.commons.codec.binary.BaseNCodec.EOF":"c","this":"baseNCodec","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[180,53],"tindex":"b5ddbd71-3d98-11e6-86af-a511ce90bedf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"status":-1},{"failures":[],"tindex":"b5ddbd72-3d98-11e6-86af-93a67509af9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"encodeSize","e1":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:299","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int)"},"status":0},{"failures":[],"tindex":"b5dde483-3d98-11e6-86af-63cfd5c2f4e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:250","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-2},{"failures":[],"tindex":"b5dde484-3d98-11e6-86af-031aa8a6685a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:287","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"b5dde485-3d98-11e6-86af-7b55234278f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[26,27,181,182,183,184,107,111,185,176,79,56,114,115,116,117,118,57,186,187,80,128],"tindex":"b5dde486-3d98-11e6-86af-d13ecee51b82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:382","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"status":-1},{"failures":[],"tindex":"b5dde487-3d98-11e6-86af-3d91a358a4cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:281","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"b5dde488-3d98-11e6-86af-cfb21bb9e99c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)"},"status":-2},{"failures":[],"tindex":"b5dde489-3d98-11e6-86af-65aa1ee5df57","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:158","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(buf)"},"status":-2},{"failures":[],"tindex":"b5dde48a-3d98-11e6-86af-c5122def94cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"variableMap":{"original":"finalb","length":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","key":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:273","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-2},{"failures":[],"tindex":"b5dde48b-3d98-11e6-86af-0ddffdf65914","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"variableMap":{"a":"length","m":"length","n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = keyBytes.int"},"status":-2},{"failures":[],"tindex":"b5dde48c-3d98-11e6-86af-9bc7be0f8b28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"digit"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-2},{"failures":[65],"tindex":"b5dde48d-3d98-11e6-86af-8b856a4c2107","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"variableMap":{"todo":"len","len":"chunkSeparatorLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"status":-1},{"failures":[],"tindex":"b5dde48e-3d98-11e6-86af-916dc678953a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:597","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[26,27,181,182,183,184,107,111,185,176,79,56,114,115,116,117,118,57,186,187,80,128],"tindex":"b5dde48f-3d98-11e6-86af-01023f0b88e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:382","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}