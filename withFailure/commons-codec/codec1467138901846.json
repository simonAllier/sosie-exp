{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":144,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":27,"org.apache.commons.codec.language.NysiisTest.testSnat":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":68,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":96,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":41,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":83,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":72,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":82,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":114,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":111,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":66,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":89,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":49,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":87,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":90,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":6,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":104,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":23,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":130,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":92,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":150,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":97,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":149,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":56,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":125,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":84,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":120,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":126,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":22,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":148,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":59,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":127,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":128,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":152,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":143,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":115,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":154,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":132,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":112,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":30,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":155,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":88,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":40,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":44,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":146,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":102,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":65,"org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull":60,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":8,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":141,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":39,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":54,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":7,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":142,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":51,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":47,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":116,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":52,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":62,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":138,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":61,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":76,"org.apache.commons.codec.language.NysiisTest.testDropBy":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":43,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":153,"org.apache.commons.codec.binary.Base64Test.testBase64":137,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":81,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":13,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":29,"org.apache.commons.codec.binary.Base64Test.testUUID":122,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":103,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":131,"org.apache.commons.codec.binary.Base64Test.testSingletons":135,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":3,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":106,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":79,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":78,"org.apache.commons.codec.binary.Base64Test.testPairs":121,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":71,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":105,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":50,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":139,"org.apache.commons.codec.language.NysiisTest.testRule6":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":93,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":4,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":74,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":100,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":119,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":117,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":86,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":118,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":151,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be":91,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":109,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":18,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":133,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":140,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":2,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":57,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":134,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":95,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":38,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":80,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":147,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":25,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":107,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":64,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":99,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":110,"org.apache.commons.codec.language.NysiisTest.testOthers":33,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":124,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":136,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":63,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":45,"org.apache.commons.codec.language.SoundexTest.testDifference":55,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":48,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":94,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":75,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":113,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":123,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":11,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":34},"transformations":[{"failures":[],"tindex":"06526814-3d5f-11e6-a20c-856861f6970d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:391","type":"CtAssignmentImpl","sourcecode":"code = chr"},"variableMap":{"code":"chr","chr":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:339","type":"CtAssignmentImpl","sourcecode":"chr = input.removeNext()"},"status":-2},{"failures":[],"tindex":"06526815-3d5f-11e6-a20c-df9b967d6d3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)]);\n} else if (!(salt.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"variableMap":{"salt":"name1LtREnd","org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS":"name1Char","length":"name2Size","org.apache.commons.codec.digest.B64.B64T":"name1LtREnd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (name1LtREnd.equals(name2RtLEnd)) {\n    name1Char[(name1Size - i)] = ' ';\n    name2Char[(name2Size - i)] = ' ';\n} "},"status":-2},{"failures":[],"tindex":"06526816-3d5f-11e6-a20c-f3a765970439","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"modulus","encodeSize":"pos","length":"pos","lineSeparator":"buffer","lineLength":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 1 :\n        break;\n    case 2 :\n        context.int = (context.int) >> 4;\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        context.int = (context.int) >> 2;\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[],"tindex":"06528f27-3d5f-11e6-a20c-a199e2af4977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"06528f28-3d5f-11e6-a20c-2bf9e13e4039","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return result.substring(1)"},"variableMap":{"result":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:81","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[],"tindex":"06528f29-3d5f-11e6-a20c-dfa6e5c10c3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":0},{"failures":[8,9,10,11,12,13],"tindex":"06528f2a-3d5f-11e6-a20c-537e4a5f5e3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"input","key":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:896","type":"CtReturnImpl","sourcecode":"return input.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[12,13],"tindex":"06528f2b-3d5f-11e6-a20c-fb89a3508bae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:530","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[],"tindex":"06528f2c-3d5f-11e6-a20c-5bfd99c9afb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:268","type":"CtTryImpl","sourcecode":"try {\n    return decodeText(str);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"06528f2d-3d5f-11e6-a20c-1f99d8a696e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"sBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"06528f2e-3d5f-11e6-a20c-090c9594e265","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:504","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":-2},{"failures":[14,15,16,17,18,19,20],"tindex":"06528f2f-3d5f-11e6-a20c-719b72fba486","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"finalb","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"finalb = ctx1.digest()"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30],"tindex":"0652b640-3d5f-11e6-a20c-d383981b97ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"buffer.append(saltString)"},"variableMap":{"saltString":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII","buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos))"},"status":-1},{"failures":[],"tindex":"0652b641-3d5f-11e6-a20c-3d9de35b6c7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"status":-2},{"failures":[31,32,33],"tindex":"0652b642-3d5f-11e6-a20c-8542c590ff04","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"status":-1},{"failures":[],"tindex":"0652b643-3d5f-11e6-a20c-2b64548d0b8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:122","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0652b644-3d5f-11e6-a20c-51614bca5734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"variableMap":{"patternLength":"length","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int"},"status":-2},{"failures":[34,35],"tindex":"0652b645-3d5f-11e6-a20c-ed71b71173c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:332","type":"CtOperatorAssignmentImpl","sourcecode":"el ^= (((((((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(t & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((t >>> 8) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][((t >>> 16) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][((t >>> 24) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(u & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][((u >>> 8) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][((u >>> 16) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((u >>> 24) & 63)])"},"status":-1},{"failures":[],"tindex":"0652b646-3d5f-11e6-a20c-b1e0bd128458","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:472","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-2},{"failures":[],"tindex":"0652dd57-3d5f-11e6-a20c-e7f54e6e740c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:591","type":"CtReturnImpl","sourcecode":"return (charAt(value, (index + 1))) == 'R' ? index + 2 : index + 1"},"status":-2},{"failures":[],"tindex":"0652dd58-3d5f-11e6-a20c-35625aadfcf7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"ch = java.lang.Character.toLowerCase(ch)"},"variableMap":{"ch":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:271","type":"CtAssignmentImpl","sourcecode":"last = getMappingCode(str, 0)"},"status":-2},{"failures":[],"tindex":"0652dd59-3d5f-11e6-a20c-4fd99b2012e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (ascii instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)));\n} "},"variableMap":{"ascii":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"0652dd5a-3d5f-11e6-a20c-695594cc9010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"base64String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64String)"},"status":-2},{"failures":[],"tindex":"0652dd5b-3d5f-11e6-a20c-e9b82e6d4e2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:214","type":"CtIfImpl","sourcecode":"if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n    org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n    org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"0652dd5c-3d5f-11e6-a20c-19935a233f54","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:211","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[36,32,37],"tindex":"0652dd5d-3d5f-11e6-a20c-7327262ae989","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"status":-1},{"failures":[34,35],"tindex":"0652dd5e-3d5f-11e6-a20c-33ee6ae75d30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:410","type":"CtAssignmentImpl","sourcecode":"results[1] = b"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46],"tindex":"0653046f-3d5f-11e6-a20c-3f72d934a521","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:506","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    continue;\n} "},"variableMap":{"rules":"rules"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    ruleMapping.put(patternKey, rules);\n} "},"status":-1},{"failures":[],"tindex":"06530470-3d5f-11e6-a20c-eb9c1d4555b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar)"},"status":-2},{"failures":[],"tindex":"06530471-3d5f-11e6-a20c-8b5139d4b145","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"06530472-3d5f-11e6-a20c-5509ef507bf4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"variableMap":{"minRating":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"status":-2},{"failures":[12,13],"tindex":"06530473-3d5f-11e6-a20c-530b8aac1c27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"index","cnt":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[47],"tindex":"06530474-3d5f-11e6-a20c-ed4e36fedb61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"status":-1},{"failures":[],"tindex":"06530475-3d5f-11e6-a20c-6982033235f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.language.Nysiis.CHARS_N"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"06530476-3d5f-11e6-a20c-3f6388cb6902","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"valueToDigest","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"key","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"06530477-3d5f-11e6-a20c-1b1fc9030c28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":0},{"failures":[48,49,50],"tindex":"06530478-3d5f-11e6-a20c-df5b0083c485","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[51],"tindex":"06532b89-3d5f-11e6-a20c-2f07e1fed4c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:127","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[52],"tindex":"06532b8a-3d5f-11e6-a20c-09a6c568bd1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"06532b8b-3d5f-11e6-a20c-ad48584f7367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += len"},"status":-2},{"failures":[],"tindex":"06532b8c-3d5f-11e6-a20c-a5a7830076ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"variableMap":{"schedule":"results","t":"d","left":"c","eSwap0":"d","right":"d","eSwap1":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:348","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-2},{"failures":[53,10,12,13],"tindex":"06532b8d-3d5f-11e6-a20c-c3613a13a716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:744","type":"CtIfImpl","sourcecode":"if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n    result.append(\"KS\");\n} "},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:740","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('S');\n    index++;\n} else {\n    if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n        result.append(\"KS\");\n    } \n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[54,55],"tindex":"06532b8e-3d5f-11e6-a20c-555e481a33b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"status":-1},{"failures":[4],"tindex":"06532b8f-3d5f-11e6-a20c-fd54ff4dff54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"status":-1},{"failures":[],"tindex":"06532b90-3d5f-11e6-a20c-0fdb15568d47","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"status":-2},{"failures":[34,35],"tindex":"06532b91-3d5f-11e6-a20c-f3b91fbff768","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"variableMap":{"keyLen":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])"},"status":-1},{"failures":[],"tindex":"06532b92-3d5f-11e6-a20c-290f2cba00d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"next":"curr","org.apache.commons.codec.language.Nysiis.CHARS_FF":"org.apache.commons.codec.language.Nysiis.CHARS_AF","curr":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:120","type":"CtIfImpl","sourcecode":"if ((curr == 'E') && (next == 'V')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":0},{"failures":[],"tindex":"06532b93-3d5f-11e6-a20c-374d2147ce9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"data","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:207","type":"CtAssignmentImpl","sourcecode":"this.char[] = data"},"status":-2},{"failures":[],"tindex":"065352a4-3d5f-11e6-a20c-1d8ab7b60ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"065352a5-3d5f-11e6-a20c-2b9d91655ff5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"status":-1},{"failures":[],"tindex":"065352a6-3d5f-11e6-a20c-118a81f5cefa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"lang","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:124","type":"CtIfImpl","sourcecode":"if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n    ls.add(lang);\n} "},"status":-2},{"failures":[4,56],"tindex":"065352a7-3d5f-11e6-a20c-1777413d3aa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"encodeBlanks"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-1},{"failures":[],"tindex":"065352a8-3d5f-11e6-a20c-c942799afa24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"lineLength","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:373","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-2},{"failures":[],"tindex":"065352a9-3d5f-11e6-a20c-cb7aef1fa07d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"status":-2},{"failures":[48,57,58,49,59,50],"tindex":"065352aa-3d5f-11e6-a20c-67fa16998e57","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:365","type":"CtInvocationImpl","sourcecode":"sb.append(c)"},"variableMap":{"c":"symb","sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:162","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[60],"tindex":"065352ab-3d5f-11e6-a20c-659ea36508c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:160","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[61],"tindex":"065352ac-3d5f-11e6-a20c-aba67b83fb7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:497","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[62,63,64,65,66],"tindex":"065352ad-3d5f-11e6-a20c-3dc533e46f12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer)"},"status":-1},{"failures":[],"tindex":"065352ae-3d5f-11e6-a20c-a52a6d14c267","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"status":0},{"failures":[],"tindex":"065352af-3d5f-11e6-a20c-81aa1ba10b69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[47],"tindex":"065352b0-3d5f-11e6-a20c-23a859f012fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-1},{"failures":[53,12,13],"tindex":"065379c1-3d5f-11e6-a20c-1df8ec638189","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"status":-1},{"failures":[67,68,69,70,71,72,3,4,5,6],"tindex":"065379c2-3d5f-11e6-a20c-871b4a31db92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:330","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[8,9,53,10,11,12],"tindex":"065379c3-3d5f-11e6-a20c-af4423b0c5a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:958","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"065379c4-3d5f-11e6-a20c-4382c472269b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((name1.length()) + (name2.length())))"},"variableMap":{"name2":"line","name1":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:421","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-1},{"failures":[],"tindex":"065379c5-3d5f-11e6-a20c-f9cff8c734a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"length","encodeSize":"org.apache.commons.codec.binary.BaseNCodec.EOF","length":"length","lineSeparator":"b","lineLength":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:200","type":"CtWhileImpl","sourcecode":"while (todo > 0) {\n    int int = ((int)(java.lang.Math.min(b.int, todo)));\n    len = org.apache.commons.codec.binary.BaseNCodecInputStream.this.read(b, 0, len);\n    if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n        break;\n    } \n    todo -= len;\n}"},"status":-2},{"failures":[47],"tindex":"065379c6-3d5f-11e6-a20c-ed967ad52c79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"status":-1},{"failures":[],"tindex":"065379c7-3d5f-11e6-a20c-031115f104c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:387","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('J');\n    index += 3;\n} else {\n    result.append(\"TK\");\n    index += 2;\n}"},"status":-2},{"failures":[91],"tindex":"065379c8-3d5f-11e6-a20c-0347eb31979a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:351","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[67,68,69,92,71,93,94,95,3,5,96,7],"tindex":"065379c9-3d5f-11e6-a20c-833c0aa1ad0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"065379ca-3d5f-11e6-a20c-9dcb3ca9ec0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:154","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"variableMap":{"cmtI":"index","line":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:314","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"status":-2},{"failures":[],"tindex":"065379cb-3d5f-11e6-a20c-b34f7935a1ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"C\")"},"status":-2},{"failures":[],"tindex":"065379cc-3d5f-11e6-a20c-53fbdf731499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:646","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))"},"variableMap":{"lContext":"rContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"status":-2},{"failures":[97,98,99],"tindex":"0653a0dd-3d5f-11e6-a20c-a1142ed631bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[],"tindex":"0653a0de-3d5f-11e6-a20c-a1eed2286fb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"variableMap":{"v":"pos","e0":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:343","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[],"tindex":"0653a0df-3d5f-11e6-a20c-6f3367f8aa2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-2},{"failures":[],"tindex":"0653a0e0-3d5f-11e6-a20c-6dcdbb4a371d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"rounds","name2Size":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:424","type":"CtIfImpl","sourcecode":"if (roundsCustom) {\n    buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String);\n    buffer.append(rounds);\n    buffer.append(\"$\");\n} "},"status":-2},{"failures":[],"tindex":"0653a0e1-3d5f-11e6-a20c-ffab577dd899","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:521","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, null)"},"variableMap":{"keyBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:388","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"0653a0e2-3d5f-11e6-a20c-27b9aaee3e45","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:212","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = rule.getPattern()"},"status":-2},{"failures":[0,1,100,3,4,5,96,7],"tindex":"0653a0e3-3d5f-11e6-a20c-5dff26b64543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:155","type":"CtReturnImpl","sourcecode":"return new java.lang.String(data , charset)"},"status":-1},{"failures":[],"tindex":"0653a0e4-3d5f-11e6-a20c-e9b5500a2ccd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"0653a0e5-3d5f-11e6-a20c-673fc8af9acb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"variableMap":{"boxContent":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-2},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,0,1,100],"tindex":"0653a0e6-3d5f-11e6-a20c-717131097ac4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:438","type":"CtIfImpl","sourcecode":"if (b == (byte)) {\n    context.boolean = true;\n    break;\n} else {\n    if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n        final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n        if (result >= 0) {\n            context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n            context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n            if ((context.int) == 0) {\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            } \n        } \n    } \n}"},"status":-1},{"failures":[9,10,12],"tindex":"0653a0e7-3d5f-11e6-a20c-37ba2bced151","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:958","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"0653a0e8-3d5f-11e6-a20c-65a5ad92e174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (printable == null) {\n    printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","printable":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:97","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[],"tindex":"0653c7f9-3d5f-11e6-a20c-6122733b9119","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-2},{"failures":[34,35],"tindex":"0653c7fa-3d5f-11e6-a20c-a976e73d8080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:344","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-1},{"failures":[],"tindex":"0653c7fb-3d5f-11e6-a20c-6bd51c8111ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 4)"},"variableMap":{"key":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:158","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(buf)"},"status":-2},{"failures":[],"tindex":"0653c7fc-3d5f-11e6-a20c-fb41c94817dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"Y\")"},"status":-2},{"failures":[143,144],"tindex":"0653c7fd-3d5f-11e6-a20c-f939da442c41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"variableMap":{"binaryData":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key), valueToDigest).doFinal()"},"status":-1},{"failures":[62,63,64,65,66,145,146,147],"tindex":"0653c7fe-3d5f-11e6-a20c-dd6fb4304904","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:368","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} else {\n    ctx.update(altResult, 0, blocksize);\n}"},"variableMap":{"blocksize":"blocksize","pBytes":"altResult","altResult":"altResult","ctx":"ctx","i":"blocksize","keyLen":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-1},{"failures":[],"tindex":"0653c7ff-3d5f-11e6-a20c-01b52ecaf5e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:261","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], (((char[].int) - (org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.this.int)) + start), newData, 0, length)"},"variableMap":{"data":"org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS","length":"length","start":"length","newData":"org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)]);\n} else if (!(salt.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[],"tindex":"0653c800-3d5f-11e6-a20c-eb348616244a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-2},{"failures":[],"tindex":"0653c801-3d5f-11e6-a20c-855ab959b2eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:181","type":"CtIfImpl","sourcecode":"if (atStart) {\n    return java.lang.String[];\n} "},"variableMap":{"atStart":"nextCharIsVowel","replacementAtStart":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"status":0},{"failures":[12,13],"tindex":"0653c802-3d5f-11e6-a20c-fb0424180368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[148,149,150,151,152,153,154,155],"tindex":"0653c803-3d5f-11e6-a20c-473aad677b3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text)"},"status":-1},{"failures":[],"tindex":"0653c804-3d5f-11e6-a20c-01c74c05ba72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"salt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"salt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt)"},"status":-2},{"failures":[73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90],"tindex":"0653c805-3d5f-11e6-a20c-531b380bf595","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:222","type":"CtTryImpl","sourcecode":"try {\n    rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n}"},"status":-1},{"failures":[4,56],"tindex":"0653ee16-3d5f-11e6-a20c-3d51276249d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"encodeBlanks"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-1},{"failures":[],"tindex":"0653ee17-3d5f-11e6-a20c-d9800486880a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset.name()"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_16BE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:351","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}