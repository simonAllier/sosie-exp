{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":10,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":13,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":50,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":33,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":28,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":40,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":58,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":19,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":1,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":44,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":45,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":59,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":17,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":54,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":49,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":42,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":55,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":48,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":3,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":57,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":61,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":51,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":35,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":52,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":38,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":5,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":14,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":8,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":21,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":56,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":18,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":22,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":46,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":4,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":25,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":9,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":34,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":47,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":53,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":30,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":62,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":23,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":41},"transformations":[{"failures":[],"tindex":"a03a1903-16e6-11e6-8643-4f0dd2ff6cef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)","position":"org.apache.commons.codec.net.QCodec:232","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"a03a4014-16e6-11e6-8643-45f8ba1eb3b3","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(saltBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"status":-1},{"failures":[8,9,10,11,12,13],"tindex":"a03a6725-16e6-11e6-8643-07d42befd9ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> rule : org.apache.commons.codec.language.DaitchMokotoffSoundex.RULES.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> ruleList = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> : org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}"},"status":-1},{"failures":[],"tindex":"a03a8e36-16e6-11e6-8643-efedd6eefe58","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))","position":"org.apache.commons.codec.language.Caverphone:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))"},"status":0},{"failures":[],"tindex":"a03ab547-16e6-11e6-8643-d5d45a0bbe6c","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"if (hasUnderscores) {\n    final byte[] tmp = new byte[bytes.length];\n    for (int i = 0 ; i < (bytes.length) ; i++) {\n        final byte b = bytes[i];\n        if (b != (org.apache.commons.codec.net.QCodec.UNDERSCORE)) {\n            tmp[i] = b;\n        } else {\n            tmp[i] = org.apache.commons.codec.net.QCodec.BLANK;\n        }\n    }\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp);\n} ","position":"org.apache.commons.codec.net.QCodec:180","type":"CtIfImpl","sourcecode":"if (hasUnderscores) {\n    final byte[] byte[] = new byte[bytes.int];\n    for (int int = 0 ; i < (bytes.int) ; i++) {\n        final byte byte = bytes[i];\n        if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n            tmp[i] = b;\n        } else {\n            tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n        }\n    }\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp);\n} "},"status":-3},{"failures":[],"tindex":"a03ab548-16e6-11e6-8643-ab838182e7f8","series":0,"name":"replace","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"str","l":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QCodec:226","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"a03adc59-16e6-11e6-8643-8318c08dcd65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"c\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"status":0},{"failures":[14,15,16,17,18],"tindex":"a03adc5a-16e6-11e6-8643-5d437e635f93","series":0,"name":"replace","transplant":{"toString":"langs.retainAll(rule.languages)","position":"org.apache.commons.codec.language.bm.Lang:221","type":"CtInvocationImpl","sourcecode":"langs.retainAll(rule.java.util.Set<java.lang.String>)"},"variableMap":{"languages":"languages","rule":"rule","langs":"langs"},"type":"adrStmt","transplantationPoint":{"toString":"langs.removeAll(rule.languages)","position":"org.apache.commons.codec.language.bm.Lang:223","type":"CtInvocationImpl","sourcecode":"langs.removeAll(rule.java.util.Set<java.lang.String>)"},"status":-1},{"failures":[19,20,21,22,23,24,25,26],"tindex":"a03b036b-16e6-11e6-8643-9d19aebc0595","series":0,"name":"add","transplant":{"toString":"altCtx.reset()","position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"altCtx.reset()"},"variableMap":{"altCtx":"altCtx"},"type":"adrStmt","transplantationPoint":{"toString":"altCtx.update(saltBytes)","position":"org.apache.commons.codec.digest.Sha2Crypt:317","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"a03b036c-16e6-11e6-8643-4bbb3499662d","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n    if (isVowel(charAt(value, (index + 1)))) {\n        result.append('A', 'F');\n    } else {\n        result.append('A');\n    }\n    index++;\n} else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.appendAlternate('F');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:709","type":"CtIfImpl","sourcecode":"if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n    if (isVowel(charAt(value, (index + 1)))) {\n        result.append('A', 'F');\n    } else {\n        result.append('A');\n    }\n    index++;\n} else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.appendAlternate('F');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}"},"status":-2},{"failures":[27,28,29,30,31],"tindex":"a03b2a7d-16e6-11e6-8643-77c17d40cb38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length)","position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"a03b2a7e-16e6-11e6-8643-07b96e5301cd","series":0,"name":"add","transplant":{"toString":"buffer.setCharAt(1, charOne)","position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"variableMap":{"buffer":"alternate","charOne":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.maxLength)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value);\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:963","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} "},"status":-1},{"failures":[],"tindex":"a03b518f-16e6-11e6-8643-8df9cd3c4184","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.BLANK)) {\n    data[i] = org.apache.commons.codec.net.QCodec.UNDERSCORE;\n} ","position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n} "},"status":-2},{"failures":[47,48,49,50,51,52],"tindex":"a03b78a0-16e6-11e6-8643-39d130de9c0b","series":0,"name":"replace","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))","position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-1},{"failures":[19,23,24,25,26],"tindex":"a03b78a1-16e6-11e6-8643-cb5fdbbf1e61","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"status":-1},{"failures":[],"tindex":"a03b78a2-16e6-11e6-8643-cff41408f268","series":0,"name":"replace","transplant":{"toString":"int u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int len = ((int)(java.lang.Math.min(b.length, todo)))","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:201","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.min(b.int, todo)))"},"status":-2},{"failures":[],"tindex":"a03b9fb3-16e6-11e6-8643-8fc152b5f892","series":0,"name":"add","transplant":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"ascii"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))","position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))"},"status":-2},{"failures":[],"tindex":"a03b9fb4-16e6-11e6-8643-ad9a8dea4186","series":0,"name":"add","transplant":{"toString":"final java.io.InputStream lRulesIS = org.apache.commons.codec.language.bm.Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName)","position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.class":"org.apache.commons.codec.language.bm.Languages.class","languageRulesResourceName":"resName"},"type":"adrStmt","transplantationPoint":{"toString":"final java.io.InputStream rulesIS = org.apache.commons.codec.language.bm.Languages.class.getClassLoader().getResourceAsStream(resName)","position":"org.apache.commons.codec.language.bm.Rule:266","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(resName)"},"status":-2},{"failures":[],"tindex":"a03bc6c5-16e6-11e6-8643-95b22fd81906","series":0,"name":"replace","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str)","position":"org.apache.commons.codec.language.Caverphone:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str)"},"status":0},{"failures":[19,20,21,22,23,24,25,26],"tindex":"a03bc6c6-16e6-11e6-8643-efee3a9cdbb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"status":-1},{"failures":[],"tindex":"a03bc6c7-16e6-11e6-8643-89d4ed5908bd","series":0,"name":"replace","transplant":{"toString":"return this","position":"org.apache.commons.codec.language.bm.Languages:234","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.languages","position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"status":-2},{"failures":[38,39,43,44],"tindex":"a03bedd8-16e6-11e6-8643-35d46c247a0e","series":0,"name":"replace","transplant":{"toString":"result.append(\"TS\", \"FX\")","position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if ((charAt(value, (index + 1))) == 'H') {\n    result.append('J');\n    index += 2;\n} else {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (slavoGermanic && ((index > 0) && ((charAt(value, (index - 1))) != 'T')))) {\n        result.append(\"S\", \"TS\");\n    } else {\n        result.append('S');\n    }\n    index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:760","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'H') {\n    result.append('J');\n    index += 2;\n} else {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (slavoGermanic && ((index > 0) && ((charAt(value, (index - 1))) != 'T')))) {\n        result.append(\"S\", \"TS\");\n    } else {\n        result.append('S');\n    }\n    index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[],"tindex":"a03bedd9-16e6-11e6-8643-9339efb266e5","series":0,"name":"replace","transplant":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"variableMap":{"digit":"index"},"type":"adrStmt","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-3},{"failures":[],"tindex":"a03c14ea-16e6-11e6-8643-6117cb77db1f","series":0,"name":"replace","transplant":{"toString":"this.decodeSize = (org.apache.commons.codec.binary.Base32.this.encodeSize) - 1","position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"index","decodeSize":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1","position":"org.apache.commons.codec.language.DoubleMetaphone:629","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1"},"status":-3},{"failures":[20,25],"tindex":"a03c14eb-16e6-11e6-8643-4d66e65bb6e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"cp = 0","position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-1},{"failures":[],"tindex":"a03c14ec-16e6-11e6-8643-df0cf0da58c1","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"ry\", \"Ry\")","position":"org.apache.commons.codec.language.Caverphone1:107","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ry\", \"Ry\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"f+\", \"F\")","position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":0},{"failures":[],"tindex":"a03c3bfd-16e6-11e6-8643-15955b1b18fb","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"status":-2},{"failures":[19,20,21,22,53,23,24,25,54,26,55,56],"tindex":"a03c3bfe-16e6-11e6-8643-c148abf61410","series":0,"name":"replace","transplant":{"toString":"ctx.update(sBytes, 0, saltLen)","position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"variableMap":{"sBytes":"altResult","saltLen":"i","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"toString":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"status":-1},{"failures":[],"tindex":"a03c3bff-16e6-11e6-8643-3fdaaefdfde8","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"ly\", \"Ly\")","position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ph\", \"fh\")","position":"org.apache.commons.codec.language.Caverphone2:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[],"tindex":"a03c6310-16e6-11e6-8643-d958bec2441c","series":0,"name":"replace","transplant":{"toString":"final java.lang.String input = cleanup(source)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = cleanup(source)"},"variableMap":{"source":"input"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String remainder = input.substring(2)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"status":-2},{"failures":[],"tindex":"a03c6311-16e6-11e6-8643-71fa9e954b75","series":0,"name":"replace","transplant":{"toString":"char lastChar = '-'","position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char ch = input.charAt(index)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:497","type":"CtLocalVariableImpl","sourcecode":"final char char = input.charAt(index)"},"status":-2},{"failures":[],"tindex":"a03c6312-16e6-11e6-8643-47012b5a5c6d","series":0,"name":"replace","transplant":{"toString":"left = (t >>> 1) | (t << 31)","position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"index","left":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[57,58,59],"tindex":"a03c8a23-16e6-11e6-8643-f9793451a662","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"w\", \"2\")","position":"org.apache.commons.codec.language.Caverphone2:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"status":-1},{"failures":[],"tindex":"a03cb134-16e6-11e6-8643-bb914ee8d5e4","series":0,"name":"add","transplant":{"toString":"final char c = charAt(value, (index + 2))","position":"org.apache.commons.codec.language.DoubleMetaphone:791","type":"CtLocalVariableImpl","sourcecode":"final char char = charAt(value, (index + 2))"},"variableMap":{"index":"index","value":"str"},"type":"adrStmt","transplantationPoint":{"toString":"final char hwChar = str.charAt((index - 1))","position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 1))"},"status":-2},{"failures":[],"tindex":"a03cb135-16e6-11e6-8643-a5aab941691e","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[],"tindex":"a03cb136-16e6-11e6-8643-2f5fdb685a40","series":0,"name":"replace","transplant":{"toString":"this.strict = strict","position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"toString":"inExtendedComment = false","position":"org.apache.commons.codec.language.bm.Lang:146","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"status":-2},{"failures":[],"tindex":"a03cb137-16e6-11e6-8643-f72cb48e54bf","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.language.bm.Languages:254","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"a03cd848-16e6-11e6-8643-29d330da6de2","series":0,"name":"replace","transplant":{"toString":"str = str.substring(1)","position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"a03cd849-16e6-11e6-8643-ed39730d1374","series":0,"name":"replace","transplant":{"toString":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)","position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"length","tempResult":"l_ascii","pBytes":"raw","cp":"ii"},"type":"adrStmt","transplantationPoint":{"toString":"for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.BITS[bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}","position":"org.apache.commons.codec.binary.BinaryCodec:249","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}"},"status":-2},{"failures":[60],"tindex":"a03cd84a-16e6-11e6-8643-8d63324a80a7","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))","position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))","position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-1},{"failures":[],"tindex":"a03cd84b-16e6-11e6-8643-11b8214aa766","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ph\", \"fh\")","position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)","position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[61,62],"tindex":"a03cff5c-16e6-11e6-8643-1d72564342ea","series":0,"name":"add","transplant":{"toString":"return count >= minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:260","type":"CtReturnImpl","sourcecode":"return count >= minRating"},"variableMap":{"count":"i","minRating":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} "},"status":-1},{"failures":[0,1,2,3,5,6,7],"tindex":"a03cff5d-16e6-11e6-8643-13003ea471bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:219","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":43,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}