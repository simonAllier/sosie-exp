{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":125,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":7,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":53,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":28,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":115,"org.apache.commons.codec.binary.Base64Test.testTriplets":76,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":67,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":127,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":42,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":62,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":65,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":132,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":112,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":91,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":24,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":104,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":109,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":57,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":56,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":80,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":86,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":124,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":87,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":88,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":130,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":128,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":120,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":116,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":99,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":6,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":39,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":63,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":79,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":18,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":36,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":74,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":126,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":52,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":2,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":110,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":16,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":78,"org.apache.commons.codec.language.MetaphoneTest.testWhy":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":31,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":5,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":136,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":111,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":121,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":12,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":34,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":32,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":40,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":106,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":129,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":93,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":45,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":105,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":43,"org.apache.commons.codec.binary.Base64Test.testBase64":103,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":50,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":4,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":11,"org.apache.commons.codec.binary.Base64Test.testUUID":82,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":75,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":92,"org.apache.commons.codec.binary.Base64Test.testSingletons":98,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":30,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":134,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":47,"org.apache.commons.codec.binary.Base64Test.testPairs":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":59,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":133,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":29,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":107,"org.apache.commons.codec.binary.Base64Test.testCodec112":95,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":19,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":55,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":77,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":131,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":122,"org.apache.commons.codec.binary.Base64Test.testCodec68":100,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":61,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":123,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":113,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":14,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":96,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":108,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":69,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":72,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":97,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":33,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":73,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":23,"org.apache.commons.codec.language.Caverphone2Test.testEncodeNull":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":49,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":37,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":135,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":114,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":84,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":101,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":44,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":118,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":83,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":117,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":66},"transformations":[{"failures":[0,1],"tindex":"58a78414-16df-11e6-a704-1be0b4ab4137","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (cs1 == cs2) {\n    return true;\n} ","position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"58a7ab25-16df-11e6-a704-59c4af096111","series":0,"name":"replace","transplant":{"toString":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} ","position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"variableMap":{"cs1":"cs","cs2":"cs"},"type":"adrStmt","transplantationPoint":{"toString":"if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n    return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:51","type":"CtIfImpl","sourcecode":"if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n    return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n} "},"status":-2},{"failures":[],"tindex":"58a7ab26-16df-11e6-a704-75de3e43f25a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((txt == null) || ((txtLength = txt.length()) == 0)) {\n    return \"\";\n} ","position":"org.apache.commons.codec.language.Metaphone:95","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txtLength = txt.length()) == 0)) {\n    return \"\";\n} "},"status":-2},{"failures":[],"tindex":"58a7ab27-16df-11e6-a704-6193d90f9190","series":0,"name":"replace","transplant":{"toString":"final java.lang.StringBuilder local = new java.lang.StringBuilder(40)","position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder sb = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:356","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[2,3,4,0,5,6,7,8,9],"tindex":"58a7ab28-16df-11e6-a704-2ded21fe8b04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.MIN_VALUE;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-1},{"failures":[],"tindex":"58a7d239-16df-11e6-a704-9766fd06ab5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break EXPR","position":"org.apache.commons.codec.language.bm.PhoneticEngine:117","type":"CtBreakImpl","sourcecode":"break EXPR"},"status":0},{"failures":[],"tindex":"58a7d23a-16df-11e6-a704-df93f912eb3e","series":0,"name":"replace","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int count = 1","position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[10,11,12,13,14,15,16],"tindex":"58a7d23b-16df-11e6-a704-4b64ac889779","series":0,"name":"add","transplant":{"toString":"java.util.Arrays.fill(keyBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-1},{"failures":[],"tindex":"58a7d23c-16df-11e6-a704-a760178df4e5","series":0,"name":"add","transplant":{"toString":"final char[] chrs = text.toCharArray()","position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"variableMap":{"text":"object"},"type":"adrStmt","transplantationPoint":{"toString":"final char[] charArray = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object))","position":"org.apache.commons.codec.binary.Hex:251","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object))"},"status":-2},{"failures":[17,18],"tindex":"58a7f94d-16df-11e6-a704-b36b1ba2b664","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd, 1, ((inwd.length) - 1))","position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[19],"tindex":"58a7f94e-16df-11e6-a704-01905e5bc53b","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"58a7f94f-16df-11e6-a704-450cd7ac5886","series":0,"name":"replace","transplant":{"toString":"final byte[] b = new byte[512]","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"byte[] tempResult = altCtx.digest()","position":"org.apache.commons.codec.digest.Sha2Crypt:283","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[20],"tindex":"58a7f950-16df-11e6-a704-8582a8130e50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.BLANK)) {\n    data[i] = org.apache.commons.codec.net.QCodec.UNDERSCORE;\n} ","position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n} "},"status":-1},{"failures":[],"tindex":"58a7f951-16df-11e6-a704-37a52d5a652c","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"w3\", \"W3\")","position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"toString":"branch.lastReplacement = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this.lastReplacement","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:96","type":"CtAssignmentImpl","sourcecode":"branch.java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this.java.lang.String"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"58a82062-16df-11e6-a704-b99e0f120584","series":0,"name":"replace","transplant":{"toString":"final byte[] out = new byte[len >> 1]","position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(encodeSize, context)","position":"org.apache.commons.codec.binary.Base32:445","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"58a82063-16df-11e6-a704-f15a4e6fa67d","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-2},{"failures":[],"tindex":"58a82064-16df-11e6-a704-6d4706709b18","series":0,"name":"replace","transplant":{"toString":"final byte[] rawData = org.apache.commons.codec.net.RFC1522Codec.this.doEncoding(text.getBytes(charset))","position":"org.apache.commons.codec.net.RFC1522Codec:78","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.RFC1522Codec.this.doEncoding(text.getBytes(charset))"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_8","text":"saltString"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] saltBytes = saltString.getBytes(org.apache.commons.codec.Charsets.UTF_8)","position":"org.apache.commons.codec.digest.Sha2Crypt:155","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = saltString.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"58a84775-16df-11e6-a704-fd1c9b3317d0","series":0,"name":"replace","transplant":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char mappedChar = org.apache.commons.codec.language.Soundex.this.map(str.charAt(index))","position":"org.apache.commons.codec.language.Soundex:185","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(str.charAt(index))"},"status":-2},{"failures":[35,36,37],"tindex":"58a84776-16df-11e6-a704-7bedf85171a0","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer)"},"status":-1},{"failures":[38,39,40],"tindex":"58a84777-16df-11e6-a704-ff146d465132","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"58a86e88-16df-11e6-a704-55058837c5df","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} ","position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((code.length()) > (org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())) {\n    code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen());\n} "},"status":-2},{"failures":[41,19,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"58a86e89-16df-11e6-a704-1d0b3f5c00fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"inExtendedComment = true","position":"org.apache.commons.codec.language.bm.Lang:150","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":-1},{"failures":[7],"tindex":"58a86e8a-16df-11e6-a704-1125f022227a","series":0,"name":"replace","transplant":{"toString":"result.append(\"KN\")","position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:741","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[66,67],"tindex":"58a86e8b-16df-11e6-a704-31493a033b50","series":0,"name":"replace","transplant":{"toString":"c = (c >>> 2) | (c << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"d"},"type":"adrStmt","transplantationPoint":{"toString":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)","position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"status":-1},{"failures":[68],"tindex":"58a8959c-16df-11e6-a704-5dfec82806c6","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"status":-1},{"failures":[35,36,37],"tindex":"58a8959d-16df-11e6-a704-6b03dce3dca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"58a8959e-16df-11e6-a704-9d676995868f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"hard = false","position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"status":0},{"failures":[],"tindex":"58a8959f-16df-11e6-a704-4bf949d8be00","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())","position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())"},"variableMap":{"array":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}","position":"org.apache.commons.codec.digest.HmacUtils:527","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[],"tindex":"58a895a0-16df-11e6-a704-b7e8cd33eb6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"gh\", \"22\")","position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"status":0},{"failures":[3,4],"tindex":"58a8bbb1-16df-11e6-a704-d3fe5f1a00b9","series":0,"name":"replace","transplant":{"toString":"result.append('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:370","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"58a8bbb2-16df-11e6-a704-753421e48c94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"switch (byteToCheck) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}","position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byteToCheck) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"status":-2},{"failures":[],"tindex":"58a8bbb3-16df-11e6-a704-8ba102c8fbc6","series":0,"name":"replace","transplant":{"toString":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> lines = new java.util.HashMap<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>()","position":"org.apache.commons.codec.language.bm.Rule:403","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = new java.util.HashMap<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> finalRules1 = org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.PhoneticEngine.this.nameType, org.apache.commons.codec.language.bm.PhoneticEngine.this.ruleType, \"common\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:401","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType, \"common\")"},"status":-2},{"failures":[],"tindex":"58a8bbb4-16df-11e6-a704-05398c75ee17","series":0,"name":"replace","transplant":{"toString":"return decode(str, getDefaultCharset())","position":"org.apache.commons.codec.net.URLCodec:293","type":"CtReturnImpl","sourcecode":"return decode(str, getDefaultCharset())"},"variableMap":{"str":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.UTF_8))","position":"org.apache.commons.codec.digest.Md5Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[69,70,71,72,21,22,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,23,24,25,26,27,28,29,30,31,124,125,32,33,126,127,128,34,129,130,131,132,133,134,135,136],"tindex":"58a8bbb5-16df-11e6-a704-0fe79a617338","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((context.buffer) == null) {\n    context.buffer = new byte[getDefaultBufferSize()];\n    context.pos = 0;\n    context.readPos = 0;\n} else {\n    final byte[] b = new byte[(context.buffer.length) * (org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)];\n    java.lang.System.arraycopy(context.buffer, 0, b, 0, context.buffer.length);\n    context.buffer = b;\n}","position":"org.apache.commons.codec.binary.BaseNCodec:249","type":"CtIfImpl","sourcecode":"if ((context.byte[]) == null) {\n    context.byte[] = new byte[getDefaultBufferSize()];\n    context.int = 0;\n    context.int = 0;\n} else {\n    final byte[] byte[] = new byte[(context.byte[].int) * (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)];\n    java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int);\n    context.byte[] = b;\n}"},"status":-1},{"failures":[],"tindex":"58a8e2c6-16df-11e6-a704-394c972efa07","series":0,"name":"add","transplant":{"toString":"if ((prefix.length()) > (input.length())) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"input","prefix":"suffix"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = (input.length()) - 1, j = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (input.length()) - 1, int int = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"58a8e2c7-16df-11e6-a704-2d8943730e7f","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"^y3\", \"Y3\")","position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[3,4],"tindex":"58a8e2c8-16df-11e6-a704-119e02645b34","series":0,"name":"replace","transplant":{"toString":"final boolean startsWithBox = content.startsWith(\"[\")","position":"org.apache.commons.codec.language.bm.Rule:545","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.startsWith(\"[\")"},"variableMap":{"content":"value"},"type":"adrStmt","transplantationPoint":{"toString":"final boolean slavoGermanic = isSlavoGermanic(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:92","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = isSlavoGermanic(value)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":37,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}