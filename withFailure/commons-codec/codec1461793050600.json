{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":4,"org.apache.commons.codec.binary.HexTest.testCustomCharset":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":29,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":77,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":100,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":92,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":111,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":110,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":27,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":105,"org.apache.commons.codec.binary.Base64Test.testTriplets":41,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":10,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":84,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":6,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":32,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":30,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":33,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":123,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":51,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":58,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":60,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":117,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":116,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":45,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":112,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":3,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":101,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":115,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":86,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":0,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":47,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":48,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":35,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":119,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":7,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":121,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":17,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":28,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":122,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":31,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":72,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":90,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":94,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":62,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":5,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":61,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":78,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":79,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":89,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":42,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":2,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":82,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":83,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":75,"org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull":67,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":8,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":59,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":34,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":53,"org.apache.commons.codec.binary.HexTest.testDencodeEmpty":14,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":26,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":104,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":71,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":49,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":96,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":93,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":120,"org.apache.commons.codec.binary.Base64Test.testBase64":57,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":109,"org.apache.commons.codec.binary.Base64Test.testUUID":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":22,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":52,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":63,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":87,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":106,"org.apache.commons.codec.binary.Base64Test.testPairs":68,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":76,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":97,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":102,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":73,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":99,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":16,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":114,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":40,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":69,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":118,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":81,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":64,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":66,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":74,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":88,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":113,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":108,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":25,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":124,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":11,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":44,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":55,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":95,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":70,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":80,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":103,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":98,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":43,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":12,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":85},"transformations":[{"failures":[],"tindex":"3eb08a70-0cc0-11e6-8ecb-fb19552f4ba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:391","type":"CtAssignmentImpl","sourcecode":"code = chr"},"status":0},{"failures":[0,1],"tindex":"3eb0b181-0cc0-11e6-8ecb-537340f18c04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:500","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"3eb0b182-0cc0-11e6-8ecb-93d0465af4f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:395","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"3eb0d893-0cc0-11e6-8ecb-cd0ec674d5d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale).toCharArray()"},"status":-2},{"failures":[],"tindex":"3eb0d894-0cc0-11e6-8ecb-d3eeac97885c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"rawLine","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:149","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 3) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n    } \n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n    final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n    final boolean boolean = parts[2].equals(\"true\");\n    rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n}"},"status":-2},{"failures":[],"tindex":"3eb0ffa5-0cc0-11e6-8ecb-3f7e24fa2846","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[11],"tindex":"3eb0ffa6-0cc0-11e6-8ecb-e7631175aa2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:176","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e)"},"status":-1},{"failures":[],"tindex":"3eb0ffa7-0cc0-11e6-8ecb-379a372b0b49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-2},{"failures":[],"tindex":"3eb0ffa8-0cc0-11e6-8ecb-f53b3d22e848","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:192","type":"CtIfImpl","sourcecode":"if (n < 0) {\n    throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n));\n} "},"status":-2},{"failures":[],"tindex":"3eb126b9-0cc0-11e6-8ecb-eb934e46610a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"variableMap":{"compareCode":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-2},{"failures":[],"tindex":"3eb126ba-0cc0-11e6-8ecb-83d0dc4bc280","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-2},{"failures":[],"tindex":"3eb126bb-0cc0-11e6-8ecb-69d9943e08d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:269","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + resName))"},"status":-2},{"failures":[12,13],"tindex":"3eb14dcc-0cc0-11e6-8ecb-f15d2670e1d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"status":-1},{"failures":[],"tindex":"3eb14dcd-0cc0-11e6-8ecb-a92bf53413ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:354","type":"CtIfImpl","sourcecode":"if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[14,15,16,17,18,19,20],"tindex":"3eb174de-0cc0-11e6-8ecb-9d8c8d5a61f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"len","to":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"status":-1},{"failures":[21,22],"tindex":"3eb174df-0cc0-11e6-8ecb-e3cddd5f4dd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:389","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"3eb174e0-0cc0-11e6-8ecb-9362b8f9734c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:107","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":0},{"failures":[],"tindex":"3eb19bf1-0cc0-11e6-8ecb-83eafcff1481","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:56","type":"CtLocalVariableImpl","sourcecode":"int int = length"},"status":-2},{"failures":[23,24,25],"tindex":"3eb19bf2-0cc0-11e6-8ecb-83ca3948f309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"status":-1},{"failures":[],"tindex":"3eb19bf3-0cc0-11e6-8ecb-fb37934eab3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:283","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[],"tindex":"3eb19bf4-0cc0-11e6-8ecb-7d8938551623","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:384","type":"CtIfImpl","sourcecode":"if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[],"tindex":"3eb1c305-0cc0-11e6-8ecb-43650d549e69","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result"},"variableMap":{"result":"pos","ibitWorkArea":"pos","context":"context","org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:455","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[26,27,28,29,21,22],"tindex":"3eb1c306-0cc0-11e6-8ecb-ad1dc9fdc5cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:106","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[30,31,32,33],"tindex":"3eb1c307-0cc0-11e6-8ecb-8199c973feed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:245","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3eb1c308-0cc0-11e6-8ecb-cd471cf0ef97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(charArray)"},"variableMap":{"charArray":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:379","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"status":-2},{"failures":[21,22],"tindex":"3eb1ea19-0cc0-11e6-8ecb-d5af3a77f0e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:784","type":"CtIfImpl","sourcecode":"if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:803","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,19,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,20,59,60,61,62,63,64,65,66],"tindex":"3eb1ea1a-0cc0-11e6-8ecb-c59e4787a2d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:392","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-1},{"failures":[],"tindex":"3eb2112b-0cc0-11e6-8ecb-5b3b14c9dcbf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"variableMap":{"v":"a","e0":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-2},{"failures":[],"tindex":"3eb2112c-0cc0-11e6-8ecb-cb2d26285908","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"3eb2112d-0cc0-11e6-8ecb-f37f60326f69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result"},"variableMap":{"result":"pos","ibitWorkArea":"pos","context":"context","org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:453","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[67],"tindex":"3eb2383e-0cc0-11e6-8ecb-4df527c2ccc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:139","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"3eb2383f-0cc0-11e6-8ecb-f7ad960aaf8f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"variableMap":{"v":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH","e0":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:794","type":"CtLocalVariableImpl","sourcecode":"int int = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int)"},"status":-2},{"failures":[],"tindex":"3eb23840-0cc0-11e6-8ecb-5f4d6672a80a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:293","type":"CtIfImpl","sourcecode":"if ((regionMatch(local, n, \"TIA\")) || (regionMatch(local, n, \"TIO\"))) {\n    code.append('X');\n    break;\n} "},"variableMap":{"code":"sb","local":"sb","n":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n} else {\n    sb.append(c);\n}"},"status":-2},{"failures":[34,35,36,37,38,39,40,42,68,43,45,46,48,49,50,53,55,56,57,58,20,60,61,62,63,64,65,66],"tindex":"3eb23841-0cc0-11e6-8ecb-45e73e3a2cd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:360","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[],"tindex":"3eb23842-0cc0-11e6-8ecb-c9c085d12830","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3eb25f53-0cc0-11e6-8ecb-49a2e8a15fb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3eb25f54-0cc0-11e6-8ecb-550eee57f1bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key)"},"status":0},{"failures":[],"tindex":"3eb25f55-0cc0-11e6-8ecb-758a56c6841f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:805","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"3eb25f56-0cc0-11e6-8ecb-992863452e9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"status":0},{"failures":[],"tindex":"3eb25f57-0cc0-11e6-8ecb-e99d03bfd96b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"variableMap":{"pArray":"buffer","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:269","type":"CtIfImpl","sourcecode":"if (((context.byte[]) == null) || ((context.byte[].int) < ((context.int) + size))) {\n    return resizeBuffer(context);\n} "},"status":-2},{"failures":[],"tindex":"3eb25f58-0cc0-11e6-8ecb-2bd62aa99f43","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":-2},{"failures":[],"tindex":"3eb28669-0cc0-11e6-8ecb-b52f23b881c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:220","type":"CtIfImpl","sourcecode":"if (rule.boolean) {\n    langs.retainAll(rule.java.util.Set<java.lang.String>);\n} else {\n    langs.removeAll(rule.java.util.Set<java.lang.String>);\n}"},"status":0},{"failures":[],"tindex":"3eb2866a-0cc0-11e6-8ecb-fb1db988ffe6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key), valueToDigest)"},"status":0},{"failures":[],"tindex":"3eb2866b-0cc0-11e6-8ecb-d3e2210e16db","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,78],"tindex":"3eb2866c-0cc0-11e6-8ecb-dd04e72364a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[23,24,25],"tindex":"3eb2866d-0cc0-11e6-8ecb-ada774c6aae5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"status":-1},{"failures":[],"tindex":"3eb2866e-0cc0-11e6-8ecb-ff41d6c4acbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:466","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[],"tindex":"3eb2ad7f-0cc0-11e6-8ecb-abe2e3621a41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((prefix + saltString) + \"$\"))"},"status":-2},{"failures":[],"tindex":"3eb2ad80-0cc0-11e6-8ecb-4d33dd155fad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:391","type":"CtAssignmentImpl","sourcecode":"context.long = (context.long) >> 1"},"variableMap":{"context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:397","type":"CtAssignmentImpl","sourcecode":"context.long = (context.long) >> 6"},"status":0},{"failures":[],"tindex":"3eb2ad81-0cc0-11e6-8ecb-df5a69330de2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"status":0},{"failures":[],"tindex":"3eb2ad82-0cc0-11e6-8ecb-cb8f9101a0ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:224","type":"CtReturnImpl","sourcecode":"return new java.lang.String(copyData(0, int))"},"variableMap":{"length":"org.apache.commons.codec.digest.Sha2Crypt.SHA256_BLOCKSIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[12,13],"tindex":"3eb2ad83-0cc0-11e6-8ecb-e15e9fbdf132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"b","offset":"offset","iValue":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"status":-1},{"failures":[],"tindex":"3eb2d494-0cc0-11e6-8ecb-5db72d6e6925","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:176","type":"CtAssignmentImpl","sourcecode":"index = handleW(value, result, index)"},"status":-2},{"failures":[],"tindex":"3eb2d495-0cc0-11e6-8ecb-31b792a86050","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"status":-2},{"failures":[79,26,27,80,81,82,83,28,29,84,85,86,21,22,87],"tindex":"3eb2d496-0cc0-11e6-8ecb-730a320a412e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:876","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]) {\n    if (value.startsWith(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3eb2d497-0cc0-11e6-8ecb-533fec339eed","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize))"},"status":-2},{"failures":[],"tindex":"3eb2d498-0cc0-11e6-8ecb-a1ee38872163","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:480","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[53], altResult[11], altResult[32], 4, buffer)"},"variableMap":{"altResult":"o2","buffer":"o2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:79","type":"CtTryImpl","sourcecode":"try {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.lang.Comparable<java.lang.Comparable<?>> java.lang.Comparable<java.lang.Comparable<?>> = ((java.lang.Comparable<java.lang.Comparable<?>>)(org.apache.commons.codec.StringEncoderComparator.this.org.apache.commons.codec.StringEncoder.encode(o1)));\n    final java.lang.Comparable<?> java.lang.Comparable<?> = ((java.lang.Comparable<?>)(org.apache.commons.codec.StringEncoderComparator.this.org.apache.commons.codec.StringEncoder.encode(o2)));\n    compareCode = s1.compareTo(s2);\n} catch (final org.apache.commons.codec.EncoderException ee) {\n    compareCode = 0;\n}"},"status":-2},{"failures":[],"tindex":"3eb2fba9-0cc0-11e6-8ecb-5339e17d2c70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:437","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location))"},"status":0},{"failures":[],"tindex":"3eb2fbaa-0cc0-11e6-8ecb-659b548135ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"variableMap":{"ascii":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return string.getBytes(charset)"},"status":-2},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"3eb2fbab-0cc0-11e6-8ecb-0f24f37390dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    ruleMapping.put(patternKey, rules);\n} "},"status":-1},{"failures":[30,31,32,33,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"3eb2fbac-0cc0-11e6-8ecb-df1e7005aeb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[115,116,117,118,119,120,121,122],"tindex":"3eb2fbad-0cc0-11e6-8ecb-8b7b84702e6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"key","element":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[12,13],"tindex":"3eb2fbae-0cc0-11e6-8ecb-475ad9b15ab3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-1},{"failures":[28,21,22],"tindex":"3eb2fbaf-0cc0-11e6-8ecb-8d6d4af0565b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"status":-1},{"failures":[27,81],"tindex":"3eb322c0-0cc0-11e6-8ecb-afab3262fb31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"3eb322c1-0cc0-11e6-8ecb-d3729082d26f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:175","type":"CtIfImpl","sourcecode":"if (b == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    hasUnderscores = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"3eb322c2-0cc0-11e6-8ecb-bdbb3a229ad0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)"},"variableMap":{"binaryData":"resizedBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"status":-2},{"failures":[],"tindex":"3eb322c3-0cc0-11e6-8ecb-5918f0483177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"3eb322c4-0cc0-11e6-8ecb-a51d0c61fe44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"status":-2},{"failures":[],"tindex":"3eb322c5-0cc0-11e6-8ecb-452e8da7b6a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"substring"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:52","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length)"},"status":-2},{"failures":[],"tindex":"3eb322c6-0cc0-11e6-8ecb-c12d2c4da911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"buffer","offset":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[28,29,21,22],"tindex":"3eb322c7-0cc0-11e6-8ecb-516c38df55db","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:400","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[30,31,32,33,123],"tindex":"3eb349d8-0cc0-11e6-8ecb-5726cd0bbf43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:98","type":"CtIfImpl","sourcecode":"if ((o1.java.lang.StringBuilder.length()) < (o2.java.lang.StringBuilder.length())) {\n    return -1;\n} "},"variableMap":{"o1":"o2","o2":"o1","phonemeText":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:88","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (o1.java.lang.StringBuilder.length()) ; i++) {\n    if (i >= (o2.java.lang.StringBuilder.length())) {\n        return +1;\n    } \n    final int int = (o1.java.lang.StringBuilder.charAt(i)) - (o2.java.lang.StringBuilder.charAt(i));\n    if (c != 0) {\n        return c;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3eb349d9-0cc0-11e6-8ecb-139848d9a816","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:555","type":"CtInvocationImpl","sourcecode":"branch.finish()"},"status":-2},{"failures":[],"tindex":"3eb349da-0cc0-11e6-8ecb-ed9a466ea5d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"status":-2},{"failures":[],"tindex":"3eb349db-0cc0-11e6-8ecb-67368289c979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:250","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":0},{"failures":[],"tindex":"3eb349dc-0cc0-11e6-8ecb-679515fccc32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:223","type":"CtInvocationImpl","sourcecode":"langs.removeAll(rule.java.util.Set<java.lang.String>)"},"status":0},{"failures":[],"tindex":"3eb349dd-0cc0-11e6-8ecb-0fca00f665f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"3eb349de-0cc0-11e6-8ecb-b3735b916aa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":0},{"failures":[21,22],"tindex":"3eb349df-0cc0-11e6-8ecb-dfe39a3bbf25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"status":-1},{"failures":[],"tindex":"3eb370f0-0cc0-11e6-8ecb-ebbf2e80a505","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"name = removeVowels(name)"},"variableMap":{"name":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:407","type":"CtAssignmentImpl","sourcecode":"input = input.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale).replace('-', ' ').trim()"},"status":-2},{"failures":[124],"tindex":"3eb370f1-0cc0-11e6-8ecb-338aaa224c4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(obj instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-1},{"failures":[28,29,21,22],"tindex":"3eb370f2-0cc0-11e6-8ecb-239ea7f3588f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"index","cnt":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:346","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"3eb370f3-0cc0-11e6-8ecb-cdb962f28c4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-2},{"failures":[],"tindex":"3eb370f4-0cc0-11e6-8ecb-4b64fa0a5db5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":0},{"failures":[],"tindex":"3eb370f5-0cc0-11e6-8ecb-d129f827a260","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"mapped","mapped":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:276","type":"CtAssignmentImpl","sourcecode":"out[(count++)] = mapped"},"status":0},{"failures":[],"tindex":"3eb370f6-0cc0-11e6-8ecb-e5f034a9c9f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:146","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[],"tindex":"3eb39807-0cc0-11e6-8ecb-0b335289749b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0}],"header":{"groupId":"commons-codec","transformationCount":88,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}