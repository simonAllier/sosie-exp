{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":1,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":26,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":22,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":28,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":76,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":52,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":75,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":13,"org.apache.commons.codec.language.NysiisTest.testDropBy":79,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":77,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":17,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":81,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":61,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":14,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":36,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":16,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":62,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":5,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":8,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":60,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":25,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":35,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":82,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":50,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":41,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":67,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":32,"org.apache.commons.codec.language.NysiisTest.testRule6":78,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":87,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":10,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":42,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":66,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":68,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":44,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":72,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":21,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":29,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":45,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":85,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":43,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":24,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":46,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":34,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":65,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":73,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":64,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":53,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":56,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":58,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":54,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":7,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":69,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":74,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":38,"org.apache.commons.codec.language.NysiisTest.testOthers":80,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":86,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":83,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":57,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":12,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.language.MetaphoneTest.testTCH":9,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":39,"org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace":47,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":84,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":48,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":51,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":40},"transformations":[{"failures":[0,1,2],"tindex":"f3c40ca5-0cbe-11e6-b8ec-01025beea245","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:981","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[3,4,5,6],"tindex":"f3c433b6-0cbe-11e6-b8ec-9f5b13dd7f83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:708","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[7],"tindex":"f3c433b7-0cbe-11e6-b8ec-73e5831bc6b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:84","type":"CtAssignmentImpl","sourcecode":"compareCode = s1.compareTo(s2)"},"status":-1},{"failures":[],"tindex":"f3c433b8-0cbe-11e6-b8ec-cb6cdcdd8d17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"variableMap":{"string":"data","charsetName":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[],"tindex":"f3c433b9-0cbe-11e6-b8ec-53198d67a189","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:487","type":"CtIfImpl","sourcecode":"if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} "},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:301","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[2,8],"tindex":"f3c45aca-0cbe-11e6-b8ec-f17e407e172d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:666","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"f3c45acb-0cbe-11e6-b8ec-6fc7ccfb907a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = ctx1.digest()"},"status":-2},{"failures":[],"tindex":"f3c45acc-0cbe-11e6-b8ec-81d96b62da36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:452","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) << 2))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"f3c481dd-0cbe-11e6-b8ec-e7556d483978","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"f3c481de-0cbe-11e6-b8ec-63c1632b0403","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"readLen","right":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:165","type":"CtAssignmentImpl","sourcecode":"readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"f3c481df-0cbe-11e6-b8ec-b30d9461a988","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:73","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('(')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('-')"},"status":-2},{"failures":[],"tindex":"f3c481e0-0cbe-11e6-b8ec-cd531e66be0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:1005","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) >= (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int)) && ((org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.length()) >= (org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.int))"},"status":0},{"failures":[9],"tindex":"f3c481e1-0cbe-11e6-b8ec-b3e57613f21e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:300","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"f3c4a8f2-0cbe-11e6-b8ec-85b7c37dcefe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"code","mapped":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"status":0},{"failures":[],"tindex":"f3c4a8f3-0cbe-11e6-b8ec-c5cddd49b3e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"status":-2},{"failures":[],"tindex":"f3c4a8f4-0cbe-11e6-b8ec-1117ee6bc73e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:87","type":"CtAssignmentImpl","sourcecode":"value = cleanInput(value)"},"variableMap":{"value":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-2},{"failures":[],"tindex":"f3c4a8f5-0cbe-11e6-b8ec-edbf9ef06dfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-2},{"failures":[],"tindex":"f3c4a8f6-0cbe-11e6-b8ec-89aba9ecd522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"f3c4a8f7-0cbe-11e6-b8ec-a1fe7228350f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":0},{"failures":[],"tindex":"f3c4d008-0cbe-11e6-b8ec-0de532c90bda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:317","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"status":-2},{"failures":[3,4,5,6,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"f3c4d009-0cbe-11e6-b8ec-1745954c7a2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"status":-1},{"failures":[],"tindex":"f3c4d00a-0cbe-11e6-b8ec-5fd7b6c2c915","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"status":-2},{"failures":[],"tindex":"f3c4d00b-0cbe-11e6-b8ec-9520ded33756","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:87","type":"CtAssignmentImpl","sourcecode":"value = cleanInput(value)"},"variableMap":{"value":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"status":-2},{"failures":[],"tindex":"f3c4d00c-0cbe-11e6-b8ec-354abcfbbfc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:458","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[22,23],"tindex":"f3c4f71d-0cbe-11e6-b8ec-a7af202fb1fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"f3c4f71e-0cbe-11e6-b8ec-1ffa74c82450","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"status":-2},{"failures":[],"tindex":"f3c4f71f-0cbe-11e6-b8ec-b1bb3f35b3b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"f3c4f720-0cbe-11e6-b8ec-bdb7fdddb275","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"pos","right":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:455","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[24,25,26],"tindex":"f3c4f721-0cbe-11e6-b8ec-1bd23f2619d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"l_raw","offset":"ii","iValue":"bits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:184","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[0,2,8],"tindex":"f3c51e32-0cbe-11e6-b8ec-fb3fbf9a2bec","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"f3c51e33-0cbe-11e6-b8ec-99ea3acaa6a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:342","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"variableMap":{"inAvail":"len","context":"context","eof":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:87","type":"CtIfImpl","sourcecode":"if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":-2},{"failures":[],"tindex":"f3c51e34-0cbe-11e6-b8ec-e9641714097e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"f3c51e35-0cbe-11e6-b8ec-c918f1e50d9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-1},{"failures":[],"tindex":"f3c54546-0cbe-11e6-b8ec-6d2c74e23f51","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[39,40,41],"tindex":"f3c54547-0cbe-11e6-b8ec-c3a000b8491b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"variableMap":{"buf":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"status":-1},{"failures":[],"tindex":"f3c54548-0cbe-11e6-b8ec-3b53151ab8f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:151","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-2},{"failures":[42,43,44,45,46],"tindex":"f3c54549-0cbe-11e6-b8ec-9b6ccc1c4154","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:382","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"lastCode","org.apache.commons.codec.language.ColognePhonetic.TDX":"org.apache.commons.codec.language.ColognePhonetic.SZ","chr":"nextChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:368","type":"CtIfImpl","sourcecode":"if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-1},{"failures":[],"tindex":"f3c5454a-0cbe-11e6-b8ec-d9992611fd7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:384","type":"CtIfImpl","sourcecode":"if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"ch","chr":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n} "},"status":-2},{"failures":[],"tindex":"f3c56c5b-0cbe-11e6-b8ec-61854135e9f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:261","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"status":-2},{"failures":[],"tindex":"f3c56c5c-0cbe-11e6-b8ec-619d5d316a9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"status":0},{"failures":[],"tindex":"f3c56c5d-0cbe-11e6-b8ec-63fc1ff4a084","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:299","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"f3c56c5e-0cbe-11e6-b8ec-b775d5c9a22d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:105","type":"CtIfImpl","sourcecode":"if (!(other instanceof org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch)) {\n    return false;\n} "},"status":0},{"failures":[47,48,49,50,51],"tindex":"f3c56c5f-0cbe-11e6-b8ec-871e773c567c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byteToCheck) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"status":-1},{"failures":[],"tindex":"f3c56c60-0cbe-11e6-b8ec-510e225ba214","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:101","type":"CtReturnImpl","sourcecode":"return ((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')"},"variableMap":{"c":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:866","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String.indexOf(ch)) != (-1)"},"status":-2},{"failures":[],"tindex":"f3c56c61-0cbe-11e6-b8ec-571ccc315027","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:504","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"f3c59372-0cbe-11e6-b8ec-333b5f4f98f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:346","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[2,8],"tindex":"f3c59373-0cbe-11e6-b8ec-d7f1d35b1775","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:666","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[52,53,54],"tindex":"f3c59374-0cbe-11e6-b8ec-034eba97122a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer)"},"status":-1},{"failures":[],"tindex":"f3c59375-0cbe-11e6-b8ec-fd8ab4fa76d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"variableMap":{"bigBytes":"buffer","length":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:794","type":"CtLocalVariableImpl","sourcecode":"int int = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int)"},"status":-2},{"failures":[],"tindex":"f3c59376-0cbe-11e6-b8ec-6b0b54205896","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":0},{"failures":[],"tindex":"f3c59377-0cbe-11e6-b8ec-8f67db9186f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"languagesResourceName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:174","type":"CtIfImpl","sourcecode":"if (langIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName));\n} "},"status":-2},{"failures":[55,56,57],"tindex":"f3c59378-0cbe-11e6-b8ec-c946d81aec64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"status":-1},{"failures":[58,59,60,61,62,63,64],"tindex":"f3c5ba89-0cbe-11e6-b8ec-e150afeed1c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"variableMap":{"b":"b","offset":"offset","len":"offset","context":"context","baseNCodec":"baseNCodec"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:91","type":"CtIfImpl","sourcecode":"if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":-1},{"failures":[0,2,8],"tindex":"f3c5ba8a-0cbe-11e6-b8ec-01d0e2d530d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:628","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"f3c5ba8b-0cbe-11e6-b8ec-9900d69deed2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"status":-2},{"failures":[65,22,23,66,67,68,69],"tindex":"f3c5ba8c-0cbe-11e6-b8ec-49ce44ccf2e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:115","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[],"tindex":"f3c5ba8d-0cbe-11e6-b8ec-6dbdbfec50e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:196","type":"CtInvocationImpl","sourcecode":"lsScanner.close()"},"status":-2},{"failures":[],"tindex":"f3c5ba8e-0cbe-11e6-b8ec-af3b8aa5a09b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"other","suffix":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:102","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this) == other) {\n    return true;\n} "},"status":-2},{"failures":[22,23],"tindex":"f3c5ba8f-0cbe-11e6-b8ec-19c5f98f801a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[5,6],"tindex":"f3c5ba90-0cbe-11e6-b8ec-8b817f1f5eee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:440","type":"CtInvocationImpl","sourcecode":"words2.addAll(words)"},"variableMap":{"words":"words2","words2":"words2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:441","type":"CtInvocationImpl","sourcecode":"words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType))"},"status":-1},{"failures":[],"tindex":"f3c5e1a1-0cbe-11e6-b8ec-37088cd55fac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:514","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : rules) {\n    if (rule.matches(inputContext)) {\n        if (branching) {\n            nextBranches.clear();\n        } \n        final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n        final boolean boolean = ((replacements.int) > 1) && branching;\n        for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n            for (final java.lang.String java.lang.String : replacements) {\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n                final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                nextBranch.processNextReplacement(nextReplacement, force);\n                if (branching) {\n                    nextBranches.add(nextBranch);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (branching) {\n            currentBranches.clear();\n            currentBranches.addAll(nextBranches);\n        } \n        index += (rule.getPatternLength()) - 1;\n        break;\n    } \n}"},"status":-2},{"failures":[2,8],"tindex":"f3c5e1a2-0cbe-11e6-b8ec-b72cb3735591","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:430","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[70,71,72],"tindex":"f3c5e1a3-0cbe-11e6-b8ec-bd7de49f20fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"status":-1},{"failures":[73,74,75,76,55,56,77],"tindex":"f3c5e1a4-0cbe-11e6-b8ec-5f034e7b133b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:144","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-1},{"failures":[78,79,80],"tindex":"f3c5e1a5-0cbe-11e6-b8ec-df842780a153","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"status":-1},{"failures":[],"tindex":"f3c5e1a6-0cbe-11e6-b8ec-53901dd5aa8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:844","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'M') {\n    return true;\n} "},"variableMap":{"index":"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE","value":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"f3c80487-0cbe-11e6-b8ec-27c0d41732d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.class":"org.apache.commons.codec.language.bm.Languages.class","languageRulesResourceName":"resName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:255","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(resName)"},"status":0},{"failures":[],"tindex":"f3c82b98-0cbe-11e6-b8ec-9106a7d6d6be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"f3c82b99-0cbe-11e6-b8ec-b307e5b904fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"status":-2},{"failures":[52,53,54],"tindex":"f3c82b9a-0cbe-11e6-b8ec-b79c3b298c83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"f3c82b9b-0cbe-11e6-b8ec-f584592ab302","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset"},"status":-2},{"failures":[81,82,62,63,83,84],"tindex":"f3c82b9c-0cbe-11e6-b8ec-45041af18893","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:495","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-1},{"failures":[],"tindex":"f3c82b9d-0cbe-11e6-b8ec-c9abb4f56c36","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":-2},{"failures":[2,8],"tindex":"f3c9641e-0cbe-11e6-b8ec-53fb84d769b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[],"tindex":"f3c9641f-0cbe-11e6-b8ec-79eb1e222a54","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:297","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f3c96420-0cbe-11e6-b8ec-517490ca06ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-2},{"failures":[27,28,29,85,86,30,31,32,33,34,35,87,36,37,38],"tindex":"f3c96421-0cbe-11e6-b8ec-a97383efe296","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"variableMap":{"patternLength":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:358","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-1},{"failures":[3,4,5,6,11,13,14,15],"tindex":"f3c96422-0cbe-11e6-b8ec-a78a09172f8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:389","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : body.split(\"[|]\")) {\n    phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part));\n}"},"status":-1},{"failures":[],"tindex":"f3c96423-0cbe-11e6-b8ec-7723888df9ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:446","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[],"tindex":"f3c98b34-0cbe-11e6-b8ec-555209328bb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:392","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"f3c98b35-0cbe-11e6-b8ec-49bb32a4d03e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"variableMap":{"a":"i","m":"i","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:358","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-2},{"failures":[],"tindex":"f3c98b36-0cbe-11e6-b8ec-c3729d4eeaf6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"variableMap":{"name":"source","firstLetter":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:433","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"status":-2},{"failures":[88,0,1,2,8],"tindex":"f3c98b37-0cbe-11e6-b8ec-173c26e3378c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (target.equals(element)) {\n    result = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"f3c98b38-0cbe-11e6-b8ec-3be811a82ff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"b","d":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-2},{"failures":[52,53,54],"tindex":"f3c98b39-0cbe-11e6-b8ec-1dd3b940acb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"status":-1},{"failures":[],"tindex":"f3c98b3a-0cbe-11e6-b8ec-ff4897d00ff2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"f3c98b3b-0cbe-11e6-b8ec-1fe74e2f9cdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet.merge(lang)"},"variableMap":{"languages":"languages","lang":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet.restrictTo(right.org.apache.commons.codec.language.bm.Languages.LanguageSet)"},"status":0},{"failures":[0,2,8],"tindex":"f3c98b3c-0cbe-11e6-b8ec-712e7a3463b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return index + 3"},"status":-1},{"failures":[],"tindex":"f3c9b24d-0cbe-11e6-b8ec-87c9425939ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:64","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":89,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}