{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":45,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":196,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":169,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":186,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":4,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":70,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":144,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":132,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":164,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":191,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":107,"org.apache.commons.codec.language.NysiisTest.testCap":11,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":108,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":111,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":147,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":85,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":109,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":97,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":110,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":146,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":86,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":128,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":54,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":173,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing":41,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":178,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":90,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":31,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":160,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":122,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":189,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":193,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":91,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":78,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":69,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":152,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":118,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":185,"org.apache.commons.codec.language.NysiisTest.testDropBy":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":192,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":35,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":158,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":47,"org.apache.commons.codec.binary.Base64Test.testUUID":104,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":149,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":93,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":134,"org.apache.commons.codec.language.NysiisTest.testRule2":16,"org.apache.commons.codec.language.NysiisTest.testRule1":15,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":133,"org.apache.commons.codec.language.NysiisTest.testRule7":19,"org.apache.commons.codec.language.NysiisTest.testRule6":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":166,"org.apache.commons.codec.language.NysiisTest.testRule5":17,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":157,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":51,"org.apache.commons.codec.language.NysiisTest.testBran":20,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":27,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":142,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":171,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":187,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":183,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":131,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":59,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":154,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":115,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":197,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":101,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":136,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":5,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":72,"org.apache.commons.codec.language.NysiisTest.testDad":12,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":56,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":125,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":98,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":106,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":145,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":10,"org.apache.commons.codec.language.NysiisTest.testDan":13,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":61,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":73,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":58,"org.apache.commons.codec.binary.HexTest.testCustomCharset":49,"org.apache.commons.codec.language.NysiisTest.testSnat":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":34,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":161,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":33,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":8,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":57,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":7,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":75,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":127,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":126,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":74,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":80,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":79,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":81,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":87,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":159,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":123,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":180,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeNull":43,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":179,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":9,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":103,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":172,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":0,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":55,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":174,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":60,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":67,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":148,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":64,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":162,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":163,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":53,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":114,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":100,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":168,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":84,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":83,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":32,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":155,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":175,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":137,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":121,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":184,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":156,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":167,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":77,"org.apache.commons.codec.language.NysiisTest.testTranan":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":190,"org.apache.commons.codec.language.NysiisTest.testFal":14,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":96,"org.apache.commons.codec.language.NysiisTest.testSnad":21,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":150,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":151,"org.apache.commons.codec.language.MetaphoneTest.testTCH":194,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":177,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":38,"org.apache.commons.codec.binary.Base64Test.testBase64":117,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":29,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":113,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":138,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":76,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty":44,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":52,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":68,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":165,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":119,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":143,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":141,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":23,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":102,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":130,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":153,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":89,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":48,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":124,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":120,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":139,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing":39,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":170,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":188,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":182,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":176,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":135,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":63,"org.apache.commons.codec.language.NysiisTest.testOthers":25,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":116,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":37,"org.apache.commons.codec.language.SoundexTest.testDifference":88,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":95,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":140,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":28,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":105,"org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull":181},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"846e37d2-40db-11e6-a56f-e7e742e24b7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (input.length()) - 1, int int = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","suffix":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"846e5ee3-40db-11e6-a56f-6d3bdf844d30","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (next == 'N') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n}"},"variableMap":{"next":"next","org.apache.commons.codec.language.Nysiis.CHARS_NN":"org.apache.commons.codec.language.Nysiis.CHARS_FF","org.apache.commons.codec.language.Nysiis.CHARS_C":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[28,29],"tindex":"846e85f4-40db-11e6-a56f-e7b19d344059","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:343","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38],"tindex":"846e85f5-40db-11e6-a56f-bb4e127db887","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:318","type":"CtInvocationImpl","sourcecode":"ruleMapping.put(patternKey, rules)"},"status":-1},{"failures":[],"tindex":"846e85f6-40db-11e6-a56f-e90ca9b78ee4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('-')"},"status":0},{"failures":[],"tindex":"846f9767-40db-11e6-a56f-13d3c3210aac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:338","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[],"tindex":"846fbe78-40db-11e6-a56f-7d90371e1f2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"status":-2},{"failures":[39,40,41,42,43,44],"tindex":"846fbe79-40db-11e6-a56f-b36b5a8555a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"846fbe7a-40db-11e6-a56f-39595ce29879","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"code","mapped":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"status":-2},{"failures":[45,28,29],"tindex":"846fbe7b-40db-11e6-a56f-6f6e433774e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"status":-1},{"failures":[46,47],"tindex":"846fbe7c-40db-11e6-a56f-294d047c6e39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"846fbe7d-40db-11e6-a56f-278e265544fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[30,31,32,33,34,38],"tindex":"846fe58e-40db-11e6-a56f-c7397d9c41c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:493","type":"CtInvocationImpl","sourcecode":"currentBranches.add(new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch())"},"variableMap":{"currentBranches":"currentBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:542","type":"CtInvocationImpl","sourcecode":"currentBranches.addAll(nextBranches)"},"status":-1},{"failures":[],"tindex":"846fe58f-40db-11e6-a56f-7fa90b7c5f98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('|')"},"status":0},{"failures":[],"tindex":"846fe590-40db-11e6-a56f-9f550a1ead00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:280","type":"CtIfImpl","sourcecode":"if (conditionC0(value, index)) {\n    result.append('K');\n    index += 2;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, \"CAESAR\"))) {\n    result.append('S');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CH\")) {\n    index = handleCH(value, result, index);\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CZ\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, \"WICZ\")))) {\n    result.append('S', 'X');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"CIA\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"846fe591-40db-11e6-a56f-5dc0a7bf728b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"status":-2},{"failures":[],"tindex":"846fe592-40db-11e6-a56f-3ba9ba4cd3ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:404","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[71,72],"tindex":"84700ca3-40db-11e6-a56f-1917a60e1aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-1},{"failures":[73,74],"tindex":"84700ca4-40db-11e6-a56f-1d6cc9d34d15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:312","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"84700ca5-40db-11e6-a56f-a50a3fe1cb18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:122","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"84700ca6-40db-11e6-a56f-53b37f6a39aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:90","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[],"tindex":"84700ca7-40db-11e6-a56f-3f0a708cc682","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:716","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"84700ca8-40db-11e6-a56f-b1aebc09410c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:99","type":"CtIfImpl","sourcecode":"if (txtLength == 1) {\n    return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":0},{"failures":[],"tindex":"847033b9-40db-11e6-a56f-896de4fe804b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"variableMap":{"bytes":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-2},{"failures":[],"tindex":"847033ba-40db-11e6-a56f-239d3c36cc44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"847033bb-40db-11e6-a56f-71dfcd1cb736","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-2},{"failures":[28,29],"tindex":"847033bc-40db-11e6-a56f-f59686422d39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:361","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"847033bd-40db-11e6-a56f-8f983498588a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"status":-2},{"failures":[75],"tindex":"847033be-40db-11e6-a56f-196df41bc835","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-1},{"failures":[],"tindex":"847033bf-40db-11e6-a56f-ad3d6104f327","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:209","type":"CtAssignmentImpl","sourcecode":"this.int = useChunking ? (lineLength / encodedBlockSize) * encodedBlockSize : 0"},"status":-2},{"failures":[75,76,77,78],"tindex":"84705ad0-40db-11e6-a56f-1579ceed7c7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:493","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-1},{"failures":[],"tindex":"84705ad1-40db-11e6-a56f-d59530c2931d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:374","type":"CtIfImpl","sourcecode":"if ((context.boolean) && ((context.int) >= 2)) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    switch (context.int) {\n        case 2 :\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 3 :\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 4 :\n            context.long = (context.long) >> 4;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 5 :\n            context.long = (context.long) >> 1;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 6 :\n            context.long = (context.long) >> 6;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 7 :\n            context.long = (context.long) >> 3;\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        default :\n            throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n    }\n} "},"status":-2},{"failures":[],"tindex":"84705ad2-40db-11e6-a56f-33f5bee06ea5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:78","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = algorithm"},"status":-2},{"failures":[79,80,81],"tindex":"84705ad3-40db-11e6-a56f-f781b41d9ddf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:545","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.startsWith(\"[\")"},"variableMap":{"content":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"status":-1},{"failures":[10,82,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"84705ad4-40db-11e6-a56f-053ecc2ce5b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[28,29],"tindex":"847081e5-40db-11e6-a56f-5d41b9b1eb01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[1,3,4,5,79,83,80,81],"tindex":"847081e6-40db-11e6-a56f-db1f2e116139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:478","type":"CtInvocationImpl","sourcecode":"rules.add(r)"},"status":-1},{"failures":[18,24,25],"tindex":"8471ba67-40db-11e6-a56f-ebd25152e561","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"status":-1},{"failures":[84,28,29],"tindex":"8471e178-40db-11e6-a56f-8b29e483ad9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"8471e179-40db-11e6-a56f-9568d7e5208c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, null)"},"variableMap":{"keyBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"status":-2},{"failures":[85,86],"tindex":"8471e17a-40db-11e6-a56f-a50ce1537bca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:371","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[87],"tindex":"8471e17b-40db-11e6-a56f-5daa19363dce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} "},"status":-1},{"failures":[],"tindex":"8471e17c-40db-11e6-a56f-997ad08fdaaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"status":0},{"failures":[82,17,18,19,24],"tindex":"8471e17d-40db-11e6-a56f-05a5079a69db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:296","type":"CtIfImpl","sourcecode":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[88,89],"tindex":"8471e17e-40db-11e6-a56f-e15b2c4a964b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[],"tindex":"8472088f-40db-11e6-a56f-61cb62727801","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"variableMap":{"readLen":"diff"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"status":-2},{"failures":[],"tindex":"84720890-40db-11e6-a56f-8b595464a55f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-2},{"failures":[],"tindex":"84720891-40db-11e6-a56f-f5ac076e62a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:354","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[],"tindex":"84720892-40db-11e6-a56f-0102d40aaad9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[],"tindex":"84720893-40db-11e6-a56f-81a6079e32da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-2},{"failures":[90,91,92],"tindex":"84720894-40db-11e6-a56f-b91b79c48851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[],"tindex":"84722fa5-40db-11e6-a56f-8530489680d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"value","line":"value","inMultilineComment":"slavoGermanic"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:526","type":"CtIfImpl","sourcecode":"if ((index == 0) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")))) {\n    result.append('J', 'A');\n} else if (((isVowel(charAt(value, (index - 1)))) && (!slavoGermanic)) && (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))) {\n    result.append('J', 'H');\n} else if (index == ((value.length()) - 1)) {\n    result.append('J', ' ');\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n    result.append('J');\n} "},"status":-2},{"failures":[93,94],"tindex":"84722fa6-40db-11e6-a56f-ef09b70bdbb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":-1},{"failures":[],"tindex":"84722fa7-40db-11e6-a56f-69c3f9ebc81b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:77","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[mapping.int]"},"status":-2},{"failures":[16,24],"tindex":"84722fa8-40db-11e6-a56f-1350748df364","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"Y\")"},"status":-1},{"failures":[],"tindex":"84722fa9-40db-11e6-a56f-1fe0f54ead73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:353","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (index < ((string.length()) - 1))) {\n    matches = (string.charAt((index + 1))) == c;\n} "},"status":-2},{"failures":[95,96,97,98,99,100],"tindex":"84722faa-40db-11e6-a56f-b7c1021c0d16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-1},{"failures":[],"tindex":"84722fab-40db-11e6-a56f-c97523d741b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"lastChar = ch"},"variableMap":{"ch":"current","lastChar":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:192","type":"CtAssignmentImpl","sourcecode":"current = getMappingCode(str.charAt(i))"},"status":0},{"failures":[51,101],"tindex":"847256bc-40db-11e6-a56f-2793dbbddfcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"byteArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"status":-1},{"failures":[],"tindex":"847256bd-40db-11e6-a56f-43c83fb519d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:413","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[28,29],"tindex":"847256be-40db-11e6-a56f-a32e69891458","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n    result.append(\"X\", \"SK\");\n} else {\n    result.append(\"SK\");\n}"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"847256bf-40db-11e6-a56f-d549739b73be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"847256c0-40db-11e6-a56f-6f7f037acad5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"accentedWord"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"status":-2},{"failures":[142,87,143],"tindex":"847256c1-40db-11e6-a56f-bddb3a6b3e97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"failures":[73,74],"tindex":"84727dd2-40db-11e6-a56f-1d6f72f9f23b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"variableMap":{"currentLine":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"status":-1},{"failures":[],"tindex":"84727dd3-40db-11e6-a56f-0d070875e1a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"variableMap":{"ctx1":"ctx1","keyBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-2},{"failures":[3,4,5,79,83,80,81],"tindex":"84727dd4-40db-11e6-a56f-0dc9032b2f4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:111","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.size()) == 1"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.isEmpty()"},"status":-1},{"failures":[144,145],"tindex":"84727dd5-40db-11e6-a56f-8d8f0a0612f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"status":-1},{"failures":[95,146,96,97,147,98,99,100],"tindex":"84727dd6-40db-11e6-a56f-1928a5d902d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-1},{"failures":[148,149,150,151,152,65,153,154,155,156],"tindex":"84727dd7-40db-11e6-a56f-ada3b7a89bf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[],"tindex":"8472a4e8-40db-11e6-a56f-bb4b0a8027cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"i","org.apache.commons.codec.net.URLCodec.RADIX":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:360","type":"CtLocalVariableImpl","sourcecode":"final char char = accentedWord.charAt(i)"},"status":-2},{"failures":[],"tindex":"8472a4e9-40db-11e6-a56f-b1af95dbc080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:469","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[93,157,158,159,160,94,161,162,163,164,165,166,167,168,169,170,171],"tindex":"8472a4ea-40db-11e6-a56f-2df27d8aed6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:282","type":"CtIfImpl","sourcecode":"if (strict) {\n    int int = 1;\n    for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n        int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            pos = 1;\n        }\n    }\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes);\n    boolean boolean = (!(printable.get(b))) || ((org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)) && (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    } \n    for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n} else {\n    for (final byte byte : bytes) {\n        int int = c;\n        if (b < 0) {\n            b = 256 + b;\n        } \n        if (printable.get(b)) {\n            buffer.write(b);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"8472a4eb-40db-11e6-a56f-4ba91ea580a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:109","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.this.java.lang.String = charset"},"variableMap":{"charset":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-2},{"failures":[84,45,28,29],"tindex":"8472a4ec-40db-11e6-a56f-2d96928924cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return index + 3"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[49,51,101,53],"tindex":"8472a4ed-40db-11e6-a56f-73466d928c02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:275","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(array).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset())"},"status":-1},{"failures":[],"tindex":"8472cbfe-40db-11e6-a56f-75076f599a1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:56","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chars , 0 , count).toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[172],"tindex":"8472cbff-40db-11e6-a56f-2facaca26985","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[],"tindex":"8472cc00-40db-11e6-a56f-a9d5f160205c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"8472cc01-40db-11e6-a56f-17c49f825761","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0},{"failures":[173,57],"tindex":"8472cc02-40db-11e6-a56f-1be6a460eeaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:420","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[174],"tindex":"8472cc03-40db-11e6-a56f-bd52add82792","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[144,71,175,176,177,145,72,178],"tindex":"8472cc04-40db-11e6-a56f-c5fdea07174d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"saltLen","tempResult":"sBytes","pBytes":"sBytes","keyLen":"cp","cp":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"status":-1},{"failures":[179,180],"tindex":"8472cc05-40db-11e6-a56f-5d07b2b45630","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"status":-1},{"failures":[],"tindex":"8472f316-40db-11e6-a56f-dd95cc8bf7e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"status":-2},{"failures":[],"tindex":"8472f317-40db-11e6-a56f-1d60bec2ebcd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[],"tindex":"8472f318-40db-11e6-a56f-3f4ed54dd91a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:176","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(ch, 16)"},"status":-2},{"failures":[45,28,29],"tindex":"84740489-40db-11e6-a56f-2b9ee3c7b756","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[181],"tindex":"8474048a-40db-11e6-a56f-7b944117dff9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":-1},{"failures":[],"tindex":"8474048b-40db-11e6-a56f-679eb0f1afc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[],"tindex":"8474048c-40db-11e6-a56f-9f17e74ba7a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset"},"status":0},{"failures":[28,29],"tindex":"8474048d-40db-11e6-a56f-4f4de5ebe5d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,182,183,79,83,80,81],"tindex":"8474048e-40db-11e6-a56f-934ddeb07e3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"lang","leftCharacter":"lang","rightCharacter":"lang","location":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang));\n} "},"status":-1},{"failures":[184,185,186,187,188,189,190,191,192,193],"tindex":"84742b9f-40db-11e6-a56f-9bf0f2e37493","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"status":-1},{"failures":[194,195,196],"tindex":"84742ba0-40db-11e6-a56f-51072d83df23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[24],"tindex":"84742ba1-40db-11e6-a56f-93b8e1c851df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"aNext","prev":"curr","curr":"aNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((curr == 'S') && (next == 'C')) && (aNext == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[],"tindex":"84742ba2-40db-11e6-a56f-2ff1da4abf70","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"variableMap":{"encodedBlockSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:724","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"84742ba3-40db-11e6-a56f-0d343d3f2a2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:134","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n        ls.add(lang);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[197],"tindex":"84742ba4-40db-11e6-a56f-b766f2116fb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:266","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"84742ba5-40db-11e6-a56f-2716d6252611","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:219","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}