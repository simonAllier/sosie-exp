{"failureDictionary":{"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":4,"org.apache.commons.codec.language.NysiisTest.testSnat":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":9,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":53,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":51,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":77,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":76,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":23,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":85,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":90,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":71,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":89,"org.apache.commons.codec.binary.Base64Test.testTriplets":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":0,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":21,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":83,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":130,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":81,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":84,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":105,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":113,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":64,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":116,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":66,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":65,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":99,"org.apache.commons.codec.language.NysiisTest.testCap":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":78,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":100,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":3,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":104,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":67,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":63,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":61,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":13,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":101,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":62,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":102,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":119,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":127,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":124,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":109,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":133,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":43,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":44,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":82,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":55,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":94,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":122,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":45,"org.apache.commons.codec.language.SoundexTest.testB650":50,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":117,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":1,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":14,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":40,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":93,"org.apache.commons.codec.language.SoundexTest.testNewInstance":58,"org.apache.commons.codec.language.NysiisTest.testTranan":38,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":121,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":6,"org.apache.commons.codec.language.NysiisTest.testFal":27,"org.apache.commons.codec.language.NysiisTest.testSnad":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":8,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":129,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":115,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":118,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":47,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":107,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":48,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":70,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":114,"org.apache.commons.codec.language.NysiisTest.testDropBy":19,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":103,"org.apache.commons.codec.binary.Base64Test.testBase64":112,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":75,"org.apache.commons.codec.binary.Base64Test.testUUID":96,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":132,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":106,"org.apache.commons.codec.binary.Base64Test.testSingletons":108,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":123,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":111,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":73,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":125,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":72,"org.apache.commons.codec.binary.Base64Test.testPairs":95,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":128,"org.apache.commons.codec.language.NysiisTest.testRule2":29,"org.apache.commons.codec.language.NysiisTest.testRule1":28,"org.apache.commons.codec.language.NysiisTest.testRule7":32,"org.apache.commons.codec.language.NysiisTest.testRule6":31,"org.apache.commons.codec.language.NysiisTest.testRule5":30,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":68,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":59,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":36,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":120,"org.apache.commons.codec.language.NysiisTest.testBran":33,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":39,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":42,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":80,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":91,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":41,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":86,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":11,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":88,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":2,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":60,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":79,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":126,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":74,"org.apache.commons.codec.language.NysiisTest.testDad":25,"org.apache.commons.codec.language.NysiisTest.testOthers":37,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":98,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":10,"org.apache.commons.codec.language.SoundexTest.testDifference":57,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":22,"org.apache.commons.codec.language.NysiisTest.testDan":26,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":69,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":131,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":97,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":20},"transformations":[{"failures":[],"tindex":"2aba2c1d-1162-11e6-9de6-9bd7ef45ae42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:282","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2aba532e-1162-11e6-9de6-b5c04a6b5991","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"2aba7a3f-1162-11e6-9de6-3bf22b0d6f84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"i","l_ascii":"name2Char","bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:321","type":"CtAssignmentImpl","sourcecode":"name2Char[i] = ' '"},"status":-1},{"failures":[],"tindex":"2aba7a40-1162-11e6-9de6-316fccb8e1b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"status":-2},{"failures":[],"tindex":"2aba7a41-1162-11e6-9de6-ddfbc4ae70c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"hex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:145","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":0},{"failures":[],"tindex":"2abaa152-1162-11e6-9de6-012142057c9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[11,12,13,14],"tindex":"2abaa153-1162-11e6-9de6-c7fecbcbecad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:277","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"2abaa154-1162-11e6-9de6-678a07a0d23a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"base64Data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"status":-2},{"failures":[],"tindex":"2abac865-1162-11e6-9de6-fb0bec5f85fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:468","type":"CtIfImpl","sourcecode":"if ((++index) < (branches.int)) {\n    sb.append('|');\n} "},"status":-3},{"failures":[],"tindex":"2abac866-1162-11e6-9de6-9f394719fde7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"pos","e1":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"status":0},{"failures":[],"tindex":"2abac867-1162-11e6-9de6-03ee6b640c51","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:138","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[15,16,17,18],"tindex":"2abaef78-1162-11e6-9de6-75360db2024b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[19],"tindex":"2abaef79-1162-11e6-9de6-ddc96cbcb4a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (next == 'N') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n}"},"status":-1},{"failures":[],"tindex":"2abaef7a-1162-11e6-9de6-9b6486db8deb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[],"tindex":"2abaef7b-1162-11e6-9de6-690a0069a593","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:334","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-2},{"failures":[],"tindex":"2abb168c-1162-11e6-9de6-55701382ab0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"status":-2},{"failures":[],"tindex":"2abb168d-1162-11e6-9de6-7338f0a2ea83","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"status":-2},{"failures":[20,21],"tindex":"2abb168e-1162-11e6-9de6-b7f7ef9fdbae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:309","type":"CtAssignmentImpl","sourcecode":"left = results[0]"},"status":-1},{"failures":[],"tindex":"2abb168f-1162-11e6-9de6-7123d5568026","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,19,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"2abb3da0-1162-11e6-9de6-cb057055ea16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"chars[(count++)] = str.charAt(i)"},"status":-1},{"failures":[],"tindex":"2abb3da1-1162-11e6-9de6-bbc2079aeaa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:290","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    if (lineSeparator == null) {\n        throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n    } \n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n    } \n    this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n    this.byte[] = null;\n}"},"variableMap":{"encodeSize":"c","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"c","length":"c","lineSeparator":"buf","lineLength":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:115","type":"CtIfImpl","sourcecode":"if (c > 0) {\n    java.io.OutputStream.write(buf, 0, c);\n} "},"status":-3},{"failures":[],"tindex":"2abb64b2-1162-11e6-9de6-8dce225d8e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:147","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>) {\n    if ((sb.length()) > 0) {\n        sb.append(\"|\");\n    } \n    sb.append(ph.getPhonemeText());\n}"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"2abb64b3-1162-11e6-9de6-b5c54f2c18cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"failures":[85],"tindex":"2abb8bc4-1162-11e6-9de6-49b2a425cc14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:519","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    len += (((len + (int)) - 1) / (int)) * (int);\n} "},"status":-1},{"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"2abb8bc5-1162-11e6-9de6-b7322b40e71e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:385","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << 8) + b"},"status":-1},{"failures":[124,125,126,127,128,129,130],"tindex":"2abb8bc6-1162-11e6-9de6-2beb54f453b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:295","type":"CtInvocationImpl","sourcecode":"ctx1.reset()"},"variableMap":{"ctx1":"digest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-1},{"failures":[],"tindex":"2abb8bc7-1162-11e6-9de6-6d2bf0a03de4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"length","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"status":-2},{"failures":[],"tindex":"2abbb2d8-1162-11e6-9de6-4561cdfd0bcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:58","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.StringEncoder = stringEncoder"},"status":-2},{"failures":[],"tindex":"2abbb2d9-1162-11e6-9de6-29e3e4eb33ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:157","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[boolean ? 4096 : 8192]"},"status":-2},{"failures":[68,70,71,74,81,82,83,84],"tindex":"2abbb2da-1162-11e6-9de6-c96a24b1e2ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[1]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:452","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2])"},"status":-1},{"failures":[],"tindex":"2abbb2db-1162-11e6-9de6-8165f6c08b2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"status":-2},{"failures":[],"tindex":"2abbd9ec-1162-11e6-9de6-61d150eac420","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"status":-3},{"failures":[],"tindex":"2abbd9ed-1162-11e6-9de6-cdc25abb6275","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:283","type":"CtTryImpl","sourcecode":"try {\n    return new java.lang.String(bytes , charsetName);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e);\n}"},"status":-2},{"failures":[],"tindex":"2abbd9ee-1162-11e6-9de6-79470485457e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":0},{"failures":[131,132,133],"tindex":"2abbd9ef-1162-11e6-9de6-0b6b6b24ce70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:878","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[],"tindex":"2abc0100-1162-11e6-9de6-a94cd0347d6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"line":"es1","org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT":"es2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":36,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}