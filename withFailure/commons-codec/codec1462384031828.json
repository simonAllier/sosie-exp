{"failureDictionary":{"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":0,"org.apache.commons.codec.language.NysiisTest.testSnat":16,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":26,"org.apache.commons.codec.language.NysiisTest.testDropBy":18,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":23,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":24,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":22,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":25,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":1,"org.apache.commons.codec.language.NysiisTest.testDad":6,"org.apache.commons.codec.language.NysiisTest.testRule2":10,"org.apache.commons.codec.language.NysiisTest.testRule1":9,"org.apache.commons.codec.language.NysiisTest.testOthers":19,"org.apache.commons.codec.language.NysiisTest.testRule7":13,"org.apache.commons.codec.language.NysiisTest.testRule6":12,"org.apache.commons.codec.language.NysiisTest.testRule5":11,"org.apache.commons.codec.language.NysiisTest.testTranan":20,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":2,"org.apache.commons.codec.language.NysiisTest.testDan":7,"org.apache.commons.codec.language.NysiisTest.testFal":8,"org.apache.commons.codec.language.NysiisTest.testCap":5,"org.apache.commons.codec.language.NysiisTest.testSnad":15,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":17,"org.apache.commons.codec.language.NysiisTest.testBran":14,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":21},"transformations":[{"failures":[],"tindex":"3af2c198-1220-11e6-b5c7-096a59400bb1","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")","position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)","position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":0},{"failures":[0,1],"tindex":"3af2e8a9-1220-11e6-b5c7-4d6d7c9beb61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"k+\", \"K\")","position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[2],"tindex":"3af2e8aa-1220-11e6-b5c7-a34361f131fb","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3af30fbb-1220-11e6-b5c7-5569a9214724","series":0,"name":"replace","transplant":{"toString":"int startSrc = 0","position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int u = v & e0","position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"status":-2},{"failures":[],"tindex":"3af30fbc-1220-11e6-b5c7-db24ae377897","series":0,"name":"replace","transplant":{"toString":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"variableMap":{"name":"text","firstLetter":"text"},"type":"adrStmt","transplantationPoint":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:104","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"3af336cd-1220-11e6-b5c7-0fcbb78a1c06","series":0,"name":"add","transplant":{"toString":"left = (t >>> 1) | (t << 31)","position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"index","left":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:559","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"3af336ce-1220-11e6-b5c7-1d515e27c439","series":0,"name":"replace","transplant":{"toString":"buffer.append(rounds)","position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"variableMap":{"buffer":"key","rounds":"i"},"type":"adrStmt","transplantationPoint":{"toString":"key.append(chars[i])","position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"key.append(chars[i])"},"status":-1},{"failures":[],"tindex":"3af336cf-1220-11e6-b5c7-8d75212ee944","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index = handleSC(value, result, index)","position":"org.apache.commons.codec.language.DoubleMetaphone:631","type":"CtAssignmentImpl","sourcecode":"index = handleSC(value, result, index)"},"status":-2},{"failures":[22,23,24,25],"tindex":"3af35de0-1220-11e6-b5c7-19e103370c29","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"input","this":"this","content":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}","position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"status":-1},{"failures":[],"tindex":"3af384f1-1220-11e6-b5c7-57c7c45d92c6","series":0,"name":"add","transplant":{"toString":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 3)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, \"AS\", \"OS\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, \"A\", \"O\"))) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"variableMap":{"index":"tmpLen","value":"substring"},"type":"adrStmt","transplantationPoint":{"toString":"while ((tmpLen--) > 0) {\n    char c1 = cs.charAt((index1++));\n    char c2 = substring.charAt((index2++));\n    if (c1 == c2) {\n        continue;\n    } \n    if (!ignoreCase) {\n        return false;\n    } \n    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.binary.CharSequenceUtils:58","type":"CtWhileImpl","sourcecode":"while ((tmpLen--) > 0) {\n    char char = cs.charAt((index1++));\n    char char = substring.charAt((index2++));\n    if (c1 == c2) {\n        continue;\n    } \n    if (!ignoreCase) {\n        return false;\n    } \n    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"3af3ac02-1220-11e6-b5c7-bd4530218ae1","series":0,"name":"replace","transplant":{"toString":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ci\", \"si\")","position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-3},{"failures":[],"tindex":"3af3ac03-1220-11e6-b5c7-31834da054cb","series":0,"name":"replace","transplant":{"toString":"len += (((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)","position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"len","len":"todo","lineLength":"len"},"type":"adrStmt","transplantationPoint":{"toString":"todo -= len","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-3},{"failures":[],"tindex":"3af3d314-1220-11e6-b5c7-6b2921e56533","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"lsScanner.close()","position":"org.apache.commons.codec.language.bm.Languages:196","type":"CtInvocationImpl","sourcecode":"lsScanner.close()"},"status":-2},{"failures":[],"tindex":"3af3d315-1220-11e6-b5c7-e11e97f7a9ed","series":0,"name":"replace","transplant":{"toString":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())","position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())"},"variableMap":{"value":"upperName"},"type":"adrStmt","transplantationPoint":{"toString":"return upperName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"status":-2},{"failures":[26],"tindex":"3af3d316-1220-11e6-b5c7-331ee1b591ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (printable == null) {\n    printable = org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (printable == null) {\n    printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"3af3fa27-1220-11e6-b5c7-c9b204200aeb","series":0,"name":"replace","transplant":{"toString":"s = (s >>> 16) | (t & -65536)","position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"b","t":"b"},"type":"adrStmt","transplantationPoint":{"toString":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:290","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":16,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}