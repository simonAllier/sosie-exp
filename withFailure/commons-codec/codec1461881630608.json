{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":24,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":9,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":15,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":5,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":21,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":22,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":2,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":23},"transformations":[{"failures":[],"tindex":"7c7a36a5-0d8e-11e6-934f-a94930759cba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:515","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"7c7a5db6-0d8e-11e6-934f-959e1530514e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-1},{"failures":[18],"tindex":"7c7a5db7-0d8e-11e6-934f-b9bdbbf11c2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"status":-1},{"failures":[],"tindex":"7c7a5db8-0d8e-11e6-934f-59f157bf39e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"tempResult = altCtx.digest()"},"variableMap":{"tempResult":"finalb","altCtx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"finalb = ctx.digest()"},"status":-3},{"failures":[19,20],"tindex":"7c7a5db9-0d8e-11e6-934f-2d74d376c21d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-1},{"failures":[],"tindex":"7c7a5dba-0d8e-11e6-934f-279b368a18bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:405","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[],"tindex":"7c7a84cb-0d8e-11e6-934f-c35d3d40c489","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:411","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)))"},"status":-2},{"failures":[21,22,23,24],"tindex":"7c7a84cc-0d8e-11e6-934f-27fb58e52ab2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[],"tindex":"7c7a84cd-0d8e-11e6-934f-2d01f47cfab0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:424","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":0},{"failures":[],"tindex":"7c7a84ce-0d8e-11e6-934f-a976bb8c8b12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:94","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"7c7a84cf-0d8e-11e6-934f-5f3dcee6f12a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:156","type":"CtCaseImpl","sourcecode":"case 'A' :"},"status":-3},{"failures":[25],"tindex":"7c7a84d0-0d8e-11e6-934f-7d7bb37310e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-1},{"failures":[],"tindex":"7c7a84d1-0d8e-11e6-934f-2d4f4a37e917","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:383","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":0},{"failures":[],"tindex":"7c7aabe2-0d8e-11e6-934f-afd87582e415","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"status":0},{"failures":[],"tindex":"7c7aabe3-0d8e-11e6-934f-395e6d2a6443","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e)"},"status":0},{"failures":[19],"tindex":"7c7aabe4-0d8e-11e6-934f-cdfcf67960e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"a ^= t << n"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:742","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":16,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}