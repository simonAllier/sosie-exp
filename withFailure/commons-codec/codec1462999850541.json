{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":24,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":51,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":74,"org.apache.commons.codec.binary.Base64Test.testTriplets":78,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":18,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":40,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":34,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":37,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":62,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":89,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":99,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":55,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":84,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":54,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":85,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":23,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":88,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":86,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":87,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":1,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":69,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":32,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":94,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":35,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":79,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":6,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":92,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":101,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":50,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":100,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":17,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":11,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":27,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":14,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":43,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":41,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc":67,"org.apache.commons.codec.binary.Base64Test.testBase64":97,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":48,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":10,"org.apache.commons.codec.binary.Base64Test.testUUID":81,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":90,"org.apache.commons.codec.binary.Base64Test.testSingletons":93,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":102,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":66,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":96,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":46,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":45,"org.apache.commons.codec.binary.Base64Test.testPairs":80,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":57,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":65,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":39,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":53,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":76,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":75,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":5,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":71,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":13,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":47,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":68,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":83,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":95,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":31,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":72,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":42,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":9,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":82},"transformations":[{"failures":[0],"tindex":"0b7fa808-17ba-11e6-8174-75c987932625","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"m+\", \"M\")","position":"org.apache.commons.codec.language.Caverphone2:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[],"tindex":"0b7fcf19-17ba-11e6-8174-5133a21649f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"mac.init(keySpec)","position":"org.apache.commons.codec.digest.HmacUtils:183","type":"CtInvocationImpl","sourcecode":"mac.init(keySpec)"},"status":-2},{"failures":[1,2,3,4,5,6,7],"tindex":"0b7fcf1a-17ba-11e6-8174-75f0c32984ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx1.update(saltBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"0b7fcf1b-17ba-11e6-8174-4977257b137f","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","prefix":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.endsWith(input, content)","position":"org.apache.commons.codec.language.bm.Rule:540","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.endsWith(input, content)"},"status":-2},{"failures":[8,9,10],"tindex":"0b7ff62c-17ba-11e6-8174-073a103ee50e","series":0,"name":"add","transplant":{"toString":"index += 3","position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:707","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"0b7ff62d-17ba-11e6-8174-b715d063b7b9","series":0,"name":"replace","transplant":{"toString":"int cnt = keyBytes.length","position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = keyBytes.int"},"variableMap":{"keyBytes":"bytes","length":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final int l = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])","position":"org.apache.commons.codec.net.QuotedPrintableCodec:366","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-3},{"failures":[11,12,13,14,15,16],"tindex":"0b7ff62e-17ba-11e6-8174-5554e4979eda","series":0,"name":"replace","transplant":{"toString":"final byte[] buf = new byte[avail]","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"decodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(decodeSize, context)","position":"org.apache.commons.codec.binary.Base32:375","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"0b7ff62f-17ba-11e6-8174-d14d5b61c76c","series":0,"name":"replace","transplant":{"toString":"appendPrimary(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"name2RtLStart"},"type":"adrStmt","transplantationPoint":{"toString":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:319","type":"CtIfImpl","sourcecode":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} "},"status":-2},{"failures":[],"tindex":"0b801d40-17ba-11e6-8174-bdce78558665","series":0,"name":"replace","transplant":{"toString":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)","position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"length","tempResult":"bytes","pBytes":"tmp","cp":"length"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (bytes.length) ; i++) {\n    final byte b = bytes[i];\n    if (b != (org.apache.commons.codec.net.QCodec.UNDERSCORE)) {\n        tmp[i] = b;\n    } else {\n        tmp[i] = org.apache.commons.codec.net.QCodec.BLANK;\n    }\n}","position":"org.apache.commons.codec.net.QCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final byte byte = bytes[i];\n    if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        tmp[i] = b;\n    } else {\n        tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0b801d41-17ba-11e6-8174-232e93ddf88c","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.i += patternLength","position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"to","i":"to"},"type":"adrStmt","transplantationPoint":{"toString":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.SEP, from)","position":"org.apache.commons.codec.net.RFC1522Codec:152","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-3},{"failures":[],"tindex":"0b801d42-17ba-11e6-8174-df8df4ae69fb","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))","position":"org.apache.commons.codec.binary.StringUtils:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))"},"variableMap":{"cs1":"suffix","cs2":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if ((input.charAt(i)) != (suffix.charAt(j))) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (suffix.charAt(j))) {\n    return false;\n} "},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"0b804453-17ba-11e6-8174-ad8e6208cea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"name1LtRStart = name1.substring(i, (i + 1))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"status":-1},{"failures":[],"tindex":"0b804454-17ba-11e6-8174-9f70c8c286d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:194","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":0},{"failures":[32],"tindex":"0b804455-17ba-11e6-8174-d3562a54bf3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"q\", \"k\")","position":"org.apache.commons.codec.language.Caverphone2:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":-1},{"failures":[],"tindex":"0b804456-17ba-11e6-8174-758c447c5e23","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.WWW_FORM_URL, bytes)","position":"org.apache.commons.codec.net.URLCodec:194","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet, bytes)"},"status":-2},{"failures":[33],"tindex":"0b806b67-17ba-11e6-8174-afca21987815","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha512Digest().digest(data)"},"variableMap":{"data":"tmp"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)","position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"status":-1},{"failures":[],"tindex":"0b806b68-17ba-11e6-8174-e5dde3890bf2","series":0,"name":"replace","transplant":{"toString":"final int[] schedule = new int[32]","position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int[] results = new int[2]","position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[],"tindex":"0b806b69-17ba-11e6-8174-f7ad2c175c4b","series":0,"name":"replace","transplant":{"toString":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))","position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"str2"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1).equals(org.apache.commons.codec.language.AbstractCaverphone.this.encode(str2))","position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1).equals(org.apache.commons.codec.language.AbstractCaverphone.this.encode(str2))"},"status":-2},{"failures":[],"tindex":"0b806b6a-17ba-11e6-8174-2d6b7bfd4682","series":0,"name":"add","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"0b80927b-17ba-11e6-8174-5dcb23c2aa2e","series":0,"name":"replace","transplant":{"toString":"final int open = ph.indexOf(\"[\")","position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = ph.indexOf(\"[\")"},"variableMap":{"ph":"line"},"type":"adrStmt","transplantationPoint":{"toString":"final int cmtI = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.CMT)","position":"org.apache.commons.codec.language.bm.Lang:153","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-1},{"failures":[11,13,14,15,16,60,61,62,63,64,65,66],"tindex":"0b80927c-17ba-11e6-8174-f5d9f7cda5bd","series":0,"name":"replace","transplant":{"toString":"key[i] = ((byte)(iChar << 1))","position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"org.apache.commons.codec.binary.Base32.MASK_5BITS","i":"org.apache.commons.codec.binary.Base32.MASK_5BITS","key":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 15))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[67],"tindex":"0b80927d-17ba-11e6-8174-51f96361cf71","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")","position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)","position":"org.apache.commons.codec.binary.StringUtils:286","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)"},"status":-1},{"failures":[32,68],"tindex":"0b80b98e-17ba-11e6-8174-5b727b41a4be","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"wy\", \"Wy\")","position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"k+\", \"K\")","position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[],"tindex":"0b80b98f-17ba-11e6-8174-0f917342b3da","series":0,"name":"replace","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"offset"},"type":"adrStmt","transplantationPoint":{"toString":"if (doEncode) {\n    baseNCodec.encode(b, offset, len, context);\n} else {\n    baseNCodec.decode(b, offset, len, context);\n}","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"0b80b990-17ba-11e6-8174-094e97b8a918","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((((bigInt.bitLength()) % 8) != 0) && ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))) {\n    return bigBytes;\n} ","position":"org.apache.commons.codec.binary.Base64:754","type":"CtIfImpl","sourcecode":"if ((((bigInt.bitLength()) % 8) != 0) && ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))) {\n    return bigBytes;\n} "},"status":0},{"failures":[],"tindex":"0b80b991-17ba-11e6-8174-652bbde4a8c5","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"name"},"type":"adrStmt","transplantationPoint":{"toString":"if (nameLength > (org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX)) {\n    final java.lang.String firstThree = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE);\n    final java.lang.String lastThree = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE)), nameLength);\n    return firstThree + lastThree;\n} else {\n    return name;\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:162","type":"CtIfImpl","sourcecode":"if (nameLength > (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int);\n    final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength);\n    return firstThree + lastThree;\n} else {\n    return name;\n}"},"status":-3},{"failures":[],"tindex":"0b80e0a2-17ba-11e6-8174-dd6cd602d429","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('\\\\')","position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i)","position":"org.apache.commons.codec.net.URLCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[69,70,68],"tindex":"0b80e0a3-17ba-11e6-8174-d1d6112c45c7","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"g\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ci\", \"si\")","position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[],"tindex":"0b80e0a4-17ba-11e6-8174-1b39d573cfac","series":0,"name":"replace","transplant":{"toString":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)","position":"org.apache.commons.codec.digest.Sha2Crypt:266","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"variableMap":{"altCtx":"ctx","algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"toString":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)","position":"org.apache.commons.codec.digest.Sha2Crypt:361","type":"CtAssignmentImpl","sourcecode":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-3},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"0b80e0a5-17ba-11e6-8174-47a46d178810","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, isChunked, urlSafe, java.lang.Integer.MAX_VALUE)","position":"org.apache.commons.codec.binary.Base64:640","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, isChunked, urlSafe, java.lang.Integer.java.lang.Integer.int)"},"status":-1},{"failures":[],"tindex":"0b80e0a6-17ba-11e6-8174-1df3f647bd15","series":0,"name":"add","transplant":{"toString":"str = str.substring(1)","position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"s+\", \"S\")","position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-2},{"failures":[],"tindex":"0b80e0a7-17ba-11e6-8174-6b13cae8023a","series":0,"name":"replace","transplant":{"toString":"write(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"variableMap":{"singleByte":"pBytes"},"type":"adrStmt","transplantationPoint":{"toString":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":32,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}