{"failureDictionary":{"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":4,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":3},"transformations":[{"failures":[],"tindex":"5096f5df-16de-11e6-8456-d9db7f08cc29","series":0,"name":"replace","transplant":{"toString":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"q\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":-3},{"failures":[0,1,2],"tindex":"50971cf0-16de-11e6-8456-d3f2e3357e46","series":0,"name":"add","transplant":{"toString":"if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n    result.append(\"KS\");\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:744","type":"CtIfImpl","sourcecode":"if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n    result.append(\"KS\");\n} "},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (((index == 1) && (isVowel(charAt(value, 0)))) && (!slavoGermanic)) {\n    result.append(\"KN\", \"N\");\n} else if (((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"EY\"))) && ((charAt(value, (index + 1))) != 'Y')) && (!slavoGermanic)) {\n    result.append(\"N\", \"KN\");\n} else {\n    result.append(\"KN\");\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:413","type":"CtIfImpl","sourcecode":"if (((index == 1) && (isVowel(charAt(value, 0)))) && (!slavoGermanic)) {\n    result.append(\"KN\", \"N\");\n} else if (((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"EY\"))) && ((charAt(value, (index + 1))) != 'Y')) && (!slavoGermanic)) {\n    result.append(\"N\", \"KN\");\n} else {\n    result.append(\"KN\");\n}"},"status":-1},{"failures":[],"tindex":"50974401-16de-11e6-8456-833dbd2fae6e","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")","position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")"},"status":-2},{"failures":[3,4],"tindex":"50974402-16de-11e6-8456-278945a45168","series":0,"name":"replace","transplant":{"toString":"compareCode = 0","position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"right"},"type":"adrStmt","transplantationPoint":{"toString":"out[1] = right","position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"out[1] = right"},"status":-1},{"failures":[],"tindex":"50974403-16de-11e6-8456-4955f3fa9564","series":0,"name":"add","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (!found) {\n    subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:351","type":"CtIfImpl","sourcecode":"if (!found) {\n    subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n} "},"status":-2},{"failures":[],"tindex":"50974404-16de-11e6-8456-6fe06d435ac8","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:600","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"variableMap":{"str":"name","charset":"name"},"type":"adrStmt","transplantationPoint":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[],"tindex":"50976b15-16de-11e6-8456-ada3b6e27823","series":0,"name":"replace","transplant":{"toString":"if (lRulesIS == null) {\n    throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN)));\n} ","position":"org.apache.commons.codec.language.bm.Lang:133","type":"CtIfImpl","sourcecode":"if (lRulesIS == null) {\n    throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)));\n} "},"variableMap":{"lRulesIS":"obj","org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.Caverphone:74","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} "},"status":-3},{"failures":[],"tindex":"50976b16-16de-11e6-8456-4b32a411e7ff","series":0,"name":"replace","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int b = bytes[i]","position":"org.apache.commons.codec.net.URLCodec:167","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-2},{"failures":[],"tindex":"50976b17-16de-11e6-8456-ffb6ef825add","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"finalRules can not be null\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.length)) + \" parts: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:304","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location))"},"status":0},{"failures":[],"tindex":"50976b18-16de-11e6-8456-0be9fdbca7ce","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"50979229-16de-11e6-8456-6f250b987fae","series":0,"name":"add","transplant":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"charZero"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.setCharAt(0, charZero)","position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":11,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}