{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":52,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":236,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":176,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":243,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":196,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":63,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":61,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":62,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":110,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":241,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":229,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":224,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":160,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":77,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":212,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":231,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":186,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":251,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":33,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":19,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":32,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":18,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":76,"org.apache.commons.codec.language.NysiisTest.testCap":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":235,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":254,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":127,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":252,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":2,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":214,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":38,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":12,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":21,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":210,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":129,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":147,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":194,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":221,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":266,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":222,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":24,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":27,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":128,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":105,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":159,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":261,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":53,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":201,"org.apache.commons.codec.language.SoundexTest.testB650":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":240,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":100,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":177,"org.apache.commons.codec.language.SoundexTest.testNewInstance":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":232,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":255,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":185,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":91,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":247,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":148,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":181,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":263,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":126,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":162,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":135,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":92,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":206,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":11,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":29,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":3,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":156,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":228,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":79,"org.apache.commons.codec.language.NysiisTest.testDropBy":83,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":104,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":175,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":163,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":238,"org.apache.commons.codec.binary.Base64Test.testUUID":1,"org.apache.commons.codec.binary.Base64Test.testSingletons":5,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":173,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":133,"org.apache.commons.codec.language.NysiisTest.testRule2":116,"org.apache.commons.codec.language.NysiisTest.testRule1":115,"org.apache.commons.codec.language.NysiisTest.testRule7":119,"org.apache.commons.codec.language.NysiisTest.testRule6":118,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":188,"org.apache.commons.codec.language.NysiisTest.testRule5":117,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":174,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":225,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":140,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":216,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":69,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":132,"org.apache.commons.codec.language.NysiisTest.testBran":82,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":124,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":230,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":10,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":20,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":39,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":199,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":226,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":153,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":166,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":234,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":157,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":171,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":70,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":56,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":143,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":256,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":209,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":257,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":35,"org.apache.commons.codec.language.NysiisTest.testDad":112,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":138,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":170,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":178,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":78,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":155,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":268,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":109,"org.apache.commons.codec.language.NysiisTest.testDan":113,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":245,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":202,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":144,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":172,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":246,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":253,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":93,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":152,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":198,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":242,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":260,"org.apache.commons.codec.language.NysiisTest.testSnat":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":103,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":182,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":267,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":203,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":197,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":74,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":180,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":145,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":9,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":164,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":94,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":49,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":47,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":158,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":136,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":244,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":139,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":8,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":125,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":167,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":204,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":151,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":239,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":73,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":71,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":72,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":195,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":200,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":81,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":161,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":183,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":184,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":207,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":40,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":141,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":51,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":54,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":48,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":65,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":101,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":259,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":41,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":179,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":15,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":86,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":55,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":90,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":227,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":223,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":154,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":218,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":249,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":131,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":150,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":14,"org.apache.commons.codec.language.NysiisTest.testTranan":123,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":250,"org.apache.commons.codec.language.NysiisTest.testFal":114,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":37,"org.apache.commons.codec.language.NysiisTest.testSnad":120,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":215,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":205,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":84,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":217,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":57,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":58,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":59,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":107,"org.apache.commons.codec.binary.Base64Test.testBase64":134,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":26,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":213,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":16,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":208,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":211,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":187,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":88,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData":96,"org.apache.commons.codec.binary.Base64Test.testCodec112":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":142,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":262,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":146,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":193,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":30,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":87,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":258,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":149,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":169,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":220,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":66,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":95,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":130,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":137,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":219,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":89,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":191,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":190,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":233,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":42,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":80,"org.apache.commons.codec.language.NysiisTest.testOthers":122,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":6,"org.apache.commons.codec.language.SoundexTest.testDifference":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":106,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":189,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":192,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange":248,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":25,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":168,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":237,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":265,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":264,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":165},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"d9949e79-403c-11e6-9e20-dfc0cb937a15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:354","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-1},{"failures":[],"tindex":"d995afea-403c-11e6-9e20-c9548f98bdb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"variableMap":{"rContext":"lContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:646","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))"},"status":-2},{"failures":[],"tindex":"d995d6fb-403c-11e6-9e20-e1f103d9ce12","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"line","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:279","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-2},{"failures":[17,18,19,20,21,22,23,24],"tindex":"d995d6fc-403c-11e6-9e20-cfa4192edff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:443","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chrs)"},"status":-1},{"failures":[25,26],"tindex":"d995d6fd-403c-11e6-9e20-0353eecd29bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"status":-1},{"failures":[],"tindex":"d995d6fe-403c-11e6-9e20-4777b1ebbc81","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:66","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('!')"},"status":0},{"failures":[27,28,29],"tindex":"d995fe0f-403c-11e6-9e20-8d660e82d9c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"failures":[],"tindex":"d995fe10-403c-11e6-9e20-af8adc018694","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:70","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('%')"},"status":0},{"failures":[],"tindex":"d995fe11-403c-11e6-9e20-ef33b038e1b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"value2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return isDoubleMetaphoneEqual(value1, value2, false)"},"status":-2},{"failures":[30],"tindex":"d995fe12-403c-11e6-9e20-7be31eabbd19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"failures":[31,32,33],"tindex":"d9962523-403c-11e6-9e20-975295a91d4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"index","org.apache.commons.codec.net.URLCodec.RADIX":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 1))"},"status":-1},{"failures":[],"tindex":"d9962524-403c-11e6-9e20-dd372c8f217c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:342","type":"CtAssignmentImpl","sourcecode":"nextChar = input.getNextChar()"},"status":-2},{"failures":[],"tindex":"d9962525-403c-11e6-9e20-7d2d5946ac04","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"index","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"index","rounds":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"status":-2},{"failures":[34,35],"tindex":"d9964c36-403c-11e6-9e20-c52dd031a802","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"status":-1},{"failures":[],"tindex":"d9964c37-403c-11e6-9e20-09783b91129c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[],"tindex":"d9964c38-403c-11e6-9e20-7d12f50be85a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"variableMap":{"b":"lineSeparator","offset":"pos","value":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:375","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[],"tindex":"d9964c39-403c-11e6-9e20-bdac92db9afa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[0], finalb[6], finalb[12], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"status":-2},{"failures":[36,37,38,39,40],"tindex":"d996734a-403c-11e6-9e20-f1d05f1bea77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:144","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-1},{"failures":[],"tindex":"d996734b-403c-11e6-9e20-2518f12229e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"len","len":"todo","lineLength":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-2},{"failures":[],"tindex":"d996734c-403c-11e6-9e20-2565d4e95be7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"d996734d-403c-11e6-9e20-35c68aeaea66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:487","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(str, org.apache.commons.codec.net.QuotedPrintableCodec.this.getCharset())"},"status":-2},{"failures":[],"tindex":"d9969a5e-403c-11e6-9e20-519b422eaa29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"status":-2},{"failures":[34,41,42],"tindex":"d9969a5f-403c-11e6-9e20-b347b34129a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-1},{"failures":[43,44,45,46,47,48,49,50],"tindex":"d9969a60-403c-11e6-9e20-71765fa70b30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"status":-1},{"failures":[49],"tindex":"d9969a61-403c-11e6-9e20-eb1899bb832f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:440","type":"CtInvocationImpl","sourcecode":"lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)))"},"status":-1},{"failures":[],"tindex":"d996c172-403c-11e6-9e20-d1574aedb629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"status":-2},{"failures":[],"tindex":"d996c173-403c-11e6-9e20-27d91ed10ce9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d996c174-403c-11e6-9e20-21660d3fd8a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:361","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.indexOf(c)"},"status":-2},{"failures":[],"tindex":"d996c175-403c-11e6-9e20-4f818d680c00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:289","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"d996e886-403c-11e6-9e20-cf11c62f8ec3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:551","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'L') {\n    if (conditionL0(value, index)) {\n        result.appendPrimary('L');\n    } else {\n        result.append('L');\n    }\n    index += 2;\n} else {\n    index++;\n    result.append('L');\n}"},"status":-2},{"failures":[43,44,45,46,47,48,49,50],"tindex":"d996e887-403c-11e6-9e20-cba3bbfc9e6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (name2.length()) - 1"},"variableMap":{"name2":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:703","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.bm.Rule.this.java.lang.String.length()"},"status":-1},{"failures":[],"tindex":"d996e888-403c-11e6-9e20-9bad4b9ec869","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"status":-2},{"failures":[],"tindex":"d996e889-403c-11e6-9e20-419d2a3c9aeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"t = left"},"variableMap":{"t":"decodeSize","left":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"status":0},{"failures":[51,52,25,26],"tindex":"d996e88a-403c-11e6-9e20-773954c2a82a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:709","type":"CtIfImpl","sourcecode":"if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n    if (isVowel(charAt(value, (index + 1)))) {\n        result.append('A', 'F');\n    } else {\n        result.append('A');\n    }\n    index++;\n} else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.appendAlternate('F');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}"},"status":-1},{"failures":[53,54],"tindex":"d9970f9b-403c-11e6-9e20-dbb91742cdfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"d9970f9c-403c-11e6-9e20-e17eb3fd150a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:103","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('~')"},"status":0},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,31,32,33],"tindex":"d9970f9d-403c-11e6-9e20-4d0d19c7938c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(out)"},"status":-1},{"failures":[74],"tindex":"d9970f9e-403c-11e6-9e20-83eb7eb033f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-1},{"failures":[],"tindex":"d9970f9f-403c-11e6-9e20-73c4d55a902a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"ch","mapped":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"ch = java.lang.Character.toLowerCase(ch)"},"status":0},{"failures":[],"tindex":"d9970fa0-403c-11e6-9e20-e9b3f027a677","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:173","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementDefault.split(\"\\\\|\")"},"variableMap":{"replacementDefault":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:172","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementBeforeVowel.split(\"\\\\|\")"},"status":-2},{"failures":[75,76],"tindex":"d99736b1-403c-11e6-9e20-fdb90ad39a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"status":-1},{"failures":[],"tindex":"d99736b2-403c-11e6-9e20-5f4e46ff72c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:177","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"d99736b3-403c-11e6-9e20-534b56074183","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":-2},{"failures":[77,78],"tindex":"d999a7b4-403c-11e6-9e20-d3af6c954017","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"status":-1},{"failures":[79,80],"tindex":"d999a7b5-403c-11e6-9e20-9b992a1efbb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest)"},"status":-1},{"failures":[81],"tindex":"d999a7b6-403c-11e6-9e20-4bafbd94da0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[82,83],"tindex":"d999cec7-403c-11e6-9e20-e9cd586dc245","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"status":-1},{"failures":[],"tindex":"d999cec8-403c-11e6-9e20-4f62cc48ef2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-2},{"failures":[77,34,41,42,84,78,35,85],"tindex":"d999cec9-403c-11e6-9e20-b3f29112b4da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:340","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize)"},"variableMap":{"sBytes":"altResult","blocksize":"cnt","tempResult":"altResult","cp":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:230","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, cnt)"},"status":-1},{"failures":[],"tindex":"d999ceca-403c-11e6-9e20-9bbdbe2b92a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:646","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))"},"variableMap":{"lContext":"rContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"status":-2},{"failures":[86],"tindex":"d999cecb-403c-11e6-9e20-f9d24fe7f7b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:46","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(keyBytes, null)"},"status":-1},{"failures":[87,6,88,89,90,91],"tindex":"d999cecc-403c-11e6-9e20-f3d17a4caa17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"base64String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64String)"},"status":-1},{"failures":[],"tindex":"d999f5dd-403c-11e6-9e20-e145fe08bc59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:236","type":"CtInvocationImpl","sourcecode":"scanner.close()"},"status":0},{"failures":[],"tindex":"d999f5de-403c-11e6-9e20-491dfefec944","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"d999f5df-403c-11e6-9e20-3be34dbf8a95","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"altResult","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:260","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":0},{"failures":[92],"tindex":"d999f5e0-403c-11e6-9e20-e3af7745a039","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)"},"status":-1},{"failures":[93,94],"tindex":"d999f5e1-403c-11e6-9e20-372bb9690cb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[],"tindex":"d999f5e2-403c-11e6-9e20-d3387996d2c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:527","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.int"},"variableMap":{"maxPhonemes":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-2},{"failures":[],"tindex":"d999f5e3-403c-11e6-9e20-fdd6a19d72d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"variableMap":{"name2":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"status":-2},{"failures":[77,34,41,42,84,78,35,85],"tindex":"d99a1cf4-403c-11e6-9e20-7191a251a314","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:398","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-1},{"failures":[],"tindex":"d99a1cf5-403c-11e6-9e20-2b1e1e5ba0f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"variableMap":{"folding":"hard"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"status":-2},{"failures":[],"tindex":"d99a1cf6-403c-11e6-9e20-09508cf5ccb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"variableMap":{"rules":"lines"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-2},{"failures":[95,96,97,98],"tindex":"d99a1cf7-403c-11e6-9e20-03d5253d66f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"variableMap":{"upperName":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-1},{"failures":[],"tindex":"d99a1cf8-403c-11e6-9e20-59a54e4cbee5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"rawLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:410","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"status":-2},{"failures":[],"tindex":"d99a1cf9-403c-11e6-9e20-2994e0a469a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:391","type":"CtAssignmentImpl","sourcecode":"code = chr"},"variableMap":{"code":"mapped","chr":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"status":0},{"failures":[99,100,101,102,103,104,105,106,107,108],"tindex":"d99a1cfa-403c-11e6-9e20-d771a68fc594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117,118,119,82,120,121,30,83,122,123,124],"tindex":"d99a440b-403c-11e6-9e20-cb412c91f300","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[25,26],"tindex":"d99a440c-403c-11e6-9e20-09de54e59575","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:817","type":"CtReturnImpl","sourcecode":"return ((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"ORCHES\", \"ARCHIT\", \"ORCHID\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"T\", \"S\"))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"A\", \"O\", \"U\", \"E\")) || (index == 0)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])) || ((index + 1) == ((value.length()) - 1))))"},"status":-1},{"failures":[],"tindex":"d99a440d-403c-11e6-9e20-4d48962be893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"newData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:243","type":"CtReturnImpl","sourcecode":"return newData"},"status":-2},{"failures":[],"tindex":"d99a440e-403c-11e6-9e20-ff81a64eb9df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"nextReplacement","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"nextReplacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:530","type":"CtInvocationImpl","sourcecode":"nextBranch.processNextReplacement(nextReplacement, force)"},"status":-2},{"failures":[],"tindex":"d99a440f-403c-11e6-9e20-23349c0b2ee2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:760","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'H') {\n    result.append('J');\n    index += 2;\n} else {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (slavoGermanic && ((index > 0) && ((charAt(value, (index - 1))) != 'T')))) {\n        result.append(\"S\", \"TS\");\n    } else {\n        result.append('S');\n    }\n    index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[],"tindex":"d99a4410-403c-11e6-9e20-637d365375c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"status":-2},{"failures":[],"tindex":"d99a4411-403c-11e6-9e20-e968812444e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"blocksize","name2Size":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:456","type":"CtIfImpl","sourcecode":"if (blocksize == 32) {\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer);\n} else {\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[21], altResult[42], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[53], altResult[11], altResult[32], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[33], altResult[54], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[40], altResult[61], altResult[19], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer);\n}"},"status":-2},{"failures":[],"tindex":"d99a6b22-403c-11e6-9e20-5fd3b905e3ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[],"tindex":"d99a6b23-403c-11e6-9e20-0bab462bfe6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-2},{"failures":[],"tindex":"d99a6b24-403c-11e6-9e20-3d43fdca901a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[125,126],"tindex":"d99a6b25-403c-11e6-9e20-77f7c9d5a979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[36,37,38,127,39,40],"tindex":"d99a6b26-403c-11e6-9e20-7dc06e80ec51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"urlsafe"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:135","type":"CtIfImpl","sourcecode":"if (urlsafe.get(b)) {\n    if (b == ' ') {\n        b = '+';\n    } \n    buffer.write(b);\n} else {\n    buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte);\n    final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n    final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n    buffer.write(hex1);\n    buffer.write(hex2);\n}"},"status":-1},{"failures":[],"tindex":"d99a6b27-403c-11e6-9e20-21029edfcae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"variableMap":{"ascii":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"failures":[93,128,129,94],"tindex":"d99a9238-403c-11e6-9e20-1151dfcb0544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"u","name2Size":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"status":-1},{"failures":[],"tindex":"d99a9239-403c-11e6-9e20-3f6ca6df6c54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"variableMap":{"lastChar":"code","chr":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-2},{"failures":[130,131,132,87,1,6,133,134,7,88,89,8,135,90,91,136,137,138,139,9,140,141,142,143,144,145,146,147,148,149,10,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,15,16,172,173,174,175,176,177,36,37,38,127,178,179,180,40,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,80,203,204,205,206,207,208,209,210,81,211,92,212,213],"tindex":"d99a923a-403c-11e6-9e20-13945b5b32d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return string.getBytes(charset)"},"status":-1},{"failures":[214,86,77,34,41,42,215,84,78,35,216,85],"tindex":"d99a923b-403c-11e6-9e20-11dd0f215b2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:506","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[],"tindex":"d99a923c-403c-11e6-9e20-9905efcc7147","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:538","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n        return false;\n    } \n}"},"variableMap":{"arrayOctet":"array","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-2},{"failures":[],"tindex":"d99a923d-403c-11e6-9e20-a505b7b12215","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:343","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[],"tindex":"d99ab94e-403c-11e6-9e20-33e714b523fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:287","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[173,174,175,176,177,191,192,193],"tindex":"d99ab94f-403c-11e6-9e20-cb485f40a473","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-1},{"failures":[47,49,50],"tindex":"d99ab950-403c-11e6-9e20-3979d65a650b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":-1},{"failures":[125,126,217],"tindex":"d99ab951-403c-11e6-9e20-cf104092c9bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[218,219,220,221,222],"tindex":"d99ab952-403c-11e6-9e20-75cec91305b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"str","leftCharacter":"str","rightCharacter":"str","location":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:190","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (str.length()) ; i++) {\n    current = getMappingCode(str.charAt(i));\n    if (current == last) {\n        continue;\n    } else if (current != 0) {\n        sBuf.append(current);\n    } \n    last = current;\n}"},"status":-1},{"failures":[],"tindex":"d99ab953-403c-11e6-9e20-abbdcd558588","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"d99ab954-403c-11e6-9e20-5b33c3a5fc32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:365","type":"CtInvocationImpl","sourcecode":"sb.append(c)"},"status":-1},{"failures":[],"tindex":"d99ab955-403c-11e6-9e20-0719f48fb1c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"replacedName","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String java.lang.String = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d99ae066-403c-11e6-9e20-d1c0e5743ea3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"status":0},{"failures":[],"tindex":"d99ae067-403c-11e6-9e20-375456a7823b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"c","lineSeparator":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:115","type":"CtIfImpl","sourcecode":"if (c > 0) {\n    java.io.OutputStream.write(buf, 0, c);\n} "},"status":-2},{"failures":[],"tindex":"d99ae068-403c-11e6-9e20-91113272ac22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":-2},{"failures":[],"tindex":"d99ae069-403c-11e6-9e20-ebb68d6cf463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"status":0},{"failures":[],"tindex":"d99b559a-403c-11e6-9e20-191bddbf5823","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"d99b7cab-403c-11e6-9e20-7b0d0a52abe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:559","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:188","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":0},{"failures":[],"tindex":"d99b7cac-403c-11e6-9e20-578b272bd068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n        context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}