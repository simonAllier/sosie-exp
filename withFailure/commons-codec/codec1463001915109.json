{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":4,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":6,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":7,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":0,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":5,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":9},"transformations":[{"failures":[],"tindex":"da13bb79-17be-11e6-8e22-05fcfc85dbe7","series":0,"name":"replace","transplant":{"toString":"if ((str.length()) == 0) {\n    return str;\n} ","position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":-2},{"failures":[],"tindex":"da13e28a-17be-11e6-8e22-bb4bb0fccac1","series":0,"name":"add","transplant":{"toString":"result = true","position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"concat"},"type":"adrStmt","transplantationPoint":{"toString":"this.concat = concat","position":"org.apache.commons.codec.language.bm.PhoneticEngine:316","type":"CtAssignmentImpl","sourcecode":"this.boolean = concat"},"status":-2},{"failures":[],"tindex":"da13e28b-17be-11e6-8e22-b53d7b02a12a","series":0,"name":"replace","transplant":{"toString":"this.charset = org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET","position":"org.apache.commons.codec.binary.Hex:190","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.java.nio.charset.Charset"},"variableMap":{"charset":"charset","org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"this.charset = charset","position":"org.apache.commons.codec.net.BCodec:69","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = charset"},"status":-3},{"failures":[0],"tindex":"da14099c-17be-11e6-8e22-07d0e8af5b29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (java.lang.String lang : sl.languages) {\n    ls.add(lang);\n}","position":"org.apache.commons.codec.language.bm.Languages:141","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n    ls.add(lang);\n}"},"status":-1},{"failures":[],"tindex":"da14099d-17be-11e6-8e22-97a525404ae2","series":0,"name":"add","transplant":{"toString":"c = (c >>> 2) | (c << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[1,2,3,4,5,6,7],"tindex":"da14099e-17be-11e6-8e22-d1a4eb84e20e","series":0,"name":"replace","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"i","name2Size":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:268","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} "},"status":-1},{"failures":[],"tindex":"da1430af-17be-11e6-8e22-194ffa943bbc","series":0,"name":"add","transplant":{"toString":"final byte[] sBytes = new byte[saltLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[saltLen]"},"variableMap":{"saltLen":"to"},"type":"adrStmt","transplantationPoint":{"toString":"byte[] data = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(text.substring(from, to))","position":"org.apache.commons.codec.net.RFC1522Codec:153","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(text.substring(from, to))"},"status":-2},{"failures":[],"tindex":"da1430b0-17be-11e6-8e22-01d6c0fb84af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[8],"tindex":"da1430b1-17be-11e6-8e22-b3c75365d0d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN)))","position":"org.apache.commons.codec.language.bm.Lang:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"da1430b2-17be-11e6-8e22-3f0e2cfb240a","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"sh\", \"s2\")","position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))","position":"org.apache.commons.codec.digest.Sha2Crypt:541","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"status":-2},{"failures":[],"tindex":"da1457c3-17be-11e6-8e22-0f53211cbe8b","series":0,"name":"replace","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"c"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.COV2CHAR[c])))","position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])))"},"status":-2},{"failures":[9],"tindex":"da1457c4-17be-11e6-8e22-912ec9d2777a","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)","position":"org.apache.commons.codec.digest.DigestUtils:363","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.UTF_16)","position":"org.apache.commons.codec.binary.StringUtils:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":12,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}