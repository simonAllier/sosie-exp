{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":10,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":61,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":19,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":15,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":6,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt":43,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":2,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":58,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt":41,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":51,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":36,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":54,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt":40,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":38,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":14,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":52,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":45,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":27,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":33,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":50,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":39,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":8,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":28,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":63,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":24,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":34,"org.apache.commons.codec.language.SoundexTest.testDifference":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":42,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":48,"org.apache.commons.codec.language.MetaphoneTest.testTCH":53,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":60},"transformations":[{"failures":[0],"tindex":"7e373df2-1164-11e6-87a3-7d392fe54d72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:268","type":"CtIfImpl","sourcecode":"if (rulesIS == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + resName));\n} "},"variableMap":{"resName":"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","rulesIS":"lRulesIS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:133","type":"CtIfImpl","sourcecode":"if (lRulesIS == null) {\n    throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)));\n} "},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"7e376503-1164-11e6-87a3-b909e4794499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"name","key":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"failures":[],"tindex":"7e378c14-1164-11e6-87a3-290d059aa6c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:763","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"7e378c15-1164-11e6-87a3-d34e7aacd472","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:321","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":0},{"failures":[],"tindex":"7e378c16-1164-11e6-87a3-d1e5bd510c1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)"},"status":-2},{"failures":[19,20,21,22,23,24,25,26],"tindex":"7e37b327-1164-11e6-87a3-6be3eedbb1fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"status":-1},{"failures":[],"tindex":"7e37b328-1164-11e6-87a3-87eb0cf08271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-2},{"failures":[],"tindex":"7e37b329-1164-11e6-87a3-8f10d6728cd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.language.Nysiis.CHARS_A"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"7e37b32a-1164-11e6-87a3-db91e3caf23e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"t","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"t","rounds":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-3},{"failures":[],"tindex":"7e37da3b-1164-11e6-87a3-57e135b3401b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:260","type":"CtIfImpl","sourcecode":"if (inMultilineComment) {\n    if (line.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        inMultilineComment = false;\n    } \n    continue;\n} "},"variableMap":{"line":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START","inMultilineComment":"inExtendedComment","org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:181","type":"CtWhileImpl","sourcecode":"while (lsScanner.hasNextLine()) {\n    final java.lang.String java.lang.String = lsScanner.nextLine().trim();\n    if (inExtendedComment) {\n        if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            inExtendedComment = false;\n        } \n    } else {\n        if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            inExtendedComment = true;\n        } else if ((line.length()) > 0) {\n            ls.add(line);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"7e38014c-1164-11e6-87a3-71cc9ef4946d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"index","t":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:539","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"7e38014d-1164-11e6-87a3-875cdf5761a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"variableMap":{"encodeTable":"buffer","org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:222","type":"CtReturnImpl","sourcecode":"return (context.byte[]) != null"},"status":-2},{"failures":[19,23,24,25,26],"tindex":"7e38014e-1164-11e6-87a3-d77236fdce33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"7e38014f-1164-11e6-87a3-dbc2b557d95d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37],"tindex":"7e382860-1164-11e6-87a3-b73023a2bbe0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:493","type":"CtInvocationImpl","sourcecode":"currentBranches.add(new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch())"},"status":-1},{"failures":[],"tindex":"7e382861-1164-11e6-87a3-87a9fbe7961b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:274","type":"CtLocalVariableImpl","sourcecode":"final char char = getNextChar()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:334","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[38,39,19,40,20,41,21,22,42,23,43,24,25,44,26],"tindex":"7e382862-1164-11e6-87a3-3b77a3f37518","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:146","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-1},{"failures":[],"tindex":"7e382863-1164-11e6-87a3-edc6bd6f9350","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"status":-2},{"failures":[],"tindex":"7e384f74-1164-11e6-87a3-490abfd03b5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)"},"variableMap":{"key":"org.apache.commons.codec.binary.Base64.DECODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:444","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b]"},"status":-2},{"failures":[],"tindex":"7e384f75-1164-11e6-87a3-4b7f7d9209f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"variableMap":{"e":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"7e384f76-1164-11e6-87a3-41ebf11fd895","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return index + 3"},"variableMap":{"index":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:301","type":"CtReturnImpl","sourcecode":"return context.boolean ? org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int : 0"},"status":-2},{"failures":[],"tindex":"7e387687-1164-11e6-87a3-410183db89fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":-2},{"failures":[],"tindex":"7e387688-1164-11e6-87a3-4febd18865c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:229","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"7e387689-1164-11e6-87a3-bb0e1a9e2bb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:174","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    if (b == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        hasUnderscores = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"7e38768a-1164-11e6-87a3-7f7294cfe294","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:294","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))"},"status":-2},{"failures":[45],"tindex":"7e389d9b-1164-11e6-87a3-79e9f5661ff5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"7e389d9c-1164-11e6-87a3-41cf98bfe843","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":0},{"failures":[46,45,47,48,49],"tindex":"7e389d9d-1164-11e6-87a3-8b259fb0e7e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-1},{"failures":[50,51],"tindex":"7e389d9e-1164-11e6-87a3-998cbe275cd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:231","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (org.apache.commons.codec.language.Soundex.this.getSoundexMapping().int))) {\n    throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + ch));\n} "},"status":-1},{"failures":[],"tindex":"7e38c4af-1164-11e6-87a3-0b9422ec5e30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[52,53],"tindex":"7e38c4b0-1164-11e6-87a3-7b0b9228170c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[20,21,22],"tindex":"7e38c4b1-1164-11e6-87a3-5d4c198a57ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer)"},"status":-1},{"failures":[],"tindex":"7e38c4b2-1164-11e6-87a3-fbd2460cef63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"newData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"status":-3},{"failures":[],"tindex":"7e38ebc3-1164-11e6-87a3-d941dd26d71f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"7e38ebc4-1164-11e6-87a3-dfeb3a0ee02a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:314","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"variableMap":{"index":"cmtI","value":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-2},{"failures":[],"tindex":"7e38ebc5-1164-11e6-87a3-7d94ad68c9fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)"},"status":-2},{"failures":[54,55],"tindex":"7e3912d6-1164-11e6-87a3-9f7132ac889c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"status":-1},{"failures":[],"tindex":"7e3912d7-1164-11e6-87a3-3d91f647615f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"status":-2},{"failures":[45],"tindex":"7e3912d8-1164-11e6-87a3-19985dcfb424","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[56,57,45,47,48,49],"tindex":"7e3912d9-1164-11e6-87a3-558bafeef888","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[],"tindex":"7e3939ea-1164-11e6-87a3-a7bb32a5b9f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"symb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:265","type":"CtIfImpl","sourcecode":"if (!(isPreviousChar(local, n, 'C'))) {\n    code.append(symb);\n} "},"status":-2},{"failures":[],"tindex":"7e3939eb-1164-11e6-87a3-a78831dc4901","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"cs1","prefix":"cs1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"status":0},{"failures":[],"tindex":"7e3939ec-1164-11e6-87a3-d1b3113ac0c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[58,59],"tindex":"7e3960fd-1164-11e6-87a3-e1a0dfdb14d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[],"tindex":"7e3960fe-1164-11e6-87a3-25820df35cc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:51","type":"CtIfImpl","sourcecode":"if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n    return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n} "},"status":0},{"failures":[60,61],"tindex":"7e3960ff-1164-11e6-87a3-5f882e89c48c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:351","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(c, d, 8, 16711935, results)"},"variableMap":{"c":"right","d":"left","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)"},"status":-1},{"failures":[],"tindex":"7e398810-1164-11e6-87a3-7967bc424708","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"savedPos","to":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-2},{"failures":[],"tindex":"7e398811-1164-11e6-87a3-0549abf0f779","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":-2},{"failures":[60,61],"tindex":"7e398812-1164-11e6-87a3-53775ae21097","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"a ^= t << n"},"variableMap":{"a":"left","t":"right","n":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"status":-1},{"failures":[],"tindex":"7e398813-1164-11e6-87a3-c7873be08bc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"status":0},{"failures":[],"tindex":"7e398814-1164-11e6-87a3-8925f44d467f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"bytes","bigBytes":"bytes","len":"length","startSrc":"length","startDst":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final byte byte = bytes[i];\n    if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        tmp[i] = b;\n    } else {\n        tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7e39af25-1164-11e6-87a3-8f8c703e4b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":-2},{"failures":[62,63],"tindex":"7e39af26-1164-11e6-87a3-61b06d259fd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:118","type":"CtUnaryOperatorImpl","sourcecode":"diff++"},"status":-1},{"failures":[48,49],"tindex":"7e39af27-1164-11e6-87a3-4fabb6e28587","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:809","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"7e39af28-1164-11e6-87a3-11e685bf6806","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":55,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}