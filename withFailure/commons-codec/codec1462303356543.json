{"failureDictionary":{"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":6,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":14,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":32,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":2,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":4,"org.apache.commons.codec.binary.Base64Test.testBase64":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":5,"org.apache.commons.codec.binary.Base64Test.testTriplets":7,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":29,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":26,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":33,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":42,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":20,"org.apache.commons.codec.binary.Base64Test.testUUID":9,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":22,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":23,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":44,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":13,"org.apache.commons.codec.binary.Base64Test.testSingletons":17,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":21,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":41,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":34,"org.apache.commons.codec.binary.Base64Test.testPairs":8,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":39,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt":37,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":24,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":11,"org.apache.commons.codec.binary.Base64Test.testCodec112":15,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":38,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":40,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":30,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":10,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":36,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"64bb31b5-1164-11e6-b787-29dd8787fa6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"lastChar","c2":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"status":-2},{"failures":[],"tindex":"64bb58c6-1164-11e6-b787-8592a57e0ae6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"variableMap":{"encodedBlockSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"status":-2},{"failures":[0,1],"tindex":"64bb58c7-1164-11e6-b787-b3c8e8995220","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"status":-1},{"failures":[0,1],"tindex":"64bb58c8-1164-11e6-b787-01c923899a99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:309","type":"CtAssignmentImpl","sourcecode":"left = results[0]"},"status":-1},{"failures":[],"tindex":"64bb7fd9-1164-11e6-b787-43294e3cab50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:258","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + resName))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"64bb7fda-1164-11e6-b787-a7df4301c313","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"variableMap":{"ascii":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"status":-1},{"failures":[],"tindex":"64bba6eb-1164-11e6-b787-d538fd3b8187","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"status":-2},{"failures":[22,23],"tindex":"64bba6ec-1164-11e6-b787-0ded292f2121","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return index + 2"},"variableMap":{"index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1},{"failures":[24,5,25,6,26,27,28,29,30,31,20,21],"tindex":"64bba6ed-1164-11e6-b787-f1031092e289","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:252","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-1},{"failures":[],"tindex":"64bba6ee-1164-11e6-b787-739ea8ad267c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:648","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.PhonemeExpr = phoneme"},"status":-2},{"failures":[],"tindex":"64bbcdff-1164-11e6-b787-4322480127f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"variableMap":{"i":"cmtI","name1":"line","name1LtRStart":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[32,33,34],"tindex":"64bbce00-1164-11e6-b787-9d257440070d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"status":-1},{"failures":[35,36,37,38,39,40,41,42],"tindex":"64bbce01-1164-11e6-b787-395a88c1a13e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[43,44],"tindex":"64bbf512-1164-11e6-b787-5d5c6d801037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"variableMap":{"result":"result","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[],"tindex":"64bbf513-1164-11e6-b787-1fa38cfcacb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:178","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(langIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"langIS":"lRulesIS","org.apache.commons.codec.language.bm.ResourceConstants.ENCODING":"org.apache.commons.codec.language.bm.ResourceConstants.ENCODING"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:137","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(lRulesIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":15,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}