{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"f2e65213-1182-11e6-a8c7-bb035cacfad3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:324","type":"CtAssignmentImpl","sourcecode":"text = preprocess(text)"},"status":0},{"failures":[],"tindex":"f2e67924-1182-11e6-a8c7-770316bfaad9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:312","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)))"},"status":0},{"failures":[],"tindex":"f2e6a035-1182-11e6-a8c7-4ffb47f90aea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:464","type":"CtInvocationImpl","sourcecode":"sb.append(\", loc='\").append(java.lang.String).append('\\'')"},"status":0},{"failures":[],"tindex":"f2e6a036-1182-11e6-a8c7-916da63eb174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_N"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"f2e6a037-1182-11e6-a8c7-0f59ea6f7d0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:415","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType)) {\n    if (input.startsWith((l + \" \"))) {\n        final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n        final java.lang.String java.lang.String = l + remainder;\n        return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n    } \n}"},"status":0},{"failures":[],"tindex":"f2e6c748-1182-11e6-a8c7-2fbce485530a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"variableMap":{"c":"i","d":"c","results":"org.apache.commons.codec.digest.UnixCrypt.COV2CHAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])))"},"status":0},{"failures":[],"tindex":"f2e6c749-1182-11e6-a8c7-27fb9fdb41d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:38","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":0},{"failures":[],"tindex":"f2e6c74a-1182-11e6-a8c7-974e2058fea0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:461","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":0},{"failures":[],"tindex":"f2e6c74b-1182-11e6-a8c7-6da2d458d829","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":0},{"failures":[],"tindex":"f2e6ee5c-1182-11e6-a8c7-95af507fd602","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:221","type":"CtInvocationImpl","sourcecode":"langs.retainAll(rule.java.util.Set<java.lang.String>)"},"status":0},{"failures":[],"tindex":"f2e6ee5d-1182-11e6-a8c7-a7fb41845aee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"status":0},{"failures":[],"tindex":"f2e6ee5e-1182-11e6-a8c7-fbabcd00f146","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"f2e6ee5f-1182-11e6-a8c7-09a27dcdefbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":0},{"failures":[],"tindex":"f2e6ee60-1182-11e6-a8c7-9f629d0ec174","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:80","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)"},"status":0},{"failures":[],"tindex":"f2e71571-1182-11e6-a8c7-5526ce9a9896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":0},{"failures":[],"tindex":"f2e71572-1182-11e6-a8c7-29adedefa270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:250","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":0},{"failures":[],"tindex":"f2e71573-1182-11e6-a8c7-6b9fbb9bba7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"right","t":"eSwap0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"status":0},{"failures":[],"tindex":"f2e73c84-1182-11e6-a8c7-652b6abccad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:362","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : subBuilder.getPhonemes()) {\n    if (phonemes.containsKey(newPhoneme)) {\n        final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = phonemes.remove(newPhoneme);\n        final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n        phonemes.put(mergedPhoneme, mergedPhoneme);\n    } else {\n        phonemes.put(newPhoneme, newPhoneme);\n    }\n}"},"status":0},{"failures":[],"tindex":"f2e73c85-1182-11e6-a8c7-7384ffe7e58a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key), valueToDigest).doFinal()"},"status":0},{"failures":[],"tindex":"f2e73c86-1182-11e6-a8c7-c12bb8f0bf93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:155","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = saltString.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":0},{"failures":[],"tindex":"f2e76397-1182-11e6-a8c7-e9d343214207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":0},{"failures":[],"tindex":"f2e76398-1182-11e6-a8c7-f5847d6db79d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"status":0},{"failures":[],"tindex":"f2e76399-1182-11e6-a8c7-2b0e06fbacf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":0},{"failures":[],"tindex":"f2e7639a-1182-11e6-a8c7-ebfc11bd1997","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:138","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (scanner.hasNextLine()) {\n        final java.lang.String java.lang.String = scanner.nextLine();\n        java.lang.String java.lang.String = rawLine;\n        if (inExtendedComment) {\n            if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = false;\n            } \n        } else {\n            if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                inExtendedComment = true;\n            } else {\n                final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n                if (cmtI >= 0) {\n                    line = line.substring(0, cmtI);\n                } \n                line = line.trim();\n                if ((line.length()) == 0) {\n                    continue;\n                } \n                final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n                if ((parts.int) != 3) {\n                    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n                } \n                final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n                final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n                final boolean boolean = parts[2].equals(\"true\");\n                rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n            }\n        }\n    }\n} finally {\n    scanner.close();\n}"},"status":0},{"failures":[],"tindex":"f2e78aab-1182-11e6-a8c7-bb508020b708","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:149","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 3) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n    } \n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n    final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n    final boolean boolean = parts[2].equals(\"true\");\n    rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n}"},"status":0},{"failures":[],"tindex":"f2e7b1bc-1182-11e6-a8c7-c1c000fe8f17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:349","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":0},{"failures":[],"tindex":"f2e7b1bd-1182-11e6-a8c7-d54fcb7100d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":0},{"failures":[],"tindex":"f2e7b1be-1182-11e6-a8c7-1fa7b2089b68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":0},{"failures":[],"tindex":"f2e7b1bf-1182-11e6-a8c7-d1c4e4b3a291","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_N"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"f2e7d8d0-1182-11e6-a8c7-bde38ec8034f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:516","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.clear();\n} "},"status":0},{"failures":[],"tindex":"f2e7d8d1-1182-11e6-a8c7-f72a08aefa7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:201","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(value)))"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":0},{"failures":[],"tindex":"f2e7d8d2-1182-11e6-a8c7-f11091909417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":0},{"failures":[],"tindex":"f2e7d8d3-1182-11e6-a8c7-e5492844d1bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:177","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"f2e7ffe4-1182-11e6-a8c7-5b84307362a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"status":0},{"failures":[],"tindex":"f2e7ffe5-1182-11e6-a8c7-6b5dd53993ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:557","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"f2e7ffe6-1182-11e6-a8c7-bb76f6040ee5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"variableMap":{"left":"c","right":"c","results":"org.apache.commons.codec.digest.UnixCrypt.COV2CHAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])))"},"status":0},{"failures":[],"tindex":"f2e826f7-1182-11e6-a8c7-b1963c8d7ee0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":0},{"failures":[],"tindex":"f2e826f8-1182-11e6-a8c7-5368ccec938e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:989","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"status":0},{"failures":[],"tindex":"f2e826f9-1182-11e6-a8c7-63f5285440f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"status":0},{"failures":[],"tindex":"f2e826fa-1182-11e6-a8c7-df5d18ce82b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"variableMap":{"lines":"lines"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:433","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim();\n    if (incl.contains(\" \")) {\n        throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n    } else {\n        lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n    }\n} else {\n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 4) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        try {\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2]);\n            final org.apache.commons.codec.language.bm.Rule.PhonemeExpr org.apache.commons.codec.language.bm.Rule.PhonemeExpr = org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[3]));\n            final int int = currentLine;\n            final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule = new org.apache.commons.codec.language.bm.Rule(pat, lCon, rCon, ph) {\n                private final int myLine = cLine;\n\n                private final java.lang.String loc = location;\n\n                @java.lang.Override\n                public java.lang.String toString() {\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                    sb.append(\"Rule\");\n                    sb.append(\"{line=\").append(int);\n                    sb.append(\", loc='\").append(java.lang.String).append('\\'');\n                    sb.append(\", pat='\").append(pat).append('\\'');\n                    sb.append(\", lcon='\").append(lCon).append('\\'');\n                    sb.append(\", rcon='\").append(rCon).append('\\'');\n                    sb.append('}');\n                    return sb.toString();\n                }\n            };\n            final java.lang.String java.lang.String = r.java.lang.String.substring(0, 1);\n            java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = lines.get(patternKey);\n            if (rules == null) {\n                rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n                lines.put(patternKey, rules);\n            } \n            rules.add(r);\n        } catch (final java.lang.IllegalArgumentException e) {\n            throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"f2e84e0b-1182-11e6-a8c7-7bcf650d44f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"status":0},{"failures":[],"tindex":"f2e84e0c-1182-11e6-a8c7-01588cf63c47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:175","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = parts[2].equals(\"true\")"},"status":0},{"failures":[],"tindex":"f2e84e0d-1182-11e6-a8c7-a7ad1c3602f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"status":0},{"failures":[],"tindex":"f2e84e0e-1182-11e6-a8c7-cffb0441c2f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"status":0},{"failures":[],"tindex":"f2e84e0f-1182-11e6-a8c7-a13e0be103a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:744","type":"CtIfImpl","sourcecode":"if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n    result.append(\"KS\");\n} "},"status":0},{"failures":[],"tindex":"f2e84e10-1182-11e6-a8c7-f1d6148f0778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":0},{"failures":[],"tindex":"f2e87521-1182-11e6-a8c7-1354436b044d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":47,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}