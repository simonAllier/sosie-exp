{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"6b3ccc4c-11b8-11e6-87df-616397e4ccc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:466","type":"CtInvocationImpl","sourcecode":"sb.append(\", lcon='\").append(lCon).append('\\'')"},"status":0},{"failures":[],"tindex":"6b3cf35d-11b8-11e6-87df-b94492ffe719","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:454","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"6b3cf35e-11b8-11e6-87df-0db86c40f70a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = accentedWord.length()"},"variableMap":{"accentedWord":"es2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"status":0},{"failures":[],"tindex":"6b3cf35f-11b8-11e6-87df-39fe6ac7e435","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)"},"status":0},{"failures":[],"tindex":"6b3d1a70-11b8-11e6-87df-79cf46877661","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return firstLetter + name"},"status":0},{"failures":[],"tindex":"6b3d1a71-11b8-11e6-87df-f718975974ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"6b3d1a72-11b8-11e6-87df-efd0b5c48eb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":0},{"failures":[],"tindex":"6b3d4183-11b8-11e6-87df-19db33801374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:315","type":"CtAssignmentImpl","sourcecode":"name2RtLStart = name2.substring(i, (i + 1))"},"status":0},{"failures":[],"tindex":"6b3d4184-11b8-11e6-87df-ff8165a4f15c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:154","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"variableMap":{"cmtI":"count","line":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":0},{"failures":[],"tindex":"6b3d4185-11b8-11e6-87df-07c89eb695e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:356","type":"CtIfImpl","sourcecode":"if ((index > 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHAE\"))) {\n    result.append('K', 'X');\n    return index + 2;\n} else if (conditionCH0(value, index)) {\n    result.append('K');\n    return index + 2;\n} else if (conditionCH1(value, index)) {\n    result.append('K');\n    return index + 2;\n} else {\n    if (index > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n            result.append('K');\n        } else {\n            result.append('X', 'K');\n        }\n    } else {\n        result.append('X');\n    }\n    return index + 2;\n}"},"status":0},{"failures":[],"tindex":"6b3d6896-11b8-11e6-87df-d355f47bd1cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = ctx1.digest()"},"variableMap":{"ctx1":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:283","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-3},{"failures":[],"tindex":"6b3d6897-11b8-11e6-87df-c99d3b2cddcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"status":0},{"failures":[],"tindex":"6b3d6898-11b8-11e6-87df-ab8e8f0511b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":0},{"failures":[],"tindex":"6b3d6899-11b8-11e6-87df-51e0b218e24c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":0},{"failures":[],"tindex":"6b3d8faa-11b8-11e6-87df-c75120348e10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:153","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":0},{"failures":[],"tindex":"6b3d8fab-11b8-11e6-87df-b97e6dd2c98f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:95","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txtLength = txt.length()) == 0)) {\n    return \"\";\n} "},"status":0},{"failures":[],"tindex":"6b3d8fac-11b8-11e6-87df-5df481ced4e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":0},{"failures":[],"tindex":"6b3d8fad-11b8-11e6-87df-7506e03241fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:269","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"6b3db6be-11b8-11e6-87df-dd69b6900132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"variableMap":{"minRating":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.this.int"},"status":0},{"failures":[],"tindex":"6b3db6bf-11b8-11e6-87df-f581a058f52e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:139","type":"CtAssignmentImpl","sourcecode":"name = removeDoubleConsonants(name)"},"variableMap":{"name":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[],"tindex":"6b3db6c0-11b8-11e6-87df-4fbc94bc0203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (ascii instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)));\n} "},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:505","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":0},{"failures":[],"tindex":"6b3db6c1-11b8-11e6-87df-e771a0df45e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"variableMap":{"ii":"startSrc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"status":0},{"failures":[],"tindex":"6b3dddd2-11b8-11e6-87df-93c3bd14dd90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":0},{"failures":[],"tindex":"6b3dddd3-11b8-11e6-87df-798d50b20b63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer)"},"status":0},{"failures":[],"tindex":"6b3dddd4-11b8-11e6-87df-e904e88600d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":0},{"failures":[],"tindex":"6b3e04e5-11b8-11e6-87df-6159879fb8e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"status":0},{"failures":[],"tindex":"6b3e04e6-11b8-11e6-87df-fdbf1c0da36b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[],"tindex":"6b3e04e7-11b8-11e6-87df-71f8b1f08c56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e)"},"status":0},{"failures":[],"tindex":"6b3e04e8-11b8-11e6-87df-178927e936bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:430","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType) {\n    case SEPHARDIC :\n        for (final java.lang.String java.lang.String : words) {\n            final java.lang.String[] java.lang.String[] = aWord.split(\"'\");\n            final java.lang.String java.lang.String = parts[((parts.int) - 1)];\n            words2.add(lastPart);\n        }\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case ASHKENAZI :\n        words2.addAll(words);\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case GENERIC :\n        words2.addAll(words);\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Unreachable case: \" + (org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType)));\n}"},"status":0},{"failures":[],"tindex":"6b3e2bf9-11b8-11e6-87df-a1408341ce49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)"},"status":0},{"failures":[],"tindex":"6b3e2bfa-11b8-11e6-87df-b73149688e52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"status":0},{"failures":[],"tindex":"6b3e2bfb-11b8-11e6-87df-0b9a40f3f785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":0},{"failures":[],"tindex":"6b3e530c-11b8-11e6-87df-3ff03fcd248c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:496","type":"CtForImpl","sourcecode":"for (int int = 0 ; index < (input.length()) ; index++) {\n    final char char = input.charAt(index);\n    if (java.lang.Character.isWhitespace(ch)) {\n        continue;\n    } \n    final java.lang.String java.lang.String = input.substring(index);\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.get(ch);\n    if (rules == null) {\n        continue;\n    } \n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch> = branching ? new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>() : java.util.Collections.java.util.Collections.java.util.List;\n    for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : rules) {\n        if (rule.matches(inputContext)) {\n            if (branching) {\n                nextBranches.clear();\n            } \n            final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n            final boolean boolean = ((replacements.int) > 1) && branching;\n            for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n                for (final java.lang.String java.lang.String : replacements) {\n                    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n                    final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                    nextBranch.processNextReplacement(nextReplacement, force);\n                    if (branching) {\n                        nextBranches.add(nextBranch);\n                    } else {\n                        break;\n                    }\n                }\n            }\n            if (branching) {\n                currentBranches.clear();\n                currentBranches.addAll(nextBranches);\n            } \n            index += (rule.getPatternLength()) - 1;\n            break;\n        } \n    }\n    lastChar = ch;\n}"},"status":0},{"failures":[],"tindex":"6b3e7a1d-11b8-11e6-87df-2fc72317f763","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":0},{"failures":[],"tindex":"6b3ea12e-11b8-11e6-87df-c10b7f90d430","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:341","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : phonemeBuilder.getPhonemes()) {\n    org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.empty(phoneme.getLanguages());\n    final java.lang.String java.lang.String = phoneme.getPhonemeText().toString();\n    for (int int = 0 ; i < (phonemeText.length()) ; ) {\n        final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(finalRules , phonemeText , subBuilder , i , int).invoke();\n        final boolean boolean = rulesApplication.isFound();\n        subBuilder = rulesApplication.getPhonemeBuilder();\n        if (!found) {\n            subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n        } \n        i = rulesApplication.getI();\n    }\n    for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : subBuilder.getPhonemes()) {\n        if (phonemes.containsKey(newPhoneme)) {\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = phonemes.remove(newPhoneme);\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n            phonemes.put(mergedPhoneme, mergedPhoneme);\n        } else {\n            phonemes.put(newPhoneme, newPhoneme);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"6b3ea12f-11b8-11e6-87df-07d43967b32d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"es1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"status":0},{"failures":[],"tindex":"6b3ec840-11b8-11e6-87df-2b47a12696dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(((java.lang.String)(source)))"},"status":0},{"failures":[],"tindex":"6b3ec841-11b8-11e6-87df-5387203183bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"status":0},{"failures":[],"tindex":"6b3ec842-11b8-11e6-87df-5dc62a8f2ed5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:155","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":0},{"failures":[],"tindex":"6b3ec843-11b8-11e6-87df-97d72a20fbb3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"altCtx.reset()"},"variableMap":{"altCtx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"status":0},{"failures":[],"tindex":"6b3eef54-11b8-11e6-87df-8900bc3c65dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:223","type":"CtInvocationImpl","sourcecode":"langs.removeAll(rule.java.util.Set<java.lang.String>)"},"status":0},{"failures":[],"tindex":"6b3eef55-11b8-11e6-87df-efcbfbd2f7d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":0},{"failures":[],"tindex":"6b3eef56-11b8-11e6-87df-eb7d12ff13cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":0},{"failures":[],"tindex":"6b3eef57-11b8-11e6-87df-f58654cfa691","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":0},{"failures":[],"tindex":"6b3eef58-11b8-11e6-87df-2bc309d74aad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":0},{"failures":[],"tindex":"6b3f1669-11b8-11e6-87df-8f360b6e1b01","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":0},{"failures":[],"tindex":"6b3f166a-11b8-11e6-87df-6542f5f114c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:143","type":"CtIfImpl","sourcecode":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = true;\n    } else {\n        final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n        if (cmtI >= 0) {\n            line = line.substring(0, cmtI);\n        } \n        line = line.trim();\n        if ((line.length()) == 0) {\n            continue;\n        } \n        final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n        if ((parts.int) != 3) {\n            throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n        } \n        final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(parts[0]);\n        final java.lang.String[] java.lang.String[] = parts[1].split(\"\\\\+\");\n        final boolean boolean = parts[2].equals(\"true\");\n        rules.add(new org.apache.commons.codec.language.bm.Lang.LangRule(pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(langs)) , accept));\n    }\n}"},"status":0},{"failures":[],"tindex":"6b3f166b-11b8-11e6-87df-17145d165e09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[],"tindex":"6b3f166c-11b8-11e6-87df-29908ab0ef29","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:313","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":0},{"failures":[],"tindex":"6b3f166d-11b8-11e6-87df-294d84d4cebc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:278","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"6b3f3d7e-11b8-11e6-87df-7f77c7d51776","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"status":0},{"failures":[],"tindex":"6b3f3d7f-11b8-11e6-87df-a90f29815687","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"status":0},{"failures":[],"tindex":"6b3f3d80-11b8-11e6-87df-5552ba68328e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":0},{"failures":[],"tindex":"6b3f3d81-11b8-11e6-87df-717537f7a534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":0},{"failures":[],"tindex":"6b3f3d82-11b8-11e6-87df-7bd63bc3ecb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:341","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : phonemeBuilder.getPhonemes()) {\n    org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.empty(phoneme.getLanguages());\n    final java.lang.String java.lang.String = phoneme.getPhonemeText().toString();\n    for (int int = 0 ; i < (phonemeText.length()) ; ) {\n        final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(finalRules , phonemeText , subBuilder , i , int).invoke();\n        final boolean boolean = rulesApplication.isFound();\n        subBuilder = rulesApplication.getPhonemeBuilder();\n        if (!found) {\n            subBuilder.append(phonemeText.subSequence(i, (i + 1)));\n        } \n        i = rulesApplication.getI();\n    }\n    for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : subBuilder.getPhonemes()) {\n        if (phonemes.containsKey(newPhoneme)) {\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = phonemes.remove(newPhoneme);\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n            phonemes.put(mergedPhoneme, mergedPhoneme);\n        } else {\n            phonemes.put(newPhoneme, newPhoneme);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"6b3f3d83-11b8-11e6-87df-779379ef4b58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"6b3f6494-11b8-11e6-87df-c160b72dd61c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:372","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1))"},"variableMap":{"ph":"test","open":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:364","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = string.substring(index, (index + (test.length())))"},"status":0},{"failures":[],"tindex":"6b3f6495-11b8-11e6-87df-0d4db4908a0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:395","type":"CtInvocationImpl","sourcecode":"output.addRight(code)"},"status":0},{"failures":[],"tindex":"6b3f6496-11b8-11e6-87df-bd3f7fa7682e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"variableMap":{"prev":"next","curr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"status":0},{"failures":[],"tindex":"6b3f6497-11b8-11e6-87df-f7ec7b6f3a1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key), valueToDigest).doFinal()"},"status":0},{"failures":[],"tindex":"6b3f6498-11b8-11e6-87df-71992db35b17","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"mappedChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":0},{"failures":[],"tindex":"6b3f6499-11b8-11e6-87df-fb69cc7396b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":0},{"failures":[],"tindex":"6b3f649a-11b8-11e6-87df-5fa5e6eb9204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_N"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"6b3f8bab-11b8-11e6-87df-0906363fa123","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"status":0},{"failures":[],"tindex":"6b3f8bac-11b8-11e6-87df-ef46147e8019","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":65,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}