{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":100,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":54,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":20,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":18,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":75,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":92,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":74,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":69,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":85,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":9,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":53,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":63,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":0,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":61,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":64,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":2,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":91,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":31,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":33,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":32,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":109,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":97,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":108,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":65,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":30,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":101,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":28,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":29,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":93,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":105,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":102,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":98,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":80,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":37,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":81,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":112,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":5,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":89,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":44,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":79,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":103,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":62,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":22,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":36,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":42,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":55,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":82,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":60,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":12,"org.apache.commons.codec.language.SoundexTest.testB650":17,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":50,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":95,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":107,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":51,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":4,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":87,"org.apache.commons.codec.language.SoundexTest.testNewInstance":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":113,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":104,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":39,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":57,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":14,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":47,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":88,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":15,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":68,"org.apache.commons.codec.language.NysiisTest.testDropBy":35,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":111,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":73,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":11,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":38,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":83,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":70,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":10,"org.apache.commons.codec.language.NysiisTest.testRule1":34,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":1,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":114,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":45,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":66,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":94,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":26,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":84,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":96,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":6,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":23,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":78,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":86,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":106,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":110,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":41,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":48,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":27,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":77,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":72,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":56,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":58,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":115,"org.apache.commons.codec.language.SoundexTest.testDifference":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":67,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":7,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":99,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":8},"transformations":[{"failures":[0,1],"tindex":"07bfe383-17be-11e6-a2ef-f50f0ad8d8d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())","position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"07c00a94-17be-11e6-a2ef-b3fa8c803c91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < ((bytes.length) - 3) ; i++) {\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH)) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        pos = 1;\n    }\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        pos = 1;\n    }\n}"},"status":-1},{"failures":[7],"tindex":"07c00a95-17be-11e6-a2ef-1d9cce675180","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.DoubleMetaphone:802","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"07c00a96-17be-11e6-a2ef-51eabb689c54","series":0,"name":"replace","transplant":{"toString":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"folding","value":"input","element":"input"},"type":"adrStmt","transplantationPoint":{"toString":"for (char ch : input.toCharArray()) {\n    if (java.lang.Character.isWhitespace(ch)) {\n        continue;\n    } \n    ch = java.lang.Character.toLowerCase(ch);\n    if ((folding) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))) {\n        ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS.get(ch);\n    } \n    sb.append(ch);\n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:379","type":"CtForEachImpl","sourcecode":"for (char char : input.toCharArray()) {\n    if (java.lang.Character.isWhitespace(ch)) {\n        continue;\n    } \n    ch = java.lang.Character.toLowerCase(ch);\n    if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n        ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n    } \n    sb.append(ch);\n}"},"status":-2},{"failures":[],"tindex":"07c031a7-17be-11e6-a2ef-03874e6d5836","series":0,"name":"replace","transplant":{"toString":"final java.lang.String[] charsToTrim = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] result = new java.lang.String[currentBranches.size()]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:552","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[currentBranches.size()]"},"status":-2},{"failures":[8,9],"tindex":"07c031a8-17be-11e6-a2ef-d35cade4267c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"c = results[1]","position":"org.apache.commons.codec.digest.UnixCrypt:350","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-1},{"failures":[10],"tindex":"07c031a9-17be-11e6-a2ef-31b949c129bf","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)","position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha384Digest(), data)","position":"org.apache.commons.codec.digest.DigestUtils:564","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha384Digest(), data)"},"status":-1},{"failures":[],"tindex":"07c058ba-17be-11e6-a2ef-a3998fac0ca2","series":0,"name":"replace","transplant":{"toString":"if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n    break;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"n","len":"w"},"type":"adrStmt","transplantationPoint":{"toString":"while ((n--) > 0) {\n    buffer.append(org.apache.commons.codec.digest.B64.B64T.charAt((w & 63)));\n    w >>= 6;\n}","position":"org.apache.commons.codec.digest.B64:60","type":"CtWhileImpl","sourcecode":"while ((n--) > 0) {\n    buffer.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt((w & 63)));\n    w >>= 6;\n}"},"status":-3},{"failures":[],"tindex":"07c058bb-17be-11e6-a2ef-874f5e0a7427","series":0,"name":"add","transplant":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int minRating = 0","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:251","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"07c058bc-17be-11e6-a2ef-5b345b86075d","series":0,"name":"replace","transplant":{"toString":"singleByte[0] = ((byte)(i))","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(i))"},"variableMap":{"i":"pos","singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)))","position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-3},{"failures":[],"tindex":"07c058bd-17be-11e6-a2ef-1fab62a7ffbb","series":0,"name":"replace","transplant":{"toString":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"variableMap":{"b":"sBytes","c":"saltLen","u":"saltLen","y":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((i % 3) != 0) {\n    ctx.update(sBytes, 0, saltLen);\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:378","type":"CtIfImpl","sourcecode":"if ((i % 3) != 0) {\n    ctx.update(sBytes, 0, saltLen);\n} "},"status":-2},{"failures":[8,9],"tindex":"07c07fce-17be-11e6-a2ef-018e23cd1264","series":0,"name":"replace","transplant":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"left"},"type":"adrStmt","transplantationPoint":{"toString":"out[0] = left","position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":-1},{"failures":[7,11],"tindex":"07c07fcf-17be-11e6-a2ef-b7ba17db0e1a","series":0,"name":"add","transplant":{"toString":"result.append('K', 'X')","position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"07c07fd0-17be-11e6-a2ef-83c134dbf706","series":0,"name":"replace","transplant":{"toString":"if ((context.modulus) == 0) {\n    buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n} ","position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"variableMap":{"ibitWorkArea":"c","pos":"c","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"c","context":"context","buffer":"buf","modulus":"c"},"type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.encode(buf, 0, c, context)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-3},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"07c0a6e1-17be-11e6-a2ef-dff0f7228fca","series":0,"name":"replace","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new java.lang.String(out)","position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(out)"},"status":-1},{"failures":[],"tindex":"07c0a6e2-17be-11e6-a2ef-9f7a1496fce8","series":0,"name":"add","transplant":{"toString":"final java.lang.String[] charsToTrim = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] result = new java.lang.String[currentBranches.size()]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:552","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[currentBranches.size()]"},"status":-2},{"failures":[],"tindex":"07c0a6e3-17be-11e6-a2ef-fb35948b9f90","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:314","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"variableMap":{"index":"num","value":"org.apache.commons.codec.digest.B64.B64T"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.B64T.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.B64T.length())));\n}","position":"org.apache.commons.codec.digest.B64:74","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())));\n}"},"status":-2},{"failures":[],"tindex":"07c0cdf4-17be-11e6-a2ef-3dcfb9303b5f","series":0,"name":"replace","transplant":{"toString":"(length)++","position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:469","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-3},{"failures":[],"tindex":"07c0cdf5-17be-11e6-a2ef-6fee996a5f9d","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"variableMap":{"data":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[],"tindex":"07c0cdf6-17be-11e6-a2ef-5d7ebae89b0b","series":0,"name":"replace","transplant":{"toString":"java.lang.String saltString","position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String text = input.toLowerCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.bm.Lang:215","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[34,35],"tindex":"07c0f507-17be-11e6-a2ef-33983f6e1ceb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_MAC.matcher(str).replaceFirst(\"MCC\")","position":"org.apache.commons.codec.language.Nysiis:261","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"MCC\")"},"status":-1},{"failures":[],"tindex":"07c0f508-17be-11e6-a2ef-713c7ee4cebd","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((cachedString) == null) {\n    cachedString = builder.toString();\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null) {\n    java.lang.String = java.lang.StringBuilder.toString();\n} "},"status":-2},{"failures":[36],"tindex":"07c0f509-17be-11e6-a2ef-63c1a41570eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"local.setCharAt(0, 'W')","position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"local.setCharAt(0, 'W')"},"status":-1},{"failures":[],"tindex":"07c0f50a-17be-11e6-a2ef-27b73c58643e","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"appendAlternate(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-2},{"failures":[],"tindex":"07c0f50b-17be-11e6-a2ef-e9341d0a3e6d","series":0,"name":"replace","transplant":{"toString":"final int nextIndex = getPatternLength()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int diff = 0","position":"org.apache.commons.codec.language.SoundexUtils:115","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[31,32,33],"tindex":"07c11c1c-17be-11e6-a2ef-fb7fb24c19cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (('H' == hwChar) || ('W' == hwChar)) {\n    final char preHWChar = str.charAt((index - 2));\n    final char firstCode = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n    if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n        return 0;\n    } \n} ","position":"org.apache.commons.codec.language.Soundex:189","type":"CtIfImpl","sourcecode":"if (('H' == hwChar) || ('W' == hwChar)) {\n    final char char = str.charAt((index - 2));\n    final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n    if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n        return 0;\n    } \n} "},"status":-1},{"failures":[8,9],"tindex":"07c11c1d-17be-11e6-a2ef-7d58ea420b18","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)","position":"org.apache.commons.codec.digest.UnixCrypt:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)"},"variableMap":{"left":"right","right":"left","results":"results"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)","position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"status":-1},{"failures":[],"tindex":"07c11c1e-17be-11e6-a2ef-1321408307aa","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.phonemeBuilder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:196","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"},"variableMap":{"phonemeBuilder":"phonemeBuilder"},"type":"adrStmt","transplantationPoint":{"toString":"return phonemeBuilder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:335","type":"CtReturnImpl","sourcecode":"return phonemeBuilder"},"status":-3},{"failures":[37,38,39,40,41,42,43],"tindex":"07c11c1f-17be-11e6-a2ef-875eb060fde5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx.update(saltBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"07c11c20-17be-11e6-a2ef-cb9a8f24ddc1","series":0,"name":"replace","transplant":{"toString":"final java.lang.StringBuilder code = new java.lang.StringBuilder(10)","position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder result = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:458","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[7,11,44],"tindex":"07c14331-17be-11e6-a2ef-0b6c451fdf40","series":0,"name":"replace","transplant":{"toString":"cnt -= blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"index","cnt":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[45],"tindex":"07c14332-17be-11e6-a2ef-97a9b898150e","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(sBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"tmp"},"type":"adrStmt","transplantationPoint":{"toString":"if (b != (org.apache.commons.codec.net.QCodec.UNDERSCORE)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.BLANK;\n}","position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n}"},"status":-1},{"failures":[46,47,48,49,50,51,52],"tindex":"07c14333-17be-11e6-a2ef-7b4e3216b3b8","series":0,"name":"add","transplant":{"toString":"local.setCharAt(0, 'W')","position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"local.setCharAt(0, 'W')"},"variableMap":{"local":"string"},"type":"adrStmt","transplantationPoint":{"toString":"if ((index > 0) && (index < (string.length()))) {\n    matches = (string.charAt((index - 1))) == c;\n} ","position":"org.apache.commons.codec.language.Metaphone:344","type":"CtIfImpl","sourcecode":"if ((index > 0) && (index < (string.length()))) {\n    matches = (string.charAt((index - 1))) == c;\n} "},"status":-1},{"failures":[53,54,55,56,57,58,59,60],"tindex":"07c14334-17be-11e6-a2ef-ff90edb8c008","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx.update(altResult, 0, cnt)","position":"org.apache.commons.codec.digest.Sha2Crypt:230","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, cnt)"},"status":-1},{"failures":[10],"tindex":"07c14335-17be-11e6-a2ef-f3c8d5ba6bf8","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))","position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))","position":"org.apache.commons.codec.digest.DigestUtils:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-1},{"failures":[],"tindex":"07c14336-17be-11e6-a2ef-e39ce6eb16c6","series":0,"name":"replace","transplant":{"toString":"return colognePhonetic(text1).equals(colognePhonetic(text2))","position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text1).equals(colognePhonetic(text2))"},"variableMap":{"text1":"org.apache.commons.codec.language.Metaphone.VOWELS","text2":"org.apache.commons.codec.language.Metaphone.VOWELS"},"type":"adrStmt","transplantationPoint":{"toString":"return (org.apache.commons.codec.language.Metaphone.VOWELS.indexOf(string.charAt(index))) >= 0","position":"org.apache.commons.codec.language.Metaphone:339","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(string.charAt(index))) >= 0"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"07c16a47-17be-11e6-a2ef-93d781bd9b46","series":0,"name":"replace","transplant":{"toString":"final java.lang.String remainder = input.substring(2)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"variableMap":{"input":"lang"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String resName = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)","position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-1},{"failures":[61,62,63,64,66,68,69,72],"tindex":"07c16a48-17be-11e6-a2ef-a75c68084ee9","series":0,"name":"replace","transplant":{"toString":"int index2 = start","position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final int ipl = i + patternLength","position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"status":-1},{"failures":[],"tindex":"07c16a49-17be-11e6-a2ef-b95a587e1622","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.length)) + \" parts: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.bm.Rule:446","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location))"},"status":-2},{"failures":[],"tindex":"07c16a4a-17be-11e6-a2ef-893ecdec3730","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-2},{"failures":[],"tindex":"07c16a4b-17be-11e6-a2ef-17ca8f69ff06","series":0,"name":"replace","transplant":{"toString":"while (r == 0) {\n    r = read(singleByte, 0, 1);\n}","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:98","type":"CtWhileImpl","sourcecode":"while (r == 0) {\n    r = read(byte[], 0, 1);\n}"},"variableMap":{"r":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH);\n}","position":"org.apache.commons.codec.digest.HmacUtils:769","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    mac.update(buffer, 0, read);\n    read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int);\n}"},"status":-3},{"failures":[61,62,63,64],"tindex":"07c1915c-17be-11e6-a2ef-f3923022b055","series":0,"name":"add","transplant":{"toString":"buffer.append(\"$\")","position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\"|\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"status":-1},{"failures":[],"tindex":"07c1915d-17be-11e6-a2ef-5f2bced29a45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(']')","position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"status":0},{"failures":[],"tindex":"07c1915e-17be-11e6-a2ef-ddfe6f8a6517","series":0,"name":"replace","transplant":{"toString":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX) - (strB.length())))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:339","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())))"},"variableMap":{"strB":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if ((index > 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHAE\"))) {\n    result.append('K', 'X');\n    return index + 2;\n} else if (conditionCH0(value, index)) {\n    result.append('K');\n    return index + 2;\n} else if (conditionCH1(value, index)) {\n    result.append('K');\n    return index + 2;\n} else {\n    if (index > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n            result.append('K');\n        } else {\n            result.append('X', 'K');\n        }\n    } else {\n        result.append('X');\n    }\n    return index + 2;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:356","type":"CtIfImpl","sourcecode":"if ((index > 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHAE\"))) {\n    result.append('K', 'X');\n    return index + 2;\n} else if (conditionCH0(value, index)) {\n    result.append('K');\n    return index + 2;\n} else if (conditionCH1(value, index)) {\n    result.append('K');\n    return index + 2;\n} else {\n    if (index > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n            result.append('K');\n        } else {\n            result.append('X', 'K');\n        }\n    } else {\n        result.append('X');\n    }\n    return index + 2;\n}"},"status":-3},{"failures":[8,79,80,9],"tindex":"07c1915f-17be-11e6-a2ef-ebd812689787","series":0,"name":"replace","transplant":{"toString":"key[i] = ((byte)(iChar << 1))","position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"iValue","i":"iValue","key":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))","position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"status":-1},{"failures":[81],"tindex":"07c19160-17be-11e6-a2ef-9d3179e7c98a","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"g\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^tough\", \"tou2f\")","position":"org.apache.commons.codec.language.Caverphone2:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":-1},{"failures":[],"tindex":"07c1b871-17be-11e6-a2ef-7f48f7d246b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QCodec:226","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"07c1b872-17be-11e6-a2ef-63fe81e1d9b9","series":0,"name":"replace","transplant":{"toString":"phonemeBuilder = rulesApplication.getPhonemeBuilder()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:473","type":"CtAssignmentImpl","sourcecode":"phonemeBuilder = rulesApplication.getPhonemeBuilder()"},"variableMap":{"rulesApplication":"rulesApplication","phonemeBuilder":"subBuilder"},"type":"adrStmt","transplantationPoint":{"toString":"subBuilder = rulesApplication.getPhonemeBuilder()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:349","type":"CtAssignmentImpl","sourcecode":"subBuilder = rulesApplication.getPhonemeBuilder()"},"status":-3},{"failures":[82,83,84,85,86,87,88,89,90,91],"tindex":"07c1b873-17be-11e6-a2ef-dd85c4699da3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"context.currentLinePos += org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-1},{"failures":[53,58],"tindex":"07c1b874-17be-11e6-a2ef-25b883cd1fff","series":0,"name":"add","transplant":{"toString":"code.append('F')","position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.append(rounds)","position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"status":-1},{"failures":[],"tindex":"07c1b875-17be-11e6-a2ef-2b6397090d8d","series":0,"name":"replace","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"line","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"line"},"type":"adrStmt","transplantationPoint":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Rule:429","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-3},{"failures":[],"tindex":"07c1df86-17be-11e6-a2ef-e5718d3e12db","series":0,"name":"replace","transplant":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"toString":"return index + 1","position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"status":-2},{"failures":[],"tindex":"07c1df87-17be-11e6-a2ef-9de3f4f3e2a1","series":0,"name":"replace","transplant":{"toString":"buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)))","position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = pad","position":"org.apache.commons.codec.binary.Base64:355","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[92],"tindex":"07c1df88-17be-11e6-a2ef-1f9e73640e16","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))","position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:495","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"07c1df89-17be-11e6-a2ef-d16059bac776","series":0,"name":"replace","transplant":{"toString":"return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\"","position":"org.apache.commons.codec.language.bm.PhoneticEngine:413","type":"CtReturnImpl","sourcecode":"return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\""},"variableMap":{"combined":"valueToDigest","remainder":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-2},{"failures":[93,94],"tindex":"07c1df8a-17be-11e6-a2ef-b5644aa4cfdb","series":0,"name":"replace","transplant":{"toString":"code.append('S')","position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd, 1, ((inwd.length) - 1))","position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[],"tindex":"07c1df8b-17be-11e6-a2ef-8516cc9ed785","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.encodeTable = urlSafe ? org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE : org.apache.commons.codec.binary.Base64.STANDARD_ENCODE_TABLE","position":"org.apache.commons.codec.binary.Base64:296","type":"CtAssignmentImpl","sourcecode":"this.byte[] = urlSafe ? org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[] : org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[]"},"status":-2},{"failures":[],"tindex":"07c2069c-17be-11e6-a2ef-e175c1622d48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"name = getFirst3Last3(name)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":0},{"failures":[],"tindex":"07c2069d-17be-11e6-a2ef-7302a64e7246","series":0,"name":"add","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"07c2069e-17be-11e6-a2ef-e112dba45ce0","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"org.apache.commons.codec.binary.Base64.BYTES_PER_UNENCODED_BLOCK","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"modulus"},"type":"adrStmt","transplantationPoint":{"toString":"context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_UNENCODED_BLOCK)","position":"org.apache.commons.codec.binary.Base64:380","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[],"tindex":"07c2069f-17be-11e6-a2ef-cf7cb6e06eeb","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")","position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"status":-2},{"failures":[],"tindex":"07c206a0-17be-11e6-a2ef-f19554b523fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:413","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[],"tindex":"07c206a1-17be-11e6-a2ef-27c210bbcfd7","series":0,"name":"replace","transplant":{"toString":"final int j = 0","position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int t = 0","position":"org.apache.commons.codec.digest.UnixCrypt:284","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[61,63,64],"tindex":"07c206a2-17be-11e6-a2ef-6125255f84d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found)) {\n    patternLength = 1;\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:222","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean)) {\n    patternLength = 1;\n} "},"status":-1},{"failures":[7,11,44],"tindex":"07c22db3-17be-11e6-a2ef-3bc8b1c25d13","series":0,"name":"replace","transplant":{"toString":"result.append(\"TS\", \"FX\")","position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:365","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"07c22db4-17be-11e6-a2ef-d1e175fbd08e","series":0,"name":"replace","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return (\"Languages(\" + (languages.toString())) + \")\"","position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":0},{"failures":[],"tindex":"07c22db5-17be-11e6-a2ef-f3bf79f6ddff","series":0,"name":"add","transplant":{"toString":"final java.lang.String singleLetter = dc.substring(0, 1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"name"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String firstThree = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:163","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)"},"status":-2},{"failures":[],"tindex":"07c22db6-17be-11e6-a2ef-0bd47b2f89be","series":0,"name":"replace","transplant":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 35))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:509","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"encodeTable","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 15))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[95,96,97],"tindex":"07c22db7-17be-11e6-a2ef-c90bac2480f1","series":0,"name":"replace","transplant":{"toString":"return -1","position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return compareCode","position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"status":-1},{"failures":[],"tindex":"07c22db8-17be-11e6-a2ef-ebfd9768f761","series":0,"name":"add","transplant":{"toString":"char lastChar = '\u0000'","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char hex1 = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"status":-2},{"failures":[],"tindex":"07c254c9-17be-11e6-a2ef-a31cb854d71c","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('#')","position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"toString":"for (final byte c : bytes) {\n    int b = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"status":-3},{"failures":[],"tindex":"07c254ca-17be-11e6-a2ef-0f6b7185b39a","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"nextBranches.clear()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"status":-2},{"failures":[98,99,100],"tindex":"07c254cb-17be-11e6-a2ef-397972689e75","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)","position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)"},"variableMap":{"binaryData":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}","position":"org.apache.commons.codec.digest.HmacUtils:313","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"07c254cc-17be-11e6-a2ef-49a3bafc0714","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")","position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"status":-2},{"failures":[],"tindex":"07c27bdd-17be-11e6-a2ef-eb38042d1970","series":0,"name":"replace","transplant":{"toString":"result.append(\"SK\")","position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(obj instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-2},{"failures":[62],"tindex":"07c27bde-17be-11e6-a2ef-5bdbdb7d517d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE));\n} ","position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-1},{"failures":[],"tindex":"07c27bdf-17be-11e6-a2ef-7d6a18c40f25","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:294","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))"},"variableMap":{"rawLine":"l","location":"l"},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e)","position":"org.apache.commons.codec.language.bm.Rule:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e)"},"status":0},{"failures":[],"tindex":"07c27be0-17be-11e6-a2ef-cbd6273b7320","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")","position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"status":-2},{"failures":[],"tindex":"07c27be1-17be-11e6-a2ef-cd926fe9ad60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"status":-2},{"failures":[101,102,103],"tindex":"07c2a2f2-17be-11e6-a2ef-7d7399aa411d","series":0,"name":"replace","transplant":{"toString":"code = '2'","position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"code = '2'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '8'","position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-1},{"failures":[61,62,63,64,66,68,69,72],"tindex":"07c2a2f3-17be-11e6-a2ef-e3de5a0778ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"subBuilder.append(phonemeText.subSequence(i, (i + 1)))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:353","type":"CtInvocationImpl","sourcecode":"subBuilder.append(phonemeText.subSequence(i, (i + 1)))"},"status":-1},{"failures":[],"tindex":"07c2a2f4-17be-11e6-a2ef-612a9e777a80","series":0,"name":"replace","transplant":{"toString":"phonemes.put(mergedPhoneme, mergedPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:366","type":"CtInvocationImpl","sourcecode":"phonemes.put(mergedPhoneme, mergedPhoneme)"},"variableMap":{"mergedPhoneme":"newPhoneme","phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"toString":"phonemes.put(newPhoneme, newPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:368","type":"CtInvocationImpl","sourcecode":"phonemes.put(newPhoneme, newPhoneme)"},"status":-2},{"failures":[104,105,106],"tindex":"07c2a2f5-17be-11e6-a2ef-ef42b96880db","series":0,"name":"replace","transplant":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b = '+'","position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"status":-1},{"failures":[],"tindex":"07c2a2f6-17be-11e6-a2ef-e1e939f9102d","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"07c2ca07-17be-11e6-a2ef-1bc0b52d0a63","series":0,"name":"replace","transplant":{"toString":"int c = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)","position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)"},"variableMap":{"key":"singleByte"},"type":"adrStmt","transplantationPoint":{"toString":"int r = read(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:97","type":"CtLocalVariableImpl","sourcecode":"int int = read(byte[], 0, 1)"},"status":-2},{"failures":[],"tindex":"07c2ca08-17be-11e6-a2ef-f164cda1f400","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES.put(org.apache.commons.codec.language.bm.NameType.SEPHARDIC, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"al\", \"el\", \"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:241","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"al\", \"el\", \"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))"},"variableMap":{"org.apache.commons.codec.language.bm.NameType.SEPHARDIC":"org.apache.commons.codec.language.bm.NameType.ASHKENAZI","org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES.put(org.apache.commons.codec.language.bm.NameType.ASHKENAZI, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"bar\", \"ben\", \"da\", \"de\", \"van\", \"von\"))))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"bar\", \"ben\", \"da\", \"de\", \"van\", \"von\"))))"},"status":0},{"failures":[37,38,39,40,107,41,42,43],"tindex":"07c2ca09-17be-11e6-a2ef-59d1c7e02b86","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(sBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)","position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"status":-1},{"failures":[101,108,109,110,102,111,112,103],"tindex":"07c2ca0a-17be-11e6-a2ef-1da1fe5e014e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(data, start, newData, 0, length)","position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"status":-1},{"failures":[],"tindex":"07c2ca0b-17be-11e6-a2ef-252cbc7d289b","series":0,"name":"replace","transplant":{"toString":"lastReplacement = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"name2"},"type":"adrStmt","transplantationPoint":{"toString":"name2 = removeVowels(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"status":-3},{"failures":[7,11,113,44],"tindex":"07c3db7c-17be-11e6-a2ef-29b48f553624","series":0,"name":"replace","transplant":{"toString":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n    result.append('F');\n} else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:483","type":"CtIfImpl","sourcecode":"if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n    result.append('F');\n} else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} "},"status":-1},{"failures":[],"tindex":"07c3db7d-17be-11e6-a2ef-7368bbf2ceda","series":0,"name":"add","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH","name2Size":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH"},"type":"adrStmt","transplantationPoint":{"toString":"if (append && ((builder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH))) {\n    builder.append(replacement);\n    if ((builder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH)) {\n        builder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH, builder.length());\n    } \n    cachedString = null;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:138","type":"CtIfImpl","sourcecode":"if (append && ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int))) {\n    java.lang.StringBuilder.append(replacement);\n    if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n        java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n    } \n    java.lang.String = null;\n} "},"status":-2},{"failures":[54,55,56],"tindex":"07c4028e-17be-11e6-a2ef-3783651f46d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer)"},"status":-1},{"failures":[],"tindex":"07c4028f-17be-11e6-a2ef-57b43748e346","series":0,"name":"replace","transplant":{"toString":"while (cp < (saltLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize);\n    cp += blocksize;\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:339","type":"CtWhileImpl","sourcecode":"while (cp < (saltLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"jj","sBytes":"raw","tempResult":"l_ascii","saltLen":"bits","cp":"ii"},"type":"adrStmt","transplantationPoint":{"toString":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.BITS[bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}","position":"org.apache.commons.codec.binary.BinaryCodec:250","type":"CtIfImpl","sourcecode":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}"},"status":-2},{"failures":[114,115],"tindex":"07c40290-17be-11e6-a2ef-dd3e3e288283","series":0,"name":"replace","transplant":{"toString":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")","position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"07c40291-17be-11e6-a2ef-7fe26bf253d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"cachedString = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[61,63,65,66,67,68,69,72,73,74,75,76,77,78],"tindex":"07c4ecf2-17be-11e6-a2ef-079e5398e51b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.NAME_PREFIXES.put(org.apache.commons.codec.language.bm.NameType.GENERIC, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:245","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.put(org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType.org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableSet(new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(\"da\", \"dal\", \"de\", \"del\", \"dela\", \"de la\", \"della\", \"des\", \"di\", \"do\", \"dos\", \"du\", \"van\", \"von\"))))"},"status":-1},{"failures":[],"tindex":"07c51403-17be-11e6-a2ef-9bfeea171191","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.lContext","position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"lContext":"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER","position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"07c51404-17be-11e6-a2ef-896b94ec9988","series":0,"name":"replace","transplant":{"toString":"final int iChar = original[i]","position":"org.apache.commons.codec.digest.UnixCrypt:221","type":"CtLocalVariableImpl","sourcecode":"final int int = original[i]"},"variableMap":{"original":"in","i":"inPos"},"type":"adrStmt","transplantationPoint":{"toString":"int b = in[(inPos++)]","position":"org.apache.commons.codec.binary.Base64:381","type":"CtLocalVariableImpl","sourcecode":"int int = in[(inPos++)]"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":98,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}