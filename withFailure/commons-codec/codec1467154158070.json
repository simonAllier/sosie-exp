{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":8,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":139,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":148,"org.apache.commons.codec.language.NysiisTest.testSnat":48,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":59,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":98,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":13,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":162,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":160,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":161,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":74,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":73,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":36,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":149,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":131,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":163,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":31,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":121,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeNull":7,"org.apache.commons.codec.binary.Base64Test.testTriplets":105,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":153,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":132,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":103,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":19,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":21,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":56,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":144,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":147,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":142,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":115,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":140,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":84,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":92,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":86,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":172,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":22,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":174,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":25,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":173,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":141,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":109,"org.apache.commons.codec.language.NysiisTest.testCap":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":110,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":114,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":68,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":171,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":24,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":169,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":111,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":112,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":170,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":27,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":124,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":104,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":60,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":64,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":118,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":34,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":177,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":178,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":28,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":20,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":164,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":184,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":12,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":181,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":16,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":127,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":154,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":78,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull":9,"org.apache.commons.codec.language.SoundexTest.testB650":159,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":87,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":130,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":88,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":134,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":11,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":57,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":63,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":81,"org.apache.commons.codec.language.SoundexTest.testNewInstance":166,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException":179,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":150,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":33,"org.apache.commons.codec.language.NysiisTest.testTranan":52,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":126,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":58,"org.apache.commons.codec.language.NysiisTest.testFal":40,"org.apache.commons.codec.language.NysiisTest.testSnad":47,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":151,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":120,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":123,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":117,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":156,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":180,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":157,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":158,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":30,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":85,"org.apache.commons.codec.language.NysiisTest.testDropBy":50,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":18,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":113,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":15,"org.apache.commons.codec.binary.Base64Test.testBase64":83,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":72,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":152,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testUUID":106,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":116,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":128,"org.apache.commons.codec.binary.Base64Test.testSingletons":186,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":54,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":94,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":70,"org.apache.commons.codec.binary.Base64Test.testPairs":185,"org.apache.commons.codec.language.NysiisTest.testRule2":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":61,"org.apache.commons.codec.language.NysiisTest.testRule1":41,"org.apache.commons.codec.language.NysiisTest.testRule7":45,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":93,"org.apache.commons.codec.language.NysiisTest.testRule6":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":62,"org.apache.commons.codec.language.NysiisTest.testRule5":43,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":97,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":69,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":146,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":101,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":167,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":49,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":80,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":182,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":125,"org.apache.commons.codec.language.NysiisTest.testBran":46,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":53,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":143,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":176,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":67,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":122,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":136,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":26,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":175,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":99,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":129,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":135,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":137,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":66,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":138,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":96,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":95,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":168,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":155,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":32,"org.apache.commons.codec.language.NysiisTest.testDad":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":89,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":183,"org.apache.commons.codec.language.NysiisTest.testOthers":51,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":108,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":82,"org.apache.commons.codec.language.SoundexTest.testDifference":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":17,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":35,"org.apache.commons.codec.language.NysiisTest.testDan":39,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":100,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":29,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":107,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":102,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":133},"transformations":[{"failures":[],"tindex":"8bc0cd45-3d82-11e6-8d80-455657fcf164","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"8bc0f456-3d82-11e6-8d80-83759003a70d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:153","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(text.substring(from, to))"},"status":-2},{"failures":[],"tindex":"8bc0f457-3d82-11e6-8d80-f9225cc91c6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:207","type":"CtAssignmentImpl","sourcecode":"this.char[] = data"},"variableMap":{"data":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:90","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[],"tindex":"8bc0f458-3d82-11e6-8d80-e7c654451be7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"8bc0f459-3d82-11e6-8d80-c55958372149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"status":-2},{"failures":[0,1],"tindex":"8bc1b7aa-3d82-11e6-8d80-6fde2e34ed3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:805","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[2,3],"tindex":"8bc1b7ab-3d82-11e6-8d80-cfc6f0df9831","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < lengthToMatch ; i++) {\n    if ((es1.charAt(i)) == (es2.charAt(i))) {\n        diff++;\n    } \n}"},"status":-1},{"failures":[],"tindex":"8bc1b7ac-3d82-11e6-8d80-13be55f929c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"8bc1b7ad-3d82-11e6-8d80-312438e78894","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-2},{"failures":[],"tindex":"8bc1b7ae-3d82-11e6-8d80-bbd52b0e6a5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"status":-2},{"failures":[],"tindex":"8bc1b7af-3d82-11e6-8d80-49ceed34810b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-2},{"failures":[],"tindex":"8bc1b7b0-3d82-11e6-8d80-f3b70e54442e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"variableMap":{"boxContent":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:305","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[],"tindex":"8bc1dec1-3d82-11e6-8d80-e9fec34fb954","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[4,5],"tindex":"8bc1dec2-3d82-11e6-8d80-594c300aa1c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"variableMap":{"pattern":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"8bc1dec3-3d82-11e6-8d80-eb4a3a86e75d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original, null)"},"variableMap":{"original":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:543","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[6],"tindex":"8bc1dec4-3d82-11e6-8d80-795c68eaf115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = dc.substring(0, 1)"},"variableMap":{"dc":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"status":-1},{"failures":[],"tindex":"8bc1dec5-3d82-11e6-8d80-211833599330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[context.int]"},"status":-2},{"failures":[],"tindex":"8bc1dec6-3d82-11e6-8d80-a50866800812","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[],"tindex":"8bc1dec7-3d82-11e6-8d80-172a7eb667a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"diff"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:118","type":"CtUnaryOperatorImpl","sourcecode":"diff++"},"status":-2},{"failures":[],"tindex":"8bc1dec8-3d82-11e6-8d80-8784c46a2aaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"status":-2},{"failures":[],"tindex":"8bc205d9-3d82-11e6-8d80-c9745b36b54e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == '+') {\n        buffer.write(' ');\n    } else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n        }\n    } else {\n        buffer.write(b);\n    }\n}"},"status":-2},{"failures":[7,8,9],"tindex":"8bc205da-3d82-11e6-8d80-3de59b101a0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"status":-1},{"failures":[],"tindex":"8bc205db-3d82-11e6-8d80-53613af5f713","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"8bc205dc-3d82-11e6-8d80-1d75985e8399","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"raw","this":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(((byte[])(raw)))"},"status":-2},{"failures":[],"tindex":"8bc205dd-3d82-11e6-8d80-cbf22061825b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-2},{"failures":[],"tindex":"8bc205de-3d82-11e6-8d80-b15607c26207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length","len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:231","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (org.apache.commons.codec.language.Soundex.this.getSoundexMapping().int))) {\n    throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + ch));\n} "},"status":-2},{"failures":[],"tindex":"8bc205df-3d82-11e6-8d80-299740390a5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('-')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('|')"},"status":0},{"failures":[10,11,12,13,14,15,16,17,18],"tindex":"8bc205e0-3d82-11e6-8d80-134477dc36d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:554","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n    branch.finish();\n    result[(index++)] = branch.toString();\n}"},"status":-1},{"failures":[19,20,6,21],"tindex":"8bc22cf1-3d82-11e6-8d80-efb2c1b180ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:245","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[22,23],"tindex":"8bc22cf2-3d82-11e6-8d80-0fa8943c2d6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"8bc22cf3-3d82-11e6-8d80-9305c42e9e91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:894","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[24,25,26,27,28],"tindex":"8bc22cf4-3d82-11e6-8d80-6f320b2b4cd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"status":-1},{"failures":[],"tindex":"8bc22cf5-3d82-11e6-8d80-d3827b0943ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"status":0},{"failures":[],"tindex":"8bc22cf6-3d82-11e6-8d80-4fbb9939d043","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:434","type":"CtIfImpl","sourcecode":"if ((chrs[index]) > 'Z') {\n    for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n        if ((chrs[index]) == (element[0])) {\n            chrs[index] = element[1];\n            break;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"8bc22cf7-3d82-11e6-8d80-e918bf286e51","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}"},"variableMap":{"blocksize":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS","altResult":"saltBytes","keyBytes":"finalb","ctx":"ctx1","cnt":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:256","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int) ; i++) {\n    ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest();\n    if ((i & 1) != 0) {\n        ctx1.update(keyBytes);\n    } else {\n        ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n    }\n    if ((i % 3) != 0) {\n        ctx1.update(saltBytes);\n    } \n    if ((i % 7) != 0) {\n        ctx1.update(keyBytes);\n    } \n    if ((i & 1) != 0) {\n        ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n    } else {\n        ctx1.update(keyBytes);\n    }\n    finalb = ctx1.digest();\n}"},"status":0},{"failures":[],"tindex":"8bc22cf8-3d82-11e6-8d80-e1da62bd86e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"status":-2},{"failures":[29,30,31,32],"tindex":"8bc22cf9-3d82-11e6-8d80-d99bb05cdea8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.iterator().next()"},"status":-1},{"failures":[],"tindex":"8bc22cfa-3d82-11e6-8d80-27ecc8c4a180","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:97","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.Soundex.this.char[], 0, mapping.int)"},"status":-2},{"failures":[0,1,33,34,8],"tindex":"8bc2540b-3d82-11e6-8d80-9fe175866348","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"8bc2540c-3d82-11e6-8d80-ef64a56ca910","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:760","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'H') {\n    result.append('J');\n    index += 2;\n} else {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (slavoGermanic && ((index > 0) && ((charAt(value, (index - 1))) != 'T')))) {\n        result.append(\"S\", \"TS\");\n    } else {\n        result.append('S');\n    }\n    index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[],"tindex":"8bc2540d-3d82-11e6-8d80-cd1d54c070d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"basen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:483","type":"CtReturnImpl","sourcecode":"return isInAlphabet(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(basen), true)"},"status":-2},{"failures":[],"tindex":"8bc2540e-3d82-11e6-8d80-b9e84c17924a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('-')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"status":0},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"8bc2540f-3d82-11e6-8d80-87cb9151b486","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"key.append(chars[i])"},"status":-1},{"failures":[],"tindex":"8bc25410-3d82-11e6-8d80-5951ef63ab78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"variableMap":{"t":"currentLinePos","right":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"8bc25411-3d82-11e6-8d80-6dd98bc5afdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:187","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-1},{"failures":[68,69,29,30,31,70,71,32,72,73,74,75,76,77,19,20,6,21],"tindex":"8bc25412-3d82-11e6-8d80-27cf98c9b41d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"line","leftCharacter":"line","rightCharacter":"line","location":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:429","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"8bc25413-3d82-11e6-8d80-93c4ad06a0a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:77","type":"CtReturnImpl","sourcecode":"return saltString.toString()"},"status":-2},{"failures":[],"tindex":"8bc25414-3d82-11e6-8d80-331826ca166f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"variableMap":{"string":"string","charsetName":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"8bc25415-3d82-11e6-8d80-034bc07f635d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"length":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-2},{"failures":[78,79],"tindex":"8bc27b26-3d82-11e6-8d80-910961576cb8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"8bc27b27-3d82-11e6-8d80-519566c61165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"8bc27b28-3d82-11e6-8d80-37c3d34078b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(0, open)"},"status":-2},{"failures":[],"tindex":"8bc27b29-3d82-11e6-8d80-eda24e98668e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = basedCodec"},"variableMap":{"basedCodec":"baseNCodec","baseNCodec":"baseNCodec"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = baseNCodec"},"status":-2},{"failures":[],"tindex":"8bc27b2a-3d82-11e6-8d80-9f8a4ed988f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:557","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = !negate"},"status":-2},{"failures":[],"tindex":"8bc27b2b-3d82-11e6-8d80-bd6265514f81","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtReturnImpl","sourcecode":"return langs.isEmpty() ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : new org.apache.commons.codec.language.bm.Languages.SomeLanguages(langs)"},"variableMap":{"langs":"languages","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:116","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"8bc27b2c-3d82-11e6-8d80-4db616ec4406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:122","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[54,97,55,98,57,99,100,101],"tindex":"8bc27b2d-3d82-11e6-8d80-1fa660873a0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-1},{"failures":[],"tindex":"8bc27b2e-3d82-11e6-8d80-6fb92ea5df31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"variableMap":{"chunkSeparatorLength":"pos","lineLength":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:306","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (!(printable.get(b))) || ((org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)) && (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)))"},"status":-2},{"failures":[102,103],"tindex":"8bc27b2f-3d82-11e6-8d80-75ce3bd9e0c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"status":-1},{"failures":[0,1],"tindex":"8bc27b30-3d82-11e6-8d80-b90fbfe6ce69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:771","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1"},"status":-1},{"failures":[],"tindex":"8bc27b31-3d82-11e6-8d80-03efa1677257","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:165","type":"CtAssignmentImpl","sourcecode":"readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"8bc2a242-3d82-11e6-8d80-5b3417010187","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(' ')"},"status":0},{"failures":[104],"tindex":"8bc2a243-3d82-11e6-8d80-65f2c73bbf05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:448","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"8bc2a244-3d82-11e6-8d80-f743995b5b75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar)"},"status":-2},{"failures":[],"tindex":"8bc2a245-3d82-11e6-8d80-fb08891eb9b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"read","lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-2},{"failures":[],"tindex":"8bc2a246-3d82-11e6-8d80-e5ffbc3f94ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"variableMap":{"lineSeparator":"finalb","lineLength":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}"},"status":0},{"failures":[105,81,106,107,108,109,110,111,112,113,114,115,116,117,118,82,119,83,84,85,120,86,87,121,90,122,123,124,125,126,127,128,99,100,129],"tindex":"8bc2a247-3d82-11e6-8d80-9da3ca07adf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[130,0,1,131,33,34,8,132,133],"tindex":"8bc2a248-3d82-11e6-8d80-d97f118ad47a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-1},{"failures":[],"tindex":"8bc2a249-3d82-11e6-8d80-1558d78e7360","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"variableMap":{"original":"altResult","length":"keyLen","key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(pBytes, 0, keyLen);\n}"},"status":-2},{"failures":[134],"tindex":"8bc2a24a-3d82-11e6-8d80-359262bee416","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-1},{"failures":[135],"tindex":"8bc2a24b-3d82-11e6-8d80-491da4ba91e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-1},{"failures":[136,137,138,135,139,140],"tindex":"8bc2a24c-3d82-11e6-8d80-bb316bb683f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[85],"tindex":"8bc2a24d-3d82-11e6-8d80-493ddb32290e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"status":-1},{"failures":[],"tindex":"8bc2c95e-3d82-11e6-8d80-e9c060656505","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:571","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"8bc2c95f-3d82-11e6-8d80-a3fcb126cc95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"b","b":"b","tmp":"buffer","i":"org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE","org.apache.commons.codec.net.QCodec.UNDERSCORE":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n        context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"8bc2c960-3d82-11e6-8d80-b396925b83b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:48","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[141,142],"tindex":"8bc2c961-3d82-11e6-8d80-13230458a07d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","ascii":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[0,1],"tindex":"8bc2c962-3d82-11e6-8d80-3f67a5da20ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:660","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[],"tindex":"8bc2c963-3d82-11e6-8d80-217b674d559b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-2},{"failures":[143,144,145],"tindex":"8bc2c964-3d82-11e6-8d80-37ad7ae266b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"bits","l_ascii":"l_raw","bits":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[],"tindex":"8bc2c965-3d82-11e6-8d80-ef8dd72339c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:48","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.StringEncoder = null"},"variableMap":{"stringEncoder":"stringEncoder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:58","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.StringEncoder = stringEncoder"},"status":-2},{"failures":[146],"tindex":"8bc2c966-3d82-11e6-8d80-278e20787546","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-1},{"failures":[],"tindex":"8bc2c967-3d82-11e6-8d80-c7e656d7a00a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[],"tindex":"8bc2c968-3d82-11e6-8d80-ef255d2b3557","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar)"},"status":-2},{"failures":[91,92,147,148,149,93,94,150,96,151,152,153],"tindex":"8bc2c969-3d82-11e6-8d80-07cd98e2f454","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"8bc2c96a-3d82-11e6-8d80-19c4acbe0223","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:293","type":"CtReturnImpl","sourcecode":"return decode(str, getDefaultCharset())"},"status":-2},{"failures":[],"tindex":"8bc2f07b-3d82-11e6-8d80-67bd1f689c5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,2,166,167,168,169,170,171,172,173,174,3,175,176,177,178,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"8bc2f07c-3d82-11e6-8d80-b3a0e86082a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"count","l_ascii":"chars","bits":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"chars[(count++)] = str.charAt(i)"},"status":-1},{"failures":[179],"tindex":"8bc2f07d-3d82-11e6-8d80-3bf716e88667","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"status":-1},{"failures":[],"tindex":"8bc2f07e-3d82-11e6-8d80-1dcbfc0d6d50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"variableMap":{"lastChar":"code","chr":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:353","type":"CtAssignmentImpl","sourcecode":"code = '-'"},"status":-2},{"failures":[],"tindex":"8bc2f07f-3d82-11e6-8d80-dddd93d88b36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:155","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = saltString.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[141,180,142,181,143,144,182,145],"tindex":"8bc2f080-3d82-11e6-8d80-ed74fb2ee6df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"variableMap":{"encodeTable":"array","org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-1},{"failures":[],"tindex":"8bc49e31-3d82-11e6-8d80-b58ddfbfab24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:175","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName))"},"status":-2},{"failures":[],"tindex":"8bc49e32-3d82-11e6-8d80-fbd1aa023df8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.language.Nysiis.CHARS_A"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"8bc49e33-3d82-11e6-8d80-a3c24111a911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return metaphone(str)"},"status":-2},{"failures":[183],"tindex":"8bc49e34-3d82-11e6-8d80-9fd4d8a8d074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:743","type":"CtInvocationImpl","sourcecode":"mac.update(valueToDigest)"},"status":-1},{"failures":[],"tindex":"8bc49e35-3d82-11e6-8d80-4d6d8bd85273","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:177","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[10,11,12,13,14,18],"tindex":"8bc49e36-3d82-11e6-8d80-9f251c6306e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:467","type":"CtInvocationImpl","sourcecode":"sb.append(branch)"},"status":-1},{"failures":[],"tindex":"8bc49e37-3d82-11e6-8d80-ad6d05ea11a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"status":-2},{"failures":[81,184,185,106,107,109,110,111,112,113,114,115,117,186,118,82,119,83,84,85,86,87,121,90,122,123,124,125,126,127,128,99,100,129],"tindex":"8bc49e38-3d82-11e6-8d80-c3581da65700","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:342","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}