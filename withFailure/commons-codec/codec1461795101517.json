{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":85,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":140,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":58,"org.apache.commons.codec.binary.HexTest.testCustomCharset":99,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":53,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":148,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":129,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":67,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":84,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":89,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":124,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":105,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":122,"org.apache.commons.codec.binary.Base64Test.testTriplets":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull":59,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":71,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":60,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":149,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":46,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":80,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":97,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":116,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":44,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":47,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":52,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":20,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":28,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":51,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":31,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":14,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":15,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":139,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":19,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":137,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":16,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":17,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":121,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":4,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":82,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":87,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":94,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":112,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":150,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":91,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":132,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":81,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":103,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":24,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":38,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":133,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":45,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":9,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":110,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":68,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":151,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":33,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":147,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":79,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":135,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":32,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":143,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":111,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":41,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":130,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":66,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":100,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":72,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":6,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":114,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":74,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":134,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":146,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":75,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":96,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":30,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":3,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":22,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":120,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":145,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":61,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":104,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":117,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":18,"org.apache.commons.codec.binary.Base64Test.testBase64":27,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":128,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":70,"org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters":65,"org.apache.commons.codec.binary.Base64Test.testUUID":11,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":40,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":113,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":21,"org.apache.commons.codec.binary.Base64Test.testSingletons":23,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":34,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":56,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":126,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":26,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":92,"org.apache.commons.codec.binary.Base64Test.testPairs":10,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":102,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":95,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":55,"org.apache.commons.codec.binary.Base64Test.testCodec112":106,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":127,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":123,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":48,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":78,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":125,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1":62,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":5,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3":63,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":101,"org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5":64,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":37,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":119,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":98,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":138,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":86,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":109,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":2,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":118,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":141,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":115,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":131,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":73,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":142,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":93,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":49,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":69,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":77,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":83,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":90,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":13,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":25,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":76,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":144,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":107,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":136,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":1,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":88,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":39,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":42},"transformations":[{"failures":[],"tindex":"0520b938-0cc5-11e6-9501-b372327bdb73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-2},{"failures":[],"tindex":"0520e049-0cc5-11e6-9501-370758b7b70b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"0520e04a-0cc5-11e6-9501-29c79fbc777b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:385","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << 8) + b"},"status":-1},{"failures":[],"tindex":"0521075b-0cc5-11e6-9501-175d49e62f2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"variableMap":{"name1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":-2},{"failures":[],"tindex":"0521075c-0cc5-11e6-9501-ed0404410659","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[38,39,40],"tindex":"0521075d-0cc5-11e6-9501-9d2aeba84592","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:317","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"status":-1},{"failures":[],"tindex":"0521075e-0cc5-11e6-9501-054570c254a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"d","to":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-2},{"failures":[41],"tindex":"05212e6f-0cc5-11e6-9501-7b33c929a7ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:313","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"05212e70-0cc5-11e6-9501-7174eca97d44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"status":-2},{"failures":[],"tindex":"05212e71-0cc5-11e6-9501-3d220e16da6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[42,43],"tindex":"05212e72-0cc5-11e6-9501-5bfec0150e66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"failures":[],"tindex":"05212e73-0cc5-11e6-9501-c3eb2db09dbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":0},{"failures":[],"tindex":"05212e74-0cc5-11e6-9501-f1f0e09aad8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"org.apache.commons.codec.binary.Base64.BYTES_PER_UNENCODED_BLOCK","cnt":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:380","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[],"tindex":"05215585-0cc5-11e6-9501-1b23e0e62ab3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"variableMap":{"sep":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:480","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e)"},"status":0},{"failures":[44,45,46,47,48,49],"tindex":"05215586-0cc5-11e6-9501-97316f72d4ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:124","type":"CtIfImpl","sourcecode":"if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n    ls.add(lang);\n} "},"status":-1},{"failures":[42,43],"tindex":"05215587-0cc5-11e6-9501-8b8e33fd126d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"05215588-0cc5-11e6-9501-4bf4a26dd29b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"05215589-0cc5-11e6-9501-1747eb177f05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)))"},"status":-2},{"failures":[50,51,52,53,54,55,56],"tindex":"05217c9a-0cc5-11e6-9501-9d5f76ac6e7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:465","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-1},{"failures":[57,38,58,39,40],"tindex":"05217c9b-0cc5-11e6-9501-71fb942a6cfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:918","type":"CtIfImpl","sourcecode":"if ((start >= 0) && ((start + length) <= (value.length()))) {\n    final java.lang.String java.lang.String = value.substring(start, (start + length));\n    for (final java.lang.String java.lang.String : criteria) {\n        if (target.equals(element)) {\n            result = true;\n            break;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"05217c9c-0cc5-11e6-9501-f123e07c54c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:784","type":"CtIfImpl","sourcecode":"if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"variableMap":{"index":"i","value":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:241","type":"CtIfImpl","sourcecode":"if ((chars.charAt(i)) == input) {\n    return true;\n} "},"status":-2},{"failures":[59],"tindex":"05217c9d-0cc5-11e6-9501-3d11e45e2833","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:598","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"05217c9e-0cc5-11e6-9501-1147d54a44bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"variableMap":{"source":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:301","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":0},{"failures":[38,39,40],"tindex":"0521a3af-0cc5-11e6-9501-afb13b8bb067","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:876","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]) {\n    if (value.startsWith(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-1},{"failures":[38,58,60,39,40],"tindex":"0521a3b0-0cc5-11e6-9501-b1987d294391","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:147","type":"CtInvocationImpl","sourcecode":"result.append('N')"},"status":-1},{"failures":[],"tindex":"0521a3b1-0cc5-11e6-9501-139611bf6266","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (isLastChar(wdsz, n)) {\n    break;\n} "},"variableMap":{"wdsz":"maxPhonemes","n":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int)"},"status":-2},{"failures":[39,40],"tindex":"0521a3b2-0cc5-11e6-9501-e3185018397f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:533","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n    result.append('J');\n} "},"status":-1},{"failures":[61,57,38,58,39,40],"tindex":"0521cac3-0cc5-11e6-9501-c522c285460f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:157","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"0521cac4-0cc5-11e6-9501-4f0404201b84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"status":-2},{"failures":[],"tindex":"0521cac5-0cc5-11e6-9501-397c38b79cf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:410","type":"CtIfImpl","sourcecode":"if (((input.length()) >= 2) && (input.substring(0, 2).equals(\"d'\"))) {\n    final java.lang.String java.lang.String = input.substring(2);\n    final java.lang.String java.lang.String = \"d\" + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:68","type":"CtIfImpl","sourcecode":"if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt);\n}"},"status":-2},{"failures":[62,63,64,65,66],"tindex":"0521cac6-0cc5-11e6-9501-63198fe90858","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-1},{"failures":[],"tindex":"0521f1d7-0cc5-11e6-9501-7df664a311ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"status":0},{"failures":[38,58,39,40],"tindex":"0521f1d8-0cc5-11e6-9501-0d091f5d5d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:740","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('S');\n    index++;\n} else {\n    if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n        result.append(\"KS\");\n    } \n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[],"tindex":"0521f1d9-0cc5-11e6-9501-cb7d2dc6f6ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"variableMap":{"inExtendedComment":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"0521f1da-0cc5-11e6-9501-7f329af87c1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"status":0},{"failures":[67,68,69],"tindex":"0521f1db-0cc5-11e6-9501-81829ab25952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"status":-1},{"failures":[],"tindex":"0521f1dc-0cc5-11e6-9501-416b3209049b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"pos","encodeSize":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[],"tindex":"052218ed-0cc5-11e6-9501-59f8d7f5e434","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-2},{"failures":[],"tindex":"052218ee-0cc5-11e6-9501-4577ed1009f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"ibitWorkArea","i":"ibitWorkArea","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[38,58,39,40],"tindex":"05223fff-0cc5-11e6-9501-6f3f25085023","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"failures":[42,43],"tindex":"05224000-0cc5-11e6-9501-3fdc7775a700","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":-1},{"failures":[50,51,52,53,54,55,56,70,71,72,73,74],"tindex":"05224001-0cc5-11e6-9501-4fca7339249e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[75,76,77,78,79,80],"tindex":"05224002-0cc5-11e6-9501-0931afc8d7ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"05226713-0cc5-11e6-9501-f531156cd735","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"variableMap":{"chrs":"out","index":"i","element":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[],"tindex":"05226714-0cc5-11e6-9501-e32d19d5a5d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"status":0},{"failures":[],"tindex":"05226715-0cc5-11e6-9501-b98d7ccd165f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:183","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"05226716-0cc5-11e6-9501-c764675881b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"variableMap":{"t":"r","left":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:99","type":"CtAssignmentImpl","sourcecode":"r = read(byte[], 0, 1)"},"status":-2},{"failures":[],"tindex":"05226717-0cc5-11e6-9501-eda382470ac6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"05226718-0cc5-11e6-9501-632c8d03b22b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"pos","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"pos","rounds":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:453","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[],"tindex":"05228e29-0cc5-11e6-9501-cdae62f7789e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:393","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[44,45,46,47,48,104,105,49],"tindex":"05228e2a-0cc5-11e6-9501-936c0fd26567","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:430","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType) {\n    case SEPHARDIC :\n        for (final java.lang.String java.lang.String : words) {\n            final java.lang.String[] java.lang.String[] = aWord.split(\"'\");\n            final java.lang.String java.lang.String = parts[((parts.int) - 1)];\n            words2.add(lastPart);\n        }\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case ASHKENAZI :\n        words2.addAll(words);\n        words2.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case GENERIC :\n        words2.addAll(words);\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Unreachable case: \" + (org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType)));\n}"},"status":-1},{"failures":[0,1,2,6,7,10,11,12,13,20,21,22,106,23,27,33,34,35,37],"tindex":"05228e2b-0cc5-11e6-9501-ff200574cb84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"status":-1},{"failures":[],"tindex":"05228e2c-0cc5-11e6-9501-3993134de69b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"variableMap":{"buffer":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-2},{"failures":[],"tindex":"05228e2d-0cc5-11e6-9501-d7d6e86bb083","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:578","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str.getBytes(charset)))"},"variableMap":{"str":"keyBytes","charset":"org.apache.commons.codec.Charsets.UTF_8"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset), salt)"},"status":-2},{"failures":[107,38,58,39,40],"tindex":"05228e2e-0cc5-11e6-9501-5f7faed4934e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:602","type":"CtIfImpl","sourcecode":"if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, \"SUGAR\"))) {\n    result.append('X', 'S');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SH\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n        result.append('S');\n    } else {\n        result.append('X');\n    }\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"SIO\", \"SIA\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"SIAN\"))) {\n    if (slavoGermanic) {\n        result.append('S');\n    } else {\n        result.append('S', 'X');\n    }\n    index += 3;\n} else if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[93,97],"tindex":"0522b53f-0cc5-11e6-9501-af3ac3c9fe3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"status":-1},{"failures":[],"tindex":"0522b540-0cc5-11e6-9501-197dd2d158f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"0522b541-0cc5-11e6-9501-493a6339e6ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"inAvail","y":"inAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:432","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"0522b542-0cc5-11e6-9501-7b66efaf474f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"result.append(\"-\").append(encode(word))"},"variableMap":{"result":"buffer","word":"org.apache.commons.codec.net.RFC1522Codec.POSTFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:80","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)"},"status":-2},{"failures":[108,109,110,111,112,113,114],"tindex":"0522b543-0cc5-11e6-9501-9dd6e0af8753","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.decodeBase64(pArray)"},"variableMap":{"pArray":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"finalb = ctx1.digest()"},"status":-1},{"failures":[],"tindex":"0522dc54-0cc5-11e6-9501-ebc3512fc7c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n        }\n    } else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        buffer.write(b);\n    } \n}"},"status":-2},{"failures":[],"tindex":"0522dc55-0cc5-11e6-9501-712442835bc6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:890","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[115,116,117,118],"tindex":"0522dc56-0cc5-11e6-9501-4b2653726cec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:323","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"0522dc57-0cc5-11e6-9501-99aa072b6773","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"status":0},{"failures":[],"tindex":"0522dc58-0cc5-11e6-9501-4f56add92025","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":0},{"failures":[38,58,39,40],"tindex":"0522dc59-0cc5-11e6-9501-7dd6d747cff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:147","type":"CtInvocationImpl","sourcecode":"result.append('N')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:439","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"status":-1},{"failures":[],"tindex":"0522dc5a-0cc5-11e6-9501-293e4235aea5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-2},{"failures":[],"tindex":"0523036b-0cc5-11e6-9501-5fc5ebd6bc30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:107","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-2},{"failures":[],"tindex":"0523036c-0cc5-11e6-9501-43431499bf73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"status":-2},{"failures":[119,120,121,116,117,122,118,123,124],"tindex":"0523036d-0cc5-11e6-9501-a3315477d0d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:291","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[0,1,125,126,127,128,129,130],"tindex":"0523036e-0cc5-11e6-9501-914ab5c6732b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtUnaryOperatorImpl","sourcecode":"(j++)"},"variableMap":{"j":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:152","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-1},{"failures":[],"tindex":"0523036f-0cc5-11e6-9501-63263470e397","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"05230370-0cc5-11e6-9501-f3f77e3beeb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":0},{"failures":[],"tindex":"05230371-0cc5-11e6-9501-233c14e0385e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:506","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[38,39,40],"tindex":"05230372-0cc5-11e6-9501-6d1062cb5eec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:447","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[],"tindex":"05232a83-0cc5-11e6-9501-5333ab15509d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"variableMap":{"str":"str","count":"len","i":"len","chars":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-2},{"failures":[],"tindex":"05232a84-0cc5-11e6-9501-379cab85cf85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.decodeText(value)"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"status":-2},{"failures":[],"tindex":"05232a85-0cc5-11e6-9501-39cb7dde1a80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:271","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"status":0},{"failures":[],"tindex":"05232a86-0cc5-11e6-9501-4b574cff1315","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[50,51,52,53,131,54,55,56,132,133,134,135,136,137,138,70,71,72,139,140,141,142,143,144,145,146,73,147,148,149,150,74],"tindex":"05232a87-0cc5-11e6-9501-f52c5e13f7fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:319","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"05232a88-0cc5-11e6-9501-0f49082e8b96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"status":-2},{"failures":[44,45,46,47,48,104,105,49],"tindex":"05232a89-0cc5-11e6-9501-2fab492f088e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:368","type":"CtInvocationImpl","sourcecode":"phonemes.put(newPhoneme, newPhoneme)"},"status":-1},{"failures":[151],"tindex":"05232a8a-0cc5-11e6-9501-afe445e4ec77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:379","type":"CtIfImpl","sourcecode":"if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-1},{"failures":[],"tindex":"0523519b-0cc5-11e6-9501-edabda90ab2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"status":-2},{"failures":[],"tindex":"0523519c-0cc5-11e6-9501-7d9e34f7ffa3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1)"},"status":-2},{"failures":[],"tindex":"0523519d-0cc5-11e6-9501-b9c4011fcab4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"variableMap":{"maxLength":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:476","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":0},{"failures":[],"tindex":"0523519e-0cc5-11e6-9501-6bc07b83eefd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"0523519f-0cc5-11e6-9501-55f6f7a90478","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"status":-2},{"failures":[92],"tindex":"052351a0-0cc5-11e6-9501-e7bf65fdf624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), data)"},"status":-1},{"failures":[],"tindex":"052351a1-0cc5-11e6-9501-876608c6ba07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:121","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"052351a2-0cc5-11e6-9501-4762178dff10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = cleanup(source)"},"variableMap":{"source":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-2},{"failures":[],"tindex":"052378b3-0cc5-11e6-9501-97e3e9025253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":92,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}