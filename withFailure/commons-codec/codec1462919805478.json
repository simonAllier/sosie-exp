{"failureDictionary":{"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":37,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":24,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":22,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":1,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":31,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":16,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":39,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":35,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":27,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":33,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":28,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":9,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":21,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":7,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":30,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":10,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":12,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":11,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":4,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":15,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":0,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":38,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":23,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":13,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":14,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":36,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":25,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":17,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":18,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":34,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.language.MetaphoneTest.testTCH":26,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":29,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":6},"transformations":[{"failures":[],"tindex":"acec7d9a-16ff-11e6-ba6a-8fb78ca7cf62","series":0,"name":"add","transplant":{"toString":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} ","position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"variableMap":{"lastChar":"c","key":"string"},"type":"adrStmt","transplantationPoint":{"toString":"if ((index > 0) && (index < (string.length()))) {\n    matches = (string.charAt((index - 1))) == c;\n} ","position":"org.apache.commons.codec.language.Metaphone:344","type":"CtIfImpl","sourcecode":"if ((index > 0) && (index < (string.length()))) {\n    matches = (string.charAt((index - 1))) == c;\n} "},"status":-2},{"failures":[],"tindex":"aceca4ab-16ff-11e6-ba6a-190b2bf83f55","series":0,"name":"add","transplant":{"toString":"for (int i = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i);\n}","position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('[')","position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":-2},{"failures":[0,1],"tindex":"aceca4ac-16ff-11e6-ba6a-7dfebfc18bd5","series":0,"name":"replace","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"blocksize","name2Size":"blocksize"},"type":"adrStmt","transplantationPoint":{"toString":"ctx.update(altResult, 0, blocksize)","position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[],"tindex":"aceca4ad-16ff-11e6-ba6a-fb98fdd2e6b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.encodeSize = (org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)","position":"org.apache.commons.codec.binary.Base32:299","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"aceccbbe-16ff-11e6-ba6a-6384d714b8fe","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"p+\", \"P\")","position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"toString":"cachedString = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"acedb61f-16ff-11e6-ba6a-356578bc5a44","series":0,"name":"replace","transplant":{"toString":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"str","text":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-3},{"failures":[],"tindex":"acedb620-16ff-11e6-ba6a-f7803efefb78","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.NameType.this.name","position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-3},{"failures":[],"tindex":"acedb621-16ff-11e6-ba6a-1d0d0f5db4a5","series":0,"name":"replace","transplant":{"toString":"final int cLine = currentLine","position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"variableMap":{"currentLine":"length"},"type":"adrStmt","transplantationPoint":{"toString":"int len = bigBytes.length","position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"status":-2},{"failures":[],"tindex":"acedb622-16ff-11e6-ba6a-03b0588c2809","series":0,"name":"replace","transplant":{"toString":"currentLine++","position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"variableMap":{"currentLine":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"toString":"read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH)","position":"org.apache.commons.codec.digest.HmacUtils:771","type":"CtAssignmentImpl","sourcecode":"read = valueToDigest.read(buffer, 0, org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int)"},"status":-2},{"failures":[],"tindex":"aceddd33-16ff-11e6-ba6a-05a1553c1a61","series":0,"name":"replace","transplant":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 10))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"pos","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = ((byte)((context.lbitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)))","position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-3},{"failures":[],"tindex":"aceddd34-16ff-11e6-ba6a-832165862f9e","series":0,"name":"add","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"maxPhonemes","y":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"toString":"EXPR : for (final org.apache.commons.codec.language.bm.Rule.Phoneme left : org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.phonemes) {\n    for (final org.apache.commons.codec.language.bm.Rule.Phoneme right : phonemeExpr.getPhonemes()) {\n        final org.apache.commons.codec.language.bm.Languages.LanguageSet languages = left.getLanguages().restrictTo(right.getLanguages());\n        if (!(languages.isEmpty())) {\n            final org.apache.commons.codec.language.bm.Rule.Phoneme join = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages);\n            if ((newPhonemes.size()) < maxPhonemes) {\n                newPhonemes.add(join);\n                if ((newPhonemes.size()) >= maxPhonemes) {\n                    break EXPR;\n                } \n            } \n        } \n    }\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:109","type":"CtForEachImpl","sourcecode":"EXPR : for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>) {\n    for (final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme : phonemeExpr.getPhonemes()) {\n        final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = left.getLanguages().restrictTo(right.getLanguages());\n        if (!(languages.isEmpty())) {\n            final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages);\n            if ((newPhonemes.size()) < maxPhonemes) {\n                newPhonemes.add(join);\n                if ((newPhonemes.size()) >= maxPhonemes) {\n                    break EXPR;\n                } \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"aceddd35-16ff-11e6-ba6a-775d20ab2d19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.decodeTable = org.apache.commons.codec.binary.Base32.HEX_DECODE_TABLE","position":"org.apache.commons.codec.binary.Base32:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"aceddd36-16ff-11e6-ba6a-37344bcd066a","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.net.BCodec.this.charset","position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.charset","position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"status":-2},{"failures":[2,3],"tindex":"acee0447-16ff-11e6-ba6a-657ba046030a","series":0,"name":"replace","transplant":{"toString":"result.appendAlternate('F')","position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('R')","position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[4,5],"tindex":"acee0448-16ff-11e6-ba6a-7ba402511295","series":0,"name":"replace","transplant":{"toString":"return data","position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"ascii"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)","position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"status":-1},{"failures":[6,7],"tindex":"acee0449-16ff-11e6-ba6a-01d6fc44ddc2","series":0,"name":"replace","transplant":{"toString":"n += 2","position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"left"},"type":"adrStmt","transplantationPoint":{"toString":"left = results[0]","position":"org.apache.commons.codec.digest.UnixCrypt:303","type":"CtAssignmentImpl","sourcecode":"left = results[0]"},"status":-1},{"failures":[8,9,10,11],"tindex":"acee044a-16ff-11e6-ba6a-4be37ce868c1","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"out.close()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":-1},{"failures":[],"tindex":"acee044b-16ff-11e6-ba6a-613224ac3fcf","series":0,"name":"replace","transplant":{"toString":"final java.lang.StringBuilder local = new java.lang.StringBuilder(40)","position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder sb = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.bm.Rule:461","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"acee044c-16ff-11e6-ba6a-85c2410a0e95","series":0,"name":"replace","transplant":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"variableMap":{"i":"digit"},"type":"adrStmt","transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-3},{"failures":[12,13,14,15],"tindex":"acee2b5d-16ff-11e6-ba6a-af66a4f38193","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))","position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))","position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":-1},{"failures":[],"tindex":"acee2b5e-16ff-11e6-ba6a-f1f3572c331a","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5, key)","position":"org.apache.commons.codec.digest.HmacUtils:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"variableMap":{"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5":"algorithm","key":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)","position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"status":-3},{"failures":[],"tindex":"acee2b5f-16ff-11e6-ba6a-47794f30ef0c","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.phonemes.addAll(newPhonemes)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.addAll(newPhonemes)"},"variableMap":{"newPhonemes":"phonemes","phonemes":"phonemes"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.phonemes.add(phoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(phoneme)"},"status":0},{"failures":[],"tindex":"acee2b60-16ff-11e6-ba6a-3d191ec04b20","series":0,"name":"add","transplant":{"toString":"final java.lang.String combined = \"d\" + remainder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + remainder"},"variableMap":{"remainder":"rawLine"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String line = rawLine","position":"org.apache.commons.codec.language.bm.Rule:410","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"status":-2},{"failures":[],"tindex":"acee2b61-16ff-11e6-ba6a-bd00dab2d24b","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found = false","position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = false"},"variableMap":{"found":"hard"},"type":"adrStmt","transplantationPoint":{"toString":"hard = false","position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"status":-3},{"failures":[],"tindex":"acee5272-16ff-11e6-ba6a-c516decb9828","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}","position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}","position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"acee5273-16ff-11e6-ba6a-3174c3387b4d","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.util.Arrays.fill(tempResult, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"status":-2},{"failures":[16,17,18,19,20,21,22,23],"tindex":"acee5274-16ff-11e6-ba6a-69a75e96fd02","series":0,"name":"replace","transplant":{"toString":"u >>>= 1","position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"variableMap":{"u":"from"},"type":"adrStmt","transplantationPoint":{"toString":"from = to + 1","position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"acee5275-16ff-11e6-ba6a-f3094c275ff5","series":0,"name":"replace","transplant":{"toString":"inMultilineComment = true","position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"variableMap":{"inMultilineComment":"matches"},"type":"adrStmt","transplantationPoint":{"toString":"matches = substring.equals(test)","position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"matches = substring.equals(test)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":28,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}