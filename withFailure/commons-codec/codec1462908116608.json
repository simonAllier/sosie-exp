{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":8,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":67,"org.apache.commons.codec.binary.HexTest.testCustomCharset":0,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":59,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":46,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":56,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":79,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":73,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":72,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":23,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":45,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":51,"org.apache.commons.codec.binary.Base64Test.testUUID":5,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":24,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":27,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":50,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":54,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData":62,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":70,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":64,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":65,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":16,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":17,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":15,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":75,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":68,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":4,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":1,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":60,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":53,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":7,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":10,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":77,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":13,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":3,"org.apache.commons.codec.language.Caverphone2Test.testLocaleIndependence":21,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":58,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":38,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":47,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":61,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":48,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":43,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":19,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":52,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":33,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":42,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":57,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull":78,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":39,"org.apache.commons.codec.language.Caverphone2Test.testEncodeEmpty":20,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":69,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":49,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":41,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":22},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"75d09ffd-16e4-11e6-9a6c-d91719e445eb","series":0,"name":"replace","transplant":{"toString":"n += 2","position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"j"},"type":"adrStmt","transplantationPoint":{"toString":"f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j))","position":"org.apache.commons.codec.binary.Hex:91","type":"CtAssignmentImpl","sourcecode":"f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j))"},"status":-1},{"failures":[],"tindex":"75d0c70e-16e4-11e6-9a6c-858bddfef2d0","series":0,"name":"replace","transplant":{"toString":"data = doDecoding(data)","position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"variableMap":{"data":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = null","position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"75d0c70f-16e4-11e6-9a6c-f1aa0a29b895","series":0,"name":"replace","transplant":{"toString":"buffer.append(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX)","position":"org.apache.commons.codec.digest.Sha2Crypt:425","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX":"loc","buffer":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\", loc='\").append(loc).append('\\'')","position":"org.apache.commons.codec.language.bm.Rule:464","type":"CtInvocationImpl","sourcecode":"sb.append(\", loc='\").append(java.lang.String).append('\\'')"},"status":-2},{"failures":[],"tindex":"75d0c710-16e4-11e6-9a6c-5db67d40efbb","series":0,"name":"replace","transplant":{"toString":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(1);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"salt","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:540","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-2},{"failures":[7,8],"tindex":"75d0ee21-16e4-11e6-9a6c-9d7aa2938554","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-1},{"failures":[9],"tindex":"75d0ee22-16e4-11e6-9a6c-ed8fe9e8f0eb","series":0,"name":"replace","transplant":{"toString":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")","position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:145","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\")"},"status":-1},{"failures":[],"tindex":"75d0ee23-16e4-11e6-9a6c-479f68a7a1c4","series":0,"name":"replace","transplant":{"toString":"buffer[((context.pos)++)] = ((byte)(((context.lbitWorkArea) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)))","position":"org.apache.commons.codec.binary.Base32:360","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"toString":"buffer[((context.pos)++)] = encodeTable[(((int)(((context.lbitWorkArea) >> 30))) & (org.apache.commons.codec.binary.Base32.MASK_5BITS))]","position":"org.apache.commons.codec.binary.Base32:510","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"75d11534-16e4-11e6-9a6c-71e127c1a2b7","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.lContext","position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"lContext":"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER","position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"75d11535-16e4-11e6-9a6c-3dd43345f4f2","series":0,"name":"replace","transplant":{"toString":"cnt -= blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"i","cnt":"i"},"type":"adrStmt","transplantationPoint":{"toString":"i = rulesApplication.getI()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:472","type":"CtAssignmentImpl","sourcecode":"i = rulesApplication.getI()"},"status":-2},{"failures":[10],"tindex":"75d11536-16e4-11e6-9a6c-e95fd05b6001","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (arrayOctet.length) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (pad)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"75d13c47-16e4-11e6-9a6c-39af43a7096c","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('^')","position":"org.apache.commons.codec.net.QCodec:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('^')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('#')","position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"status":0},{"failures":[],"tindex":"75d13c48-16e4-11e6-9a6c-135bc3587bcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"))","position":"org.apache.commons.codec.net.QuotedPrintableCodec:535","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"))"},"status":-2},{"failures":[],"tindex":"75d13c49-16e4-11e6-9a6c-03f154a4b267","series":0,"name":"add","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)","position":"org.apache.commons.codec.digest.DigestUtils:749","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-2},{"failures":[],"tindex":"75d13c4a-16e4-11e6-9a6c-4b2e076bbcc6","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^enough\", \"enou2f\")","position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"variableMap":{"txt":"text"},"type":"adrStmt","transplantationPoint":{"toString":"text = preprocess(text)","position":"org.apache.commons.codec.language.ColognePhonetic:324","type":"CtAssignmentImpl","sourcecode":"text = preprocess(text)"},"status":-2},{"failures":[],"tindex":"75d1635b-16e4-11e6-9a6c-6b9671dfb3e3","series":0,"name":"add","transplant":{"toString":"while ((tmpLen--) > 0) {\n    char c1 = cs.charAt((index1++));\n    char c2 = substring.charAt((index2++));\n    if (c1 == c2) {\n        continue;\n    } \n    if (!ignoreCase) {\n        return false;\n    } \n    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        return false;\n    } \n}","position":"org.apache.commons.codec.binary.CharSequenceUtils:58","type":"CtWhileImpl","sourcecode":"while ((tmpLen--) > 0) {\n    char char = cs.charAt((index1++));\n    char char = substring.charAt((index2++));\n    if (c1 == c2) {\n        continue;\n    } \n    if (!ignoreCase) {\n        return false;\n    } \n    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        return false;\n    } \n}"},"variableMap":{"cs":"substring","index1":"thisStart","ignoreCase":"ignoreCase","tmpLen":"length","index2":"start","substring":"substring"},"type":"adrStmt","transplantationPoint":{"toString":"return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length)","position":"org.apache.commons.codec.binary.CharSequenceUtils:52","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length)"},"status":-2},{"failures":[],"tindex":"75d1635c-16e4-11e6-9a6c-a14ddac5271e","series":0,"name":"replace","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"line"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inExtendedComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-3},{"failures":[],"tindex":"75d1635d-16e4-11e6-9a6c-1dd934b34350","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"k+\", \"K\")","position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"sh\", \"s2\")","position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21],"tindex":"75d18a6e-16e4-11e6-9a6c-3b534a76ddf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt + (org.apache.commons.codec.language.Caverphone2.TEN_1)","position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"status":-1},{"failures":[],"tindex":"75d18a6f-16e4-11e6-9a6c-53c2d4418538","series":0,"name":"replace","transplant":{"toString":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"cs2"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))","position":"org.apache.commons.codec.binary.StringUtils:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))"},"status":-2},{"failures":[],"tindex":"75d18a70-16e4-11e6-9a6c-01945e3c9a3d","series":0,"name":"add","transplant":{"toString":"boolean roundsCustom = false","position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final boolean useChunking = (lineLength > 0) && (chunkSeparatorLength > 0)","position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"status":-2},{"failures":[22,23],"tindex":"75d18a71-16e4-11e6-9a6c-d1c134260bd3","series":0,"name":"replace","transplant":{"toString":"compareCode = 0","position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"d"},"type":"adrStmt","transplantationPoint":{"toString":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)","position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"status":-1},{"failures":[],"tindex":"75d1b182-16e4-11e6-9a6c-5503c60d5460","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"75d1b183-16e4-11e6-9a6c-e507767eef3b","series":0,"name":"replace","transplant":{"toString":"ls.add(line)","position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"variableMap":{"line":"lang","ls":"ls"},"type":"adrStmt","transplantationPoint":{"toString":"ls.add(lang)","position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-3},{"failures":[],"tindex":"75d1b184-16e4-11e6-9a6c-23d31dda1c86","series":0,"name":"replace","transplant":{"toString":"for (int i = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.B64T.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.B64T.length())));\n}","position":"org.apache.commons.codec.digest.B64:74","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())));\n}"},"variableMap":{"saltString":"builder","num":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH","org.apache.commons.codec.digest.B64.B64T":"cachedString"},"type":"adrStmt","transplantationPoint":{"toString":"while ((builder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH)) {\n    builder.append('0');\n    cachedString = null;\n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:116","type":"CtWhileImpl","sourcecode":"while ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.append('0');\n    java.lang.String = null;\n}"},"status":-2},{"failures":[],"tindex":"75d1d895-16e4-11e6-9a6c-e9f3a448b64c","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")","position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")","position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"status":-2},{"failures":[24,25,26,27,28,29,30,31],"tindex":"75d1d896-16e4-11e6-9a6c-f17d96f46593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part))","position":"org.apache.commons.codec.language.bm.Rule:390","type":"CtInvocationImpl","sourcecode":"phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part))"},"status":-1},{"failures":[],"tindex":"75d1d897-16e4-11e6-9a6c-9150b541daae","series":0,"name":"replace","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"l"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0, j = 0 ; i < l ; i++) {\n    out[(j++)] = toDigits[((240 & (data[i])) >>> 4)];\n    out[(j++)] = toDigits[(15 & (data[i]))];\n}","position":"org.apache.commons.codec.binary.Hex:144","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; i < l ; i++) {\n    out[(j++)] = toDigits[((240 & (data[i])) >>> 4)];\n    out[(j++)] = toDigits[(15 & (data[i]))];\n}"},"status":-2},{"failures":[],"tindex":"75d1d898-16e4-11e6-9a6c-a166e1c38f40","series":0,"name":"add","transplant":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"variableMap":{"i":"b"},"type":"adrStmt","transplantationPoint":{"toString":"return b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40],"tindex":"75d1ffa9-16e4-11e6-9a6c-6381f0a4ffd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ruleMapping.put(patternKey, rules)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:318","type":"CtInvocationImpl","sourcecode":"ruleMapping.put(patternKey, rules)"},"status":-1},{"failures":[41,42,43,44,45,46,47,48],"tindex":"75d1ffaa-16e4-11e6-9a6c-bd398a5cf0f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx.update(pBytes, 0, keyLen)","position":"org.apache.commons.codec.digest.Sha2Crypt:398","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-1},{"failures":[],"tindex":"75d1ffab-16e4-11e6-9a6c-115801859d9e","series":0,"name":"replace","transplant":{"toString":"if ((suffix.length()) > (input.length())) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"other","suffix":"other"},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this) == other) {\n    return true;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:102","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.this) == other) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"75d1ffac-16e4-11e6-9a6c-ef65ec25d50b","series":0,"name":"add","transplant":{"toString":"java.lang.String line = rawLine","position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"variableMap":{"rawLine":"boxContent"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String bContent = boxContent","position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"status":-2},{"failures":[],"tindex":"75d1ffad-16e4-11e6-9a6c-6ba9d145faaf","series":0,"name":"replace","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return doubleMetaphone(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"status":-2},{"failures":[],"tindex":"75d1ffae-16e4-11e6-9a6c-873f716c6cda","series":0,"name":"replace","transplant":{"toString":"code.append('0')","position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(\"Rule\")","position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"status":0},{"failures":[49,50],"tindex":"75d226bf-16e4-11e6-9a6c-c92985727035","series":0,"name":"add","transplant":{"toString":"result.append('J', ' ')","position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('J', 'H')","position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[],"tindex":"75d226c0-16e4-11e6-9a6c-aff5da655e11","series":0,"name":"replace","transplant":{"toString":"len += (((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)","position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"b","len":"lbitWorkArea","lineLength":"b"},"type":"adrStmt","transplantationPoint":{"toString":"context.lbitWorkArea = ((context.lbitWorkArea) << 8) + b","position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << 8) + b"},"status":-3},{"failures":[],"tindex":"75d226c1-16e4-11e6-9a6c-e9d22566c765","series":0,"name":"replace","transplant":{"toString":"if (result >= 0) {\n    context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK);\n    context.ibitWorkArea = ((context.ibitWorkArea) << (org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE)) + result;\n    if ((context.modulus) == 0) {\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    } \n} ","position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"variableMap":{"result":"c","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"c","ibitWorkArea":"c","pos":"c","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"c","context":"context","org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE":"c","buffer":"buf","modulus":"c"},"type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.encode(buf, 0, c, context)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-3},{"failures":[],"tindex":"75d24dd2-16e4-11e6-9a6c-1dabfbce58b2","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Soundex.this.soundexMapping","position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_SSS"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_SSS","position":"org.apache.commons.codec.language.Nysiis:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[51],"tindex":"75d24dd3-16e4-11e6-9a6c-c1c73492f548","series":0,"name":"replace","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)","position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-1},{"failures":[24,25,26,27,29,30,31],"tindex":"75d24dd4-16e4-11e6-9a6c-cd90c76f50fd","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"input","this":"this","content":"content"},"type":"adrStmt","transplantationPoint":{"toString":"if (startsWith && endsWith) {\n    if ((content.length()) == 0) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return (input.length()) == 0;\n            }\n        };\n    } else {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return input.equals(content);\n            }\n        };\n    }\n} else if ((startsWith || endsWith) && ((content.length()) == 0)) {\n    return org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER;\n} else if (startsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n        }\n    };\n} else if (endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n        }\n    };\n} ","position":"org.apache.commons.codec.language.bm.Rule:506","type":"CtIfImpl","sourcecode":"if (startsWith && endsWith) {\n    if ((content.length()) == 0) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return (input.length()) == 0;\n            }\n        };\n    } else {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return input.equals(content);\n            }\n        };\n    }\n} else if ((startsWith || endsWith) && ((content.length()) == 0)) {\n    return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern;\n} else if (startsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n        }\n    };\n} else if (endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n        }\n    };\n} "},"status":-1},{"failures":[],"tindex":"75d274e5-16e4-11e6-9a6c-99d81e697a5a","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"why\", \"Why\")","position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^tough\", \"tou2f\")","position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":0},{"failures":[52],"tindex":"75d274e6-16e4-11e6-9a6c-6bdf32c34a3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code.append('X')","position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"75d274e7-16e4-11e6-9a6c-afcdcaefb245","series":0,"name":"add","transplant":{"toString":"return 0","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[49,50],"tindex":"75d274e8-16e4-11e6-9a6c-431c351a4daa","series":0,"name":"replace","transplant":{"toString":"result.appendPrimary('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('J', 'H')","position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[53,54,55],"tindex":"75d274e9-16e4-11e6-9a6c-37f6e813b3f8","series":0,"name":"replace","transplant":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"l_raw"},"type":"adrStmt","transplantationPoint":{"toString":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:210","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-1},{"failures":[56,57,58,59,50],"tindex":"75d29bfa-16e4-11e6-9a6c-55458fcf034d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"appendAlternate(alternate)","position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-1},{"failures":[60,61,46,47,48,62,63],"tindex":"75d29bfb-16e4-11e6-9a6c-4516cde127b2","series":0,"name":"replace","transplant":{"toString":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:540","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-1},{"failures":[],"tindex":"75d29bfc-16e4-11e6-9a6c-b1092c392295","series":0,"name":"add","transplant":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}","position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return decode(((java.lang.String)(value)))","position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"status":-2},{"failures":[64,65,66,67],"tindex":"75d29bfd-16e4-11e6-9a6c-2b8594474e45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"2\", \"\")","position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":-1},{"failures":[49,50],"tindex":"75d29bfe-16e4-11e6-9a6c-fb6443cbd121","series":0,"name":"replace","transplant":{"toString":"result.append('T')","position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:370","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[49,50],"tindex":"75d2c30f-16e4-11e6-9a6c-051eeeb60348","series":0,"name":"replace","transplant":{"toString":"result.append('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"TS\", \"FX\")","position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"status":-1},{"failures":[],"tindex":"75d2c310-16e4-11e6-9a6c-afcbcd35260e","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")","position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)","position":"org.apache.commons.codec.binary.StringUtils:286","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)"},"status":-2},{"failures":[],"tindex":"75d2c311-16e4-11e6-9a6c-f99da152fac0","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))","position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))"},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"return doubleMetaphone(((java.lang.String)(obj)))","position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"75d2c312-16e4-11e6-9a6c-45de8d446713","series":0,"name":"replace","transplant":{"toString":"return soundex(str)","position":"org.apache.commons.codec.language.RefinedSoundex:149","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"variableMap":{"str":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)","position":"org.apache.commons.codec.digest.Crypt:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)"},"status":-2},{"failures":[24,25,26,27,68,28,69,29,30,70,71,31,72,73,74,75,76,77],"tindex":"75d2c313-16e4-11e6-9a6c-a1cb4fbba0f1","series":0,"name":"add","transplant":{"toString":"inExtendedComment = false","position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"toString":"inMultilineComment = true","position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[],"tindex":"75d2ea24-16e4-11e6-9a6c-63a2b76a0724","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.phonemes.add(phoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(phoneme)"},"variableMap":{"phoneme":"join","phonemes":"newPhonemes"},"type":"adrStmt","transplantationPoint":{"toString":"newPhonemes.add(join)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:115","type":"CtInvocationImpl","sourcecode":"newPhonemes.add(join)"},"status":-3},{"failures":[],"tindex":"75d2ea25-16e4-11e6-9a6c-9391ad88653e","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"startDst"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)","position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"status":-2},{"failures":[],"tindex":"75d2ea26-16e4-11e6-9a6c-bf67aba9b759","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.RefinedSoundex.this, s1, s2)","position":"org.apache.commons.codec.language.RefinedSoundex:116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.RefinedSoundex.this, s1, s2)"},"variableMap":{"s1":"pattern","s2":"pattern"},"type":"adrStmt","transplantationPoint":{"toString":"return pattern.length()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"75d2ea27-16e4-11e6-9a6c-6b1b0a7f7662","series":0,"name":"replace","transplant":{"toString":"this.encodeTable = org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE","position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = new byte[lineSeparator.length]","position":"org.apache.commons.codec.binary.Base64:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-3},{"failures":[78],"tindex":"75d2ea28-16e4-11e6-9a6c-3b3afda32216","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[24,25,26,27,28,29,30,31],"tindex":"75d2ea29-16e4-11e6-9a6c-21024f691ead","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-1},{"failures":[43,46],"tindex":"75d3113a-16e4-11e6-9a6c-91ecca7cd748","series":0,"name":"replace","transplant":{"toString":"for (int i = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"variableMap":{"altCtx":"ctx","keyBytes":"altResult","keyLen":"blocksize"},"type":"adrStmt","transplantationPoint":{"toString":"ctx.update(altResult, 0, blocksize)","position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[],"tindex":"75d3113b-16e4-11e6-9a6c-6feed1dd10cb","series":0,"name":"add","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[79],"tindex":"75d3113c-16e4-11e6-9a6c-7d51c39dc88a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((str.length()) == 0) {\n    return str;\n} ","position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":-1},{"failures":[],"tindex":"75d3113d-16e4-11e6-9a6c-f98dfa3c4709","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"appendAlternate(alternate)","position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[],"tindex":"75d3113e-16e4-11e6-9a6c-2ff9a40424e3","series":0,"name":"add","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:375","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-2},{"failures":[],"tindex":"75d3113f-16e4-11e6-9a6c-032375f568af","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Soundex.this.soundexMapping","position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"out"},"type":"adrStmt","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"status":-3},{"failures":[],"tindex":"75d31140-16e4-11e6-9a6c-3bd9830717a8","series":0,"name":"add","transplant":{"toString":"final java.lang.String input = cleanup(source)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = cleanup(source)"},"variableMap":{"source":"regex"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String content = regex.substring((startsWith ? 1 : 0), (endsWith ? (regex.length()) - 1 : regex.length()))","position":"org.apache.commons.codec.language.bm.Rule:502","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = regex.substring((startsWith ? 1 : 0), (endsWith ? (regex.length()) - 1 : regex.length()))"},"status":-2},{"failures":[],"tindex":"75d33851-16e4-11e6-9a6c-9b21a85837df","series":0,"name":"add","transplant":{"toString":"final int sumLength = java.lang.Math.abs(((name1.length()) + (name2.length())))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((name1.length()) + (name2.length())))"},"variableMap":{"name2":"accentedWord","name1":"accentedWord"},"type":"adrStmt","transplantationPoint":{"toString":"final int n = accentedWord.length()","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = accentedWord.length()"},"status":-2},{"failures":[49,50],"tindex":"75d33852-16e4-11e6-9a6c-5b68ab8f4ea9","series":0,"name":"replace","transplant":{"toString":"result.append('J', 'A')","position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"KN\")","position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":70,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}