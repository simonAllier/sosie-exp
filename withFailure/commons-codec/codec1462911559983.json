{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":118,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":18,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":61,"org.apache.commons.codec.language.NysiisTest.testSnat":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":23,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":104,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":22,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":63,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":54,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":67,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":5,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":69,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":116,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":114,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":73,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":60,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":88,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":108,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":35,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":83,"org.apache.commons.codec.language.NysiisTest.testCap":39,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":78,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":84,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":87,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":85,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":86,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":30,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":28,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":32,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":90,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":4,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":17,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":115,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":25,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":119,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":29,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":12,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":99,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":20,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":105,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":55,"org.apache.commons.codec.language.NysiisTest.testTranan":51,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":100,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":106,"org.apache.commons.codec.language.NysiisTest.testFal":42,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":1,"org.apache.commons.codec.language.NysiisTest.testSnad":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":109,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":107,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":9,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":96,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":112,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":120,"org.apache.commons.codec.language.NysiisTest.testDropBy":49,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":24,"org.apache.commons.codec.binary.Base64Test.testBase64":95,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":103,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":53,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":15,"org.apache.commons.codec.binary.Base64Test.testUUID":80,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":89,"org.apache.commons.codec.binary.Base64Test.testSingletons":93,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":65,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":101,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":75,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":36,"org.apache.commons.codec.binary.Base64Test.testPairs":79,"org.apache.commons.codec.language.NysiisTest.testRule1":43,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":74,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":64,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":97,"org.apache.commons.codec.language.NysiisTest.testRule6":44,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":102,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":34,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":111,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":13,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":72,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":48,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":77,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":110,"org.apache.commons.codec.language.NysiisTest.testBran":45,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":52,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":3,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":91,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":98,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":70,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":92,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":19,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":56,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":58,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":113,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":8,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":76,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":11,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":37,"org.apache.commons.codec.language.NysiisTest.testDad":40,"org.apache.commons.codec.language.NysiisTest.testOthers":50,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":82,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":94,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":26,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":38,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.language.NysiisTest.testDan":41,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":71,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":14,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":81,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":66},"transformations":[{"failures":[],"tindex":"7a3b2cb3-16ec-11e6-895b-d3147cd27813","series":0,"name":"replace","transplant":{"toString":"final java.io.InputStream rulesIS = org.apache.commons.codec.language.bm.Languages.class.getClassLoader().getResourceAsStream(resName)","position":"org.apache.commons.codec.language.bm.Rule:266","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(resName)"},"variableMap":{"resName":"languageRulesResourceName","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.bm.Lang.class"},"type":"adrStmt","transplantationPoint":{"toString":"final java.io.InputStream lRulesIS = org.apache.commons.codec.language.bm.Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName)","position":"org.apache.commons.codec.language.bm.Lang:131","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.Class.getClassLoader().getResourceAsStream(languageRulesResourceName)"},"status":0},{"failures":[0,1,2,3,4],"tindex":"7a3b53c4-16ec-11e6-895b-3512d660ab00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer.write(hex2)","position":"org.apache.commons.codec.net.URLCodec:145","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-1},{"failures":[],"tindex":"7a3b7ad5-16ec-11e6-895b-db90c5102d09","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^h\", \"A\")","position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"dg\", \"2g\")","position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[],"tindex":"7a3b7ad6-16ec-11e6-895b-af1682dfaa9d","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.URLCodec:122","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-3},{"failures":[5,6,7,8,9,10,11,12],"tindex":"7a3b7ad7-16ec-11e6-895b-ade40de2be7a","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(tempResult, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"altResult"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 1 ; i <= (16 + ((altResult[0]) & 255)) ; i++) {\n    altCtx.update(saltBytes);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= (16 + ((altResult[0]) & 255)) ; i++) {\n    altCtx.update(saltBytes);\n}"},"status":-1},{"failures":[5,9,10,11,13,12],"tindex":"7a3ba1e8-16ec-11e6-895b-799c8595aa38","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)"},"status":-1},{"failures":[14,15,16,17,18],"tindex":"7a3ba1e9-16ec-11e6-895b-015691aaffee","series":0,"name":"replace","transplant":{"toString":"result.append('J', 'H')","position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DG\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n        result.append('J');\n        index += 3;\n    } else {\n        result.append(\"TK\");\n        index += 2;\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DT\", \"DD\")) {\n    result.append('T');\n    index += 2;\n} else {\n    result.append('T');\n    index++;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DG\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n        result.append('J');\n        index += 3;\n    } else {\n        result.append(\"TK\");\n        index += 2;\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"DT\", \"DD\")) {\n    result.append('T');\n    index += 2;\n} else {\n    result.append('T');\n    index++;\n}"},"status":-1},{"failures":[],"tindex":"7a3bc8fa-16ec-11e6-895b-0df9db2bccb9","series":0,"name":"replace","transplant":{"toString":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3\", \"\")","position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-3},{"failures":[],"tindex":"7a3bc8fb-16ec-11e6-895b-0df3d2b6de40","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))) {\n    throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\");\n} ","position":"org.apache.commons.codec.binary.Base32:308","type":"CtIfImpl","sourcecode":"if ((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))) {\n    throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\");\n} "},"status":-2},{"failures":[],"tindex":"7a3bf00c-16ec-11e6-895b-bba54af05ee5","series":0,"name":"replace","transplant":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:502","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return encode(((java.lang.String)(value)))","position":"org.apache.commons.codec.net.BCodec:201","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(value)))"},"status":-2},{"failures":[],"tindex":"7a3bf00d-16ec-11e6-895b-67b24f0ddac5","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)","position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)"},"variableMap":{"str":"lang"},"type":"adrStmt","transplantationPoint":{"toString":"return java.lang.String.format(\"org/apache/commons/codec/language/bm/%s_%s_%s.txt\", nameType.getName(), rt.getName(), lang)","position":"org.apache.commons.codec.language.bm.Rule:249","type":"CtReturnImpl","sourcecode":"return java.lang.String.format(\"org/apache/commons/codec/language/bm/%s_%s_%s.txt\", nameType.getName(), rt.getName(), lang)"},"status":-2},{"failures":[],"tindex":"7a3c171e-16ec-11e6-895b-3ba83d252e7d","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")","position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(e)","position":"org.apache.commons.codec.digest.HmacUtils:317","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"7a3c171f-16ec-11e6-895b-ddbed0b54402","series":0,"name":"replace","transplant":{"toString":"if (index != 0) {\n    return false;\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:801","type":"CtIfImpl","sourcecode":"if (index != 0) {\n    return false;\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"variableMap":{"index":"ipl","value":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if (ipl > (input.length())) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:706","type":"CtIfImpl","sourcecode":"if (ipl > (input.length())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"7a3c3e30-16ec-11e6-895b-f5e51525fc22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}","position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27],"tindex":"7a3c3e31-16ec-11e6-895b-850714de9c6b","series":0,"name":"replace","transplant":{"toString":"return firstLetter + name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return firstLetter + name"},"variableMap":{"name":"str","firstLetter":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[],"tindex":"7a3c6542-16ec-11e6-895b-4735c0b404c3","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.pattern","position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"variableMap":{"pattern":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX, org.apache.commons.codec.digest.Sha2Crypt.SHA256_BLOCKSIZE, org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_256)","position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-3},{"failures":[19,20,21,22,23,26,27],"tindex":"7a3c6543-16ec-11e6-895b-95489d50f213","series":0,"name":"replace","transplant":{"toString":"code.append('J')","position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"toString":"builder.append('0')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[],"tindex":"7a3c8c54-16ec-11e6-895b-87bfd4dfb186","series":0,"name":"replace","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"length"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String branch : branches) {\n    sb.append(branch);\n    if ((++index) < (branches.length)) {\n        sb.append('|');\n    } \n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:466","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : branches) {\n    sb.append(branch);\n    if ((++index) < (branches.int)) {\n        sb.append('|');\n    } \n}"},"status":-2},{"failures":[],"tindex":"7a3c8c55-16ec-11e6-895b-ff0ff13363d5","series":0,"name":"replace","transplant":{"toString":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"variableMap":{"es1":"value","es2":"value","i":"index","diff":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[],"tindex":"7a3cb366-16ec-11e6-895b-91a4e52432a1","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"name1LtRStart","salt":"name2RtLStart","prefix":"name1LtRStart"},"type":"adrStmt","transplantationPoint":{"toString":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:319","type":"CtIfImpl","sourcecode":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} "},"status":-2},{"failures":[],"tindex":"7a3cda77-16ec-11e6-895b-035f5a2e7f7d","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"c","encodeSize":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c = results[1]","position":"org.apache.commons.codec.digest.UnixCrypt:350","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-3},{"failures":[],"tindex":"7a3cda78-16ec-11e6-895b-89ab3f67b27f","series":0,"name":"replace","transplant":{"toString":"this.replacementDefault = replacementDefault.split(\"\\\\|\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:173","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementDefault.split(\"\\\\|\")"},"variableMap":{"replacementDefault":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"toString":"this.replacementAtStart = replacementAtStart.split(\"\\\\|\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:171","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementAtStart.split(\"\\\\|\")"},"status":-2},{"failures":[28,29],"tindex":"7a3ed649-16ec-11e6-895b-fbd49be65581","series":0,"name":"replace","transplant":{"toString":"return +1","position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return context.eof ? 0 : 1","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.Context.boolean ? 0 : 1"},"status":-1},{"failures":[],"tindex":"7a3efd5a-16ec-11e6-895b-73bec23ac298","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < (key.length) ; i++) {\n    key[i] = 0;\n}","position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"i","key":"tmp"},"type":"adrStmt","transplantationPoint":{"toString":"if (b != (org.apache.commons.codec.net.QCodec.UNDERSCORE)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.BLANK;\n}","position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n}"},"status":-3},{"failures":[30,31,32,33,34,35,36,37],"tindex":"7a3efd5b-16ec-11e6-895b-a373e511d0f1","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"tio\", \"sio\")","position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"3\", \"\")","position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[],"tindex":"7a3efd5c-16ec-11e6-895b-5da49267fff4","series":0,"name":"replace","transplant":{"toString":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inExtendedComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Lang:145","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"7a3efd5d-16ec-11e6-895b-bb03d37ad5fd","series":0,"name":"replace","transplant":{"toString":"buffer.setCharAt(0, charZero)","position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"variableMap":{"buffer":"key","charZero":"last2Char"},"type":"adrStmt","transplantationPoint":{"toString":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} ","position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"7a3f246e-16ec-11e6-895b-ab336c316de7","series":0,"name":"replace","transplant":{"toString":"final byte[] sBytes = new byte[saltLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[saltLen]"},"variableMap":{"saltLen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(encodeSize, context)","position":"org.apache.commons.codec.binary.Base32:445","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"7a3f246f-16ec-11e6-895b-4fc3005bfbda","series":0,"name":"replace","transplant":{"toString":"int txtLength","position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int b = c","position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2},{"failures":[],"tindex":"7a3f2470-16ec-11e6-895b-3f9fc5e4a347","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inExtendedComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Lang:145","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":0},{"failures":[],"tindex":"7a3f2471-16ec-11e6-895b-29b223369b49","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"ci\", \"si\")","position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"t+\", \"T\")","position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":0},{"failures":[],"tindex":"7a3f2472-16ec-11e6-895b-874a68f90617","series":0,"name":"add","transplant":{"toString":"int v = r ^ (r >>> 16)","position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"currentLine"},"type":"adrStmt","transplantationPoint":{"toString":"final int cLine = currentLine","position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"status":-2},{"failures":[],"tindex":"7a3f2473-16ec-11e6-895b-a9d818721486","series":0,"name":"add","transplant":{"toString":"final int nextIndex = getPatternLength()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int i = 2","position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"status":-2},{"failures":[],"tindex":"7a3f4b84-16ec-11e6-895b-71ea766e94ee","series":0,"name":"replace","transplant":{"toString":"for (int i = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i);\n}","position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('.')","position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":-2},{"failures":[19,20],"tindex":"7a3f4b85-16ec-11e6-895b-17b74cf911a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"lastReplacement = replacement","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"status":-1},{"failures":[],"tindex":"7a3f4b86-16ec-11e6-895b-3d3a74a82bcf","series":0,"name":"add","transplant":{"toString":"final byte[] b = new byte[512]","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"byte[] altResult = altCtx.digest()","position":"org.apache.commons.codec.digest.Sha2Crypt:212","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[],"tindex":"7a3f4b87-16ec-11e6-895b-c7970173890c","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(']')","position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.Caverphone:74","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} "},"status":-3},{"failures":[66,67],"tindex":"7a3f4b88-16ec-11e6-895b-0f369ad0f7f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"status":-1},{"failures":[],"tindex":"7a3f7299-16ec-11e6-895b-41d86f39f8e9","series":0,"name":"replace","transplant":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"variableMap":{"readLen":"index"},"type":"adrStmt","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return index"},"status":-3},{"failures":[],"tindex":"7a3f729a-16ec-11e6-895b-851bc1bfb82a","series":0,"name":"replace","transplant":{"toString":"int txtLength","position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int minRating = 0","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:185","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7a3f729b-16ec-11e6-895b-f92339384389","series":0,"name":"add","transplant":{"toString":"code.append('S')","position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd)","position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":0},{"failures":[],"tindex":"7a3f729c-16ec-11e6-895b-cfe8fe1e358f","series":0,"name":"add","transplant":{"toString":"t = left","position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"t = left"},"variableMap":{"t":"maxCodeLen","left":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"status":-2},{"failures":[],"tindex":"7a3f729d-16ec-11e6-895b-25f6de1dbb6f","series":0,"name":"replace","transplant":{"toString":"result.appendAlternate('F')","position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('J', ' ')","position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"status":0},{"failures":[5,9,10,11,13,12],"tindex":"7a3f99ae-16ec-11e6-895b-b9b7342b6f7f","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"7a3f99af-16ec-11e6-895b-7b0816206d3f","series":0,"name":"add","transplant":{"toString":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:294","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location))"},"variableMap":{"rawLine":"encoding","location":"encoding"},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))","position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"tindex":"7a3f99b0-16ec-11e6-895b-8ba9bf547c4e","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(saltBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"toString":"altCtx.update(keyBytes)","position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"7a3f99b1-16ec-11e6-895b-45167e3e067a","series":0,"name":"add","transplant":{"toString":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern p = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher m = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}","position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"alternate","salt":"alternate","prefix":"alternate"},"type":"adrStmt","transplantationPoint":{"toString":"appendAlternate(alternate)","position":"org.apache.commons.codec.language.DoubleMetaphone:975","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[],"tindex":"7a3fc0c2-16ec-11e6-895b-697a98edb778","series":0,"name":"replace","transplant":{"toString":"builder = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('T')","position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-3},{"failures":[],"tindex":"7a40ab23-16ec-11e6-895b-b781d9bd05b2","series":0,"name":"replace","transplant":{"toString":"boolean roundsCustom = false","position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final boolean force = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:528","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'))"},"status":-2},{"failures":[],"tindex":"7a40ab24-16ec-11e6-895b-77be8ac1e12a","series":0,"name":"replace","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN"},"type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.codec.language.bm.NameType s : org.apache.commons.codec.language.bm.NameType.values()) {\n    org.apache.commons.codec.language.bm.Lang.Langs.put(s, org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String.format(org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN, s.getName()), org.apache.commons.codec.language.bm.Languages.getInstance(s)));\n}","position":"org.apache.commons.codec.language.bm.Lang:101","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.util.Map<org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.Lang>.put(s, org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String.format(org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String, s.getName()), org.apache.commons.codec.language.bm.Languages.getInstance(s)));\n}"},"status":-2},{"failures":[],"tindex":"7a40d235-16ec-11e6-895b-1b1ac99a7788","series":0,"name":"replace","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"avail","to":"avail"},"type":"adrStmt","transplantationPoint":{"toString":"if (avail > 0) {\n    final byte[] buf = new byte[avail];\n    final int c = baseNCodec.readResults(buf, 0, avail, context);\n    if (c > 0) {\n        out.write(buf, 0, c);\n    } \n} ","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[68,69],"tindex":"7a40d236-16ec-11e6-895b-bdd424e31ae0","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[],"tindex":"7a40d237-16ec-11e6-895b-fd3f1c02200f","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"index","encodeSize":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:524","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-3},{"failures":[],"tindex":"7a40d238-16ec-11e6-895b-01795f0415b8","series":0,"name":"add","transplant":{"toString":"return 1","position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return context.eof ? org.apache.commons.codec.binary.BaseNCodec.EOF : 0","position":"org.apache.commons.codec.binary.BaseNCodec:301","type":"CtReturnImpl","sourcecode":"return context.boolean ? org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int : 0"},"status":-2},{"failures":[14,15],"tindex":"7a40f949-16ec-11e6-895b-6b733f707414","series":0,"name":"add","transplant":{"toString":"result.append('A', 'F')","position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('X')","position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"7a40f94a-16ec-11e6-895b-2b01a31259ab","series":0,"name":"replace","transplant":{"toString":"throw new java.io.IOException(\"mark/reset not supported\")","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")","position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"status":-2},{"failures":[],"tindex":"7a40f94b-16ec-11e6-895b-a53742a56b46","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"cy\", \"sy\")","position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_DT_ETC.matcher(str).replaceFirst(\"D\")","position":"org.apache.commons.codec.language.Nysiis:270","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"D\")"},"status":-2},{"failures":[],"tindex":"7a40f94c-16ec-11e6-895b-57cd32cd0d21","series":0,"name":"replace","transplant":{"toString":"return encodeText(value, charset)","position":"org.apache.commons.codec.net.BCodec:123","type":"CtReturnImpl","sourcecode":"return encodeText(value, charset)"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_8","value":"original"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original.getBytes(org.apache.commons.codec.Charsets.UTF_8))","position":"org.apache.commons.codec.digest.UnixCrypt:263","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[],"tindex":"7a40f94d-16ec-11e6-895b-bfce832729ce","series":0,"name":"replace","transplant":{"toString":"java.util.Arrays.fill(tempResult, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"finalb"},"type":"adrStmt","transplantationPoint":{"toString":"java.util.Arrays.fill(finalb, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"status":-3},{"failures":[],"tindex":"7a40f94e-16ec-11e6-895b-c5fe169afee7","series":0,"name":"replace","transplant":{"toString":"final int numSaltChars = org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS.length","position":"org.apache.commons.codec.digest.UnixCrypt:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int"},"variableMap":{"org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS":"chars","length":"length"},"type":"adrStmt","transplantationPoint":{"toString":"final int len = chars.length","position":"org.apache.commons.codec.language.Nysiis:278","type":"CtLocalVariableImpl","sourcecode":"final int int = chars.int"},"status":-3},{"failures":[],"tindex":"7a41205f-16ec-11e6-895b-dbdfd17804ef","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)","position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"status":-2},{"failures":[],"tindex":"7a412060-16ec-11e6-895b-9df985eba153","series":0,"name":"replace","transplant":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}","position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"variableMap":{"obj":"ascii"},"type":"adrStmt","transplantationPoint":{"toString":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (ascii instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)));\n} "},"status":-2},{"failures":[],"tindex":"7a412061-16ec-11e6-895b-2fb749438fef","series":0,"name":"replace","transplant":{"toString":"context.lbitWorkArea = ((context.lbitWorkArea) << (org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE)) + result","position":"org.apache.commons.codec.binary.Base32:358","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result"},"variableMap":{"result":"b","org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE":"b","context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"toString":"context.lbitWorkArea = ((context.lbitWorkArea) << 8) + b","position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << 8) + b"},"status":-3},{"failures":[],"tindex":"7a412062-16ec-11e6-895b-19481053f655","series":0,"name":"replace","transplant":{"toString":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.alternate.append(value.substring(0, addChars));\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:989","type":"CtIfImpl","sourcecode":"if ((value.length()) <= addChars) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value);\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars));\n}"},"variableMap":{"alternate":"sb","addChars":"pos","value":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII"},"type":"adrStmt","transplantationPoint":{"toString":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII.charAt(pos));\n} else {\n    sb.append(c);\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n} else {\n    sb.append(c);\n}"},"status":-3},{"failures":[],"tindex":"7a414773-16ec-11e6-895b-51b03f9682ef","series":0,"name":"add","transplant":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"inAvail","y":"inAvail"},"type":"adrStmt","transplantationPoint":{"toString":"if (inAvail < 0) {\n    context.eof = true;\n} ","position":"org.apache.commons.codec.binary.Base32:342","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"7a414774-16ec-11e6-895b-877e8f4aec6d","series":0,"name":"replace","transplant":{"toString":"txt = txt + (org.apache.commons.codec.language.Caverphone1.SIX_1)","position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_KN.matcher(str).replaceFirst(\"NN\")","position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":-3},{"failures":[],"tindex":"7a414775-16ec-11e6-895b-877ae10f65d2","series":0,"name":"replace","transplant":{"toString":"return pArray","position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"variableMap":{"pArray":"result"},"type":"adrStmt","transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-3},{"failures":[],"tindex":"7a414776-16ec-11e6-895b-9de6b94b79f5","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"lineLength"},"type":"adrStmt","transplantationPoint":{"toString":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} ","position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"7a416e87-16ec-11e6-895b-ed479491b7f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"readResults(result, 0, result.length, context)","position":"org.apache.commons.codec.binary.BaseNCodec:413","type":"CtInvocationImpl","sourcecode":"readResults(result, 0, result.int, context)"},"status":-1},{"failures":[101,102,103,104,105,106,70,71,72],"tindex":"7a416e88-16ec-11e6-895b-33d5e7b25f09","series":0,"name":"replace","transplant":{"toString":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"status":-1},{"failures":[],"tindex":"7a416e89-16ec-11e6-895b-255e37214608","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.decodeHex(charArray)","position":"org.apache.commons.codec.binary.Hex:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(charArray)"},"variableMap":{"charArray":"pObject"},"type":"adrStmt","transplantationPoint":{"toString":"return encode(((java.lang.String)(pObject)))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(pObject)))"},"status":-2},{"failures":[],"tindex":"7a416e8a-16ec-11e6-895b-87c7898b9725","series":0,"name":"replace","transplant":{"toString":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"variableMap":{"encoding":"languageRulesResourceName"},"type":"adrStmt","transplantationPoint":{"toString":"if ((parts.length) != 3) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n} ","position":"org.apache.commons.codec.language.bm.Lang:168","type":"CtIfImpl","sourcecode":"if ((parts.int) != 3) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed line '\" + rawLine) + \"' in language resource '\") + languageRulesResourceName) + \"'\"));\n} "},"status":-2},{"failures":[],"tindex":"7a41959b-16ec-11e6-895b-27cb9a4ba57c","series":0,"name":"replace","transplant":{"toString":"appendPrimary(primary)","position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"variableMap":{"primary":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String str : charsToTrim) {\n    upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY);\n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:87","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : charsToTrim) {\n    upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"7a41959c-16ec-11e6-895b-81193f9685dc","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.language.Soundex.this.maxLength = maxLength","position":"org.apache.commons.codec.language.Soundex:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Soundex.this.int = maxLength"},"variableMap":{"maxLength":"d"},"type":"adrStmt","transplantationPoint":{"toString":"d = (d >>> 2) | (d << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"status":-2},{"failures":[],"tindex":"7a41959d-16ec-11e6-895b-57add1c6e8be","series":0,"name":"replace","transplant":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":0},{"failures":[],"tindex":"7a41959e-16ec-11e6-895b-7f3b0a963eee","series":0,"name":"replace","transplant":{"toString":"return schedule","position":"org.apache.commons.codec.digest.UnixCrypt:381","type":"CtReturnImpl","sourcecode":"return schedule"},"variableMap":{"schedule":"out"},"type":"adrStmt","transplantationPoint":{"toString":"return out","position":"org.apache.commons.codec.digest.UnixCrypt:317","type":"CtReturnImpl","sourcecode":"return out"},"status":-3},{"failures":[],"tindex":"7a41959f-16ec-11e6-895b-0351b226e97a","series":0,"name":"replace","transplant":{"toString":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.COV2CHAR[c])))","position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])))"},"status":-2},{"failures":[],"tindex":"7a41bcb0-16ec-11e6-895b-ad5f8fe9750f","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")","position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)","position":"org.apache.commons.codec.net.QCodec:271","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"status":-2},{"failures":[107,108,109],"tindex":"7a41bcb1-16ec-11e6-895b-533b41a3afcf","series":0,"name":"replace","transplant":{"toString":"final java.lang.String inputContext = input.substring(index)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:504","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(index)"},"variableMap":{"input":"name","index":"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String firstThree = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:163","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)"},"status":-1},{"failures":[],"tindex":"7a41bcb2-16ec-11e6-895b-13f16c20865d","series":0,"name":"add","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(ch)) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"7a41bcb3-16ec-11e6-895b-d3ff7ddf817a","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)","position":"org.apache.commons.codec.digest.UnixCrypt:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)"},"variableMap":{"left":"length","right":"length","results":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"toString":"for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];\n    } \n}","position":"org.apache.commons.codec.binary.BinaryCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-2},{"failures":[],"tindex":"7a41bcb4-16ec-11e6-895b-d3df81433c12","series":0,"name":"replace","transplant":{"toString":"final int[] results = new int[2]","position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int[] schedule = new int[32]","position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"status":-2},{"failures":[],"tindex":"7a41bcb5-16ec-11e6-895b-2b448499594e","series":0,"name":"replace","transplant":{"toString":"final byte[] buffer = new byte[org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH]","position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"len"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] out = new byte[len >> 1]","position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"status":-3},{"failures":[110],"tindex":"7a41e3c6-16ec-11e6-895b-33cd7e8cdea8","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.RULES)))","position":"org.apache.commons.codec.language.bm.PhoneticEngine:312","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)))"},"status":-1},{"failures":[111,112,113,114,115,116],"tindex":"7a41e3c7-16ec-11e6-895b-89209da5d598","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"phonemes.put(mergedPhoneme, mergedPhoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:366","type":"CtInvocationImpl","sourcecode":"phonemes.put(mergedPhoneme, mergedPhoneme)"},"status":-1},{"failures":[],"tindex":"7a41e3c8-16ec-11e6-895b-793a179ffb09","series":0,"name":"replace","transplant":{"toString":"this.pattern = pattern","position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"b\", \"p\")","position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"status":-2},{"failures":[],"tindex":"7a41e3c9-16ec-11e6-895b-f573284df305","series":0,"name":"replace","transplant":{"toString":"replacedName = replacedName.replace(dc, singleLetter)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"variableMap":{"singleLetter":"txt","replacedName":"txt","dc":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":-2},{"failures":[117],"tindex":"7a41e3ca-16ec-11e6-895b-c52fa41fb982","series":0,"name":"replace","transplant":{"toString":"sb.append(\"Rule\")","position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.append('X')","position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[118],"tindex":"7a41e3cb-16ec-11e6-895b-45db078e606e","series":0,"name":"replace","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"7a420adc-16ec-11e6-895b-cb0740bd6d67","series":0,"name":"replace","transplant":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char code","position":"org.apache.commons.codec.language.ColognePhonetic:333","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[119,120],"tindex":"7a420add-16ec-11e6-895b-8b1914b1d3c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((binaryData == null) || ((binaryData.length) == 0)) {\n    return binaryData;\n} ","position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"status":-1},{"failures":[],"tindex":"7a420ade-16ec-11e6-895b-c37b590a924c","series":0,"name":"replace","transplant":{"toString":"ls.add(lang)","position":"org.apache.commons.codec.language.bm.Languages:142","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"variableMap":{"ls":"ls","lang":"line"},"type":"adrStmt","transplantationPoint":{"toString":"ls.add(line)","position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"status":-3},{"failures":[],"tindex":"7a420adf-16ec-11e6-895b-4fd047abb2c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"7a420ae0-16ec-11e6-895b-c739aeca558b","series":0,"name":"replace","transplant":{"toString":"flush(true)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:181","type":"CtIfImpl","sourcecode":"if (finalRules == null) {\n    throw new java.lang.NullPointerException(\"The finalRules argument must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"7a420ae1-16ec-11e6-895b-39759002424b","series":0,"name":"replace","transplant":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"context.pos += lineSeparator.length","position":"org.apache.commons.codec.binary.Base64:375","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[],"tindex":"7a420ae2-16ec-11e6-895b-05e40fd07d80","series":0,"name":"replace","transplant":{"toString":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found)) {\n    patternLength = 1;\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:222","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean)) {\n    patternLength = 1;\n} "},"variableMap":{"found":"slavoGermanic","patternLength":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ISL\", \"YSL\")) {\n    index++;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, \"SUGAR\"))) {\n    result.append('X', 'S');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SH\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n        result.append('S');\n    } else {\n        result.append('X');\n    }\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"SIO\", \"SIA\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"SIAN\"))) {\n    if (slavoGermanic) {\n        result.append('S');\n    } else {\n        result.append('S', 'X');\n    }\n    index += 3;\n} else if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ISL\", \"YSL\")) {\n    index++;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, \"SUGAR\"))) {\n    result.append('X', 'S');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SH\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n        result.append('S');\n    } else {\n        result.append('X');\n    }\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"SIO\", \"SIA\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"SIAN\"))) {\n    if (slavoGermanic) {\n        result.append('S');\n    } else {\n        result.append('S', 'X');\n    }\n    index += 3;\n} else if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"status":-3},{"failures":[],"tindex":"7a4230f3-16ec-11e6-895b-b7da3060c9d5","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"index","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-3},{"failures":[53,54],"tindex":"7a425804-16ec-11e6-895b-193aaa0bb5f4","series":0,"name":"add","transplant":{"toString":"out.close()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"toString":"if (avail > 0) {\n    final byte[] buf = new byte[avail];\n    final int c = baseNCodec.readResults(buf, 0, avail, context);\n    if (c > 0) {\n        out.write(buf, 0, c);\n    } \n} ","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":98,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}