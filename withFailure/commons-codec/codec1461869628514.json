{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8aac2884-0d72-11e6-bbc2-5be9dc877ac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":-3},{"failures":[],"tindex":"8aac2885-0d72-11e6-bbc2-51883592fa21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"hasUnderscores"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"status":-3},{"failures":[],"tindex":"8aac4f96-0d72-11e6-bbc2-7d8861a27b31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"TCH\")) {\n    break;\n} "},"variableMap":{"local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:215","type":"CtIfImpl","sourcecode":"if ((isLastChar(wdsz, (n + 1))) && (isNextChar(local, n, 'H'))) {\n    break;\n} "},"status":-3},{"failures":[],"tindex":"8aac4f97-0d72-11e6-bbc2-bb88fed7caaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((bigInt.bitLength()) % 8) == 0) {\n    startSrc = 1;\n    len--;\n} "},"status":-3},{"failures":[],"tindex":"8aac4f98-0d72-11e6-bbc2-b59a738b2415","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-3},{"failures":[],"tindex":"8aac4f99-0d72-11e6-bbc2-c3b7baf8cf72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"variableMap":{"tmp":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"status":-3},{"failures":[],"tindex":"8aac4f9a-0d72-11e6-bbc2-25e5156c92a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_AF":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"status":-3},{"failures":[],"tindex":"8aac4f9b-0d72-11e6-bbc2-f9c46c1d21c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-3},{"failures":[],"tindex":"8aac4f9c-0d72-11e6-bbc2-33967cadf970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:96","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"8aac76ad-0d72-11e6-bbc2-9d7290a3d732","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"status":-3},{"failures":[],"tindex":"8aac76ae-0d72-11e6-bbc2-89e107e41fd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(bytes)"},"variableMap":{"bytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return binaryData"},"status":-3},{"failures":[],"tindex":"8aac76af-0d72-11e6-bbc2-0de82e198ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:425","type":"CtIfImpl","sourcecode":"if ((index == 0) && (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    result.append('K', 'J');\n    index += 2;\n} else if (((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ER\")) || ((charAt(value, (index + 1))) == 'Y')) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"E\", \"I\")))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"RGY\", \"OGY\")))) {\n    result.append('K', 'J');\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"E\", \"I\", \"Y\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n        result.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n        result.append('J');\n    } else {\n        result.append('J', 'K');\n    }\n    index += 2;\n} else if ((charAt(value, (index + 1))) == 'G') {\n    index += 2;\n    result.append('K');\n} else {\n    index++;\n    result.append('K');\n}"},"status":-3},{"failures":[],"tindex":"8aac76b0-0d72-11e6-bbc2-31d4960632b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:116","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"8aac76b1-0d72-11e6-bbc2-f150e6e4467a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:139","type":"CtReturnImpl","sourcecode":"return null"},"status":-3},{"failures":[],"tindex":"8aac9dc2-0d72-11e6-bbc2-d9cc627251f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"m","len":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"status":-3},{"failures":[],"tindex":"8aac9dc3-0d72-11e6-bbc2-95c0c57d1138","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-3},{"failures":[],"tindex":"8aac9dc4-0d72-11e6-bbc2-c94a576215f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-3},{"failures":[],"tindex":"8aac9dc5-0d72-11e6-bbc2-a3545dba85a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"variableMap":{"b":"out","c":"len","u":"len","y":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:88","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; j < len ; i++) {\n    int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4;\n    j++;\n    f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j));\n    j++;\n    out[i] = ((byte)(f & 255));\n}"},"status":-3},{"failures":[],"tindex":"8aac9dc6-0d72-11e6-bbc2-fbcf7b9ea6e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-3},{"failures":[],"tindex":"8aac9dc7-0d72-11e6-bbc2-41a9b2224e1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"altCtx.reset()"},"variableMap":{"altCtx":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= (16 + ((altResult[0]) & 255)) ; i++) {\n    altCtx.update(saltBytes);\n}"},"status":-3},{"failures":[],"tindex":"8aac9dc8-0d72-11e6-bbc2-b91dfdaf83d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(((byte[])(raw)))"},"variableMap":{"raw":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(((java.lang.String)(source)))"},"status":-3},{"failures":[],"tindex":"8aacc4d9-0d72-11e6-bbc2-8fd697e3a362","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-3},{"failures":[],"tindex":"8aacc4da-0d72-11e6-bbc2-eda5c8f5d208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"variableMap":{"sBytes":"buffer","tempResult":"lineSeparator","saltLen":"currentLinePos","cp":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:508","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"status":-3},{"failures":[],"tindex":"8aacc4db-0d72-11e6-bbc2-537251c84231","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:431","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"variableMap":{"pArray":"lineSeparator","org.apache.commons.codec.binary.BaseNCodec.EOF":"encodeSize","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:500","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    int int = in[(inPos++)];\n    if (b < 0) {\n        b += 256;\n    } \n    context.long = ((context.long) << 8) + b;\n    if (0 == (context.int)) {\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n        context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n        if (((int) > 0) && ((int) <= (context.int))) {\n            java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n            context.int += byte[].int;\n            context.int = 0;\n        } \n    } \n}"},"status":-3},{"failures":[],"tindex":"8aacc4dc-0d72-11e6-bbc2-ff6145001445","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.AbstractCaverphone.this.encode(str1)"},"variableMap":{"str1":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-3},{"failures":[],"tindex":"8aacebed-0d72-11e6-bbc2-e90756e7f6e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:472","type":"CtAssignmentImpl","sourcecode":"context.int = (context.int) >> 4"},"status":-3},{"failures":[],"tindex":"8aacebee-0d72-11e6-bbc2-c7494030847e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-3},{"failures":[],"tindex":"8aacebef-0d72-11e6-bbc2-97e2ea606ecd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:116","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"8aacebf0-0d72-11e6-bbc2-2925188108f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:743","type":"CtInvocationImpl","sourcecode":"mac.update(valueToDigest)"},"status":-3},{"failures":[],"tindex":"8aacebf1-0d72-11e6-bbc2-bff418313ff4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-3},{"failures":[],"tindex":"8aacebf2-0d72-11e6-bbc2-f304883ec624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"buffer","offset":"org.apache.commons.codec.binary.Base64.MASK_6BITS","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-3},{"failures":[],"tindex":"8aacebf3-0d72-11e6-bbc2-d93fb1fff56e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-3},{"failures":[],"tindex":"8aad1304-0d72-11e6-bbc2-81609bdf9b0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"variableMap":{"singleLetter":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE","replacedName":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE","dc":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-3},{"failures":[],"tindex":"8aad1305-0d72-11e6-bbc2-0beb5d047a2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"status":-3},{"failures":[],"tindex":"8aad1306-0d72-11e6-bbc2-f3c1675d12a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-3},{"failures":[],"tindex":"8aad1307-0d72-11e6-bbc2-9dd35196f70d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:309","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0])"},"status":-3},{"failures":[],"tindex":"8aad1308-0d72-11e6-bbc2-0b35e253a0a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"variableMap":{"ascii":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-3},{"failures":[],"tindex":"8aad1309-0d72-11e6-bbc2-b74af98c3596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:97","type":"CtWhileImpl","sourcecode":"while ((!(result.isComplete())) && (index <= ((value.length()) - 1))) {\n    switch (value.charAt(index)) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n        case 'Y' :\n            index = handleAEIOUY(result, index);\n            break;\n        case 'B' :\n            result.append('P');\n            index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n            break;\n        case '\\u00c7' :\n            result.append('S');\n            index++;\n            break;\n        case 'C' :\n            index = handleC(value, result, index);\n            break;\n        case 'D' :\n            index = handleD(value, result, index);\n            break;\n        case 'F' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n            break;\n        case 'G' :\n            index = handleG(value, result, index, slavoGermanic);\n            break;\n        case 'H' :\n            index = handleH(value, result, index);\n            break;\n        case 'J' :\n            index = handleJ(value, result, index, slavoGermanic);\n            break;\n        case 'K' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n            break;\n        case 'L' :\n            index = handleL(value, result, index);\n            break;\n        case 'M' :\n            result.append('M');\n            index = conditionM0(value, index) ? index + 2 : index + 1;\n            break;\n        case 'N' :\n            result.append('N');\n            index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n            break;\n        case '\\u00d1' :\n            result.append('N');\n            index++;\n            break;\n        case 'P' :\n            index = handleP(value, result, index);\n            break;\n        case 'Q' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n            break;\n        case 'R' :\n            index = handleR(value, result, index, slavoGermanic);\n            break;\n        case 'S' :\n            index = handleS(value, result, index, slavoGermanic);\n            break;\n        case 'T' :\n            index = handleT(value, result, index);\n            break;\n        case 'V' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n            break;\n        case 'W' :\n            index = handleW(value, result, index);\n            break;\n        case 'X' :\n            index = handleX(value, result, index);\n            break;\n        case 'Z' :\n            index = handleZ(value, result, index, slavoGermanic);\n            break;\n        default :\n            index++;\n            break;\n    }\n}"},"status":-3},{"failures":[],"tindex":"8aad130a-0d72-11e6-bbc2-4f7d12b21267","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:300","type":"CtReturnImpl","sourcecode":"return passwd.toString()"},"variableMap":{"passwd":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:168","type":"CtReturnImpl","sourcecode":"return (((java.lang.StringBuilder.toString()) + \"[\") + (org.apache.commons.codec.language.bm.Languages.LanguageSet)) + \"]\""},"status":-3},{"failures":[],"tindex":"8aad130b-0d72-11e6-bbc2-99fb31f3623c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"variableMap":{"bytes":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-3},{"failures":[],"tindex":"8aad3a1c-0d72-11e6-bbc2-eb84dec842e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.decodeBase64(pArray)"},"status":-3},{"failures":[],"tindex":"8aad3a1d-0d72-11e6-bbc2-5388985d13bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-3},{"failures":[],"tindex":"8aad3a1e-0d72-11e6-bbc2-43e489cc5d98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:514","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : rules) {\n    if (rule.matches(inputContext)) {\n        if (branching) {\n            nextBranches.clear();\n        } \n        final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n        final boolean boolean = ((replacements.int) > 1) && branching;\n        for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n            for (final java.lang.String java.lang.String : replacements) {\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n                final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                nextBranch.processNextReplacement(nextReplacement, force);\n                if (branching) {\n                    nextBranches.add(nextBranch);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (branching) {\n            currentBranches.clear();\n            currentBranches.addAll(nextBranches);\n        } \n        index += (rule.getPatternLength()) - 1;\n        break;\n    } \n}"},"status":-3},{"failures":[],"tindex":"8aad3a1f-0d72-11e6-bbc2-155e0d225a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:200","type":"CtWhileImpl","sourcecode":"while (todo > 0) {\n    int int = ((int)(java.lang.Math.min(b.int, todo)));\n    len = org.apache.commons.codec.binary.BaseNCodecInputStream.this.read(b, 0, len);\n    if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n        break;\n    } \n    todo -= len;\n}"},"status":-3},{"failures":[],"tindex":"8aad3a20-0d72-11e6-bbc2-df2022169a16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"t = left"},"status":-3},{"failures":[],"tindex":"8aad3a21-0d72-11e6-bbc2-afa8104db5d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:295","type":"CtInvocationImpl","sourcecode":"ctx1.reset()"},"variableMap":{"ctx1":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}"},"status":-3},{"failures":[],"tindex":"8aad3a22-0d72-11e6-bbc2-81a55a7095d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"variableMap":{"b":"b","offset":"iValue","iValue":"iValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"status":-3},{"failures":[],"tindex":"8aad3a23-0d72-11e6-bbc2-95195aa94172","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"8aad3a24-0d72-11e6-bbc2-417d4c1fe7e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-3},{"failures":[],"tindex":"8aad6135-0d72-11e6-bbc2-63f87deb8dfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":-3},{"failures":[],"tindex":"8aad6136-0d72-11e6-bbc2-4312e8716ab1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:350","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.this(true)"},"status":-3},{"failures":[],"tindex":"8aad6137-0d72-11e6-bbc2-7bb7dc4a999f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:94","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"8aad6138-0d72-11e6-bbc2-f9aaede6240f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-3},{"failures":[],"tindex":"8aad6139-0d72-11e6-bbc2-5d6f0cf545a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"status":-3},{"failures":[],"tindex":"8aad613a-0d72-11e6-bbc2-7db8b8c81839","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"b","y":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-3},{"failures":[],"tindex":"8aad613b-0d72-11e6-bbc2-ffa1e199b8e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:296","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-3},{"failures":[],"tindex":"8aad613c-0d72-11e6-bbc2-93bcdf812247","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return pArray"},"variableMap":{"pArray":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"status":-3},{"failures":[],"tindex":"8aad613d-0d72-11e6-bbc2-2daaa7b329a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:261","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"MCC\")"},"status":-3},{"failures":[],"tindex":"8aad613e-0d72-11e6-bbc2-dff7f7f14f13","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtInvocationImpl","sourcecode":"colognePhonetic(text1)"},"variableMap":{"text1":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"status":-3},{"failures":[],"tindex":"8aad884f-0d72-11e6-bbc2-016d2ea90a89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)"},"status":-3},{"failures":[],"tindex":"8aad8850-0d72-11e6-bbc2-e1b445d509d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:458","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-3},{"failures":[],"tindex":"8aad8851-0d72-11e6-bbc2-5599530bdcd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":-3},{"failures":[],"tindex":"8aad8852-0d72-11e6-bbc2-13c4459a2975","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} "},"status":-3},{"failures":[],"tindex":"8aad8853-0d72-11e6-bbc2-7b29339bb883","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:334","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"status":-3},{"failures":[],"tindex":"8aad8854-0d72-11e6-bbc2-2bc6cc434201","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"variableMap":{"source":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-3},{"failures":[],"tindex":"8aad8855-0d72-11e6-bbc2-77ad9a62639d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:293","type":"CtReturnImpl","sourcecode":"return decode(str, getDefaultCharset())"},"status":-3},{"failures":[],"tindex":"8aad8856-0d72-11e6-bbc2-b5124da25b1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:132","type":"CtAssignmentImpl","sourcecode":"name = cleanName(name)"},"variableMap":{"name":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":-3},{"failures":[],"tindex":"8aad8857-0d72-11e6-bbc2-396b393e5948","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtInvocationImpl","sourcecode":"colognePhonetic(text1)"},"variableMap":{"text1":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-3},{"failures":[],"tindex":"8aad8858-0d72-11e6-bbc2-2777f3fba82c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:454","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-3},{"failures":[],"tindex":"8aadaf69-0d72-11e6-bbc2-49f63b20e170","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtUnaryOperatorImpl","sourcecode":"(offset++)"},"status":-3},{"failures":[],"tindex":"8aadaf6a-0d72-11e6-bbc2-339a51d8d230","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"variableMap":{"mappedChar":"java.lang.Character.MIN_VALUE","preHWChar":"java.lang.Character.MIN_VALUE","firstCode":"java.lang.Character.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-3},{"failures":[],"tindex":"8aadaf6b-0d72-11e6-bbc2-11ffaf965d7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:152","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-3},{"failures":[],"tindex":"8aadaf6c-0d72-11e6-bbc2-8b9ffe347a29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"digit"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:177","type":"CtIfImpl","sourcecode":"if (digit == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index));\n} "},"status":-3},{"failures":[],"tindex":"8aadaf6d-0d72-11e6-bbc2-77eec21b43e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"status":-3},{"failures":[],"tindex":"8aadaf6e-0d72-11e6-bbc2-479548d86fb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:395","type":"CtBreakImpl","sourcecode":"break"},"status":-3},{"failures":[],"tindex":"8aadaf6f-0d72-11e6-bbc2-2b5094405c0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtInvocationImpl","sourcecode":"colognePhonetic(text1)"},"variableMap":{"text1":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.Caverphone.this.caverphone(str1)"},"status":-3},{"failures":[],"tindex":"8aadaf70-0d72-11e6-bbc2-d30a679b8fa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:113","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-3},{"failures":[],"tindex":"8aadaf71-0d72-11e6-bbc2-e7b62435d5aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:836","type":"CtReturnImpl","sourcecode":"return false"},"status":-3},{"failures":[],"tindex":"8aadaf72-0d72-11e6-bbc2-c9b31ff46776","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:116","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-3},{"failures":[],"tindex":"8aadaf73-0d72-11e6-bbc2-5784c40a8636","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:168","type":"CtReturnImpl","sourcecode":"return (((java.lang.StringBuilder.toString()) + \"[\") + (org.apache.commons.codec.language.bm.Languages.LanguageSet)) + \"]\""},"status":-3},{"failures":[],"tindex":"8aadaf74-0d72-11e6-bbc2-fbe8a1a58789","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"string","lastThree":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.int, string.length())) : string"},"status":-3},{"failures":[],"tindex":"8aadd685-0d72-11e6-bbc2-b126a45569af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-3},{"failures":[],"tindex":"8aadd686-0d72-11e6-bbc2-e5c67af0e6b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-3},{"failures":[],"tindex":"8aadd687-0d72-11e6-bbc2-9bfbd48dc22a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)"},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-3},{"failures":[],"tindex":"8aadd688-0d72-11e6-bbc2-ffedddbb2406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:487","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) << 3))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:398","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-3},{"failures":[],"tindex":"8aadd689-0d72-11e6-bbc2-db5278ffbac6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-3},{"failures":[],"tindex":"8aadd68a-0d72-11e6-bbc2-517824f7ae18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:725","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"status":-3},{"failures":[],"tindex":"8aadd68b-0d72-11e6-bbc2-2fa6cdea8c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"variableMap":{"left":"jj","right":"ii","results":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:183","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-3},{"failures":[],"tindex":"8aadd68c-0d72-11e6-bbc2-cdc67699dfcd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":-3},{"failures":[],"tindex":"8aadd68d-0d72-11e6-bbc2-15c777f59fe4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int"},"status":-3},{"failures":[],"tindex":"8aadd68e-0d72-11e6-bbc2-2d862ba2c3af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-3},{"failures":[],"tindex":"8aadd68f-0d72-11e6-bbc2-25d2b47a8b94","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"variableMap":{"lineSeparator":"pBytes","lineLength":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"status":-3},{"failures":[],"tindex":"8aadd690-0d72-11e6-bbc2-816f0168c242","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"nextChar","chr":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"status":-3},{"failures":[],"tindex":"8aadfda1-0d72-11e6-bbc2-177f4aeb8c62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"status":-3},{"failures":[],"tindex":"8aadfda2-0d72-11e6-bbc2-2317be77ca8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-3},{"failures":[],"tindex":"8aadfda3-0d72-11e6-bbc2-37f70a2abb8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:224","type":"CtInvocationImpl","sourcecode":"copyData(0, int)"},"status":-3},{"failures":[],"tindex":"8aadfda4-0d72-11e6-bbc2-ddc3c2367b4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:175","type":"CtIfImpl","sourcecode":"if (b == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    hasUnderscores = true;\n    break;\n} "},"status":-3},{"failures":[],"tindex":"8aadfda5-0d72-11e6-bbc2-8d94c6db021d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"rightLength","len":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:349","type":"CtIfImpl","sourcecode":"if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n    if (lastCode == '/') {\n        continue;\n    } \n    code = '-';\n} else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-3},{"failures":[],"tindex":"8aadfda6-0d72-11e6-bbc2-13e68ef662a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:118","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-3},{"failures":[],"tindex":"8aadfda7-0d72-11e6-bbc2-a36648d54ddc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}