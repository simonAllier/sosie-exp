{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":1,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":16,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":7,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":8,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":9,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":13,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":12,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":4,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":14,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":15,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":5,"org.apache.commons.codec.language.SoundexTest.testB650":10,"org.apache.commons.codec.language.SoundexTest.testNewInstance":18,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":22,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":24,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":25,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":23,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":28,"org.apache.commons.codec.language.SoundexTest.testDifference":17,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":29,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":26,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":20,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":21},"transformations":[{"failures":[0,1,2,3],"tindex":"49595dcb-17bd-11e6-95c1-673208d55b90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:400","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[4,0,1,2,3],"tindex":"495984dc-17bd-11e6-95c1-8187d07d0b75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append('F')","position":"org.apache.commons.codec.language.DoubleMetaphone:570","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"495984dd-17bd-11e6-95c1-6d08e3979bac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((mapped != '0') && (mapped != last)) {\n    out[(count++)] = mapped;\n} ","position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((mapped != '0') && (mapped != last)) {\n    out[(count++)] = mapped;\n} "},"status":-1},{"failures":[],"tindex":"4959abee-17bd-11e6-95c1-830e992797ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.length)) + \" parts: \") + rawLine) + \" in \") + location))","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:287","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location))"},"status":0},{"failures":[25,26,27],"tindex":"4959abef-17bd-11e6-95c1-075d6e9ae459","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^gn\", \"2n\")","position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"t+\", \"T\")","position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"4959abf0-17bd-11e6-95c1-1d110e60d769","series":0,"name":"replace","transplant":{"toString":"for (final byte c : bytes) {\n    int b = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"variableMap":{"bytes":"object","buffer":"object","printable":"object"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"));\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:406","type":"CtIfImpl","sourcecode":"if (!(object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.java.lang.String.java.lang.Class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"));\n} "},"status":-2},{"failures":[],"tindex":"4959d301-17bd-11e6-95c1-4d21c24337b0","series":0,"name":"replace","transplant":{"toString":"if (c != 0) {\n    return c;\n} ","position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"r"},"type":"adrStmt","transplantationPoint":{"toString":"if (r > 0) {\n    final byte b = singleByte[0];\n    return b < 0 ? 256 + b : b;\n} ","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (r > 0) {\n    final byte byte = byte[][0];\n    return b < 0 ? 256 + b : b;\n} "},"status":-2},{"failures":[28,29],"tindex":"4959d302-17bd-11e6-95c1-dfb7ada0a41c","series":0,"name":"add","transplant":{"toString":"inExtendedComment = true","position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"variableMap":{"inExtendedComment":"encodeBlanks"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.this.encodeBlanks = b","position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-1},{"failures":[30,31],"tindex":"4959d303-17bd-11e6-95c1-bf5054ef15ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}","position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":9,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}