{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":8,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":9,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":12,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":3,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":11,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":5,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":6,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":2},"transformations":[{"failures":[],"tindex":"57993351-1220-11e6-bcaf-1708f178f2b8","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;\n} ","position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"57995a62-1220-11e6-bcaf-01b5c3e05683","series":0,"name":"add","transplant":{"toString":"final java.io.InputStream langIS = org.apache.commons.codec.language.bm.Languages.class.getClassLoader().getResourceAsStream(languagesResourceName)","position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"variableMap":{"languagesResourceName":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.DaitchMokotoffSoundex.class"},"type":"adrStmt","transplantationPoint":{"toString":"final java.io.InputStream rulesIS = org.apache.commons.codec.language.DaitchMokotoffSoundex.class.getClassLoader().getResourceAsStream(org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:229","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.Class.getClassLoader().getResourceAsStream(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[],"tindex":"57995a63-1220-11e6-bcaf-491aa4ca4d8f","series":0,"name":"add","transplant":{"toString":"final char[] chrs = text.toCharArray()","position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"toString":"final char[] chars = str.toCharArray()","position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"status":-2},{"failures":[0,1],"tindex":"57998174-1220-11e6-bcaf-035e3166645c","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"57998175-1220-11e6-bcaf-4f470bc8a055","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER","position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER":"rContext"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.rContext","position":"org.apache.commons.codec.language.bm.Rule:684","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"57998176-1220-11e6-bcaf-1349f1cc0aeb","series":0,"name":"add","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if (index == 0) {\n    result.append('A');\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:270","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('A');\n} "},"status":-2},{"failures":[],"tindex":"57998177-1220-11e6-bcaf-9978a734890f","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"input.addLeft('S')","position":"org.apache.commons.codec.language.ColognePhonetic:364","type":"CtInvocationImpl","sourcecode":"input.addLeft('S')"},"status":-2},{"failures":[2],"tindex":"5799a888-1220-11e6-bcaf-f1e5f7fea88f","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[],"tindex":"5799a889-1220-11e6-bcaf-f3b80e878976","series":0,"name":"replace","transplant":{"toString":"salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt","position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"variableMap":{"salt":"name1LtREnd","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"name1"},"type":"adrStmt","transplantationPoint":{"toString":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-3},{"failures":[],"tindex":"5799a88a-1220-11e6-bcaf-ffc3cb6178e0","series":0,"name":"add","transplant":{"toString":"return soundex(source, false)[0]","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"variableMap":{"source":"source"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.engine.encode(source)","position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.encode(source)"},"status":-2},{"failures":[3,4,5,6],"tindex":"5799cf9b-1220-11e6-bcaf-57cc8bbaa7ba","series":0,"name":"replace","transplant":{"toString":"result.append('K', 'X')","position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n    result.append(\"KS\");\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:744","type":"CtIfImpl","sourcecode":"if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n    result.append(\"KS\");\n} "},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"5799cf9c-1220-11e6-bcaf-43c6d72a13de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> rule : org.apache.commons.codec.language.DaitchMokotoffSoundex.RULES.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> ruleList = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> java.util.Map.Entry<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>> : org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.entrySet()) {\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = rule.getValue();\n    java.util.Collections.sort(ruleList, new java.util.Comparator<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>() {\n        @java.lang.Override\n        public int compare(final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule1, final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule2) {\n            return (rule2.getPatternLength()) - (rule1.getPatternLength());\n        }\n    });\n}"},"status":-1},{"failures":[5,6],"tindex":"5799f6ad-1220-11e6-bcaf-4f5af1f9e944","series":0,"name":"add","transplant":{"toString":"result.append(\"KN\", \"N\")","position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append(\"KL\", \"L\")","position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"status":-1},{"failures":[],"tindex":"5799f6ae-1220-11e6-bcaf-75200065aac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}","position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"5799f6af-1220-11e6-bcaf-fb7c093c4670","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))","position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))"},"variableMap":{"ascii":"object"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    final byte[] byteArray = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}","position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"579a1dc0-1220-11e6-bcaf-ef45ac6bcfbc","series":0,"name":"add","transplant":{"toString":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} ","position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"i"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i)","position":"org.apache.commons.codec.net.URLCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[],"tindex":"579a1dc1-1220-11e6-bcaf-d9bb35eaf07e","series":0,"name":"replace","transplant":{"toString":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"variableMap":{"mappedChar":"mappedChar","preHWChar":"mappedChar","firstCode":"mappedChar"},"type":"adrStmt","transplantationPoint":{"toString":"if ((index > 1) && (mappedChar != '0')) {\n    final char hwChar = str.charAt((index - 1));\n    if (('H' == hwChar) || ('W' == hwChar)) {\n        final char preHWChar = str.charAt((index - 2));\n        final char firstCode = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n        if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n            return 0;\n        } \n    } \n} ","position":"org.apache.commons.codec.language.Soundex:187","type":"CtIfImpl","sourcecode":"if ((index > 1) && (mappedChar != '0')) {\n    final char char = str.charAt((index - 1));\n    if (('H' == hwChar) || ('W' == hwChar)) {\n        final char char = str.charAt((index - 2));\n        final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n        if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n            return 0;\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"579a44d2-1220-11e6-bcaf-8bda2b154a0c","series":0,"name":"add","transplant":{"toString":"return \"ANY_LANGUAGE\"","position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.TRUE_LENGTH, string.length())) : string","position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.isStrict() ? string.substring(0, java.lang.Math.min(org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.int, string.length())) : string"},"status":-2},{"failures":[],"tindex":"579a44d3-1220-11e6-bcaf-f3aa8da2509b","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"right"},"type":"adrStmt","transplantationPoint":{"toString":"right = t","position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"right = t"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}