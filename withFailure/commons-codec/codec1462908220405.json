{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":80,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":29,"org.apache.commons.codec.language.NysiisTest.testSnat":16,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":30,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":52,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":51,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":65,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":35,"org.apache.commons.codec.language.NysiisTest.testDropBy":18,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":33,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":34,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":4,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":90,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":79,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":78,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":83,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":77,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":63,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":57,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":64,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":55,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":58,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":60,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":76,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":81,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":84,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":53,"org.apache.commons.codec.language.NysiisTest.testRule2":10,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero":54,"org.apache.commons.codec.language.NysiisTest.testRule1":9,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":46,"org.apache.commons.codec.language.NysiisTest.testRule7":13,"org.apache.commons.codec.language.NysiisTest.testRule6":12,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":48,"org.apache.commons.codec.language.NysiisTest.testRule5":11,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":47,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":82,"org.apache.commons.codec.language.NysiisTest.testCap":5,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":41,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":17,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":45,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":43,"org.apache.commons.codec.language.NysiisTest.testBran":14,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":21,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":44,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":1,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":24,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":72,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":23,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":61,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":25,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":26,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":2,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":86,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":56,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":88,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":73,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":66,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":74,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":42,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":28,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":75,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":71,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":27,"org.apache.commons.codec.language.SoundexTest.testB650":32,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":67,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":70,"org.apache.commons.codec.language.NysiisTest.testDad":6,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":50,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":85,"org.apache.commons.codec.language.SoundexTest.testNewInstance":40,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":89,"org.apache.commons.codec.language.NysiisTest.testOthers":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":69,"org.apache.commons.codec.language.NysiisTest.testTranan":20,"org.apache.commons.codec.language.SoundexTest.testDifference":39,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":3,"org.apache.commons.codec.language.NysiisTest.testDan":7,"org.apache.commons.codec.language.NysiisTest.testFal":8,"org.apache.commons.codec.language.NysiisTest.testSnad":15,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":87,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":59,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":68,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":62},"transformations":[{"failures":[0,1,2],"tindex":"b3b02a7c-16e4-11e6-a462-0536008f0d28","series":0,"name":"replace","transplant":{"toString":"code = '6'","position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '4'","position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[],"tindex":"b3b0518d-16e4-11e6-a462-0dfa1ffe2416","series":0,"name":"add","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.languages.isEmpty()","position":"org.apache.commons.codec.language.bm.Languages:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.isEmpty()"},"status":-2},{"failures":[],"tindex":"b3b0518e-16e4-11e6-a462-5fbade3bb5a6","series":0,"name":"add","transplant":{"toString":"d = (d >>> 2) | (d << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:424","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"b3b0789f-16e4-11e6-a462-f7622efdb5bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"chars[(count++)] = str.charAt(i)","position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"chars[(count++)] = str.charAt(i)"},"status":-1},{"failures":[],"tindex":"b3b078a0-16e4-11e6-a462-277f81b6f6aa","series":0,"name":"replace","transplant":{"toString":"int txtLength","position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int s = (((org.apache.commons.codec.digest.UnixCrypt.SKB[0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.SKB[1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.SKB[2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.SKB[3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])","position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])"},"status":-2},{"failures":[49,50,51,52],"tindex":"b3b09eb1-16e4-11e6-a462-87e4a67e0948","series":0,"name":"replace","transplant":{"toString":"code.append('S')","position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"toString":"branch.builder.append(toString())","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:95","type":"CtInvocationImpl","sourcecode":"branch.java.lang.StringBuilder.append(toString())"},"status":-1},{"failures":[],"tindex":"b3b09eb2-16e4-11e6-a462-d75fdd50d1e9","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"c","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c |= 1","position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"status":-3},{"failures":[],"tindex":"b3b09eb3-16e4-11e6-a462-1596e4054384","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"z\", \"s\")","position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_KN.matcher(str).replaceFirst(\"NN\")","position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":-2},{"failures":[53,54,55,56,57,58],"tindex":"b3b0c5c4-16e4-11e6-a462-0ddb236bb56b","series":0,"name":"replace","transplant":{"toString":"int index2 = start","position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final int c = (o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))","position":"org.apache.commons.codec.language.bm.Rule:92","type":"CtLocalVariableImpl","sourcecode":"final int int = (o1.java.lang.StringBuilder.charAt(i)) - (o2.java.lang.StringBuilder.charAt(i))"},"status":-1},{"failures":[59,60,61],"tindex":"b3b0c5c5-16e4-11e6-a462-4f7fdd8ae563","series":0,"name":"replace","transplant":{"toString":"a ^= t << n","position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"a ^= t << n"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = index + 2","position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"b3b0ecd6-16e4-11e6-a462-dd9e907e94b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}","position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-1},{"failures":[],"tindex":"b3b0ecd7-16e4-11e6-a462-5f144b6f0088","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (propagate) {\n    out.flush();\n} ","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:119","type":"CtIfImpl","sourcecode":"if (propagate) {\n    java.io.OutputStream.flush();\n} "},"status":-3},{"failures":[],"tindex":"b3b113e8-16e4-11e6-a462-d5eec58a117f","series":0,"name":"replace","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"txt","l":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"toString":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.TEN_1.length())","position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"b3b113e9-16e4-11e6-a462-dfbc35721148","series":0,"name":"replace","transplant":{"toString":"newPhonemes.add(join)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:115","type":"CtInvocationImpl","sourcecode":"newPhonemes.add(join)"},"variableMap":{"newPhonemes":"phonemes","join":"phoneme"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.phonemes.add(phoneme)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(phoneme)"},"status":0},{"failures":[62,63],"tindex":"b3b13afa-16e4-11e6-a462-bf2af01d0a04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"status":-1},{"failures":[],"tindex":"b3b13afb-16e4-11e6-a462-3de8499e1d32","series":0,"name":"add","transplant":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"variableMap":{"digit":"b"},"type":"adrStmt","transplantationPoint":{"toString":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}"},"status":-2},{"failures":[64,65,66,67,68,69,70,71],"tindex":"b3b13afc-16e4-11e6-a462-bd8c0b538dea","series":0,"name":"add","transplant":{"toString":"java.util.Arrays.fill(sBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"sBytes"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))","position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"status":-1},{"failures":[72],"tindex":"b3b1620d-16e4-11e6-a462-5f353e05491a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:447","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"b3b1620e-16e4-11e6-a462-d5a343c213e8","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"w$\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone2:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[],"tindex":"b3b1620f-16e4-11e6-a462-a72da51dfac0","series":0,"name":"replace","transplant":{"toString":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"mappedChar"},"type":"adrStmt","transplantationPoint":{"toString":"return mappedChar","position":"org.apache.commons.codec.language.Soundex:197","type":"CtReturnImpl","sourcecode":"return mappedChar"},"status":-2},{"failures":[73,74,75,76,77,78,79],"tindex":"b3b18920-16e4-11e6-a462-532c72344079","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"out.write(buf, 0, c)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:116","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(buf, 0, c)"},"status":-1},{"failures":[],"tindex":"b3b18921-16e4-11e6-a462-4f8ea3b7d7fa","series":0,"name":"replace","transplant":{"toString":"name1 = cleanName(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"variableMap":{"name1":"name1"},"type":"adrStmt","transplantationPoint":{"toString":"name1 = getFirst3Last3(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":0},{"failures":[59,60,61,80],"tindex":"b3b18922-16e4-11e6-a462-6956f57430c4","series":0,"name":"replace","transplant":{"toString":"if ((charAt(value, (index + 2))) == 'I') {\n    result.append('J');\n} else {\n    result.append('K');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'I') {\n    result.append('J');\n} else {\n    result.append('K');\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (index == 0) {\n    result.append('S');\n    index++;\n} else {\n    if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n        result.append(\"KS\");\n    } \n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:740","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('S');\n    index++;\n} else {\n    if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n        result.append(\"KS\");\n    } \n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[59,60,61],"tindex":"b3b1b033-16e4-11e6-a462-0f44e1cf4164","series":0,"name":"replace","transplant":{"toString":"result.append('A', 'F')","position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n            result.append(\"X\", \"SK\");\n        } else {\n            result.append(\"SK\");\n        }\n    } else {\n        if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n            result.append('X', 'S');\n        } else {\n            result.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('S');\n} else {\n    result.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"b3b1d744-16e4-11e6-a462-2571341691b3","series":0,"name":"replace","transplant":{"toString":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)","position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"modulus","tempResult":"buffer","pBytes":"buffer","cp":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"if (result >= 0) {\n    context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK);\n    context.ibitWorkArea = ((context.ibitWorkArea) << (org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE)) + result;\n    if ((context.modulus) == 0) {\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n    } \n} ","position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[],"tindex":"b3b1fe55-16e4-11e6-a462-7996188c5ff4","series":0,"name":"add","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"index","name2Size":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if ((chrs[index]) > 'Z') {\n    for (final char[] element : org.apache.commons.codec.language.ColognePhonetic.PREPROCESS_MAP) {\n        if ((chrs[index]) == (element[0])) {\n            chrs[index] = element[1];\n            break;\n        } \n    }\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:434","type":"CtIfImpl","sourcecode":"if ((chrs[index]) > 'Z') {\n    for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n        if ((chrs[index]) == (element[0])) {\n            chrs[index] = element[1];\n            break;\n        } \n    }\n} "},"status":0},{"failures":[81,82,83,84,85,86,87,88],"tindex":"b3b1fe56-16e4-11e6-a462-c356e8cf6fb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer.append(charset)","position":"org.apache.commons.codec.net.RFC1522Codec:74","type":"CtInvocationImpl","sourcecode":"buffer.append(charset)"},"status":-1},{"failures":[],"tindex":"b3b1fe57-16e4-11e6-a462-d1cbe366f4a6","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"ly\", \"Ly\")","position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"toString":"name = getFirst3Last3(name)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":-2},{"failures":[89],"tindex":"b3b22568-16e4-11e6-a462-b55d04b742f9","series":0,"name":"replace","transplant":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"variableMap":{"l_raw":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key), valueToDigest).doFinal()","position":"org.apache.commons.codec.digest.HmacUtils:659","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key), valueToDigest).doFinal()"},"status":-1},{"failures":[59,60,90,61],"tindex":"b3b22569-16e4-11e6-a462-85146c044fc9","series":0,"name":"replace","transplant":{"toString":"u = 128","position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":30,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}