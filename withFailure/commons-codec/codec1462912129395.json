{"failureDictionary":{"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":4,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":48,"org.apache.commons.codec.language.NysiisTest.testDropBy":43,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":6,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":27,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":49,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":53,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":32,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":61,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":59,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":62,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":50,"org.apache.commons.codec.language.NysiisTest.testRule7":42,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":24,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":18,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":21,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":46,"org.apache.commons.codec.language.NysiisTest.testCap":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":56,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":45,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":12,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":22,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":44,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":26,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":58,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":16,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":28,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":25,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":29,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":60,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":39,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":52,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":35,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":38,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":2,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":8,"org.apache.commons.codec.language.NysiisTest.testDan":41,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":11,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":36},"transformations":[{"failures":[],"tindex":"cda08c8f-16ed-11e6-84e3-a38d3d67461b","series":0,"name":"replace","transplant":{"toString":"byte[] altResult = altCtx.digest()","position":"org.apache.commons.codec.digest.Sha2Crypt:212","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"variableMap":{"altCtx":"object"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] byteArray = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object))","position":"org.apache.commons.codec.binary.Hex:297","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object))"},"status":-2},{"failures":[],"tindex":"cda0b3a0-16ed-11e6-84e3-858456d2a955","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"variableMap":{"charset":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:471","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"status":-3},{"failures":[0],"tindex":"cda0dab1-16ed-11e6-84e3-8b35981f7dfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (string == null) {\n    return null;\n} ","position":"org.apache.commons.codec.binary.StringUtils:138","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"cda0dab2-16ed-11e6-84e3-f17c16d8a7ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-1},{"failures":[],"tindex":"cda0dab3-16ed-11e6-84e3-ffed78389e1b","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.charset","position":"org.apache.commons.codec.net.QuotedPrintableCodec:548","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QCodec.this.charset","position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"status":-2},{"failures":[14,15,16,17,18,19,20],"tindex":"cda101c4-16ed-11e6-84e3-ad841fd712f3","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"l$\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"2\", \"\")","position":"org.apache.commons.codec.language.Caverphone2:120","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":-1},{"failures":[21],"tindex":"cda101c5-16ed-11e6-84e3-53a25d4d3cd4","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"s+\", \"S\")","position":"org.apache.commons.codec.language.Caverphone1:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"f+\", \"F\")","position":"org.apache.commons.codec.language.Caverphone2:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[],"tindex":"cda128d6-16ed-11e6-84e3-7f37170ce407","series":0,"name":"add","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")","position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")","position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"status":-2},{"failures":[],"tindex":"cda128d7-16ed-11e6-84e3-39b31669b366","series":0,"name":"replace","transplant":{"toString":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"text"},"type":"adrStmt","transplantationPoint":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"cda14fe8-16ed-11e6-84e3-a52051d1a549","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ph\", \"fh\")","position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)","position":"org.apache.commons.codec.language.Soundex:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[],"tindex":"cda14fe9-16ed-11e6-84e3-19c9c32fb578","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")","position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"status":-2},{"failures":[],"tindex":"cda14fea-16ed-11e6-84e3-d1900732164f","series":0,"name":"replace","transplant":{"toString":"return metaphone(str)","position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return metaphone(str)"},"variableMap":{"str":"combined"},"type":"adrStmt","transplantationPoint":{"toString":"return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\"","position":"org.apache.commons.codec.language.bm.PhoneticEngine:421","type":"CtReturnImpl","sourcecode":"return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\""},"status":-2},{"failures":[],"tindex":"cda176fb-16ed-11e6-84e3-3f33780bdc46","series":0,"name":"add","transplant":{"toString":"c = (c >>> 2) | (c << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"right"},"type":"adrStmt","transplantationPoint":{"toString":"right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule)","position":"org.apache.commons.codec.digest.UnixCrypt:288","type":"CtAssignmentImpl","sourcecode":"right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule)"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31],"tindex":"cda176fc-16ed-11e6-84e3-f7566e81c2c4","series":0,"name":"replace","transplant":{"toString":"return 3","position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return (data.length) - (length)","position":"org.apache.commons.codec.language.ColognePhonetic:270","type":"CtReturnImpl","sourcecode":"return (char[].int) - (int)"},"status":-1},{"failures":[32,33,34,35,36,37,38,39],"tindex":"cda19e0d-16ed-11e6-84e3-4f7cf1a556a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"altCtx.update(saltBytes)","position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-1},{"failures":[40,41,42,43,44],"tindex":"cda19e0e-16ed-11e6-84e3-05bf4e37e42b","series":0,"name":"replace","transplant":{"toString":"buffer.append(\"$\")","position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"key"},"type":"adrStmt","transplantationPoint":{"toString":"key.deleteCharAt(((key.length()) - 1))","position":"org.apache.commons.codec.language.Nysiis:311","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":-1},{"failures":[],"tindex":"cda19e0f-16ed-11e6-84e3-e736c3e78791","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.bm.RuleType.this.name","position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"pattern"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.this.pattern","position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"cda19e10-16ed-11e6-84e3-d302b994ac40","series":0,"name":"add","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")","position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(e)","position":"org.apache.commons.codec.digest.HmacUtils:188","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"cda1c521-16ed-11e6-84e3-6d45f79166e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"wy\", \"Wy\")","position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[],"tindex":"cda1c522-16ed-11e6-84e3-d71bca8e64de","series":0,"name":"replace","transplant":{"toString":"from = to + 1","position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN","to":"rounds"},"type":"adrStmt","transplantationPoint":{"toString":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX, rounds))","position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"cda1c523-16ed-11e6-84e3-9fbb3b700f1c","series":0,"name":"replace","transplant":{"toString":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))","position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"variableMap":{"rs":"rs","rt":"rt","s":"s"},"type":"adrStmt","transplantationPoint":{"toString":"rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))","position":"org.apache.commons.codec.language.bm.Rule:223","type":"CtInvocationImpl","sourcecode":"rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))"},"status":-1},{"failures":[],"tindex":"cda1ec34-16ed-11e6-84e3-abc30d478e57","series":0,"name":"replace","transplant":{"toString":"final java.lang.String rawLine = scanner.nextLine()","position":"org.apache.commons.codec.language.bm.Lang:141","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"variableMap":{"scanner":"lsScanner"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String line = lsScanner.nextLine().trim()","position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"status":0},{"failures":[],"tindex":"cda1ec35-16ed-11e6-84e3-f19550d2c727","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.language.DoubleMetaphone:879","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"cda21346-16ed-11e6-84e3-ebb449297981","series":0,"name":"add","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")","position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)","position":"org.apache.commons.codec.binary.StringUtils:286","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":24,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}