{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":0,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":36,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":89,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":35,"org.apache.commons.codec.binary.HexTest.testCustomCharset":42,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":83,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":71,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":91,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":59,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":41,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":64,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":86,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":67,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":81,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":46,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":45,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":5,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":13,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":80,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":6,"org.apache.commons.codec.binary.Base64Test.testUUID":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":93,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":28,"org.apache.commons.codec.binary.Base64Test.testSingletons":34,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":61,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":51,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":37,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":73,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":76,"org.apache.commons.codec.binary.Base64Test.testPairs":19,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":27,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":48,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":74,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":50,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":62,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":63,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":92,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":14,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":22,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":18,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":23,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":17,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":26,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":40,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":43,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":24,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":25,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":39,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":84,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":68,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":56,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":30,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":44,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":72,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":66,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":31,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":15,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":4,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":32,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":82,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":70,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":49,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":79,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":53,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":60,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":57,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":33,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":47,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":58,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":2,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":38,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":85,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":11,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":69,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":90,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":52,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1":94,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":77,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":55,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":65,"org.apache.commons.codec.language.MetaphoneTest.testTCH":78,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":54,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":21,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":9,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":88,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":7},"transformations":[{"failures":[0],"tindex":"4c8bc24e-1167-11e6-8bba-29213b6b26f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"4c8be95f-1167-11e6-8bba-a91cbf4d93ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(c))) {\n    return 0;\n} "},"variableMap":{"c":"java.lang.Character.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-2},{"failures":[],"tindex":"4c8be960-1167-11e6-8bba-073f3c4d6b02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:98","type":"CtSwitchImpl","sourcecode":"switch (value.charAt(index)) {\n    case 'A' :\n    case 'E' :\n    case 'I' :\n    case 'O' :\n    case 'U' :\n    case 'Y' :\n        index = handleAEIOUY(result, index);\n        break;\n    case 'B' :\n        result.append('P');\n        index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n        break;\n    case '\\u00c7' :\n        result.append('S');\n        index++;\n        break;\n    case 'C' :\n        index = handleC(value, result, index);\n        break;\n    case 'D' :\n        index = handleD(value, result, index);\n        break;\n    case 'F' :\n        result.append('F');\n        index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n        break;\n    case 'G' :\n        index = handleG(value, result, index, slavoGermanic);\n        break;\n    case 'H' :\n        index = handleH(value, result, index);\n        break;\n    case 'J' :\n        index = handleJ(value, result, index, slavoGermanic);\n        break;\n    case 'K' :\n        result.append('K');\n        index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n        break;\n    case 'L' :\n        index = handleL(value, result, index);\n        break;\n    case 'M' :\n        result.append('M');\n        index = conditionM0(value, index) ? index + 2 : index + 1;\n        break;\n    case 'N' :\n        result.append('N');\n        index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n        break;\n    case '\\u00d1' :\n        result.append('N');\n        index++;\n        break;\n    case 'P' :\n        index = handleP(value, result, index);\n        break;\n    case 'Q' :\n        result.append('K');\n        index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n        break;\n    case 'R' :\n        index = handleR(value, result, index, slavoGermanic);\n        break;\n    case 'S' :\n        index = handleS(value, result, index, slavoGermanic);\n        break;\n    case 'T' :\n        index = handleT(value, result, index);\n        break;\n    case 'V' :\n        result.append('F');\n        index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n        break;\n    case 'W' :\n        index = handleW(value, result, index);\n        break;\n    case 'X' :\n        index = handleX(value, result, index);\n        break;\n    case 'Z' :\n        index = handleZ(value, result, index, slavoGermanic);\n        break;\n    default :\n        index++;\n        break;\n}"},"status":-2},{"failures":[],"tindex":"4c8c1071-1167-11e6-8bba-d178502218fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"variableMap":{"currentLine":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":0},{"failures":[1,2,3,4,5,6],"tindex":"4c8c1072-1167-11e6-8bba-97919f4b2d1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:123","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n    if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n        ls.add(lang);\n    } \n}"},"status":-1},{"failures":[],"tindex":"4c8c1073-1167-11e6-8bba-99ede609248b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"index","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"index","rounds":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-3},{"failures":[],"tindex":"4c8c3784-1167-11e6-8bba-a7b58a079035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"status":-2},{"failures":[7,8],"tindex":"4c8c3785-1167-11e6-8bba-f11b04c9f2d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"status":-1},{"failures":[],"tindex":"4c8c3786-1167-11e6-8bba-858c9fcf1276","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:137","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(lRulesIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"lRulesIS":"langIS","org.apache.commons.codec.language.bm.ResourceConstants.ENCODING":"org.apache.commons.codec.language.bm.ResourceConstants.ENCODING"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:178","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(langIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-3},{"failures":[7,8],"tindex":"4c8c3787-1167-11e6-8bba-6fda97d17445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:307","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[9,10,11,12,13],"tindex":"4c8c5e98-1167-11e6-8bba-2f87ea198f00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"4c8c5e99-1167-11e6-8bba-7bda00dad295","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"name1LtREnd","dc":"name1LtREnd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (name1LtREnd.equals(name2RtLEnd)) {\n    name1Char[(name1Size - i)] = ' ';\n    name2Char[(name2Size - i)] = ' ';\n} "},"status":-2},{"failures":[7,8],"tindex":"4c8c5e9a-1167-11e6-8bba-b3c29a15f46a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"variableMap":{"left":"d","right":"c","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-1},{"failures":[],"tindex":"4c8c85ab-1167-11e6-8bba-0ffd92159f46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = basedCodec"},"variableMap":{"basedCodec":"baseNCodec","baseNCodec":"baseNCodec"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = baseNCodec"},"status":-3},{"failures":[],"tindex":"4c8c85ac-1167-11e6-8bba-772d71a95aa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:78","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.RFC1522Codec.this.doEncoding(text.getBytes(charset))"},"status":-2},{"failures":[],"tindex":"4c8c85ad-1167-11e6-8bba-9377126cbaec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:807","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[9,10,11,14,12,13],"tindex":"4c8c85ae-1167-11e6-8bba-596b1c68689f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"4c8cacbf-1167-11e6-8bba-fbd05b489666","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:438","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"4c8cacc0-1167-11e6-8bba-878c6e8a1c04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest().digest(data)"},"variableMap":{"data":"base64Data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"status":-1},{"failures":[39],"tindex":"4c8cacc1-1167-11e6-8bba-9118b20556d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[40,20,41,42,43,44],"tindex":"4c8cd3d2-1167-11e6-8bba-d56718531dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54],"tindex":"4c8cd3d3-1167-11e6-8bba-5b4a2a58880e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:59","type":"CtLocalVariableImpl","sourcecode":"int int = outLen"},"variableMap":{"outLen":"inPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:503","type":"CtLocalVariableImpl","sourcecode":"int int = in[(inPos++)]"},"status":-1},{"failures":[],"tindex":"4c8cd3d4-1167-11e6-8bba-e1c7621dda42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":0},{"failures":[55,56,45,46,57,58,59,60,61],"tindex":"4c8cfae5-1167-11e6-8bba-616de992bf82","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"variableMap":{"u":"avail","buffer":"out","l":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-1},{"failures":[],"tindex":"4c8cfae6-1167-11e6-8bba-c9b82f17141a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:222","type":"CtReturnImpl","sourcecode":"return (context.byte[]) != null"},"status":-2},{"failures":[62,63],"tindex":"4c8cfae7-1167-11e6-8bba-3be0f8f648a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[],"tindex":"4c8d21f8-1167-11e6-8bba-5379757e8153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:337","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[],"tindex":"4c8d21f9-1167-11e6-8bba-b1025dd7e461","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"variableMap":{"salt":"boxContent","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"status":-3},{"failures":[],"tindex":"4c8d21fa-1167-11e6-8bba-dbaa52b82b7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":0},{"failures":[],"tindex":"4c8d21fb-1167-11e6-8bba-cdd2fc4dc363","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:124","type":"CtReturnImpl","sourcecode":"return toString().hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.differenceEncoded(encoder.encode(s1), encoder.encode(s2))"},"status":-2},{"failures":[],"tindex":"4c8d490c-1167-11e6-8bba-a94f562e5c72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:447","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[64],"tindex":"4c8d490d-1167-11e6-8bba-7ba5b09884f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-1},{"failures":[65,66],"tindex":"4c8d490e-1167-11e6-8bba-9f97624d69c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-1},{"failures":[],"tindex":"4c8d490f-1167-11e6-8bba-2ba25bf608e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"4c8d7020-1167-11e6-8bba-09750a49c9ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:268","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} "},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,58,61],"tindex":"4c8d7021-1167-11e6-8bba-4baad0fcd297","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:373","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-1},{"failures":[],"tindex":"4c8d7022-1167-11e6-8bba-61d984c06879","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (ascii instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)));\n} "},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[76],"tindex":"4c8d9733-1167-11e6-8bba-ad3948fb0320","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"variableMap":{"data":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"status":-1},{"failures":[77,78,79,80,81,82,83,84,85,86],"tindex":"4c8d9734-1167-11e6-8bba-c7f0795bafaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (n + 1) == wdsz"},"status":-1},{"failures":[7,8],"tindex":"4c8d9735-1167-11e6-8bba-27b13a0153f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"status":-1},{"failures":[20,26],"tindex":"4c8dbe46-1167-11e6-8bba-37ee0c751d2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)"},"status":-1},{"failures":[87,88,89],"tindex":"4c8dbe47-1167-11e6-8bba-3d813998ff52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"status":-1},{"failures":[],"tindex":"4c8dbe48-1167-11e6-8bba-e5f6893181eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} "},"variableMap":{"arrayOctet":"array","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-2},{"failures":[],"tindex":"4c8dbe49-1167-11e6-8bba-11954b4c0e50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.clear()"},"status":-2},{"failures":[],"tindex":"4c8dbe4a-1167-11e6-8bba-d1e2577e2a57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"value","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:518","type":"CtIfImpl","sourcecode":"if ((((index == 0) && ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n    result.append('H');\n} else {\n    result.append('J', 'H');\n}"},"status":-3},{"failures":[],"tindex":"4c8dbe4b-1167-11e6-8bba-bf1ed1d21219","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:312","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)))"},"status":-2},{"failures":[],"tindex":"4c8de55c-1167-11e6-8bba-4b1fbb781b66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[90],"tindex":"4c8de55d-1167-11e6-8bba-617c66db3319","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"variableMap":{"valueToDigest":"key","key":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"4c8de55e-1167-11e6-8bba-37cfc8b7ead1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"status":-2},{"failures":[],"tindex":"4c8de55f-1167-11e6-8bba-e5d269489653","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"variableMap":{"rawLine":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase()"},"status":-2},{"failures":[7,8],"tindex":"4c8de560-1167-11e6-8bba-f1dca6ba069d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"status":-1},{"failures":[],"tindex":"4c8de561-1167-11e6-8bba-f33edd8381ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"))"},"status":-2},{"failures":[91,92],"tindex":"4c8e0c72-1167-11e6-8bba-337534c9685d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"4c8e0c73-1167-11e6-8bba-57942dda6046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:498","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(arrayOctet)"},"status":0},{"failures":[],"tindex":"4c8e0c74-1167-11e6-8bba-3dc8f346f255","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-2},{"failures":[],"tindex":"4c8e0c75-1167-11e6-8bba-01ee2f29c6f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"variableMap":{"chunkSeparatorLength":"b","lineLength":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:306","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (!(printable.get(b))) || ((org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)) && (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)))"},"status":-2},{"failures":[],"tindex":"4c8e0c76-1167-11e6-8bba-03b2046ebe82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:66","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('!')"},"status":0},{"failures":[],"tindex":"4c8e0c77-1167-11e6-8bba-3d6e6fdd8a32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"status":-2},{"failures":[65,93],"tindex":"4c8e3388-1167-11e6-8bba-9b3521688cf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:609","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[76],"tindex":"4c8e3389-1167-11e6-8bba-f10030eb123c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"status":-1},{"failures":[94],"tindex":"4c8e338a-1167-11e6-8bba-0f796f251e37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:412","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:303","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"4c8e338b-1167-11e6-8bba-cfda64e7b3b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-2},{"failures":[],"tindex":"4c8e338c-1167-11e6-8bba-ab5890037f5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.Context.boolean ? 0 : 1"},"status":-2},{"failures":[],"tindex":"4c8e338d-1167-11e6-8bba-5fb0bd4fd1ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"status":0},{"failures":[],"tindex":"4c8e338e-1167-11e6-8bba-8faee89b9d30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = keyBytes.int"},"variableMap":{"keyBytes":"bytes","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-3}],"header":{"groupId":"commons-codec","transformationCount":65,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}