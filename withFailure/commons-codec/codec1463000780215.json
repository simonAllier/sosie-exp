{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":95,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":53,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":83,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":19,"org.apache.commons.codec.language.NysiisTest.testDropBy":77,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":28,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":60,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":43,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeWithInvalidObject":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull":4,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":24,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":48,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":38,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":82,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":36,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":39,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":47,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":22,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull":33,"org.apache.commons.codec.language.NysiisTest.testRule1":76,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException":31,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":5,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":69,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":92,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":30,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":61,"org.apache.commons.codec.language.NysiisTest.testCap":75,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":73,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":29,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":41,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":79,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":72,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":90,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":91,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":58,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":13,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":64,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":94,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":35,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":67,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":40,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":68,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":57,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":12,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":63,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":44,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":42,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":51,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":93,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":37,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":84,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":46,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":81,"org.apache.commons.codec.language.Caverphone2Test.testEncodeNull":50,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat":26,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":55,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":85,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":9,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":88,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":71,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":80,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":11,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":59,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":66,"org.apache.commons.codec.language.NysiisTest.testOthers":78,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":6,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":87,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":74,"org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException":54,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":86,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":2},"transformations":[{"failures":[],"tindex":"35a009d6-17bc-11e6-bde7-252c93da79ea","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.this.encodeBlanks = b","position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"variableMap":{"b":"matches","encodeBlanks":"matches"},"type":"adrStmt","transplantationPoint":{"toString":"matches = substring.equals(test)","position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"matches = substring.equals(test)"},"status":-3},{"failures":[],"tindex":"35a030e7-17bc-11e6-bde7-a1f572b2bdcd","series":0,"name":"replace","transplant":{"toString":"this.name = name","position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"name1"},"type":"adrStmt","transplantationPoint":{"toString":"name1 = getFirst3Last3(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":-2},{"failures":[],"tindex":"35a030e8-17bc-11e6-bde7-f9440f734ab7","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.this.encodeBlanks = b","position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"variableMap":{"b":"strict","encodeBlanks":"strict"},"type":"adrStmt","transplantationPoint":{"toString":"this.strict = strict","position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-3},{"failures":[],"tindex":"35a030e9-17bc-11e6-bde7-8be8cd16c232","series":0,"name":"replace","transplant":{"toString":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}","position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}"},"variableMap":{"ii":"read","keyBytes":"buffer","finalb":"buffer","ctx":"digest","j":"read"},"type":"adrStmt","transplantationPoint":{"toString":"digest.update(buffer, 0, read)","position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-2},{"failures":[],"tindex":"35a057fa-17bc-11e6-bde7-f7ec63da4c06","series":0,"name":"add","transplant":{"toString":"if ((key.length()) > 1) {\n    char lastChar = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char last2Char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} ","position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())","position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())"},"status":-2},{"failures":[0,1],"tindex":"35a057fb-17bc-11e6-bde7-8158bd620feb","series":0,"name":"replace","transplant":{"toString":"pos = 1","position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 3","position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"35a057fc-17bc-11e6-bde7-132b05a078b3","series":0,"name":"replace","transplant":{"toString":"input.addLeft('S')","position":"org.apache.commons.codec.language.ColognePhonetic:364","type":"CtInvocationImpl","sourcecode":"input.addLeft('S')"},"variableMap":{"input":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\");\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:203","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\");\n} "},"status":-2},{"failures":[],"tindex":"35a07f0d-17bc-11e6-bde7-e3c2a5931787","series":0,"name":"replace","transplant":{"toString":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX) + salt;\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"valueToDigest","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"toString":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"messageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-3},{"failures":[2,3],"tindex":"35a07f0e-17bc-11e6-bde7-2701078c8408","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)","position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"status":-1},{"failures":[],"tindex":"35a07f0f-17bc-11e6-bde7-392903843394","series":0,"name":"add","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))","position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"status":-2},{"failures":[],"tindex":"35a07f10-17bc-11e6-bde7-3df01930a8da","series":0,"name":"replace","transplant":{"toString":"cp = 0","position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"blocksize"},"type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[],"tindex":"35a07f11-17bc-11e6-bde7-01610b57e8dd","series":0,"name":"add","transplant":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Soundex.this.soundexMapping","position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"status":-2},{"failures":[4],"tindex":"35a07f12-17bc-11e6-bde7-290f418816e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:597","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"35a0a623-17bc-11e6-bde7-1bd3d16fd75f","series":0,"name":"add","transplant":{"toString":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"inExtendedComment","value":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START","element":"line"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} ","position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-2},{"failures":[5],"tindex":"35a0a624-17bc-11e6-bde7-b5a472d981c3","series":0,"name":"replace","transplant":{"toString":"final byte[] l_ascii = new byte[(raw.length) << 3]","position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(raw.int) << 3]"},"variableMap":{"length":"length","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] tmp = new byte[bytes.length]","position":"org.apache.commons.codec.net.QCodec:181","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bytes.int]"},"status":-1},{"failures":[6,7,8,9],"tindex":"35a0a625-17bc-11e6-bde7-b55b1fff55a2","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))","position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"status":-1},{"failures":[10,11,12,13],"tindex":"35a0a626-17bc-11e6-bde7-53adf9193b31","series":0,"name":"replace","transplant":{"toString":"return +1","position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-1},{"failures":[],"tindex":"35a0cd37-17bc-11e6-bde7-cb2d47979285","series":0,"name":"replace","transplant":{"toString":"return name","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"charsetName"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.RFC1522Codec.this.encodeText(text, java.nio.charset.Charset.forName(charsetName))","position":"org.apache.commons.codec.net.RFC1522Codec:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.RFC1522Codec.this.encodeText(text, java.nio.charset.Charset.forName(charsetName))"},"status":0},{"failures":[],"tindex":"35a0cd38-17bc-11e6-bde7-9f5ed8a6bba9","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this","position":"org.apache.commons.codec.language.bm.Rule:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (open >= 0) {\n    if (!(ph.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n    } \n    final java.lang.String before = ph.substring(0, open);\n    final java.lang.String in = ph.substring((open + 1), ((ph.length()) - 1));\n    final java.util.Set<java.lang.String> langs = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE);\n}","position":"org.apache.commons.codec.language.bm.Rule:367","type":"CtIfImpl","sourcecode":"if (open >= 0) {\n    if (!(ph.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n    } \n    final java.lang.String java.lang.String = ph.substring(0, open);\n    final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet);\n}"},"status":-2},{"failures":[],"tindex":"35a0cd39-17bc-11e6-bde7-2b04bd4bbfba","series":0,"name":"replace","transplant":{"toString":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"upperName":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_DT_ETC.matcher(str).replaceFirst(\"D\")","position":"org.apache.commons.codec.language.Nysiis:270","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"D\")"},"status":-3},{"failures":[],"tindex":"35a0f44a-17bc-11e6-bde7-fde6a73811a4","series":0,"name":"add","transplant":{"toString":"upperName = removeAccents(upperName)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"upperName = removeAccents(upperName)"},"variableMap":{"upperName":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone2:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"35a0f44b-17bc-11e6-bde7-b3ee7f62e939","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"35a0f44c-17bc-11e6-bde7-939791730852","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found = true","position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"eof"},"type":"adrStmt","transplantationPoint":{"toString":"context.eof = true","position":"org.apache.commons.codec.binary.Base64:338","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"35a0f44d-17bc-11e6-bde7-3731b134b725","series":0,"name":"add","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((folding) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS.get(ch);\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n    ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n} "},"status":-2},{"failures":[],"tindex":"35a0f44e-17bc-11e6-bde7-05a13ae7a6e1","series":0,"name":"add","transplant":{"toString":"len--","position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"left"},"type":"adrStmt","transplantationPoint":{"toString":"out[0] = left","position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":0},{"failures":[],"tindex":"35a11b5f-17bc-11e6-bde7-55e3fb49ab5b","series":0,"name":"replace","transplant":{"toString":"final org.apache.commons.codec.language.bm.Languages.LanguageSet ls = guessLanguages(text)","position":"org.apache.commons.codec.language.bm.Lang:203","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = guessLanguages(text)"},"variableMap":{"text":"input"},"type":"adrStmt","transplantationPoint":{"toString":"final org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet = org.apache.commons.codec.language.bm.PhoneticEngine.this.lang.guessLanguages(input)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:384","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Languages.LanguageSet org.apache.commons.codec.language.bm.Languages.LanguageSet = org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.Lang.guessLanguages(input)"},"status":-2},{"failures":[40],"tindex":"35a11b60-17bc-11e6-bde7-a337ad5d2ae0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code.append('K')","position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"35a11b61-17bc-11e6-bde7-d713f10f95db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"cp += blocksize","position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[0,1],"tindex":"35a11b62-17bc-11e6-bde7-99f0f07e790a","series":0,"name":"replace","transplant":{"toString":"cp = 0","position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[41,42],"tindex":"35a11b63-17bc-11e6-bde7-e76133edf913","series":0,"name":"replace","transplant":{"toString":"last = current","position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"variableMap":{"current":"chr","last":"chr"},"type":"adrStmt","transplantationPoint":{"toString":"lastChar = chr","position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"status":-1},{"failures":[],"tindex":"35a11b64-17bc-11e6-bde7-0707d4dfee79","series":0,"name":"replace","transplant":{"toString":"final java.lang.StringBuilder local = new java.lang.StringBuilder(40)","position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.StringBuilder key = new java.lang.StringBuilder(str.length())","position":"org.apache.commons.codec.language.Nysiis:273","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length())"},"status":-2},{"failures":[0,1,43,44],"tindex":"35a11b65-17bc-11e6-bde7-3594208b62a2","series":0,"name":"add","transplant":{"toString":"len--","position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[45,46,47,48,49],"tindex":"35a11b66-17bc-11e6-bde7-33707e92a36b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.decode(b, offset, len, context)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"35a14277-17bc-11e6-bde7-9ff3eb654b07","series":0,"name":"replace","transplant":{"toString":"s = (s >>> 16) | (t & -65536)","position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"index","t":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 4","position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"status":-2},{"failures":[],"tindex":"35a14278-17bc-11e6-bde7-e1200d5b3a66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[50],"tindex":"35a14279-17bc-11e6-bde7-db73336a35bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"35a1427a-17bc-11e6-bde7-95df137de2de","series":0,"name":"replace","transplant":{"toString":"if (arrayOctet == null) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"array"},"type":"adrStmt","transplantationPoint":{"toString":"return (array == null) || ((array.length) == 0)","position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-2},{"failures":[],"tindex":"35a1427b-17bc-11e6-bde7-f79c92a8723d","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(bytes)","position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(bytes)"},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)","position":"org.apache.commons.codec.digest.DigestUtils:334","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"status":0},{"failures":[],"tindex":"35a1427c-17bc-11e6-bde7-d9713d01a73f","series":0,"name":"replace","transplant":{"toString":"if ((line.length()) == 0) {\n    continue;\n} ","position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE, org.apache.commons.codec.language.DaitchMokotoffSoundex.RULES, org.apache.commons.codec.language.DaitchMokotoffSoundex.FOLDINGS)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(scanner, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>, org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>)"},"status":-2},{"failures":[],"tindex":"35a1427d-17bc-11e6-bde7-21e778316374","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)","position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"variableMap":{"c":"ii","d":"jj","results":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"toString":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.BITS[bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}","position":"org.apache.commons.codec.binary.BinaryCodec:250","type":"CtIfImpl","sourcecode":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}"},"status":-2},{"failures":[],"tindex":"35a1698e-17bc-11e6-bde7-93cf1ce84768","series":0,"name":"replace","transplant":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:299","type":"CtReturnImpl","sourcecode":"return len"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return index"},"status":-3},{"failures":[51,52,53],"tindex":"35a1698f-17bc-11e6-bde7-8bc8a4cebaef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int ii = 0, jj = (ascii.length) - 1 ; ii < (l_raw.length) ; ii++ , jj -= 8) {\n    for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];\n        } \n    }\n}","position":"org.apache.commons.codec.binary.BinaryCodec:181","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (ascii.int) - 1 ; ii < (l_raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n        } \n    }\n}"},"status":-1},{"failures":[54],"tindex":"35a16990-17bc-11e6-bde7-d5988f94ce1f","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(e)","position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-1},{"failures":[15,23,36,37,38,39],"tindex":"35a16991-17bc-11e6-bde7-510f7a64fbed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (sl.languages.contains(lang)) {\n    ls.add(lang);\n} ","position":"org.apache.commons.codec.language.bm.Languages:124","type":"CtIfImpl","sourcecode":"if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n    ls.add(lang);\n} "},"status":-1},{"failures":[],"tindex":"35a16992-17bc-11e6-bde7-cb934add9620","series":0,"name":"replace","transplant":{"toString":"this.rContext = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))","position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"variableMap":{"rContext":"lContext"},"type":"adrStmt","transplantationPoint":{"toString":"this.lContext = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))","position":"org.apache.commons.codec.language.bm.Rule:646","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))"},"status":-2},{"failures":[1],"tindex":"35a16993-17bc-11e6-bde7-27c8575ca28e","series":0,"name":"replace","transplant":{"toString":"result.append('S', 'X')","position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:666","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[55,56],"tindex":"35a16994-17bc-11e6-bde7-73c2e6c807a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))","position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,55,56,65,66],"tindex":"35a190a5-17bc-11e6-bde7-f34d71d877b0","series":0,"name":"add","transplant":{"toString":"java.util.Arrays.fill(saltBytes, ((byte)(0)))","position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"key"},"type":"adrStmt","transplantationPoint":{"toString":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} ","position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"status":-1},{"failures":[],"tindex":"35a190a6-17bc-11e6-bde7-ebb7538ebefd","series":0,"name":"replace","transplant":{"toString":"out.flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"variableMap":{"out":"object"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"));\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:406","type":"CtIfImpl","sourcecode":"if (!(object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.java.lang.String.java.lang.Class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"));\n} "},"status":-3},{"failures":[],"tindex":"35a190a7-17bc-11e6-bde7-e5ccbf272a77","series":0,"name":"replace","transplant":{"toString":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"branching","value":"inputContext","element":"inputContext"},"type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule rule : rules) {\n    if (rule.matches(inputContext)) {\n        if (branching) {\n            nextBranches.clear();\n        } \n        final java.lang.String[] replacements = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n        final boolean branchingRequired = ((replacements.length) > 1) && branching;\n        for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch branch : currentBranches) {\n            for (final java.lang.String nextReplacement : replacements) {\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch nextBranch = branchingRequired ? branch.createBranch() : branch;\n                final boolean force = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                nextBranch.processNextReplacement(nextReplacement, force);\n                if (branching) {\n                    nextBranches.add(nextBranch);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (branching) {\n            currentBranches.clear();\n            currentBranches.addAll(nextBranches);\n        } \n        index += (rule.getPatternLength()) - 1;\n        break;\n    } \n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:514","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : rules) {\n    if (rule.matches(inputContext)) {\n        if (branching) {\n            nextBranches.clear();\n        } \n        final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n        final boolean boolean = ((replacements.int) > 1) && branching;\n        for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n            for (final java.lang.String java.lang.String : replacements) {\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n                final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                nextBranch.processNextReplacement(nextReplacement, force);\n                if (branching) {\n                    nextBranches.add(nextBranch);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (branching) {\n            currentBranches.clear();\n            currentBranches.addAll(nextBranches);\n        } \n        index += (rule.getPatternLength()) - 1;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"35a190a8-17bc-11e6-bde7-73836ba548d6","series":0,"name":"add","transplant":{"toString":"return len","position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"variableMap":{"len":"todo"},"type":"adrStmt","transplantationPoint":{"toString":"return n - todo","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:209","type":"CtReturnImpl","sourcecode":"return n - todo"},"status":-2},{"failures":[],"tindex":"35a1b7b9-17bc-11e6-bde7-4d0e0e484d6b","series":0,"name":"replace","transplant":{"toString":"return out","position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"newData"},"type":"adrStmt","transplantationPoint":{"toString":"return newData","position":"org.apache.commons.codec.language.ColognePhonetic:243","type":"CtReturnImpl","sourcecode":"return newData"},"status":-3},{"failures":[67,68,69,70,71],"tindex":"35a1b7ba-17bc-11e6-bde7-2f540d7f986b","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"l\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"s+\", \"S\")","position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[],"tindex":"35a1b7bb-17bc-11e6-bde7-4795f01ecc03","series":0,"name":"replace","transplant":{"toString":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}","position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"variableMap":{"code":"nextChar","lastChar":"code","nextChar":"nextChar","org.apache.commons.codec.language.ColognePhonetic.AHOUKQX":"org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX","org.apache.commons.codec.language.ColognePhonetic.SZ":"org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX, nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}","position":"org.apache.commons.codec.language.ColognePhonetic:370","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}"},"status":-2},{"failures":[0,1],"tindex":"35a1b7bc-17bc-11e6-bde7-1b5534d3bee6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append(\"TK\")","position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"status":-1},{"failures":[37],"tindex":"35a1b7bd-17bc-11e6-bde7-21d3c13cba4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE));\n} ","position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n    phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-1},{"failures":[],"tindex":"35a1b7be-17bc-11e6-bde7-49d00b2879c7","series":0,"name":"add","transplant":{"toString":"appendPrimary(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:947","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"variableMap":{"value":"nextChar"},"type":"adrStmt","transplantationPoint":{"toString":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}","position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"status":-2},{"failures":[],"tindex":"35a1b7bf-17bc-11e6-bde7-23ec20745e08","series":0,"name":"replace","transplant":{"toString":"final int patternLength = org.apache.commons.codec.language.bm.Rule.this.pattern.length()","position":"org.apache.commons.codec.language.bm.Rule:703","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.bm.Rule.this.java.lang.String.length()"},"variableMap":{"pattern":"org.apache.commons.codec.language.MatchRatingApproachEncoder.UNICODE"},"type":"adrStmt","transplantationPoint":{"toString":"final int pos = org.apache.commons.codec.language.MatchRatingApproachEncoder.UNICODE.indexOf(c)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:361","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.indexOf(c)"},"status":-2},{"failures":[72,73],"tindex":"35a1ded0-17bc-11e6-bde7-e59776ab3307","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"local.append(inwd, 1, ((inwd.length) - 1))","position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[2,3],"tindex":"35a1ded1-17bc-11e6-bde7-d9662f5a1806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[0], b, 0)","position":"org.apache.commons.codec.digest.UnixCrypt:228","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[0], b, 0)"},"status":-1},{"failures":[],"tindex":"35a1ded2-17bc-11e6-bde7-4b6fb22c569c","series":0,"name":"replace","transplant":{"toString":"flush()","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"while ((builder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH)) {\n    builder.append('0');\n    cachedString = null;\n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:116","type":"CtWhileImpl","sourcecode":"while ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.append('0');\n    java.lang.String = null;\n}"},"status":-2},{"failures":[0,1,74,44],"tindex":"35a1ded3-17bc-11e6-bde7-094ea3789387","series":0,"name":"add","transplant":{"toString":"ii -= 16","position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"variableMap":{"ii":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = handleGH(value, result, index)","position":"org.apache.commons.codec.language.DoubleMetaphone:411","type":"CtAssignmentImpl","sourcecode":"index = handleGH(value, result, index)"},"status":-1},{"failures":[],"tindex":"35a1ded4-17bc-11e6-bde7-b5e0f3134f58","series":0,"name":"add","transplant":{"toString":"for (int i = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(i);\n}","position":"org.apache.commons.codec.net.QCodec:97","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('.')","position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":0},{"failures":[],"tindex":"35a1ded5-17bc-11e6-bde7-f72b937a809f","series":0,"name":"add","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)","position":"org.apache.commons.codec.digest.DigestUtils:749","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-2},{"failures":[75,76,77,78,79],"tindex":"35a1ded6-17bc-11e6-bde7-7f14a118c607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.Nysiis.PAT_K.matcher(str).replaceFirst(\"C\")","position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"C\")"},"status":-1},{"failures":[],"tindex":"35a1ded7-17bc-11e6-bde7-2b707709f743","series":0,"name":"replace","transplant":{"toString":"appendAlternate(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"variableMap":{"value":"nextChar"},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX, nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}","position":"org.apache.commons.codec.language.ColognePhonetic:370","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n    code = '4';\n} else {\n    code = '8';\n}"},"status":-2},{"failures":[],"tindex":"35a205e8-17bc-11e6-bde7-15213ef3873e","series":0,"name":"add","transplant":{"toString":"return bigBytes","position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)","position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"status":-2},{"failures":[15,19,20,23,36,37,38,39],"tindex":"35a205e9-17bc-11e6-bde7-fdf5326bbf60","series":0,"name":"replace","transplant":{"toString":"final org.apache.commons.codec.language.bm.Rule.Phoneme mergedPhoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages())","position":"org.apache.commons.codec.language.bm.PhoneticEngine:365","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages())"},"variableMap":{"newPhoneme":"right","oldPhoneme":"left"},"type":"adrStmt","transplantationPoint":{"toString":"final org.apache.commons.codec.language.bm.Rule.Phoneme join = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:113","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = new org.apache.commons.codec.language.bm.Rule.Phoneme(left , right , languages)"},"status":-1},{"failures":[],"tindex":"35a205ea-17bc-11e6-bde7-55cc2fd68b38","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)","position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"variableMap":{"key":"source"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone.this.encoder.encode(source)","position":"org.apache.commons.codec.language.Caverphone:58","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.org.apache.commons.codec.language.Caverphone2.encode(source)"},"status":0},{"failures":[],"tindex":"35a205eb-17bc-11e6-bde7-8fa81bb740f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:539","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[],"tindex":"35a205ec-17bc-11e6-bde7-07a39d2a1fb7","series":0,"name":"replace","transplant":{"toString":"final int j = 0","position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int wdsz = local.length()","position":"org.apache.commons.codec.language.Metaphone:145","type":"CtLocalVariableImpl","sourcecode":"final int int = local.length()"},"status":-2},{"failures":[80],"tindex":"35a205ed-17bc-11e6-bde7-9fe9c131f1d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code.append('X')","position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"35a205ee-17bc-11e6-bde7-b5b7a6df6dc3","series":0,"name":"replace","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.SIX_1;\n} ","position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"status":-3},{"failures":[81,82,83,84,85,86,87,88,89],"tindex":"35a22cff-17bc-11e6-bde7-570d5b08307e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer.append(saltString)","position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"buffer.append(saltString)"},"status":-1},{"failures":[],"tindex":"35a22d00-17bc-11e6-bde7-0939f388b4bd","series":0,"name":"add","transplant":{"toString":"this.folding = folding","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"variableMap":{"folding":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result = true","position":"org.apache.commons.codec.language.DoubleMetaphone:878","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-2},{"failures":[],"tindex":"35a22d01-17bc-11e6-bde7-9110ab4d657d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"context.eof = true","position":"org.apache.commons.codec.binary.Base64:338","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[41,90],"tindex":"35a22d02-17bc-11e6-bde7-fd709d34196e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (lastCode == '/') {\n    continue;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"35a22d03-17bc-11e6-bde7-dd38bbdd1468","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"base64String"},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.codec.binary.Base64().decode(base64String)","position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64String)"},"status":-2},{"failures":[91,52,92],"tindex":"35a22d04-17bc-11e6-bde7-e1370e91d964","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int ii = 0, jj = (ascii.length) - 1 ; ii < (l_raw.length) ; ii++ , jj -= 8) {\n    for (int bits = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.BITS.length) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];\n        } \n    }\n}","position":"org.apache.commons.codec.binary.BinaryCodec:208","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (ascii.int) - 1 ; ii < (l_raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"35a22d05-17bc-11e6-bde7-8b93e62890c5","series":0,"name":"add","transplant":{"toString":"for (int i = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS.set(i);\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('&')","position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"status":-2},{"failures":[90],"tindex":"35a25416-17bc-11e6-bde7-47aedafca7c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"(length)++","position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"35a25417-17bc-11e6-bde7-f91eb91416f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.languages = java.util.Collections.unmodifiableSet(languages)","position":"org.apache.commons.codec.language.bm.Languages:87","type":"CtAssignmentImpl","sourcecode":"this.java.util.Set<java.lang.String> = java.util.Collections.unmodifiableSet(languages)"},"status":-2},{"failures":[],"tindex":"35a2a238-17bc-11e6-bde7-f7ca0dc0c9ba","series":0,"name":"add","transplant":{"toString":"lastChar = chr","position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"variableMap":{"lastChar":"code","chr":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '4'","position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":0},{"failures":[],"tindex":"35a2a239-17bc-11e6-bde7-65382181d741","series":0,"name":"add","transplant":{"toString":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")","position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")","position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"status":-2},{"failures":[],"tindex":"35a2a23a-17bc-11e6-bde7-61ee5c4086ad","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"toString":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"35a2a23b-17bc-11e6-bde7-151e57ea5031","series":0,"name":"replace","transplant":{"toString":"java.lang.String saltString","position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String pattern = rule.getPattern()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:212","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = rule.getPattern()"},"status":-2},{"failures":[93,94],"tindex":"35a2a23c-17bc-11e6-bde7-e1ca72044f41","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"original"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original, null)","position":"org.apache.commons.codec.digest.UnixCrypt:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original, null)"},"status":-1},{"failures":[],"tindex":"35a2c94d-17bc-11e6-bde7-b521122f1ac1","series":0,"name":"replace","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"if (txtLength == 1) {\n    return txt.toUpperCase(java.util.Locale.ENGLISH);\n} ","position":"org.apache.commons.codec.language.Metaphone:99","type":"CtIfImpl","sourcecode":"if (txtLength == 1) {\n    return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":0},{"failures":[],"tindex":"35a2c94e-17bc-11e6-bde7-97e13a670862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.lang = org.apache.commons.codec.language.bm.Lang.instance(nameType)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:317","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Lang = org.apache.commons.codec.language.bm.Lang.instance(nameType)"},"status":-2},{"failures":[],"tindex":"35a2c94f-17bc-11e6-bde7-8f3171020e31","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"ce\", \"se\")","position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"z\", \"s\")","position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0},{"failures":[],"tindex":"35a2c950-17bc-11e6-bde7-b76593102183","series":0,"name":"replace","transplant":{"toString":"c = (c >>> 1) | (c << 27)","position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[77],"tindex":"35a2c951-17bc-11e6-bde7-69209b392bb9","series":0,"name":"replace","transplant":{"toString":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.CHARS_FF;\n} ","position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"next":"next","org.apache.commons.codec.language.Nysiis.CHARS_FF":"org.apache.commons.codec.language.Nysiis.CHARS_SSS","curr":"aNext"},"type":"adrStmt","transplantationPoint":{"toString":"if (((curr == 'S') && (next == 'C')) && (aNext == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.CHARS_SSS;\n} ","position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((curr == 'S') && (next == 'C')) && (aNext == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[],"tindex":"35a2c952-17bc-11e6-bde7-2de42924511b","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))","position":"org.apache.commons.codec.binary.StringUtils:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))"},"variableMap":{"cs1":"input","cs2":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)","position":"org.apache.commons.codec.language.bm.Rule:564","type":"CtReturnImpl","sourcecode":"return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)"},"status":-2},{"failures":[],"tindex":"35a2c953-17bc-11e6-bde7-a9e1e0e585ea","series":0,"name":"add","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"to"},"type":"adrStmt","transplantationPoint":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"status":-2},{"failures":[],"tindex":"35a2c954-17bc-11e6-bde7-d39fc90db516","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"from","encodeSize":"from"},"type":"adrStmt","transplantationPoint":{"toString":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.SEP, from)","position":"org.apache.commons.codec.net.RFC1522Codec:143","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-3},{"failures":[],"tindex":"35a2c955-17bc-11e6-bde7-c98f337f2422","series":0,"name":"add","transplant":{"toString":"left = right","position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"index","right":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1","position":"org.apache.commons.codec.language.DoubleMetaphone:750","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1"},"status":0},{"failures":[0,1,95],"tindex":"35a2f066-17bc-11e6-bde7-d5dc8a77f588","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.this.maxCodeLen = maxCodeLen","position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"35a2f067-17bc-11e6-bde7-adb9825338fd","series":0,"name":"add","transplant":{"toString":"final int nextIndex = getPatternLength()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int cp = 0","position":"org.apache.commons.codec.digest.Sha2Crypt:296","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"35a2f068-17bc-11e6-bde7-3fc80bd47c8a","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"^y\", \"A\")","position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"toString":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)","position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"status":-2},{"failures":[],"tindex":"35a2f069-17bc-11e6-bde7-d1744a71a6a9","series":0,"name":"replace","transplant":{"toString":"try {\n    final byte[] byteArray = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}","position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"variableMap":{"e":"ascii","object":"ascii"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))","position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}