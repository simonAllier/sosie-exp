{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":0,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":18,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":75,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":44,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":49,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":65,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":45,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":63,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":88,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":10,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":48,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":39,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":61,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":83,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":37,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":40,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":8,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":11,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":86,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":46,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":72,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":73,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":9,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":71,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":42,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":81,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":51,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":90,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":41,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":32,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":4,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":60,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":85,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":68,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":53,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":59,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":56,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":57,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":84,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":38,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":64,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":17,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":21,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":76,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":5,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":82,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":47,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":77,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":80,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":16,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":70,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":12,"org.apache.commons.codec.language.NysiisTest.testOthers":69,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":79,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":22,"org.apache.commons.codec.language.SoundexTest.testDifference":55,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":43,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":74,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":78,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":13,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":31},"transformations":[{"failures":[],"tindex":"0a2061ed-0cbf-11e6-9274-47471072d791","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[0,1,2],"tindex":"0a2088fe-0cbf-11e6-9274-b3db8e9d43e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"status":-1},{"failures":[3,0,1,2],"tindex":"0a20b00f-0cbf-11e6-9274-7900939ef378","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"result.append('X', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"0a20b010-0cbf-11e6-9274-4d6709c3ff43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"status":-2},{"failures":[4,5,6],"tindex":"0a20b011-0cbf-11e6-9274-db05ba413f97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:541","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"status":-1},{"failures":[],"tindex":"0a20b012-0cbf-11e6-9274-19af2d98da55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2},{"failures":[],"tindex":"0a20b013-0cbf-11e6-9274-6306cac2e3c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"c","name2Size":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"status":-2},{"failures":[],"tindex":"0a20d724-0cbf-11e6-9274-3f0bdb9ac41c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:433","type":"CtInvocationImpl","sourcecode":"readResults(buf, 0, buf.int, context)"},"status":-2},{"failures":[],"tindex":"0a20d725-0cbf-11e6-9274-91a6499a7927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"to","name2Size":"terminator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":-2},{"failures":[7,8,9,10,11,12],"tindex":"0a20d726-0cbf-11e6-9274-8b4163a0fa1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:254","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(printable, bytes, false)"},"status":-1},{"failures":[],"tindex":"0a20d727-0cbf-11e6-9274-6f6506a8c62d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:239","type":"CtAssignmentImpl","sourcecode":"name1 = getFirst3Last3(name1)"},"status":0},{"failures":[1,2],"tindex":"0a20d728-0cbf-11e6-9274-f7e537e7531f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:688","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"0a20fe39-0cbf-11e6-9274-49f0267af759","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:220","type":"CtIfImpl","sourcecode":"if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"name2":"input","name1":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[13,14],"tindex":"0a20fe3a-0cbf-11e6-9274-95de2572c762","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"status":-1},{"failures":[],"tindex":"0a20fe3b-0cbf-11e6-9274-6f3df57e596e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"combined","key":"combined"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:413","type":"CtReturnImpl","sourcecode":"return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\""},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23],"tindex":"0a20fe3c-0cbf-11e6-9274-557548d4a28f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"status":-1},{"failures":[24,25,26,27,28,29,3,0,30,31,32,1,2,33,34],"tindex":"0a20fe3d-0cbf-11e6-9274-0913c4cfd96c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"status":-1},{"failures":[35],"tindex":"0a21254e-0cbf-11e6-9274-4d82b6dbcab6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"variableMap":{"salt":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"status":-1},{"failures":[],"tindex":"0a21254f-0cbf-11e6-9274-abdc75426c36","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:139","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-2},{"failures":[],"tindex":"0a212550-0cbf-11e6-9274-5108c08ca57f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"variableMap":{"es1":"org.apache.commons.codec.language.Metaphone.FRONTV","es2":"org.apache.commons.codec.language.Metaphone.FRONTV","i":"n","diff":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:206","type":"CtIfImpl","sourcecode":"if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'G'))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 2)))) >= 0)) {\n    code.append('J');\n    n += 2;\n} else {\n    code.append('T');\n}"},"status":-2},{"failures":[],"tindex":"0a212551-0cbf-11e6-9274-9d218eb91477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:208","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(lineLength, org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[])"},"status":-2},{"failures":[],"tindex":"0a212552-0cbf-11e6-9274-ef39cd5116ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:218","type":"CtIfImpl","sourcecode":"if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"name2":"prefix","name1":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"status":-2},{"failures":[36],"tindex":"0a214c63-0cbf-11e6-9274-11cdb625eec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (regionMatch(local, n, \"TCH\")) {\n    break;\n} "},"variableMap":{"local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:166","type":"CtIfImpl","sourcecode":"if ((isPreviousChar(local, n, 'M')) && (isLastChar(wdsz, n))) {\n    break;\n} "},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"0a214c64-0cbf-11e6-9274-8903b6e11417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:213","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    final java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> = new java.util.EnumMap<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.java.lang.Class);\n    for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n        final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n        final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n        for (final java.lang.String java.lang.String : ls.getLanguages()) {\n            try {\n                rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n            } catch (final java.lang.IllegalStateException e) {\n                throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n            }\n        }\n        if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n            rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n        } \n        rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n    }\n    org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(s, java.util.Collections.unmodifiableMap(rts));\n}"},"status":-1},{"failures":[3,1,2],"tindex":"0a214c65-0cbf-11e6-9274-0d885d621575","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:628","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[1,2],"tindex":"0a217376-0cbf-11e6-9274-5bb6ab01d1f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"0a217377-0cbf-11e6-9274-c7c3c1d8166f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"variableMap":{"str1":"cs1","str2":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return cs1.equals(cs2)"},"status":-2},{"failures":[],"tindex":"0a217378-0cbf-11e6-9274-b36dc8b1ecec","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:321","type":"CtLocalVariableImpl","sourcecode":"final int int = b"},"variableMap":{"b":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:131","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2},{"failures":[],"tindex":"0a217379-0cbf-11e6-9274-25f6c7ca4fb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:304","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[54],"tindex":"0a21737a-0cbf-11e6-9274-951e6a0418ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[1,2],"tindex":"0a21737b-0cbf-11e6-9274-db87eb396fd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n    result.append(\"X\", \"SK\");\n} else {\n    result.append(\"SK\");\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"status":-1},{"failures":[55,56],"tindex":"0a219a8c-0cbf-11e6-9274-dbfe3411e8ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:263","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":-1},{"failures":[],"tindex":"0a219a8d-0cbf-11e6-9274-ffa15a5aa65b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"status":-2},{"failures":[26,3,0,1,2],"tindex":"0a219a8e-0cbf-11e6-9274-7197e1aa4548","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:301","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:622","type":"CtIfImpl","sourcecode":"if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[13,57,58,14],"tindex":"0a219a8f-0cbf-11e6-9274-c7bf82d67b98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"status":-1},{"failures":[],"tindex":"0a219a90-0cbf-11e6-9274-bd530df3a9a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"tempResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"status":0},{"failures":[59,60,61,62,63,64,65],"tindex":"0a219a91-0cbf-11e6-9274-95d92a8e11b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:289","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"0a21c1a2-0cbf-11e6-9274-3bae21dc6737","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:138","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"0a21c1a3-0cbf-11e6-9274-01582eff1244","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-2},{"failures":[],"tindex":"0a21c1a4-0cbf-11e6-9274-878524c04565","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"variableMap":{"singleByte":"singleByte"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:98","type":"CtWhileImpl","sourcecode":"while (r == 0) {\n    r = read(byte[], 0, 1);\n}"},"status":-2},{"failures":[],"tindex":"0a21c1a5-0cbf-11e6-9274-ef9d6f1b1927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:146","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[66],"tindex":"0a21c1a6-0cbf-11e6-9274-9dc03936c581","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[],"tindex":"0a21c1a7-0cbf-11e6-9274-0db090a0cc3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"status":-2},{"failures":[],"tindex":"0a21c1a8-0cbf-11e6-9274-054969090580","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"variableMap":{"curr":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:159","type":"CtReturnImpl","sourcecode":"return new char[]{ prev }"},"status":-2},{"failures":[],"tindex":"0a21c1a9-0cbf-11e6-9274-6fa58e2a801f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"status":-2},{"failures":[],"tindex":"0a21c1aa-0cbf-11e6-9274-d33346d6a494","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"variableMap":{"maxLength":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:301","type":"CtReturnImpl","sourcecode":"return context.boolean ? org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int : 0"},"status":-2},{"failures":[],"tindex":"0a21e8bb-0cbf-11e6-9274-7bdcef87c671","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"a ^= t << n"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:130","type":"CtAssignmentImpl","sourcecode":"index = handleH(value, result, index)"},"status":-2},{"failures":[],"tindex":"0a21e8bc-0cbf-11e6-9274-298cf2076655","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"variableMap":{"startSrc":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtUnaryOperatorImpl","sourcecode":"((context.int)++)"},"status":-2},{"failures":[67,68,55,56,69,70,71],"tindex":"0a21e8bd-0cbf-11e6-9274-e78e18b4cbf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(out)"},"variableMap":{"out":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:56","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chars , 0 , count).toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"0a21e8be-0cbf-11e6-9274-690a84cbeeeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:140","type":"CtAssignmentImpl","sourcecode":"index = handleL(value, result, index)"},"status":-2},{"failures":[],"tindex":"0a21e8bf-0cbf-11e6-9274-3fdb36427376","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:441","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"0a21e8c0-0cbf-11e6-9274-156e915d111f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:801","type":"CtIfImpl","sourcecode":"if (index != 0) {\n    return false;\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"status":-2},{"failures":[],"tindex":"0a21e8c1-0cbf-11e6-9274-d395728cb693","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[72],"tindex":"0a220fd2-0cbf-11e6-9274-4b660e72dccb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[],"tindex":"0a220fd3-0cbf-11e6-9274-33436f1157bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:87","type":"CtInvocationImpl","sourcecode":"java.nio.charset.Charset.forName(charset)"},"status":0},{"failures":[],"tindex":"0a220fd4-0cbf-11e6-9274-e5a808f65364","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"0a220fd5-0cbf-11e6-9274-97c0e60b2abe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"status":-2},{"failures":[],"tindex":"0a220fd6-0cbf-11e6-9274-7f5b6aa8f293","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:240","type":"CtAssignmentImpl","sourcecode":"name2 = getFirst3Last3(name2)"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-2},{"failures":[73,74],"tindex":"0a220fd7-0cbf-11e6-9274-9f5a338b66bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"status":-1},{"failures":[],"tindex":"0a220fd8-0cbf-11e6-9274-cfa1dce119cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:803","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"status":-2},{"failures":[],"tindex":"0a220fd9-0cbf-11e6-9274-9fd9a3815bcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"0a2236ea-0cbf-11e6-9274-49e735bc363d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(charArray)"},"variableMap":{"charArray":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))"},"status":-2},{"failures":[75,76,77],"tindex":"0a2236eb-0cbf-11e6-9274-c52e2debfba4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"status":-1},{"failures":[78,79,80,81,82,83],"tindex":"0a2236ec-0cbf-11e6-9274-737e061d8a42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"0a2236ed-0cbf-11e6-9274-551b08199984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:71","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"0a2236ee-0cbf-11e6-9274-b54194062e82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:72","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[1,2],"tindex":"0a2236ef-0cbf-11e6-9274-018dad32799c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"status":-1},{"failures":[84],"tindex":"0a2236f0-0cbf-11e6-9274-7b464645902d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:153","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[1,2],"tindex":"0a2236f1-0cbf-11e6-9274-657c12166e46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[],"tindex":"0a2236f2-0cbf-11e6-9274-434ac560ffcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:453","type":"CtIfImpl","sourcecode":"if ((words2.size()) == 1) {\n    input = words.iterator().next();\n} else {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    for (final java.lang.String java.lang.String : words2) {\n        result.append(\"-\").append(encode(word));\n    }\n    return result.substring(1);\n}"},"status":0},{"failures":[],"tindex":"0a225e03-0cbf-11e6-9274-71631365be77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:156","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n    final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n    final int int = java.io.InputStream.read(buf);\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n} "},"status":-2},{"failures":[85,86,87],"tindex":"0a225e04-0cbf-11e6-9274-898f346a4f5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"variableMap":{"f":"ii","i":"ii","out":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[],"tindex":"0a225e05-0cbf-11e6-9274-1de4b69b9d7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"status":0},{"failures":[54],"tindex":"0a225e06-0cbf-11e6-9274-db1273967807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[],"tindex":"0a225e07-0cbf-11e6-9274-970f2808e411","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:266","type":"CtInvocationImpl","sourcecode":"getNextPos()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:95","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[25,3,0,1,2],"tindex":"0a225e08-0cbf-11e6-9274-ab0bcbc6ce8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[88],"tindex":"0a228519-0cbf-11e6-9274-13339702c5de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:290","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[89,90],"tindex":"0a22851a-0cbf-11e6-9274-d9557e0c1349","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:59","type":"CtLocalVariableImpl","sourcecode":"int int = outLen"},"variableMap":{"outLen":"bitlen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"status":-1},{"failures":[],"tindex":"0a22851b-0cbf-11e6-9274-55dddfe66e75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet.merge(lang)"},"variableMap":{"languages":"languages","lang":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet.restrictTo(right.org.apache.commons.codec.language.bm.Languages.LanguageSet)"},"status":0},{"failures":[],"tindex":"0a22851c-0cbf-11e6-9274-cbfca54066d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"alternate":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n} else {\n    sb.append(c);\n}"},"status":-2},{"failures":[],"tindex":"0a22851d-0cbf-11e6-9274-a91d2a858f10","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"last","chr":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((mapped != '0') && (mapped != last)) {\n    out[(count++)] = mapped;\n} "},"status":-2},{"failures":[],"tindex":"0a22851e-0cbf-11e6-9274-c99f24a4d962","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"0a22851f-0cbf-11e6-9274-837ac1e9909c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:938","type":"CtInvocationImpl","sourcecode":"getMaxCodeLen()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:117","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":-2},{"failures":[],"tindex":"0a228520-0cbf-11e6-9274-d330552e1e5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:219","type":"CtIfImpl","sourcecode":"if (rule.matches(text)) {\n    if (rule.boolean) {\n        langs.retainAll(rule.java.util.Set<java.lang.String>);\n    } else {\n        langs.removeAll(rule.java.util.Set<java.lang.String>);\n    }\n} "},"status":-2},{"failures":[],"tindex":"0a22ac31-0cbf-11e6-9274-d185788f2ac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"variableMap":{"code":"patternKey","chr":"patternKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    ruleMapping.put(patternKey, rules);\n} "},"status":-2},{"failures":[],"tindex":"0a22ac32-0cbf-11e6-9274-4f467e7a4ee5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))"},"variableMap":{"str1":"cs2","str2":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()))"},"status":-2},{"failures":[3,1,2],"tindex":"0a22ac33-0cbf-11e6-9274-1dcf5aa3a3e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:454","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":87,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}