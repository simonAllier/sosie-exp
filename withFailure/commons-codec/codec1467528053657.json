{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter":180,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":210,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":92,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":114,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":22,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":63,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeNull":80,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":134,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":217,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":88,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":99,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":104,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":146,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":145,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":160,"org.apache.commons.codec.language.NysiisTest.testCap":115,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":161,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":165,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":144,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":162,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":163,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":148,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":215,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":42,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":198,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":57,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":178,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":41,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":151,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":153,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":225,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":176,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":141,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull":78,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":110,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":51,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":96,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":5,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":187,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":84,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":131,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":201,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":211,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":43,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":184,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":214,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":170,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":209,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":226,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":3,"org.apache.commons.codec.language.NysiisTest.testDropBy":45,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":149,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":127,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":13,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":29,"org.apache.commons.codec.binary.Base64Test.testUUID":156,"org.apache.commons.codec.binary.Base64Test.testSingletons":177,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":47,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":219,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":77,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":182,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":199,"org.apache.commons.codec.binary.Base64Test.testPairs":155,"org.apache.commons.codec.binary.Base64Test.testConstructors":158,"org.apache.commons.codec.language.NysiisTest.testRule2":120,"org.apache.commons.codec.language.NysiisTest.testRule1":119,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":218,"org.apache.commons.codec.language.NysiisTest.testRule6":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":90,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":48,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":17,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":193,"org.apache.commons.codec.language.NysiisTest.testBran":121,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":126,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":94,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":203,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":213,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":147,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":32,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":173,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":54,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":174,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":205,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":18,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":109,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":111,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":196,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":206,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":140,"org.apache.commons.codec.language.NysiisTest.testDad":116,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":166,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":107,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":159,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":139,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":208,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":113,"org.apache.commons.codec.language.NysiisTest.testDan":117,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":197,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":10,"org.apache.commons.codec.language.NysiisTest.testSnat":123,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":224,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":85,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":223,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":55,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":135,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeEmpty":81,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":68,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":188,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":192,"org.apache.commons.codec.binary.Base64Test.testTriplets":152,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":128,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":11,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":75,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":73,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":76,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":1,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":50,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":175,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":189,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":167,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":191,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":101,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":143,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":70,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":154,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":59,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":58,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":28,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":86,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":87,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":150,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":171,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":91,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":194,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":6,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":222,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":183,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":74,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":33,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":39,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":136,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":129,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":82,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":102,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":207,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":34,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":83,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":204,"org.apache.commons.codec.language.NysiisTest.testTranan":125,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":221,"org.apache.commons.codec.language.NysiisTest.testFal":118,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":37,"org.apache.commons.codec.language.NysiisTest.testSnad":122,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":30,"org.apache.commons.codec.language.MetaphoneTest.testTCH":133,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":138,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":181,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":200,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":62,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":100,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":164,"org.apache.commons.codec.binary.Base64Test.testBase64":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":67,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":9,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":130,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":168,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":106,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":64,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":89,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":105,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":185,"org.apache.commons.codec.binary.Base64Test.testCodec112":172,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":195,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":60,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":23,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":227,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeEmpty":79,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":95,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":124,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":216,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":202,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":26,"org.apache.commons.codec.binary.Base64Test.testCodec68":179,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":31,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":132,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":112,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":190,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":186,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":52,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":93,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":103,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":71,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":137,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":220,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":16,"org.apache.commons.codec.language.NysiisTest.testOthers":46,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":97,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":27,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":142,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":212,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":61,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":8,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":169,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":157},"transformations":[{"failures":[0,1,2],"tindex":"16e59197-40e9-11e6-9950-41ca62f8831a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","raw":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[3,4,5,6,7,8,9],"tindex":"16e5dfb8-40e9-11e6-9950-efe8375d9e05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:270","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('A');\n} "},"status":-1},{"failures":[],"tindex":"16e5dfb9-40e9-11e6-9950-33b34bc7bf26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:302","type":"CtLocalVariableImpl","sourcecode":"final char char = key.charAt(((key.length()) - 2))"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = key.charAt(((key.length()) - 1))"},"status":-2},{"failures":[10,11],"tindex":"16e5dfba-40e9-11e6-9950-f18249adc9e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:329","type":"CtAssignmentImpl","sourcecode":"u = ((u ^ (u << 16)) ^ r) ^ (sArr[s])"},"status":-1},{"failures":[],"tindex":"16e5dfbb-40e9-11e6-9950-353627b764ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ISL\", \"YSL\")) {\n    index++;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, \"SUGAR\"))) {\n    result.append('X', 'S');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SH\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n        result.append('S');\n    } else {\n        result.append('X');\n    }\n    index += 2;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"SIO\", \"SIA\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"SIAN\"))) {\n    if (slavoGermanic) {\n        result.append('S');\n    } else {\n        result.append('S', 'X');\n    }\n    index += 3;\n} else if (((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\"))) {\n    result.append('S', 'X');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"Z\") ? index + 2 : index + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"SC\")) {\n    index = handleSC(value, result, index);\n} else {\n    if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n        result.appendAlternate('S');\n    } else {\n        result.append('S');\n    }\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1;\n}"},"status":-2},{"failures":[],"tindex":"16e6f12c-40e9-11e6-9950-9ff8ece852bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":-2},{"failures":[1],"tindex":"16e6f12d-40e9-11e6-9950-65dc69642675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"variableMap":{"byteArray":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[],"tindex":"16e6f12e-40e9-11e6-9950-636e1e61f626","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[10,11],"tindex":"16e6f12f-40e9-11e6-9950-0b78f8a20f35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:410","type":"CtAssignmentImpl","sourcecode":"results[1] = b"},"status":-1},{"failures":[],"tindex":"16e71840-40e9-11e6-9950-6da571262126","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)"},"status":-2},{"failures":[],"tindex":"16e71841-40e9-11e6-9950-2fda044cfc70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:225","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = org.apache.commons.codec.digest.UnixCrypt.desSetKey(key)"},"status":-2},{"failures":[],"tindex":"16e71842-40e9-11e6-9950-f719e297ab7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:265","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[12,13,14,15,16],"tindex":"16e71843-40e9-11e6-9950-554dc6d244ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[17],"tindex":"16e71844-40e9-11e6-9950-dfc9611923ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27],"tindex":"16e71845-40e9-11e6-9950-052dd2566430","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:213","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = 0"},"variableMap":{"length":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"status":-1},{"failures":[28,29,30,31,32,33,34],"tindex":"16e73f56-40e9-11e6-9950-81df216a177b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"ii","cnt":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":-1},{"failures":[10,11],"tindex":"16e73f57-40e9-11e6-9950-17507d646e81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"b[8] = 0"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 8) & 255))"},"status":-1},{"failures":[6,7,8,9],"tindex":"16e73f58-40e9-11e6-9950-afd9c4f5cfa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:692","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"16e73f59-40e9-11e6-9950-dfd383d07b8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return sBuf.toString()"},"status":-2},{"failures":[35],"tindex":"16e73f5a-40e9-11e6-9950-c521b68581ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; i <= 'z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[],"tindex":"16e73f5b-40e9-11e6-9950-3d7413a99891","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"charsetName","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"status":-2},{"failures":[],"tindex":"16e7666c-40e9-11e6-9950-91ba93c7982c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"n","len":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:359","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < n ; i++) {\n    final char char = accentedWord.charAt(i);\n    final int int = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.indexOf(c);\n    if (pos > (-1)) {\n        sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n    } else {\n        sb.append(c);\n    }\n}"},"status":-2},{"failures":[36,37,38,39,35],"tindex":"16e7666d-40e9-11e6-9950-89d6c25797d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:174","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-1},{"failures":[],"tindex":"16e7666e-40e9-11e6-9950-515d81156a94","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"variableMap":{"cs1":"input","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:713","type":"CtIfImpl","sourcecode":"if (!(input.subSequence(i, ipl).equals(org.apache.commons.codec.language.bm.Rule.this.java.lang.String))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(ipl, input.length())))) {\n    return false;\n} "},"status":-2},{"failures":[9],"tindex":"16e7666f-40e9-11e6-9950-1b4a4249ea37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars))"},"status":-1},{"failures":[],"tindex":"16e76670-40e9-11e6-9950-efa6ef184346","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"variableMap":{"line":"lang","ls":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:142","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":0},{"failures":[40],"tindex":"16e78d81-40e9-11e6-9950-033209f7ad62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:274","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"16e78d82-40e9-11e6-9950-b9c098824ac2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"16e78d83-40e9-11e6-9950-a5c295584bdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(object)))"},"variableMap":{"this":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"16e78d84-40e9-11e6-9950-ad2757a1ad44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:222","type":"CtReturnImpl","sourcecode":"return (context.byte[]) != null"},"status":-2},{"failures":[10,41,42,11],"tindex":"16e78d85-40e9-11e6-9950-11022d81bf91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:250","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[6,7,8,9],"tindex":"16e78d86-40e9-11e6-9950-71076df64d92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"variableMap":{"context":"value","pattern":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"status":-1},{"failures":[36,43],"tindex":"16e78d87-40e9-11e6-9950-07a180a537da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:132","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[],"tindex":"16e7b498-40e9-11e6-9950-b56c57cb57f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:78","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = algorithm"},"variableMap":{"algorithm":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[44,45,46],"tindex":"16e7b499-40e9-11e6-9950-03d1ebfe6b3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"status":-1},{"failures":[],"tindex":"16e7b49a-40e9-11e6-9950-b367e0bba9d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return sBuf.toString()"},"status":-2},{"failures":[],"tindex":"16e7b49b-40e9-11e6-9950-9f13b4ea80ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"name = removeVowels(name)"},"status":-2},{"failures":[],"tindex":"16e7b49c-40e9-11e6-9950-bd00cc0ed757","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << 8) + b"},"variableMap":{"b":"result","context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:358","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result"},"status":-2},{"failures":[],"tindex":"16e7b49d-40e9-11e6-9950-c3a3f1659a31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"encodeTable","offset":"org.apache.commons.codec.binary.Base64.MASK_6BITS","iValue":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"16e7dbae-40e9-11e6-9950-0f852dc59222","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"variableMap":{"t":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[],"tindex":"16e7dbaf-40e9-11e6-9950-8d3f3b0c3816","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:97","type":"CtLocalVariableImpl","sourcecode":"int int = read(byte[], 0, 1)"},"status":-2},{"failures":[],"tindex":"16e7dbb0-40e9-11e6-9950-4f72f1c78b06","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += len"},"variableMap":{"len":"currentLinePos","context":"context","readPos":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[47,48,49,50,51,52,53,54],"tindex":"16e7dbb1-40e9-11e6-9950-a7f9aa1e556f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:79","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.binary.StringUtils.newStringUsAscii(rawData))"},"status":-1},{"failures":[],"tindex":"16e7dbb2-40e9-11e6-9950-952ae7c2b2c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-2},{"failures":[55],"tindex":"16e7dbb3-40e9-11e6-9950-65716d72ca8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:617","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"variableMap":{"valueToDigest":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[56],"tindex":"16e801c4-40e9-11e6-9950-17ddb1d5099d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:445","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key), valueToDigest).doFinal()"},"status":-1},{"failures":[57,58],"tindex":"16e801c5-40e9-11e6-9950-85e11f2809da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"valueToDigest","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"16e801c6-40e9-11e6-9950-e103653c1d68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:398","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.parsePhoneme(ph)"},"variableMap":{"ph":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:382","type":"CtIfImpl","sourcecode":"if (ph.startsWith(\"(\")) {\n    if (!(ph.endsWith(\")\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n    } \n    final java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme> java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme> = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule.Phoneme>();\n    final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1));\n    for (final java.lang.String java.lang.String : body.split(\"[|]\")) {\n        phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part));\n    }\n    if ((body.startsWith(\"|\")) || (body.endsWith(\"|\"))) {\n        phs.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n    } \n    return new org.apache.commons.codec.language.bm.Rule.PhonemeList(phs);\n} else {\n    return org.apache.commons.codec.language.bm.Rule.parsePhoneme(ph);\n}"},"status":-1},{"failures":[],"tindex":"16e8ec27-40e9-11e6-9950-db915b41aa2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"variableMap":{"el":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"status":0},{"failures":[77,7,78,79,80,81,82],"tindex":"16e8ec28-40e9-11e6-9950-d3714a15e66c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:76","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value, false)"},"status":-1},{"failures":[83],"tindex":"16e91339-40e9-11e6-9950-c72f64fb798b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[8,9],"tindex":"16e93a4a-40e9-11e6-9950-a16b6cbe84b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"16e93a4b-40e9-11e6-9950-93df673acddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"status":-2},{"failures":[8,9],"tindex":"16e9615c-40e9-11e6-9950-cb335a04344f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"16e9615d-40e9-11e6-9950-b17ff60f6ec1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"status":-2},{"failures":[47,48,49,50,51,84,85,86,87,88,89,90,83,91,92,93,94],"tindex":"16e9615e-40e9-11e6-9950-437e947cbc92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:282","type":"CtIfImpl","sourcecode":"if (strict) {\n    int int = 1;\n    for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n        int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n            pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n            pos = 1;\n        }\n    }\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes);\n    boolean boolean = (!(printable.get(b))) || ((org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)) && (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)));\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    } \n    for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n        b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n        encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n    }\n} else {\n    for (final byte byte : bytes) {\n        int int = c;\n        if (b < 0) {\n            b = 256 + b;\n        } \n        if (printable.get(b)) {\n            buffer.write(b);\n        } else {\n            org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n        }\n    }\n}"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"16e9615f-40e9-11e6-9950-ff2d6fc1d81c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset.name()"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_8"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"16e96160-40e9-11e6-9950-b12ac7e2f6c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:389","type":"CtReturnImpl","sourcecode":"return value"},"status":-2},{"failures":[59,60,61,62,63,66,67,68,69,70,72,73,74,75,76],"tindex":"16e98871-40e9-11e6-9950-f361e55d280c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:353","type":"CtInvocationImpl","sourcecode":"subBuilder.append(phonemeText.subSequence(i, (i + 1)))"},"variableMap":{"i":"maxPhonemes","phonemeText":"input","subBuilder":"phonemeBuilder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:211","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n    final java.lang.String java.lang.String = rule.getPattern();\n    patternLength = pattern.length();\n    if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n        org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n        org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"16e98872-40e9-11e6-9950-cf73cc34aa06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:389","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[],"tindex":"16e98873-40e9-11e6-9950-4bcf7662a2ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1))"},"variableMap":{"ph":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"status":-2},{"failures":[],"tindex":"16e9af84-40e9-11e6-9950-91e0f6d12c42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(i))"},"variableMap":{"i":"ii","singleByte":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-2},{"failures":[],"tindex":"16e9af85-40e9-11e6-9950-dfbc49546198","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[4,112],"tindex":"16e9af86-40e9-11e6-9950-2d7fa655c4f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"variableMap":{"cs1":"cs1","cs2":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"status":-1},{"failures":[113,114,115,116,117,118,119,120,44,121,122,123,124,45,46,125,126],"tindex":"16e9d697-40e9-11e6-9950-03406c7e594e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} "},"status":-1},{"failures":[10,11],"tindex":"16ea24b8-40e9-11e6-9950-55bac6291199","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:409","type":"CtAssignmentImpl","sourcecode":"results[0] = a"},"status":-1},{"failures":[28,29,30,31,32,33,34],"tindex":"16ea24b9-40e9-11e6-9950-2db388af2b73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx1.update(keyBytes);\n} else {\n    ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-1},{"failures":[],"tindex":"16ea24ba-40e9-11e6-9950-09260d65129f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"16ea24bb-40e9-11e6-9950-9b20ea597f42","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"name = removeVowels(name)"},"status":-2},{"failures":[],"tindex":"16ea24bc-40e9-11e6-9950-473e993f4587","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[127,128,111,129,130],"tindex":"16ea24bd-40e9-11e6-9950-d53f3320e3bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"variableMap":{"buf":"b","c":"len","context":"context","baseNCodec":"baseNCodec"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"16ea24be-40e9-11e6-9950-219270124d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:176","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(ch, 16)"},"variableMap":{"ch":"org.apache.commons.codec.net.RFC1522Codec.SEP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:134","type":"CtLocalVariableImpl","sourcecode":"int int = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-2},{"failures":[],"tindex":"16ea24bf-40e9-11e6-9950-bbbc0f111cb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"input = input.trim()"},"variableMap":{"input":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"status":-2},{"failures":[88,90,83,91,94],"tindex":"16ea4bd0-40e9-11e6-9950-1396eeeaec63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:287","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-1},{"failures":[],"tindex":"16ea4bd1-40e9-11e6-9950-f75de932a9fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[75],"tindex":"16ea4bd2-40e9-11e6-9950-d1155cfdda3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:561","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n    }\n}"},"status":-1},{"failures":[6],"tindex":"16ea4bd3-40e9-11e6-9950-930688620df2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[131],"tindex":"16ea4bd4-40e9-11e6-9950-add523911db6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"variableMap":{"salt":"encoding"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"status":-1},{"failures":[132,133],"tindex":"16ea4bd5-40e9-11e6-9950-8dbba26bc362","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"16ea4bd6-40e9-11e6-9950-dd3b6c73788c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:298","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"status":-2},{"failures":[134,135,136,137,138,139,140,141],"tindex":"16ea72e7-40e9-11e6-9950-b3a05a9836ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:456","type":"CtIfImpl","sourcecode":"if (blocksize == 32) {\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer);\n} else {\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[21], altResult[42], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[27], altResult[48], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[53], altResult[11], altResult[32], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[33], altResult[54], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[59], altResult[17], altResult[38], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[40], altResult[61], altResult[19], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(altResult[62], altResult[20], altResult[41], 4, buffer);\n    org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer);\n}"},"status":-1},{"failures":[63,73,74,75,76],"tindex":"16ea72e8-40e9-11e6-9950-8347578d346b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"status":-1},{"failures":[],"tindex":"16ea72e9-40e9-11e6-9950-e95769770264","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"16ea72ea-40e9-11e6-9950-8789aefe4214","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:381","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[9],"tindex":"16ea72eb-40e9-11e6-9950-950773cb1e6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"status":-1},{"failures":[],"tindex":"16ea72ec-40e9-11e6-9950-3d6997fa12ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[142,6,7,8,9],"tindex":"16ea72ed-40e9-11e6-9950-dded38bba71d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:633","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n    result.appendAlternate('S');\n} else {\n    result.append('S');\n}"},"status":-1},{"failures":[],"tindex":"16ea99fe-40e9-11e6-9950-a78959b7242b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][charOne]) << 4"},"status":-2},{"failures":[],"tindex":"16ea99ff-40e9-11e6-9950-131509c3c6ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"strB","es2":"strB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:339","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())))"},"status":-2},{"failures":[143],"tindex":"16ea9a00-40e9-11e6-9950-db87b302fe8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"16ea9a01-40e9-11e6-9950-3d4f6a58aed2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"16ea9a02-40e9-11e6-9950-ddb479fe068b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (source == null) {\n    return null;\n} "},"variableMap":{"source":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"16ea9a03-40e9-11e6-9950-fb5630db4272","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[],"tindex":"16ea9a04-40e9-11e6-9950-8f668ea751de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"status":-2},{"failures":[],"tindex":"16ea9a05-40e9-11e6-9950-2d461d4e22c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[144,145,146,147,148,149,150,151],"tindex":"16eac116-40e9-11e6-9950-bfed31a892fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[152,95,96,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,97,180,181,182,98,183,99,100,184,185,186,101,102,187,188,106,189,190,107,191,192,193,194,195,196,197,108,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,127,128,214,215,216,217,218,219,220,221,111,222,129,223,224,225,130,226,52,53,227,54],"tindex":"16eac117-40e9-11e6-9950-272eeb848e4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == element) || (isInAlphabet(element))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"16eac118-40e9-11e6-9950-57cfb2e9ccd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"status":-2},{"failures":[],"tindex":"16eac119-40e9-11e6-9950-5fac327dd540","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"value","dc":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:314","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"status":-2},{"failures":[],"tindex":"16eac11a-40e9-11e6-9950-b703ccf749e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}