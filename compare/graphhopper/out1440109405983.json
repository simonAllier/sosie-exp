{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":301,"com.graphhopper.GraphHopperAPITest.testNoLoad":287,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":83,"com.graphhopper.reader.OSMReaderTest.testFerry":138,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":3,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":161,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":239,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":376,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":245,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":410,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":434,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":480,"com.graphhopper.GraphHopperTest.testPrepare":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":418,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":158,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":246,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":43,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":344,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":61,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":57,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":36,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":124,"com.graphhopper.GraphHopperTest.testLoadOSM":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":345,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":464,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":290,"com.graphhopper.reader.OSMReaderTest.testSort":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":23,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":365,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":448,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":419,"com.graphhopper.routing.DijkstraTest.initializationError":306,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":486,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":363,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":334,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":423,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":490,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":47,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":292,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":368,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":203,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":377,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":465,"com.graphhopper.GraphHopperAPITest.testLoad":18,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":192,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":435,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":477,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":217,"com.graphhopper.util.GHUtilityTest.testCopy":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":185,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":247,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":211,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":336,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":106,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":222,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":398,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":426,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":483,"com.graphhopper.util.InstructionListTest.testWayList2":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":352,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":157,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":204,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":422,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":378,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":310,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":143,"com.graphhopper.routing.AStarTest.initializationError":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":119,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":2,"com.graphhopper.routing.PathBidirRefTest.testExtract":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":165,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":415,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":460,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":395,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":331,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":414,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.reader.OSMReaderTest.testMain":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":485,"com.graphhopper.util.AngleCalcTest.testConvertAzimuth2xaxisAngle":492,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":484,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":367,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":209,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":466,"com.graphhopper.storage.GraphHopperStorageTest.testClone":98,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":482,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":260,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":437,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":314,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":354,"com.graphhopper.reader.OSMReaderTest.testRelation":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":409,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":473,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":127,"com.graphhopper.GraphHopperTest.testFootOnly":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":311,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":58,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":67,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":343,"com.graphhopper.reader.OSMReaderTest.testWithBounds":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":225,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":411,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":320,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":76,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":296,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":125,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":153,"com.graphhopper.GraphHopperAPITest.testDisconnected179":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":400,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":341,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":220,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":17,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":463,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":170,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":133,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":430,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":389,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":193,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":154,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":299,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":327,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":53,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":174,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":386,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":169,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":439,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":269,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":208,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":179,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":413,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":240,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":370,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":429,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":315,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":357,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":177,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":293,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":52,"com.graphhopper.util.TranslationMapTest.testToString":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":382,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":91,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":232,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":294,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":379,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":402,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":250,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":440,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":120,"com.graphhopper.reader.PrinctonReaderTest.testRead":16,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":449,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":160,"com.graphhopper.reader.OSMReaderTest.testFoot":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":137,"com.graphhopper.reader.OSMReaderTest.testOneWay":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":350,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":436,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":447,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":32,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":89,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":432,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":27,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":236,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":405,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":487,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":424,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":456,"com.graphhopper.routing.PathBidirRefTest.testExtract2":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":353,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":65,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":189,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":128,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":317,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":302,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":454,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":346,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":264,"com.graphhopper.GraphHopperTest.testFootAndCar":276,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":180,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":85,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":481,"com.graphhopper.GraphHopperTest.testPrepareOnly":272,"com.graphhopper.GraphHopperTest.testVia":274,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":297,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":148,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":457,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":445,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":198,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":326,"com.graphhopper.routing.AStarBidirectionTest.initializationError":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":407,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":472,"com.graphhopper.util.InstructionListTest.testFind":6,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":70},"transformations":[{"failures":[],"tindex":"135403e2-478a-11e5-8287-bd112b7fa74f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:91","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(((double - (com.graphhopper.util.shapes.BBox.double)) / (double)) * (com.graphhopper.geohash.LinearKeyAlgo.double)))"},"status":-2},{"failures":[0,1],"tindex":"13542af3-478a-11e5-8287-25fef03512c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"removedEdges","dLat":"removedEdges","tmpErr":"removedEdges","x1":"min","sLon":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n}"},"status":-1},{"failures":[2],"tindex":"13542af4-478a-11e5-8287-2dcf6953dd9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"variableMap":{"acceptBit":"acceptBit","way":"way","sidewalks":"intendedValues"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"13542af5-478a-11e5-8287-b9c6497e2ebe","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,0,20,21,22,23,24,25,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"13542af6-478a-11e5-8287-b163eab7b6f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:943","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"variableMap":{"enableIfAssert":"forward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:316","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[123,124,125,126,127,128,129,130],"tindex":"13545207-478a-11e5-8287-4f55a3a0320b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-1},{"failures":[131],"tindex":"13545208-478a-11e5-8287-cbd88e1f3ef5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:95","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON())"},"status":-1},{"failures":[],"tindex":"13545209-478a-11e5-8287-2fae423c2293","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:222","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"))"},"status":1},{"failures":[132],"tindex":"1354520a-478a-11e5-8287-71c4605fe60e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:683","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"locale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:122","type":"CtIfImpl","sourcecode":"if ((java.lang.String.contains(\"_\")) && (com.graphhopper.util.Translation == null))\n    com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2));\n"},"status":-1},{"failures":[31],"tindex":"1354520b-478a-11e5-8287-51ccca5b1146","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[5,133,73,79,134,85,135,98,104,136,113,119,137],"tindex":"1354520c-478a-11e5-8287-21c2a47417f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()).setWayGeometry(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.fetchWayGeometry(0))"},"status":-1},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,2,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,21,22,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,32,33,64,67,269],"tindex":"1354520d-478a-11e5-8287-cbfa3ed022c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"1354791e-478a-11e5-8287-796ce51fea71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:184","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[5,73,79,85,91,98,104,113,119],"tindex":"1354791f-478a-11e5-8287-b39d10075827","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-1},{"failures":[3,4,270,271,272,273,274,275,133,276,277,278,279,280,281,282,283,284,16,17,138,139,140,141,142,143,144,145,146,285,148,149,150,151,152,18,286,287,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,2,202,288,289,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,129,229,290,232,291,292,293,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,294,37,295,296,38,39,40,41,42,43,44,45,46,297,298,299,300,47,48,49,50,301,302,51,52,53,54,303,304,305,306,62,63,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,64,325,326,327,328,329,330,331,332,333,334,65,335,336,337,338,339,340,66,341,342,343,344,345,346,67,347,348,349,350,351,352,353,354,355,356,68,357,358,359,360,361,362,69,70,363,364,365,366,367,368,369,370,371,71,72,372,73,74,373,374,375,75,376,377,378,379,380,381,76,382,77,383,384,385,386,387,78,388,79,389,390,80,391,81,392,393,394,134,82,395,396,83,84,397,85,86,398,399,400,87,401,402,403,404,405,406,88,407,89,408,409,410,411,412,90,413,91,414,415,92,416,93,417,418,419,135,94,420,421,95,422,423,424,425,426,427,428,96,97,429,98,99,430,431,432,100,433,434,435,436,437,438,101,439,102,440,441,442,443,444,103,445,104,446,447,105,448,106,449,450,451,136,107,452,108,453,454,455,109,269,456,457,458,459,460,110,461,462,463,464,465,466,111,112,467,113,114,468,469,470,115,471,472,473,474,475,476,116,477,117,478,479,480,481,482,118,483,119,484,485,120,486,121,487,488,489,137,122,490],"tindex":"13547920-478a-11e5-8287-e949dd35cb21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:174","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[205],"tindex":"1354a031-478a-11e5-8287-37f8e2888bbe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"midLat":"fwdFaster","lat":"decDist2DSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"1354a032-478a-11e5-8287-9d0766498deb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"length","frontIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:577","type":"CtReturnImpl","sourcecode":"return double[].int"},"status":-2},{"failures":[491,492,10,11,12,14],"tindex":"1354a033-478a-11e5-8287-cf9a00b07b81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[279],"tindex":"1354a034-478a-11e5-8287-8d390fbad26a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"No storage set to calculate turn weight\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:666","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"))"},"status":-1},{"failures":[],"tindex":"1354a035-478a-11e5-8287-8b46170a12f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:172","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"13545209-478a-11e5-8287-2fae423c2293","diffs":[{"variables":{"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":["com.graphhopper.storage.AbstractDataAccess.boolean checkBeforeRename(java.lang.String)_location","com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()_location"],"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess.boolean checkBeforeRename(java.lang.String)_location"],"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":["com.graphhopper.storage.AbstractDataAccess.boolean checkBeforeRename(java.lang.String)_location","com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()_location","com.graphhopper.storage.SynchedDAWrapper.com.graphhopper.storage.DataAccess setSegmentSize(int)_inner"],"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":["com.graphhopper.storage.AbstractDataAccess.boolean checkBeforeRename(java.lang.String)_location","com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()_location"],"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.UnsafeDataAccess.void close()_address","com.graphhopper.storage.UnsafeDataAccess.void setInt(long,int)_address","com.graphhopper.storage.UnsafeDataAccess.boolean ensureCapacity(long,boolean)_address"]},"type":"variable"},{"nodes":{"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()"],"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()"]},"edges":{"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess.void rename(java.lang.String) -> com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()"],"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess.void rename(java.lang.String) -> com.graphhopper.storage.AbstractDataAccess.java.lang.String getFullName()"]},"type":"graph"},{"branches":{"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b"],"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b"]},"type":"branch"}]}]}