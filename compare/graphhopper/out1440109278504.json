{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":213,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":246,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":9,"com.graphhopper.reader.OSMReaderTest.testFerry":256,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":272,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":62,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":156,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":231,"com.graphhopper.coll.CompressedArrayTest.testCompress":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":289,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":378,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":154,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":173,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":310,"com.graphhopper.GraphHopperTest.testPrepare":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":182,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":206,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":277,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":286,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":227,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":349,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":30,"com.graphhopper.GraphHopperTest.testLoadOSM":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":83,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":293,"com.graphhopper.reader.OSMReaderTest.testSort":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":233,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":64,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":391,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":373,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":165,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":41,"com.graphhopper.storage.RAMDataAccessTest.testHeader":387,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":269,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":197,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":377,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":123,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":200,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":338,"com.graphhopper.coll.CompressedArrayTest.testCompress2":50,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":170,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":66,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":360,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":236,"com.graphhopper.reader.OSMReaderTest.testBarriers":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":306,"com.graphhopper.util.GHUtilityTest.testCopy":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":202,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":101,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":389,"com.graphhopper.routing.PathTest.testFindInstruction":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":98,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":374,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":19,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":192,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":6,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":69,"com.graphhopper.util.InstructionListTest.testWayList2":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":91,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":348,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":126,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":21,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":312,"com.graphhopper.routing.PathBidirRefTest.testExtract":240,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":159,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":176,"com.graphhopper.storage.RAMDataAccessTest.testSegments":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":96,"com.graphhopper.util.GHUtilityTest.testSort2":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":210,"com.graphhopper.reader.OSMReaderTest.testMain":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":18,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":294,"com.graphhopper.storage.StorablePropertiesTest.testStore":396,"com.graphhopper.storage.GraphHopperStorageTest.testClone":354,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":141,"com.graphhopper.routing.PathTest.testTime":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":153,"com.graphhopper.util.GHUtilityTest.testSortDirected":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":302,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":394,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":248,"com.graphhopper.GraphHopperTest.testFootOnly":382,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":11,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":253,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":85,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":243,"com.graphhopper.routing.QueryGraphTest.testOneWay":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":106,"com.graphhopper.storage.VLongStorageTest.testWrite":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":81,"com.graphhopper.reader.OSMReaderTest.testWithBounds":267,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":230,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":108,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":352,"com.graphhopper.search.NameIndexTest.testFlush":397,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":31,"com.graphhopper.util.InstructionListTest.testWayList":278,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":376,"com.graphhopper.GraphHopperAPITest.testDisconnected179":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":142,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":137,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":14,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":181,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":356,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":193,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":24,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":217,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":172,"com.graphhopper.routing.PathTest.testWayList":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":204,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":340,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":328,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":355,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":386,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":49,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":395,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":226,"com.graphhopper.util.GHUtilityTest.testSort":283,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":20,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":130,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":54,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":290,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":316,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":239,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":65,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":2,"com.graphhopper.GHRequestTest.testGetHint":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":335,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":292,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":158,"com.graphhopper.routing.PathTest.testFound":220,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":195,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":332,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":145,"com.graphhopper.util.InstructionListTest.testEmptyList":276,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":7,"com.graphhopper.reader.PrinctonReaderTest.testRead":270,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":136,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":336,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":385,"com.graphhopper.reader.OSMReaderTest.testFoot":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":12,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":88,"com.graphhopper.reader.OSMReaderTest.testOneWay":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":320,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":297,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":372,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":344,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":191,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":151,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":358,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":194,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":184,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":384,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":274,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":237,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":148,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":60,"com.graphhopper.routing.PathBidirRefTest.testExtract2":241,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":92,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":124,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":105,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":8,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":25,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":368,"com.graphhopper.GraphHopperTest.testFootAndCar":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":40,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":325,"com.graphhopper.GraphHopperTest.testPrepareOnly":74,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":102,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":207,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":132,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":38,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":115,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":150,"com.graphhopper.util.InstructionListTest.testFind":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":63},"transformations":[{"failures":[],"tindex":"c75891a9-4789-11e5-97bb-f7130322f63e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"variableMap":{"em":"this","encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"c758b8ba-4789-11e5-97bb-a5db70fe3a40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":0},{"failures":[0,1],"tindex":"c758b8bb-4789-11e5-97bb-47fcf594679b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[2],"tindex":"c758b8bc-4789-11e5-97bb-af241a2a9bc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:719","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"variableMap":{"graphHopperFolder":"configuredCHWeightings"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c758b8bd-4789-11e5-97bb-73b9ca4951cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:183","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"variableMap":{"directionBitMask":"backwardBit","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:182","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[46,47,48,49,50,51],"tindex":"c758b8be-4789-11e5-97bb-375109ee8fe2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeByte(((byte)(long)))"},"status":-1},{"failures":[52,53,54,55,56,57,58],"tindex":"c758dfcf-4789-11e5-97bb-a38ece702d63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"node","lonSimilar":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:104","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,27,2,0,76,77,78],"tindex":"c758dfd0-4789-11e5-97bb-17c0eb67b153","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:212","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4))"},"status":-1},{"failures":[],"tindex":"c758dfd1-4789-11e5-97bb-f1b5902bbfb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:265","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,52,53,54,55,125,56,57,126,127,58,128,129,130,59,131,60,132,133,61,134,135,136,9,10,137,138,139,140,141,142,143,144,145,146,147,148,149,11,150,151,152,153,154,155,156,12,157,158,159,160,13,161,162,163,164,165,166,14,167,63,168,169,65,170,171,172,70,72,173,174,175,176,177,178,179,180,181,182,183,28,184,185,186,187,188,189,190,191,192,29,193,194,30,195,196,197,31,198,199,200,201,202,203,204,205,206,207,208,209,32,33,210,211,212,213,214,215,216,217,34,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,41,251,42,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,43,269,270,271,272,273,274,275,276,277,278,279,280,281,282,44,283,284,285,286,45,287],"tindex":"c758dfd2-4789-11e5-97bb-915bc566507b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"c75905e3-4789-11e5-97bb-27f0b3b82a6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:262","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(int, boolean)"},"status":-2},{"failures":[],"tindex":"c75905e4-4789-11e5-97bb-f1f08cbe9a88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[185,189,29],"tindex":"c75905e5-4789-11e5-97bb-d9a266531925","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"skippedEdge1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:592","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int)"},"status":-1},{"failures":[],"tindex":"c75905e6-4789-11e5-97bb-4d64d344ba86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"segmentSizeInBytes","id":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:146","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0)\n        return false;\n    \n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    byte[][] = new byte[int][];\n    for (int int = 0 ; int < int ; int++) {\n        byte[] byte[] = new byte[int];\n        int int = java.io.RandomAccessFile.read(byte[]);\n        if (int <= 0)\n            throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n        \n        byte[][][int] = byte[];\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,52,53,54,55,56,57,126,127,58,128,130,288,289,290,131,60,132,291,292,133,61,293,294,3,4,295,296,297,298,299,300,301,134,302,303,304,305,5,306,307,308,309,310,311,135,6,312,313,314,7,315,316,317,318,319,320,8,321,136,9,10,137,138,139,140,141,142,143,145,146,147,148,149,11,150,151,152,153,154,155,156,12,158,159,160,13,161,162,163,164,165,166,14,167,63,168,169,65,322,323,15,16,324,325,326,327,328,329,330,170,331,332,333,334,17,335,336,337,338,339,340,171,18,341,342,343,19,344,345,346,347,348,349,20,350,172,70,72,351,352,21,22,353,354,355,356,357,358,359,173,360,361,362,363,23,364,365,366,367,368,369,174,24,370,371,372,25,373,374,375,376,377,378,26,379,73,74,175,176,177,178,179,180,75,27,380,181,381,2,0,76,77,382,78,182,183,28,184,185,186,187,188,189,190,191,192,29,193,194,30,195,196,197,31,198,199,200,201,202,203,204,205,206,207,208,209,32,33,210,211,212,213,214,215,216,217,34,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,41,251,42,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,43,269,270,271,272,273,274,275,277,278,279,280,281,282,44,283,284,285,286,45,287],"tindex":"c7592cf7-4789-11e5-97bb-2dd598eca9df","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"edgeEntryIndex","hash":"edgeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:297","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[383,384],"tindex":"c7592cf8-4789-11e5-97bb-cfd71b9c351d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:338","type":"CtAssignmentImpl","sourcecode":"byte[][] = java.util.Arrays.copyOf(byte[][], int)"},"status":-1},{"failures":[381,78,228,231,233,234,257,258,259,261,262,263,264,266,267,43],"tindex":"c7592cf9-4789-11e5-97bb-9d2d540d722e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:170","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = gnu.trove.list.array.TIntArrayList.size();\n    gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n    continue;\n} "},"status":-1},{"failures":[385,59,60,62,386,387,388,389,390,391,392,393,394,395,64,396,71,74,2,0,77,78,397],"tindex":"c7592cfa-4789-11e5-97bb-c5c4324bc0b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:168","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[59,60,61,63,65,70,72,74,2,0,76,77],"tindex":"c759540b-4789-11e5-97bb-25dbaf565b6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.flush()"},"status":-1},{"failures":[175,178,179],"tindex":"c759540c-4789-11e5-97bb-d9f7396a1de1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"placeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1031","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(0), false);\n} else if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}