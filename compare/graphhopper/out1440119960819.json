{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":51,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":40,"com.graphhopper.reader.OSMReaderTest.testFerry":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":98,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":59,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":15,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":56,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":90,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":1,"com.graphhopper.reader.OSMReaderTest.testWithBounds":36,"com.graphhopper.storage.MMapDataAccessTest.testSegments":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":109,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":102,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":116,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":86,"com.graphhopper.coll.CompressedArrayTest.testCompress":55,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":44,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":80,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":13,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":97,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":47,"com.graphhopper.reader.OSMReaderTest.testFoot":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":62,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":58,"com.graphhopper.reader.OSMReaderTest.testOneWay":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":52,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":74,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":88,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":93,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":21,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":92,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":64,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":76,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":12,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":118,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":8,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":104,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":112,"com.graphhopper.GraphHopperTest.testLoadOSM":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":106,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":46,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":70,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":48,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":100,"com.graphhopper.storage.MMapDataAccessTest.testHeader":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":7,"com.graphhopper.storage.MMapDataAccessTest.testCopy":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":67,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":78,"com.graphhopper.util.BitUtilBigTest.testFromBitString":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":96,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":95,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":89,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":39,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":41,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":42,"com.graphhopper.util.BitUtilBigTest.testToBitString":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":11,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":49,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":111,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":68,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":105,"com.graphhopper.GraphHopperTest.testPrepareOnly":14,"com.graphhopper.coll.CompressedArrayTest.testCompress2":54,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":101,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":91,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":34,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.GraphHopperTest.testFootOnly":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":65,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":9,"com.graphhopper.storage.EdgeTest.testCloneFull":4,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":72,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":94},"transformations":[{"failures":[],"tindex":"a6813de4-47a2-11e5-92c2-154921058e7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.MAX_VALUE","speed":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:403","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[0,1],"tindex":"a68164f5-47a2-11e5-92c2-91db55133fcf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\")"},"variableMap":{"output":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\")"},"status":-1},{"failures":[2,3],"tindex":"a68164f6-47a2-11e5-92c2-77db046c5c85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:124","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[4],"tindex":"a6818c07-47a2-11e5-92c2-23fc627ba8a0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"parent","edgeEntry":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[5,6,7,8,9,10,11,12],"tindex":"a6818c08-47a2-11e5-92c2-3775ae1b28f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"exited"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:69","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,0,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"a6818c09-47a2-11e5-92c2-65352185bc0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"eof"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:157","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[39,40,41],"tindex":"a6818c0a-47a2-11e5-92c2-fb2a4f455a4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:345","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int)"},"variableMap":{"i":"searchIndex","fullPL":"points","basePoints":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:115","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    int = int;\n    break;\n} "},"status":-1},{"failures":[14,15,16,17,20,0,42,21,23,43],"tindex":"a681b31b-47a2-11e5-92c2-a1190df88d13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:106","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"ghStorage","g":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:751","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(new java.util.ArrayList<com.graphhopper.routing.util.Weighting>(java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.keySet()) , com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension)"},"status":-1},{"failures":[44,45,46,47,48,49,50],"tindex":"a681b31c-47a2-11e5-92c2-71eb79ca33ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:342","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.put(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.put(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.put(byte[], 0, int);\n}"},"status":-1},{"failures":[23,51],"tindex":"a681b31d-47a2-11e5-92c2-294ce5e3ab83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[52,53],"tindex":"a681b31e-47a2-11e5-92c2-c5aae31ee522","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:411","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int])"},"status":-1},{"failures":[],"tindex":"a681da2f-47a2-11e5-92c2-97fa4423a383","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"double = -double"},"variableMap":{"eleDelta":"ele","decEleSum":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:190","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":1},{"failures":[],"tindex":"a681da30-47a2-11e5-92c2-8fb4aed0cef9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"mask","bufferStart":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63],"tindex":"a681da31-47a2-11e5-92c2-3b2e83426da1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,49,50,76,77,78,79,80,81,82,83,84,85,86,31],"tindex":"a681da32-47a2-11e5-92c2-39a2f728df24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.ensureCapacity(long)"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,46,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"a681da33-47a2-11e5-92c2-5b768f05f45c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"start","length":"start","index":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"a6820144-47a2-11e5-92c2-0db61953197e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:918","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"variableMap":{"currEdge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":1},{"failures":[],"tindex":"a6820145-47a2-11e5-92c2-5bff44a11afc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:391","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a6820144-47a2-11e5-92c2-0db61953197e","diffs":[{"branches":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":["com.graphhopper.storage.BaseGraph_com.graphhopper.util.PointList_fetchWayGeometry_(long,boolean,int,int,int).t5","com.graphhopper.storage.BaseGraph_com.graphhopper.util.PointList_fetchWayGeometry_(long,boolean,int,int,int).e5"]},"type":"branch"},{"variables":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":["com.graphhopper.storage.EdgeAccess.double getDist(long)_edges","com.graphhopper.storage.EdgeAccess.long setFlags_(long,boolean,long)_edges","com.graphhopper.storage.GHDirectory.void mkdirs()_location","com.graphhopper.storage.EdgeAccess.void setDist(long,double)_edges","com.graphhopper.storage.EdgeAccess.int getEdgeRef(int,int,long)_edges","com.graphhopper.storage.GHDirectory.com.graphhopper.storage.DataAccess find(java.lang.String,com.graphhopper.storage.DAType)_map","com.graphhopper.storage.GHDirectory.com.graphhopper.storage.DataAccess find(java.lang.String,com.graphhopper.storage.DAType)_location","com.graphhopper.storage.BaseGraph.void initNodeRefs(long,long)_nodes","com.graphhopper.storage.BaseGraph.void setWayGeometry_(com.graphhopper.util.PointList,long,boolean)_wayGeometry","com.graphhopper.storage.GraphHopperStorage.com.graphhopper.storage.GraphHopperStorage create(long)_dir","com.graphhopper.util.PointList.int size()_size","com.graphhopper.storage.EdgeAccess.long writeEdge(int,int,int,int,int)_edges","com.graphhopper.storage.BaseGraph.void create(long)_nodes","com.graphhopper.storage.EdgeAccess.void connectNewEdge(int,int)_edges","com.graphhopper.storage.BaseGraph.void setWayGeometry_(com.graphhopper.util.PointList,long,boolean)_edges","com.graphhopper.storage.BaseGraph.com.graphhopper.util.PointList fetchWayGeometry_(long,boolean,int,int,int)_edges","com.graphhopper.storage.BaseGraph.void create(long)_wayGeometry","com.graphhopper.storage.BaseGraph.void ensureGeometry(long,int)_wayGeometry","com.graphhopper.storage.EdgeAccess.long getFlags_(long,boolean)_edges","com.graphhopper.storage.BaseGraph.void create(long)_edges","com.graphhopper.storage.BaseGraph$1.void setEdgeRef(int,int)_nodes","com.graphhopper.storage.BaseGraph.com.graphhopper.util.PointList fetchWayGeometry_(long,boolean,int,int,int)_wayGeometry","com.graphhopper.storage.StorableProperties.com.graphhopper.storage.StorableProperties create(long)_da","com.graphhopper.storage.BaseGraph$1.int getEdgeRef(int)_nodes","com.graphhopper.storage.EdgeAccess.int getOtherNode(int,long)_edges","com.graphhopper.storage.BaseGraph.int nextEdgeId()_edges","com.graphhopper.search.NameIndex.com.graphhopper.search.NameIndex create(long)_names","com.graphhopper.storage.GraphHopperStorage.com.graphhopper.storage.GraphHopperStorage create(long)_properties","com.graphhopper.storage.BaseGraph.void ensureNodeIndex(int)_nodes"]},"type":"variable"}]}]}