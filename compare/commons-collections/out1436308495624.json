{"failureDictionary":{"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":7,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":14,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":23,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":6,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":21,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":11,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":19,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":5,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":17,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":0,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":2,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":24,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":4,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":9,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":22,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":8,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":15,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":13,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":16,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":18},"transformations":[{"failures":[],"tindex":"64360897-24f8-11e5-bbf5-c10ab9489200","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"64362fa8-24f8-11e5-bbf5-272cc037ba61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)))"},"status":-1},{"failures":[],"tindex":"64362fa9-24f8-11e5-bbf5-11ce29e63d6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:439","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"64362faa-24f8-11e5-bbf5-7d0739dd6c49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:79","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"variableMap":{"i":"size","beginIndex1":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:323","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)((((int) + int) / (float)) + 1))"},"status":0},{"failures":[],"tindex":"643656bb-24f8-11e5-bbf5-533d17c387d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)"},"status":-2},{"failures":[],"tindex":"643656bc-24f8-11e5-bbf5-6b23a2187e6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"643656bd-24f8-11e5-bbf5-216badec1f99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:765","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"643656be-24f8-11e5-bbf5-e91fc5885488","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:663","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[5],"tindex":"643656bf-24f8-11e5-bbf5-53d304b34b82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:66","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionPredicate invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"643656c0-24f8-11e5-bbf5-5ffedee3f3b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-2},{"failures":[],"tindex":"64367cd1-24f8-11e5-bbf5-df5757a856dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:345","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>"},"status":-2},{"failures":[6,7,8,9,10,11],"tindex":"64367cd2-24f8-11e5-bbf5-2fd5403baa44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"k","vDown":"vDown","delta":"start1","end2":"i","this":"this","i":"i","end1":"start2","k":"delta","start2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[12,13,14,15,16,17,18],"tindex":"64367cd3-24f8-11e5-bbf5-5f7caceec41b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:271","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"status":-1},{"failures":[],"tindex":"64367cd4-24f8-11e5-bbf5-c7d59979de1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:113","type":"CtReturnImpl","sourcecode":"return this.E[][this.int]"},"variableMap":{"array":"array","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:120","type":"CtReturnImpl","sourcecode":"return ((E)(java.lang.reflect.Array.get(this.java.lang.Object, this.int)))"},"status":-2},{"failures":[],"tindex":"64367cd5-24f8-11e5-bbf5-f91ef0f0c519","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:358","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[19],"tindex":"64367cd6-24f8-11e5-bbf5-9919a9b4c12c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:43","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Iterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1253","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int))"},"status":-1},{"failures":[20,21,22],"tindex":"64367cd7-24f8-11e5-bbf5-b938eeab63c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[23,24],"tindex":"6436a3e8-24f8-11e5-bbf5-dfb5ea242f8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"6436a3e9-24f8-11e5-bbf5-21c5e35574e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"last":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:300","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"6436a3ea-24f8-11e5-bbf5-f32ec0d04993","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AndPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"64362faa-24f8-11e5-bbf5-7d0739dd6c49","diffs":[{"branches":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]},{"transformation":"6436a3ea-24f8-11e5-bbf5-f32ec0d04993","diffs":[{"branches":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":["org.apache.commons.collections4.functors.NullIsTruePredicate_boolean_evaluate(T).t1","org.apache.commons.collections4.functors.NullIsTruePredicate_org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate).b","org.apache.commons.collections4.functors.AndPredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.AndPredicate_org.apache.commons.collections4.functors.AndPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).b","org.apache.commons.collections4.functors.NullIsTruePredicate_boolean_evaluate(T).e1","org.apache.commons.collections4.functors.NullIsTruePredicate_boolean_evaluate(T).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":["org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.AndPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":["org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.AndPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.AndPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.FalsePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.AndPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.AndPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.FalsePredicate.boolean evaluate(T)"]},"type":"graph"}]}]}