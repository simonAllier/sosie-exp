{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":40,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":83,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":26,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":92,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":104,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":12,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":86,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":52,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":108,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":38,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":61,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":95,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":75,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":107,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":67,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":0,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":50,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":113,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testToString":97,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":91,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":28,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":73,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":62,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":16,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":4,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":98,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":18,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":14,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":10,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":110,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":72,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":46,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":27},"transformations":[{"failures":[],"tindex":"0e32f5c8-2520-11e5-870c-87a673983740","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"0e331cd9-2520-11e5-870c-d9d67846b3fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0e331cda-2520-11e5-870c-4d8cca90b110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:437","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<E>.next()"},"status":-2},{"failures":[96],"tindex":"0e331cdb-2520-11e5-870c-d34c786c895e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1096","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.remove(int)"},"variableMap":{"parent":"list","currentIndex":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:219","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(int)"},"status":-1},{"failures":[97],"tindex":"0e331cdc-2520-11e5-870c-71ce928538fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl","sourcecode":"return \"Iterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:134","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) + \"=\") + org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getValue())"},"status":-1},{"failures":[98],"tindex":"0e3343ed-2520-11e5-870c-b1b771b003ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"0e3343ee-2520-11e5-870c-4f9fa876a37d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, 0)"},"status":-2},{"failures":[73],"tindex":"0e3343ef-2520-11e5-870c-5d4ab741f336","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0e3343f0-2520-11e5-870c-37adecc08fb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1146","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[99],"tindex":"0e3343f1-2520-11e5-870c-c379ebf281c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"Internal Error\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0e3343f2-2520-11e5-870c-e118993778a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:57","type":"CtLocalVariableImpl","sourcecode":"final K K = this.K"},"status":-2},{"failures":[],"tindex":"0e336b03-2520-11e5-870c-518e95af23a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.keySet())"},"status":-2},{"failures":[100],"tindex":"0e336b04-2520-11e5-870c-eb4ad7605d7e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0e336b05-2520-11e5-870c-258f69fc6cfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"variableMap":{"siblingNode":"node","currentNode":"rval","this":"this","dataElement":"data","rootNode":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[],"tindex":"0e339216-2520-11e5-870c-cf4c873853dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"this":"this","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.updateNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"0e339217-2520-11e5-870c-b17d80b9ef69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"0e339218-2520-11e5-870c-fd27ea3e613b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:367","type":"CtLocalVariableImpl","sourcecode":"final V V = java.util.Map.Entry<K, V>.getValue()"},"status":-2},{"failures":[115],"tindex":"0e339219-2520-11e5-870c-2f74b76c9d49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:452","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"size":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1349","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0e33921a-2520-11e5-870c-79b3169aba34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"cacheSize","bitIndex":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":0},{"failures":[],"tindex":"0e33b92b-2520-11e5-870c-01ba6774a69d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:639","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0e33921a-2520-11e5-870c-79b3169aba34","diffs":[{"nodes":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":["org.apache.commons.collections4.list.AbstractLinkedList$Node.void setValue(E)"]},"edges":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":["org.apache.commons.collections4.list.NodeCachingLinkedList.void addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node) -> org.apache.commons.collections4.list.AbstractLinkedList$Node.void setValue(E)","org.apache.commons.collections4.list.NodeCachingLinkedList.void shrinkCacheToMaximumSize() -> org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node getNodeFromCache()","org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E) -> org.apache.commons.collections4.list.AbstractLinkedList$Node.void setValue(E)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":["org.apache.commons.collections4.list.NodeCachingLinkedList_void_shrinkCacheToMaximumSize().l1","org.apache.commons.collections4.list.AbstractLinkedList$Node_void_setValue(E).b","org.apache.commons.collections4.list.NodeCachingLinkedList_org.apache.commons.collections4.list.AbstractLinkedList$Node_createNode(E).e1","org.apache.commons.collections4.list.NodeCachingLinkedList_org.apache.commons.collections4.list.AbstractLinkedList$Node_getNodeFromCache().e1","org.apache.commons.collections4.list.NodeCachingLinkedList_void_addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList$Node).e1"]},"type":"branch"}]}]}