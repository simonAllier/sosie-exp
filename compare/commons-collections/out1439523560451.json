{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":41,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testAdd":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":37,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":54,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":21,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":62,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":83,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":14,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":6,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":26,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":70,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":7,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":55,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":59,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":39,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":68,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":19,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":24,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":25,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":49,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":48,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":75,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":46},"transformations":[{"failures":[],"tindex":"0c2de644-4236-11e5-9f69-cff76939aa71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[0],"tindex":"0c2e0d55-4236-11e5-9f69-e34dab79022d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtInvocationImpl","sourcecode":"java.util.Collections.<K,V>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated()"},"status":-1},{"failures":[],"tindex":"0c2e0d56-4236-11e5-9f69-bbfec121612a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:189","type":"CtReturnImpl","sourcecode":"return (java.lang.System.identityHashCode(java.lang.Object)) ^ (java.lang.System.identityHashCode(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"0c2e3467-4236-11e5-9f69-816545753311","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:101","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0c2e3468-4236-11e5-9f69-afad69f3769d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:97","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.size()"},"status":-2},{"failures":[],"tindex":"0c2e3469-4236-11e5-9f69-09f74bae2999","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"0c2e346a-4236-11e5-9f69-d1f5edf34ace","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-1},{"failures":[14],"tindex":"0c2e346b-4236-11e5-9f69-b5d65a86df38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:148","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"end":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:274","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[15,16],"tindex":"0c2e346c-4236-11e5-9f69-81960711b907","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"0c2e346d-4236-11e5-9f69-cdd7d3985da6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[17],"tindex":"0c2e346e-4236-11e5-9f69-bd5c905f4af3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:157","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() method is not supported\")"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"0c2e5b7f-4236-11e5-9f69-9d569d26ab39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73],"tindex":"0c2e5b80-4236-11e5-9f69-c7e204c421a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:97","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[74],"tindex":"0c2e5b81-4236-11e5-9f69-c961e126f05d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:182","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"0c2e5b82-4236-11e5-9f69-b1d32b1f55b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:91","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated()"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:143","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<? extends E> = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(java.util.Collection<? extends E>)"},"status":-2},{"failures":[40,50,53,59,60],"tindex":"0c2e5b83-4236-11e5-9f69-f56aa0024e89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"0c2e8294-4236-11e5-9f69-f9c454d65201","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"0c2e8295-4236-11e5-9f69-4d5283fc3194","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","left":"current","h":"right","right":"current","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[75,76,77,78],"tindex":"0c2e8296-4236-11e5-9f69-9738d74b069e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:96","type":"CtReturnImpl","sourcecode":"return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"h","x":"h","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[79,80,81,82,83],"tindex":"0c2e8297-4236-11e5-9f69-9d646470afbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}