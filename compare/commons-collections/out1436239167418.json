{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":28,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":26,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":55,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":16,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":44,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":76,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":6,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":15,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":62,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":17,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":14,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":24,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":31,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":37,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":45,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":68,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":61,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":18,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":57,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":58,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":59,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":34,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":19,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":54,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":32,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":21,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":70,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":41,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":72,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":75,"org.apache.commons.collections4.CollectionUtilsTest.exists":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":23,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":56,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":39,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":74,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":50,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":66},"transformations":[{"failures":[0,1],"tindex":"f9619fb2-2456-11e5-9e03-4f6f659934f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:227","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Attempted to add null object to queue\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"f961c6c3-2456-11e5-9e03-0fb41dd0d891","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f961c6c4-2456-11e5-9e03-87fcbecc42f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:286","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.indexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f961c6c5-2456-11e5-9e03-37407f811314","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:306","type":"CtLocalVariableImpl","sourcecode":"final E E = E[][int]"},"status":-2},{"failures":[],"tindex":"f961c6c6-2456-11e5-9e03-a932c2aab84c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:88","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.ArrayList<E>.size()"},"status":-2},{"failures":[],"tindex":"f961c6c7-2456-11e5-9e03-3d1a54494206","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.MultiValueMap.<K,V>multiValueMap(java.util.Map<K, ? super java.util.Collection<V>>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:105","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.MultiValueMap<K, V>(java.util.Map<K, ? super C> , new org.apache.commons.collections4.map.MultiValueMap.ReflectionFactory<C>(java.lang.Class<C>))"},"status":-2},{"failures":[2],"tindex":"f961edd8-2456-11e5-9e03-39eaa33a16ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:50","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1},{"failures":[3,4,5,6,7,8,9,10],"tindex":"f961edd9-2456-11e5-9e03-07ffcc5ac76d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"lastUsedIterator":"currentIterator","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)"},"status":-1},{"failures":[11],"tindex":"f961edda-2456-11e5-9e03-8b4a281e5aef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"f961eddb-2456-11e5-9e03-718e10df6dc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:462","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"f961eddc-2456-11e5-9e03-d568657e1a82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:568","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":0},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"f96214ed-2456-11e5-9e03-bf189151c728","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":-1},{"failures":[],"tindex":"f96214ee-2456-11e5-9e03-b1dfcca2e121","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE":"org.apache.commons.collections4.functors.FalsePredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FalsePredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate"},"status":0},{"failures":[],"tindex":"f96214ef-2456-11e5-9e03-193d04965dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:637","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object)"},"variableMap":{"k":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:491","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[50,51,12,13,14,15,16,52,17,18,19,21,53,54,55,22,23,24,25,26,56,27,28],"tindex":"f96214f0-2456-11e5-9e03-3db8a257c3cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"f9623c01-2456-11e5-9e03-e57693254759","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:265","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f9623c02-2456-11e5-9e03-234949142767","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"hashIndex","index":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:517","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int)"},"status":-2},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"f9623c03-2456-11e5-9e03-a9045bcc8c71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"f9623c04-2456-11e5-9e03-a1d74bfe5b76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}"},"status":-2},{"failures":[76],"tindex":"f9623c05-2456-11e5-9e03-cba66ddab55c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1349","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f961eddc-2456-11e5-9e03-d568657e1a82","diffs":[{"nodes":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"]},"edges":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":[],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":[],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":[],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":[],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":[],"org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":[],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":[],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":[],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":[]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"]},"type":"branch"}]}]}