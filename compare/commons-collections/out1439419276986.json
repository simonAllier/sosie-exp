{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEmptyMapCompatibility":0,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":45,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEmptyMapCompatibility":3,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":38,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEmptyMapCompatibility":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":15,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":29,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":1,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":4},"transformations":[{"failures":[],"tindex":"3e65c7b1-4143-11e5-8343-4788336e2953","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)"},"variableMap":{"fromIndex":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:588","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> , int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"3e65eec2-4143-11e5-8343-8b8e5a248454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"3e65eec3-4143-11e5-8343-e92a0cb0a440","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"this","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"3e6615d4-4143-11e5-8343-11d58afcd642","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"from","rightChild":"from","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"3e663ce5-4143-11e5-8343-1d4e3a415174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:370","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"3e663ce6-4143-11e5-8343-a386fa84b6b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-1},{"failures":[22,23,24],"tindex":"3e663ce7-4143-11e5-8343-1f7864eee3f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3e663ce8-4143-11e5-8343-150304f085cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))"},"variableMap":{"closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:67","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchClosure<E>(org.apache.commons.collections4.Predicate<? super E>[] , org.apache.commons.collections4.Closure<? super E>[] , org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"3e6663f9-4143-11e5-8343-9b43bd5277af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:304","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"firstCachedNode","header":"firstCachedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":0},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"3e6663fa-4143-11e5-8343-2bf6d870b669","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"))"},"status":-1},{"failures":[],"tindex":"3e6663fb-4143-11e5-8343-2928453a13f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1359","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3e6663fc-4143-11e5-8343-471e31885d6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1388","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\")\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1393","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":0},{"failures":[45,46,46,47],"tindex":"3e668b0d-4143-11e5-8343-a9f2f8702820","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:87","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.Predicate<T>[])"},"status":-1},{"failures":[],"tindex":"3e668b0e-4143-11e5-8343-f3141ae93782","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:139","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.size()"},"status":-2},{"failures":[],"tindex":"3e668b0f-4143-11e5-8343-33c287ca4561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:141","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":-2},{"failures":[],"tindex":"3e668b10-4143-11e5-8343-9386c8acb81e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey()"},"status":0},{"failures":[],"tindex":"3e668b11-4143-11e5-8343-e12c2376cab0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:332","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<E> java.util.Set<E>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:130","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.TransformedBag<E>.getBag().uniqueSet()"},"status":-2},{"failures":[],"tindex":"3e66b222-4143-11e5-8343-e754407f07bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:260","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-2},{"failures":[],"tindex":"3e66b223-4143-11e5-8343-cdbb475f01a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:156","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int)"},"status":-2},{"failures":[48],"tindex":"3e66b224-4143-11e5-8343-3bbab82ff422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}