{"failureDictionary":{"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":68,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":52,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRetainAll":42,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":21,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":75,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":56,"org.apache.commons.collections4.CollectionUtilsTest.collect":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":53,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":37,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":44,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":50,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":13,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":20,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":28,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveAll":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":72,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":65,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":78,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":60,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":24,"org.apache.commons.collections4.CollectionUtilsTest.transform2":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":84,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":2,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":45},"transformations":[{"failures":[],"tindex":"fb3519e1-25f3-11e5-b984-9d7b638f3418","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[],"tindex":"fb3540f2-25f3-11e5-b984-8f0fd7fd04a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:345","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[0,1],"tindex":"fb3540f3-25f3-11e5-b984-4fa6634c8f23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[2,3,4,5],"tindex":"fb356804-25f3-11e5-b984-2fd19b636927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:290","type":"CtAssignmentImpl","sourcecode":"int = (31 * int) + (java.lang.Object == null ? 0 : java.lang.Object.hashCode())"},"variableMap":{"hashCode":"h","obj":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:229","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"fb356805-25f3-11e5-b984-cb8757d03936","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:81","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:201","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"fb356806-25f3-11e5-b984-19137f249e38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"nextIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[15],"tindex":"fb356807-25f3-11e5-b984-031b42d1ca18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[15,16,17,18],"tindex":"fb358f18-25f3-11e5-b984-07aaf307a590","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:138","type":"CtAssignmentImpl","sourcecode":"E[][int] = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[19,20,21,22,23,24],"tindex":"fb358f19-25f3-11e5-b984-abadeefd93b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object)"},"status":-1},{"failures":[25,26,27],"tindex":"fb358f1a-25f3-11e5-b984-491ac67f81b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1069","type":"CtInvocationImpl","sourcecode":"R.add(O)"},"status":-1},{"failures":[],"tindex":"fb358f1b-25f3-11e5-b984-0551fac4837e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"status":0},{"failures":[],"tindex":"fb358f1c-25f3-11e5-b984-65a0a74cce90","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:393","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"fb35b62d-25f3-11e5-b984-2daf701874fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)"},"variableMap":{"entry":"entry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)))"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"fb35b62e-25f3-11e5-b984-f34db2676043","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[],"tindex":"fb35b62f-25f3-11e5-b984-2101ed2f4435","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"fb35dd40-25f3-11e5-b984-a93695f3b7f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:276","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next())"},"variableMap":{"this":"this","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:347","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1)"},"status":-2},{"failures":[],"tindex":"fb35dd41-25f3-11e5-b984-61099760c388","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[72,73,74,75,76,77,78,55,56,57,61,59,60,62,79,63,64,65,66,80,81,82,83,84,71],"tindex":"fb35dd42-25f3-11e5-b984-c166935831fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"beginIndex1","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:69","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int))"},"status":-1},{"failures":[],"tindex":"fb35dd43-25f3-11e5-b984-778fa2321687","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"fb360454-25f3-11e5-b984-b76bff1197f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"fb358f1b-25f3-11e5-b984-0551fac4837e","diffs":[{"branches":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.functors.FalsePredicate_<T>_org.apache.commons.collections4.Predicate_falsePredicate().b","org.apache.commons.collections4.functors.AnyPredicate_org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[]).b","org.apache.commons.collections4.functors.AbstractQuantifierPredicate_org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[]).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.functors.AbstractQuantifierPredicate.org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.FalsePredicate.<T> org.apache.commons.collections4.Predicate falsePredicate()"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.FalsePredicate.<T> org.apache.commons.collections4.Predicate falsePredicate()"],"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.AbstractQuantifierPredicate.org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.FalsePredicate.<T> org.apache.commons.collections4.Predicate falsePredicate()","org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])"]},"type":"graph"}]}]}