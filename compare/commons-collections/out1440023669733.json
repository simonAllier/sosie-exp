{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":80,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":10,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":76,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":40,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":16,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":77,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":17,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":20,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":22,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":33,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":45,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":66,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":94,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":73,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":63,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":69,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":70,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":71,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":34,"org.apache.commons.collections4.map.LRUMapTest.testLRU":86,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":72,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":65,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":53,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testSelfReferenceHandling":81,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":5,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":68,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":88,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":31,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":15,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":38,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":2,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":12,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":87,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":93,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":89,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":78,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":35,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":9,"org.apache.commons.collections4.map.Flat3MapTest.testToString":11,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":82,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":92,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":52,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":6,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":24,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":37,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":8,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":49,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":46,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":62,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":29},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"748a534c-46c2-11e5-b49b-e3c2a81e1238","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"748a7a5d-46c2-11e5-b49b-79bfdbad332b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"left","current":"current","tree":"left","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:668","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"748a7a5e-46c2-11e5-b49b-dfe77c57f9cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"748aa16f-46c2-11e5-b49b-85ec55161905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:613","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[65,66],"tindex":"748aa170-46c2-11e5-b49b-4dff806a1152","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())"},"status":-1},{"failures":[],"tindex":"748aa171-46c2-11e5-b49b-9dfc90d5dec9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.BoundedCollection<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(org.apache.commons.collections4.BoundedCollection<? extends E>));\n    return org.apache.commons.collections4.BoundedCollection<E>;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(org.apache.commons.collections4.BoundedCollection<? extends E>)"},"status":-2},{"failures":[67,68],"tindex":"748aa172-46c2-11e5-b49b-896bf7ca05f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:133","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"748aa173-46c2-11e5-b49b-59e2fd9e9d57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"748ac784-46c2-11e5-b49b-25b9fda61dbf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:871","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().mapIterator()"},"status":-2},{"failures":[81],"tindex":"748ac785-46c2-11e5-b49b-f9b00871b153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:348","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:99","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\")"},"status":-1},{"failures":[],"tindex":"748ac786-46c2-11e5-b49b-81a8936375ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1279","type":"CtReturnImpl","sourcecode":"return java.util.Enumeration<?>.nextElement()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"status":0},{"failures":[82,83,84],"tindex":"748ac787-46c2-11e5-b49b-0f71727d2927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":-1},{"failures":[],"tindex":"748ac788-46c2-11e5-b49b-cf77a5d4ed5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:197","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"variableMap":{"start1":"hashCode","x":"length","k":"hashCode","start2":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:604","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[],"tindex":"748ac789-46c2-11e5-b49b-198ac301d25b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"748aee9a-46c2-11e5-b49b-5d54884e2730","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[85,86,87,88,89,90,91,92,93],"tindex":"748aee9b-46c2-11e5-b49b-27707d9082e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:321","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V)"},"status":-1},{"failures":[],"tindex":"748aee9c-46c2-11e5-b49b-03b1c5bec2a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:229","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[94],"tindex":"748aee9d-46c2-11e5-b49b-ebd74ea337ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"status":-1},{"failures":[],"tindex":"748aee9e-46c2-11e5-b49b-3b5c80a9df72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"entry":"child","predecessor":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:770","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"748b15af-46c2-11e5-b49b-010fd18af4a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:123","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}