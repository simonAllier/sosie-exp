{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":167,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":18,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":204,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":178,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":5,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":87,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":117,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":149,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":142,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":115,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":64},"transformations":[{"failures":[],"tindex":"f5ce3ae7-2413-11e5-83fa-73a693d398b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1314","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f5ce61f8-2413-11e5-83fa-9d38f7f085bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"f5ce61f9-2413-11e5-83fa-0723f4a7d948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f5ce61fa-2413-11e5-83fa-a38981fe1e45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:86","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.ListOrderedSet<E>(java.util.Set<E> , java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"f5ce61fb-2413-11e5-83fa-ddd66ed9718b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f5ce61fc-2413-11e5-83fa-9da3450cc42d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(java.lang.Object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)"},"status":-2},{"failures":[],"tindex":"f5ce61fd-2413-11e5-83fa-6975ae8944e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]))"},"status":-2},{"failures":[],"tindex":"f5ce61fe-2413-11e5-83fa-9dbf2d30266c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:126","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"f5ce890f-2413-11e5-83fa-291bd3dc2ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1194","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"last":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:285","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"f5ce8910-2413-11e5-83fa-25a260abffd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:601","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object = null"},"status":0},{"failures":[],"tindex":"f5ce8911-2413-11e5-83fa-9d2e9f963d68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().getKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f5ce8912-2413-11e5-83fa-abfdc928268b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:345","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.List<E>.remove(int)"},"status":-2},{"failures":[],"tindex":"f5ce8913-2413-11e5-83fa-bdb36a20caed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:76","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"f5ce8914-2413-11e5-83fa-b5f5d05b8fd6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"f5ceb025-2413-11e5-83fa-539f31795e88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:598","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.getKey())"},"variableMap":{"n":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:303","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V"},"status":-1},{"failures":[125,126,127,128,129,130,131,132],"tindex":"f5ced736-2413-11e5-83fa-038046bcf0c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1121","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:96","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"tindex":"f5ced737-2413-11e5-83fa-b520f7ea08ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"index","index":"size","beyond":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"f5ced738-2413-11e5-83fa-413cb73d96d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:140","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>()"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"f5ced739-2413-11e5-83fa-e53c1bb36cf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:525","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":-1},{"failures":[],"tindex":"f5cefe4a-2413-11e5-83fa-43cec594acf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:371","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f5ce8910-2413-11e5-83fa-25a260abffd3","diffs":[{"variables":{"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]}]}