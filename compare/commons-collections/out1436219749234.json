{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":125,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains3":149,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":197,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":35,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":36,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":184,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":176,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":151,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":20,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":198,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":59,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":72,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":5,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":178,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":150,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":16,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":13,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":162,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":56,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":177,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":160,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":73,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":129,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":106,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":118,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":34,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":161,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":136,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":42,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":115,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnmodifiable":9,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":92,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":46,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":58,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":121,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":117,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":47,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":112,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":156,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":111,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":165,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":116,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":130,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":86,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":91,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":166,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":33,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":89,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":24,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":169,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":60,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueCompatibility":10,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":44,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":77,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":30,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":74,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalEmptyCollectionExists":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":78,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":22,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":194,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":114,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":193,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":23,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":171,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":127,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":190,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":110,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":192,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":191,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":70,"org.apache.commons.collections4.CollectionUtilsTest.isFull":195,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":37,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":143,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsContract":31,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":49,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":2,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":38,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":189,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":55,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":138,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":187,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":88,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":120,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":94,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":175,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":147,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":167,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":85,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":123,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":179,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":141,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":96,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":196,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":80,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCanonicalFullCollectionExists":27,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":14,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":7,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":113,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":95,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":158,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":50,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":144,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":17,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":64,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":103,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":126,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":131,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":41,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":182,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":39,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":40,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":11,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":157,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":65,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":57,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToString":18,"org.apache.commons.collections4.list.TreeListTest.testListEquals":163,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":69,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":62,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":119,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":26,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":67,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":63,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":148,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":173,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":168,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectHashCodeEqualsSelfHashCode":32,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":43,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":104,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":19,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":108,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":15,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":6,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":99,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":66,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":135,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":152,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":172,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":155,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":8,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":81,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":12},"transformations":[{"failures":[],"tindex":"cc2ba714-2429-11e5-9786-1d613f50ae2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"status":-1},{"failures":[0,1],"tindex":"cc406795-2429-11e5-9786-65ff1c4556c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[2,3,4,5,6],"tindex":"cc487de6-2429-11e5-9786-453d6bd5cbb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"variableMap":{"nextIterator":"currentIterator","chainExhausted":"chainExhausted","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"cc509437-2429-11e5-9786-f5ce19288057","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.QueueUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(java.util.Queue<? extends E>)"},"variableMap":{"queue":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(java.util.Queue<? extends E>)"},"status":-1},{"failures":[],"tindex":"cc602498-2429-11e5-9786-5719b0d2875f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"cc688909-2429-11e5-9786-73757b5bf0a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:179","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"status":-2},{"failures":[],"tindex":"cc7d97aa-2429-11e5-9786-512287934876","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"newNode","currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[37,38,39,40,41],"tindex":"cc84eaab-2429-11e5-9786-b59eccba251f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"cc90354c-2429-11e5-9786-734c30a5eab7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtIfImpl","sourcecode":"if (java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cc97fd7d-2429-11e5-9786-d32b402f6db8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(org.apache.commons.collections4.Bag<? extends E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"ccad5a3e-2429-11e5-9786-5390fff5d3cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:187","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map<K, V>.(size()) == 0"},"status":-1},{"failures":[54,55,56,57,58,59,20,60,61,62,63,64,65,66,67,68,69,37,70,71,72,73,74,75,76,77,38,78,39,79,80,81,82,83,84,85,86,40,87,88,89,41,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"ccb5979f-2429-11e5-9786-cd3bf1709a65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:124","type":"CtReturnImpl","sourcecode":"return ((this) == java.lang.Object) || ((null != java.lang.Object) && (java.lang.Object.getClass().equals(java.lang.Object.getClass())))"},"variableMap":{"this":"object","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"ccbd11b0-2429-11e5-9786-99b1c84c481c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"parent","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"ccc9e2f1-2429-11e5-9786-c7e482d439ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? org.apache.commons.collections4.list.TreeList.AVLNode<E> : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E>, int)"},"status":-1},{"failures":[190,191,192,193,194,195,196],"tindex":"ccd072a2-2429-11e5-9786-8bb5993e0914","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[197],"tindex":"cced7083-2429-11e5-9786-47de4b8db4c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:327","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:220","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-1},{"failures":[],"tindex":"ccf18f34-2429-11e5-9786-2fc2e7d2b6dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:434","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"cd12d2d5-2429-11e5-9786-0394685528f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:515","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"cd15b906-2429-11e5-9786-077442b97b67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"status":-2},{"failures":[198],"tindex":"cd15b907-2429-11e5-9786-8bdc6508a60d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:266","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"cd12d2d5-2429-11e5-9786-0394685528f0","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_(modCount)++","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"}]}]}