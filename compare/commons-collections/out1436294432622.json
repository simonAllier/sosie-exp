{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":60,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":140,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":142,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":85,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":100,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":0,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":42,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":205,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":193,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":57,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":24,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":174,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":159,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":127,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":139,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":172,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":152,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":178,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":112,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":215,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":29,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":188,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":44,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":66,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":216,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":75,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":153,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":73,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":45,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":196,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":31,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":177,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":78,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":54,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":131,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":86,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":180,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":162,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":92,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":136,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":98,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":72,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":80,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":77,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":179,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":191,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":53,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":144,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":108,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":34,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":3,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":91,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":211,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":154,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":94,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":20,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":96,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":195,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":119,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":70,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":39,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":105,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":149,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":35,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":59,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":199,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":133,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":123,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":125,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":165,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":56,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":173,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":151,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":145,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":15,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":19,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":37,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":146,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":11,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":36,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":171,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":182,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":138,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":134,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":27,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":110,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":135,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":207,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":176,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":65,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":52,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":83,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":117,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":201,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":122,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":210,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":206,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":204,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":109,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":4,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":18,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":189,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":186},"transformations":[{"failures":[],"tindex":"a60852dd-24d7-11e5-a3f5-d94aeb49fc00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:127","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"result":"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"a608c80e-24d7-11e5-a3f5-87a3fa1a0ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag().first()"},"status":-1},{"failures":[11,12,13,14,15,10,16,17,18,19,20],"tindex":"a608c80f-24d7-11e5-a3f5-9b214b9ebb6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:477","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"a608ef20-24d7-11e5-a3f5-f9aba2cb92e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1058","type":"CtAssignmentImpl","sourcecode":"int = (int)++"},"variableMap":{"nextIndex":"i","currentIndex":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"status":-2},{"failures":[],"tindex":"a6091631-24d7-11e5-a3f5-939d386a5308","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:72","type":"CtLocalVariableImpl","sourcecode":"final V V = this.V"},"status":-2},{"failures":[],"tindex":"a6091632-24d7-11e5-a3f5-0530ceabccc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:111","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<K>.hasNext() ? java.util.Iterator<K>.next() : null"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:158","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<K>.next()"},"status":-2},{"failures":[],"tindex":"a6093d43-24d7-11e5-a3f5-457d4b1d54ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"variableMap":{"start":"length","maxElements":"length","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:302","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[],"tindex":"a6096454-24d7-11e5-a3f5-2352453fefc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:119","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"a6096455-24d7-11e5-a3f5-59d2eb0d33d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"size","start":"size","end":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:511","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[65],"tindex":"a6098b66-24d7-11e5-a3f5-79128e03e330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[],"tindex":"a609b277-24d7-11e5-a3f5-892e65a7095f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"j","lastItemIndex":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1446","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":0},{"failures":[],"tindex":"a609d988-24d7-11e5-a3f5-094eb62eb321","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"variableMap":{"endIndex2":"start","endIndex1":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:144","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"a609d989-24d7-11e5-a3f5-ef85ce861638","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:87","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode())"},"status":-2},{"failures":[],"tindex":"a60a009a-24d7-11e5-a3f5-1136526398f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"a60a27ab-24d7-11e5-a3f5-abb3719980e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtIfImpl","sourcecode":"if (java.util.SortedMap<K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.SortedMap<K, ? extends V>));\n    return java.util.SortedMap<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:66","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(java.util.SortedMap<K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"a60a27ac-24d7-11e5-a3f5-2f5d09c33e10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:599","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"status":-2},{"failures":[],"tindex":"a60a4ebd-24d7-11e5-a3f5-4d6c4e9e5c42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"a60a75ce-24d7-11e5-a3f5-5da5fa51a6a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,12,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,13,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,14,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,1,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,16,187,188,189,190,191,192,193,17,194,195,196,19,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"a60a9cdf-24d7-11e5-a3f5-c31bc14ddbe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:260","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int"},"status":-1},{"failures":[68],"tindex":"a60ac3f0-24d7-11e5-a3f5-53d900409051","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:621","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n    if (O.equals(java.lang.Object)) {\n        int++;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a60a4ebd-24d7-11e5-a3f5-4d6c4e9e5c42","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"type":"graph"}]}]}