{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":37,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":41,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":27,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":19,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":22,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":23,"org.apache.commons.collections4.map.LRUMapTest.testLRU":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":20,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":49,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":40,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":47,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":15,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":9,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":44},"transformations":[{"failures":[],"tindex":"5faab9ee-24db-11e5-8f32-63052d43af3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:305","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5faae0ff-24db-11e5-8f32-af8b555fccff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"variableMap":{"predicate":"predicate","trueClosure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.IfClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"5faae100-24db-11e5-8f32-897a2aadf6f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"5faae101-24db-11e5-8f32-874c03318f95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AndPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"5faae102-24db-11e5-8f32-8bb1d83061c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:157","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"5faae103-24db-11e5-8f32-73844f9f51a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:113","type":"CtReturnImpl","sourcecode":"return this.E[][this.int]"},"variableMap":{"array":"array","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:136","type":"CtReturnImpl","sourcecode":"return ((E)(java.lang.reflect.Array.get(this.java.lang.Object, (this.int)++)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"5faae104-24db-11e5-8f32-f13c1fe8040a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"outputStream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:603","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.list.AbstractLinkedList<E>.size())"},"status":-1},{"failures":[11,12],"tindex":"5fab0815-24db-11e5-8f32-f152ace130b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AndPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"5fab0816-24db-11e5-8f32-219888932b41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1376","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V))"},"status":0},{"failures":[],"tindex":"5fab0817-24db-11e5-8f32-8fce0e3f0253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:261","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"5fab0818-24db-11e5-8f32-d7355dfffeb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:302","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[13],"tindex":"5fab0819-24db-11e5-8f32-85d010a96ed8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:423","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"5fab081a-24db-11e5-8f32-6fe4b6e7cac6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:515","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"status":0},{"failures":[],"tindex":"5fab2f2b-24db-11e5-8f32-71cf7b81b26a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.Predicate))"},"status":-2},{"failures":[],"tindex":"5fab2f2c-24db-11e5-8f32-57cb9621e485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"5fab2f2d-24db-11e5-8f32-33d57b563fae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"5fab2f2e-24db-11e5-8f32-25e0934cff24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:493","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List<E>)"},"variableMap":{"list":"superSubList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:318","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.unmodifiableList(new org.apache.commons.collections4.list.SetUniqueList<E>(java.util.List<E> , java.util.Set<E>))"},"status":-2},{"failures":[],"tindex":"5fab2f2f-24db-11e5-8f32-21c12d56f4e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.TransformedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"status":-2},{"failures":[],"tindex":"5fab5640-24db-11e5-8f32-cb66c75563ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex","otherOffsetInBits":"bitIndex","otherLengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"5fab5641-24db-11e5-8f32-a33f012845e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"modified","removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"5fab0816-24db-11e5-8f32-219888932b41","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.Flat3Map.V put(K,V)_delegateMap.put(key, value)"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.MultiKey.java.lang.String toString()"]},"type":"graph"}]},{"transformation":"5fab081a-24db-11e5-8f32-6fe4b6e7cac6","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doPut(K,V) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void modify()"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doPut(K,V) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void modify()"]},"type":"graph"}]},{"transformation":"5fab2f2c-24db-11e5-8f32-57cb9621e485","diffs":[{"branches":{"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator_org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":["org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)"]},"edges":{"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator()"]},"type":"graph"}]}]}