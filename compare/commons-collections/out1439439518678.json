{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":59,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":90,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":2,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":105,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":189,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":191,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":157,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":139,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":154,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":107,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":40,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":102,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":10,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":61,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":82,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":173,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":12,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":13,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":51,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":117,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":108,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":41,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":62,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":172,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":22,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":141,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":138,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":165,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":150,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":144,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsSelfHashCode":164,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":54,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":52,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":24,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":17,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":171,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsSelfHashCode":197,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":166,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":162,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":186,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":193,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":28,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":97,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":96,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":43,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":114,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":180,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":152,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":38,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":88,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":118,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":58,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":160,"org.apache.commons.collections4.map.LRUMapTest.testLRU":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":168,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":156,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":70,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":57},"transformations":[{"failures":[],"tindex":"5f610956-4172-11e5-a2c7-dbf39ed6d365","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"status":-2},{"failures":[0,1],"tindex":"5f610957-4172-11e5-a2c7-79cb6580a010","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"5f613068-4172-11e5-a2c7-91688d97151d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key4","entryValue":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:535","type":"CtReturnImpl","sourcecode":"return (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 4) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,0,1,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"5f613069-4172-11e5-a2c7-d9cd267fcdb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[14],"tindex":"5f61306a-4172-11e5-a2c7-f9fb73d349e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[],"tindex":"5f61577b-4172-11e5-a2c7-bffd659aad27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:196","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.previousIndex()"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:78","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.nextIndex()"},"status":-2},{"failures":[],"tindex":"5f61577c-4172-11e5-a2c7-fde2375b4804","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:124","type":"CtReturnImpl","sourcecode":"return ((this) == java.lang.Object) || ((null != java.lang.Object) && (java.lang.Object.getClass().equals(java.lang.Object.getClass())))"},"status":-2},{"failures":[],"tindex":"5f61577d-4172-11e5-a2c7-dd47135e2ee6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"status":0},{"failures":[143],"tindex":"5f61577e-4172-11e5-a2c7-1f1d05e4e2dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"LRUMap max size must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-1},{"failures":[],"tindex":"5f61577f-4172-11e5-a2c7-ade36007145c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"rightChild","dataElement":"dataElement","child":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[144,145],"tindex":"5f615780-4172-11e5-a2c7-ef99a04a2c41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:348","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\")"},"status":-1},{"failures":[],"tindex":"5f617d91-4172-11e5-a2c7-375dcb65bc58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"this":"this","nodeToInsert":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"5f617d92-4172-11e5-a2c7-f3eba20dc937","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>)"},"status":-2},{"failures":[],"tindex":"5f617d93-4172-11e5-a2c7-f18843b0b97c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>"},"status":-2},{"failures":[],"tindex":"5f617d94-4172-11e5-a2c7-4749bab26a88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:365","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"5f617d95-4172-11e5-a2c7-796c89183af7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:102","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet(java.util.Set<E> , java.lang.Object)"},"status":-2},{"failures":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"5f617d96-4172-11e5-a2c7-d110d2b1d5c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:612","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"status":-1},{"failures":[],"tindex":"5f617d97-4172-11e5-a2c7-2fa5ef121d8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"5f61a4a8-4172-11e5-a2c7-53fc788da58a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key3","previous":"entry","hashCode":"hashCode","key3":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}