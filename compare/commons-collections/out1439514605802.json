{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":28,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":121,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":120,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":17,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":96,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":78,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEmptyMapCompatibility":58,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":105,"org.apache.commons.collections4.SetUtilsTest.testEquals":133,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":0,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":54,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":90,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":115,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":119,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":45,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":46,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":39,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":47,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":73,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":72,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":127,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":3,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":61,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":59,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":113,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":114,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":130,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":107,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":56,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":48,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":106,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":18,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":42,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":91,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":29,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":38,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":50,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":62,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":131,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":87,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":110,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":52,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":93,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":10,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":25,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":117,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":83,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":126,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":15,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":68,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":116,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":14,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":16,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":6,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":20,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":97,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":77,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":66,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":99,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":132,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":129,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":79,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":64,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":21,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":70,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":85,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":101,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":118,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":128,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":4,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":34,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":103,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":35,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":125,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":36,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":94,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":65,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":95,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":12,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":23,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":49,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":55,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":122,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":86,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":123,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":24,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":37,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":112,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":109,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":98,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":33,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":1},"transformations":[{"failures":[],"tindex":"32cc1f1a-4221-11e5-9de8-e9caf397f0ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:501","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.size())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"32cc462b-4221-11e5-9de8-778e235cb6ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"32cc462c-4221-11e5-9de8-97c4f9fc1a88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[54,55,56,57],"tindex":"32cc6d3d-4221-11e5-9de8-150e97d5e8e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"32cc6d3e-4221-11e5-9de8-811d2190c00c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:466","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"32cc6d3f-4221-11e5-9de8-4fdfac57a053","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:169","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"32cc6d40-4221-11e5-9de8-5dc2d337a8c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:169","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"32cc9351-4221-11e5-9de8-2b799d9cd18b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"32cc9352-4221-11e5-9de8-73f0a135f7e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":-2},{"failures":[58,59,60,61],"tindex":"32cc9353-4221-11e5-9de8-bf341bba5dc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-1},{"failures":[],"tindex":"32cc9354-4221-11e5-9de8-17dcdc062cd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:222","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"32cc9355-4221-11e5-9de8-a5caa14a0144","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[62],"tindex":"32ccba66-4221-11e5-9de8-5576c7e085f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4,22,23,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"32cce177-4221-11e5-9de8-0b0cb6fa48a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"32cce178-4221-11e5-9de8-8b4d879cb140","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[133],"tindex":"32cce179-4221-11e5-9de8-bb7bc0b7cc12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"set2","list2":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"32cce17a-4221-11e5-9de8-6f0a7d5f8381","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-2},{"failures":[],"tindex":"32cce17b-4221-11e5-9de8-9175e1b01251","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:249","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object)"},"variableMap":{"name":"name","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:249","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object)"},"status":0},{"failures":[],"tindex":"32cd088c-4221-11e5-9de8-779cbeae4241","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"nextIndex":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:559","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"32cd088d-4221-11e5-9de8-5f0f84bbf120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"myCount","index":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}