{"failureDictionary":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":18,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":27,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":24,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":3,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":28,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":15,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":41,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":8,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":14,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":4,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":35,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":29,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":34,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":38,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":40,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":16},"transformations":[{"failures":[],"tindex":"bd26d197-2505-11e5-8598-17950cbbb341","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TrieUtils:45","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie<K, ? extends V>)"},"variableMap":{"trie":"trie"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(org.apache.commons.collections4.Trie<K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"bd26f8a8-2505-11e5-8598-196f8bd7dd8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"bd26f8a9-2505-11e5-8598-abf4e7a878b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"bd271fba-2505-11e5-8598-093a5c00b71d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()"},"status":-2},{"failures":[],"tindex":"bd271fbb-2505-11e5-8598-2b74d569ce29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:271","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[24,25,26],"tindex":"bd271fbc-2505-11e5-8598-6f6dd0683782","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:112","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36],"tindex":"bd271fbd-2505-11e5-8598-1f48051cde77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"bd2746ce-2505-11e5-8598-35ecfbc7b1d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"bd2746cf-2505-11e5-8598-dff1c1c66fb7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"bd2746d0-2505-11e5-8598-536ced4264fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:668","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.bidimap.AbstractDualBidiMap.MapEntry.this.getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:57","type":"CtLocalVariableImpl","sourcecode":"final K K = this.K"},"status":-2},{"failures":[],"tindex":"bd276de1-2505-11e5-8598-11ff9e03bba4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 2"},"variableMap":{"modCount":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:559","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[37,38],"tindex":"bd276de2-2505-11e5-8598-6bb0d44ff577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:353","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyMapIterator:35","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-1},{"failures":[],"tindex":"bd276de3-2505-11e5-8598-a38d88a4e040","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":0},{"failures":[],"tindex":"bd276de4-2505-11e5-8598-3dceab99cb54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:302","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"link":"after","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:128","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[39],"tindex":"bd276de5-2505-11e5-8598-db5f862d50b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:390","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[40,41],"tindex":"bd276de6-2505-11e5-8598-3577fecca6d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"bd2794f7-2505-11e5-8598-13eacd4a169c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"bd2794f8-2505-11e5-8598-a5d9d04dcba3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.ChainedClosure<E>.this(true, org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[],"tindex":"bd2794f9-2505-11e5-8598-c348b7e1c110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:277","type":"CtAssignmentImpl","sourcecode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this)"},"variableMap":{"values":"valuesSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:395","type":"CtAssignmentImpl","sourcecode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"bd2794fa-2505-11e5-8598-3f675a972945","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"bd2794f7-2505-11e5-8598-13eacd4a169c","diffs":[{"branches":{"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractMapDecorator_int_size().b","org.apache.commons.collections4.map.AbstractMapDecorator_V_get(java.lang.Object).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractMapDecorator.V get(java.lang.Object)","org.apache.commons.collections4.map.AbstractMapDecorator.int size()"]},"edges":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":["org.apache.commons.collections4.map.AbstractMapDecorator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Map decorated()"],"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractMapDecorator.int size() -> org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Map decorated()","org.apache.commons.collections4.map.AbstractMapDecorator.V get(java.lang.Object) -> org.apache.commons.collections4.map.AbstractMapDecorator.V get(java.lang.Object)","org.apache.commons.collections4.map.AbstractMapDecorator.V get(java.lang.Object) -> org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Map decorated()","org.apache.commons.collections4.map.AbstractMapDecorator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Map decorated()","org.apache.commons.collections4.map.AbstractMapDecorator.int size() -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractMapDecorator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractMapDecorator.V get(java.lang.Object)","org.apache.commons.collections4.map.AbstractMapDecorator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()"]},"type":"graph"}]}]}