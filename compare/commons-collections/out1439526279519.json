{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":70,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":79,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":96,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":106,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":123,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":10,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":107,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":12,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":71,"org.apache.commons.collections4.CollectionUtilsTest.reverse":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":65,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":121,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":17,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":16,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":117,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":46,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":118,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":68,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":99,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":61,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":4,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":28,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":81,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":7,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":87,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":105,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":21,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":57,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":119,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":56,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":109,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":59,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":30,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":43,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":97,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":8,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":31,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":122,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":120,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":24,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":3,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":0,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":29,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":114,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":6,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":66,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":58,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":83,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":108,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":112},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"60dfaa88-423c-11e5-8a1b-3f2b16fd0e2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:366","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[34,35,36,37,38,39],"tindex":"60dfd199-423c-11e5-8a1b-111732e94297","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[40],"tindex":"60dfd19a-423c-11e5-8a1b-6b5518bfbfd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:349","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[])"},"status":-1},{"failures":[41],"tindex":"60dff8ab-423c-11e5-8a1b-ad7bd1f1420a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1442","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"60dff8ac-423c-11e5-8a1b-a71ab2d5efe0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"60e01fbd-423c-11e5-8a1b-a7e1613a44de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated().isFull()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:133","type":"CtReturnImpl","sourcecode":"return int != org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(size())"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"60e01fbe-423c-11e5-8a1b-55c31611dc89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"60e01fbf-423c-11e5-8a1b-2346360c89c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl","sourcecode":"return new java.util.HashSet<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:308","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<K, V>>"},"status":-2},{"failures":[],"tindex":"60e046d0-423c-11e5-8a1b-059f5138ff1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:115","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"60e046d1-423c-11e5-8a1b-a5eb81fa973e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1170","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"60e046d2-423c-11e5-8a1b-a1d9208ef137","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"60e046d3-423c-11e5-8a1b-4530095a78cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[112,113,114,115,116],"tindex":"60e046d4-423c-11e5-8a1b-3f301ddb8860","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\")"},"status":-1},{"failures":[],"tindex":"60e046d5-423c-11e5-8a1b-2b8601f207bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"60e06de6-423c-11e5-8a1b-09de4e49c9db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof org.apache.commons.collections4.Bag<?>) {\n    return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O);\n} "},"status":0},{"failures":[117,118,119],"tindex":"60e06de7-423c-11e5-8a1b-4b0e5fef2ccf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[120],"tindex":"60e06de8-423c-11e5-8a1b-8b2982de8159","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-1},{"failures":[],"tindex":"60e06de9-423c-11e5-8a1b-032558131c60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:495","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int = int"},"status":-2},{"failures":[121,122,123,124,125],"tindex":"60e06dea-423c-11e5-8a1b-31bb2e824ddb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:239","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[],"tindex":"60e06deb-423c-11e5-8a1b-035aa9123826","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}