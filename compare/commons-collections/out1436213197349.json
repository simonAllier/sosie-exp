{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":20,"org.apache.commons.collections4.TransformerUtilsTest.testConstantTransformer":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":87,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":19,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":72,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":11},"transformations":[{"failures":[],"tindex":"82031e27-241a-11e5-af8a-43cb8246e161","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:751","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"82034538-241a-11e5-af8a-fd4d5232fa73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.listIterator()"},"status":-2},{"failures":[0],"tindex":"82034539-241a-11e5-af8a-a9f4ca1e740c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:66","type":"CtIfImpl","sourcecode":"if (O == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer<I, O>.org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer();\n} "},"status":-1},{"failures":[],"tindex":"8203453a-241a-11e5-af8a-dd45ea78c96e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AndPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[1],"tindex":"82036c4b-241a-11e5-af8a-4bc6cb0075bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1291","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-1},{"failures":[],"tindex":"82036c4c-241a-11e5-af8a-2d932c5ee428","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"variableMap":{"sum":"otherOffsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:67","type":"CtLocalVariableImpl","sourcecode":"final int int = int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":-2},{"failures":[],"tindex":"82036c4d-241a-11e5-af8a-f3c3eb491299","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"setOrder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:184","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":-2},{"failures":[],"tindex":"82036c4e-241a-11e5-af8a-bd011f101cc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1046","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int, float)"},"status":0},{"failures":[],"tindex":"82036c4f-241a-11e5-af8a-013fd6bd3aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"82036c50-241a-11e5-af8a-530db75a0a80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:52","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedClosure<E>(org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[],"tindex":"82036c51-241a-11e5-af8a-a1156b6c0367","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"lineageIndex","buckets":"childValue","length":"lineageIndex","locks":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"82039362-241a-11e5-af8a-4dd35691e448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:149","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":-2},{"failures":[],"tindex":"82039363-241a-11e5-af8a-b503b124f6d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FalsePredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.FalsePredicate.INSTANCE":"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"82039364-241a-11e5-af8a-d35dfe451558","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:298","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"82039365-241a-11e5-af8a-41cf4a28e137","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:51","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.PredicateTransformer<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"82039366-241a-11e5-af8a-9925d104ae76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"82039367-241a-11e5-af8a-0bd8ff5ad514","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:318","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"8203ba78-241a-11e5-af8a-3ba46f5b83cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:84","type":"CtReturnImpl","sourcecode":"return java.util.Map<? super I, ? extends O>"},"variableMap":{"iMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:68","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"8203ba79-241a-11e5-af8a-f3e157e1f210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"8203ba7a-241a-11e5-af8a-a35b98733f47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"8203ba7a-241a-11e5-af8a-a35b98733f47","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator)":["org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator) -> org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator)","org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator) -> org.apache.commons.collections4.iterators.CollatingIterator.void checkNotStarted()"]},"graph":"branch"}]},{"transformation":"8203ba79-241a-11e5-af8a-f3e157e1f210","diffs":[{"nodes":{"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"]},"edges":{"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":[],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object)":["org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractSortedBagDecorator.org.apache.commons.collections4.SortedBag decorated()"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":[],"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.PredicatedBag.org.apache.commons.collections4.Bag decorated()","org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_org.apache.commons.collections4.Bag_getBag().b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractBagDecorator_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.PredicatedBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_org.apache.commons.collections4.Bag_getBag().b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"]},"type":"branch"}]},{"transformation":"82036c4e-241a-11e5-af8a-bd011f101cc5","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.AbstractReferenceMap.void doReadObject(java.io.ObjectInputStream)":["org.apache.commons.collections4.map.AbstractReferenceMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"graph":"branch"}]}]}