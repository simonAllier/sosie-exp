{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":2,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":56,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":49,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":50,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":48},"transformations":[{"failures":[],"tindex":"64588d88-25c8-11e5-b02b-15b4e5b4c7fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1284","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"status":-2},{"failures":[],"tindex":"6458b499-25c8-11e5-b02b-0108056b5938","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"6458b49a-25c8-11e5-b02b-db5438cbb098","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:549","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"entry":"entry","data":"data","hashIndex":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:584","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"6458b49b-25c8-11e5-b02b-b552a8be0b3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:666","type":"CtInvocationImpl","sourcecode":"C.execute(T)"},"status":-2},{"failures":[],"tindex":"6458b49c-25c8-11e5-b02b-3fc9c9698822","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"right","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"6458dbad-25c8-11e5-b02b-5144531bae4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()"},"status":-2},{"failures":[],"tindex":"6458dbae-25c8-11e5-b02b-cd7c66d018bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"6458dbaf-25c8-11e5-b02b-ef025ac19b66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:231","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"6458dbb0-25c8-11e5-b02b-b1dacac03533","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:824","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"6458dbb1-25c8-11e5-b02b-77d209d481c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"645902c2-25c8-11e5-b02b-ad94e3e3636b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"645902c3-25c8-11e5-b02b-9d927accab2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:378","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = new org.apache.commons.collections4.bag.HashBag<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:61","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>))"},"status":-2},{"failures":[43,32,34,44,45,46,47,48],"tindex":"645929d4-25c8-11e5-b02b-e30cf070c9b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"status":-1},{"failures":[],"tindex":"645929d5-25c8-11e5-b02b-31cc4cd9a467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"645929d6-25c8-11e5-b02b-631a4e18c0b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()"},"status":-1},{"failures":[61,62,63,64,65],"tindex":"645929d7-25c8-11e5-b02b-97230f719679","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.addIterator(java.util.Iterator<? extends E>)"},"status":-1},{"failures":[],"tindex":"645929d8-25c8-11e5-b02b-0dd50de5ddc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:591","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<E>.next()"},"status":-2},{"failures":[],"tindex":"645929d9-25c8-11e5-b02b-3f3a89b1ac94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"status":-2},{"failures":[],"tindex":"645950ea-25c8-11e5-b02b-43d83afaf056","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()"},"status":0},{"failures":[],"tindex":"645950eb-25c8-11e5-b02b-cbc942f6b927","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"645950ea-25c8-11e5-b02b-43d83afaf056","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":["org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.int hashCode() -> org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.int hashCode()","org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.int hashCode() -> org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.java.util.Map decorated()"]},"type":"graph"}]}]}