{"failureDictionary":{"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":8,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":9,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":38,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":10,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":28,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":16,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testToString":42,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":37,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":36,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testToString":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":30,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":6,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":25,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":15,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":33,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":11,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":39,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":26,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":23,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":1},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"e524b599-2e69-11e5-88e2-01c833028b2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:174","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.hashCode()"},"status":-1},{"failures":[],"tindex":"e52578ea-2e69-11e5-88e2-bb2f9f92e245","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:209","type":"CtReturnImpl","sourcecode":"return java.util.Collection<T> == null ? org.apache.commons.collections4.CollectionUtils.java.util.Collection : java.util.Collection<T>"},"status":-2},{"failures":[],"tindex":"e5259ffb-2e69-11e5-88e2-1349b8220e02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:157","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.bitIndex(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)"},"status":-2},{"failures":[],"tindex":"e5259ffc-2e69-11e5-88e2-132a0fa838ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rightChild":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1041","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"e5259ffd-2e69-11e5-88e2-63ac21997ceb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<E>)"},"status":-2},{"failures":[],"tindex":"e525c70e-2e69-11e5-88e2-5b293b554235","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:191","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:57","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.List<E> java.util.List<E> = ((java.util.List<E>)(java.util.List<? extends E>))"},"status":-2},{"failures":[],"tindex":"e525c70f-2e69-11e5-88e2-d946f028e0fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1028","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":-2},{"failures":[],"tindex":"e525c710-2e69-11e5-88e2-0d212a28464a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:621","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[8,9,10,11,12,13,14,15],"tindex":"e525c711-2e69-11e5-88e2-ef2fb003daf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-1},{"failures":[],"tindex":"e525ee22-2e69-11e5-88e2-6dddefdd22cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:841","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"e525ee23-2e69-11e5-88e2-6775a9d18fcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"size","hash2":"size","hash1":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:98","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Set<E>.size()"},"status":-1},{"failures":[],"tindex":"e525ee24-2e69-11e5-88e2-c3cb39eb3db1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1103","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e525ee25-2e69-11e5-88e2-25e89174f02e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":1},{"failures":[],"tindex":"e5261536-2e69-11e5-88e2-79156bc8768e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"variableMap":{"iterator":"iterator","this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-2},{"failures":[],"tindex":"e5261537-2e69-11e5-88e2-3596217042de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e5261538-2e69-11e5-88e2-9b13b7f8a1f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"e5263c49-2e69-11e5-88e2-bb8ecd1e1739","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex()"},"status":0},{"failures":[41,42,43],"tindex":"e5263c4a-2e69-11e5-88e2-132ef8abd622","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtConstructorCallImpl","sourcecode":"new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey())"},"status":-1},{"failures":[],"tindex":"e5263c4b-2e69-11e5-88e2-4d4b46295847","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e525ee25-2e69-11e5-88e2-25e89174f02e","diffs":[{"variables":{"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.void setCollection(java.util.Collection)_collection"]},"type":"variable"}]},{"transformation":"e5263c49-2e69-11e5-88e2-bb8ecd1e1739","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":["org.apache.commons.collections4.collection.IndexedCollection.boolean retainAll(java.util.Collection) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.IndexedCollection.boolean retainAll(java.util.Collection) -> org.apache.commons.collections4.collection.IndexedCollection.void addToIndex(C)"]},"type":"graph"}]},{"transformation":"e5263c4b-2e69-11e5-88e2-4d4b46295847","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_previous"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_last"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_last"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"}]}]}