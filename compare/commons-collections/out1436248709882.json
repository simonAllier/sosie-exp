{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":93,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":30,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":119,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":29,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":87,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":41,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":132,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":101,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":123,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":134,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":137,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":103,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":144,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":25,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":112,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":102,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":28,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":53,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":120,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":73,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":125,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":7,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":138,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":141,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":72,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":91,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":8,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":78,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":47,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":99,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":139,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":22,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":45,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":121,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":43,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":19,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":135,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":15,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":129,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":97,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":100,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":3,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":131,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":2,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":55,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":126,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":12,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":83,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":107,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":6,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":136,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":133,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":34,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":37,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":63,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":23,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":62,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":35,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":17,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":5,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":85,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":96,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":82},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"3124d203-246d-11e5-b1a2-57b0473d40e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"3124f914-246d-11e5-b1a2-1341556ccf59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:153","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"3124f915-246d-11e5-b1a2-73a30e2f65bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-2},{"failures":[],"tindex":"3124f916-246d-11e5-b1a2-07ce425b1505","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"31252027-246d-11e5-b1a2-294562a87c95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:102","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet(java.util.Set<E> , java.lang.Object)"},"status":-2},{"failures":[],"tindex":"31252028-246d-11e5-b1a2-6ffe2daf5a8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:668","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.bidimap.AbstractDualBidiMap.MapEntry.this.getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:164","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K K = ((K)(java.lang.Object))"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"31252029-246d-11e5-b1a2-9346d6b80710","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"3125473a-246d-11e5-b1a2-c3f101824287","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(K)"},"status":-2},{"failures":[26],"tindex":"3125473b-246d-11e5-b1a2-f134a0cb712d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:332","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>)"},"status":-1},{"failures":[],"tindex":"3125473c-246d-11e5-b1a2-d9664c9fb8d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"31256e4d-246d-11e5-b1a2-1f11407f959a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[27,28,29,30,31,32,33,0,1,34,2,3,4,35,36,5,37,6,38,39,7,8,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"31256e4e-246d-11e5-b1a2-d944a65b64af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"delegateMap","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"3125955f-246d-11e5-b1a2-6147fd805b23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:252","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[61],"tindex":"31259560-246d-11e5-b1a2-b33046ca3a2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[62,63,64,65,66,67],"tindex":"31259561-246d-11e5-b1a2-f195fefc1e84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)))"},"status":-1},{"failures":[],"tindex":"31259562-246d-11e5-b1a2-a7c106d5ec2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1176","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"entry","n":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:248","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,0,1,2,3,4,5,6,7,8],"tindex":"3125bc73-246d-11e5-b1a2-c95532c27d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1337","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1324","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()"},"status":-1},{"failures":[131,132,133],"tindex":"3125e384-246d-11e5-b1a2-011ebd8cc548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:287","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"3125e385-246d-11e5-b1a2-73b8f94a2370","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"31260a96-246d-11e5-b1a2-c118b95f5866","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"31260a96-246d-11e5-b1a2-c118b95f5866","diffs":[{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)"]},"edges":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"],"org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V getValue()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)_parent.left = child","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)_final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> child = (h.left) == h ? h.right ","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)_final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parent = h.parent"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setValue(V).b","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setKeyValue(K,V).b"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setKeyValue(K,V).b","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setValue(V).b"]},"type":"branch"}]}]}