{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":16,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":83,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":78,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":111,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":84,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":29,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":36,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":103,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":61,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":105,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":41},"transformations":[{"failures":[],"tindex":"b816b5f1-24d8-11e5-a5a6-174ccb4d457a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"b816dd02-24d8-11e5-a5a6-85d62f72701b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"b816dd03-24d8-11e5-a5a6-751974419491","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"variableMap":{"hashCode":"size","dataSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"b8170414-24d8-11e5-a5a6-238423520dee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[22,23,24],"tindex":"b8170415-24d8-11e5-a5a6-9f6edbf451c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:283","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-1},{"failures":[],"tindex":"b8170416-24d8-11e5-a5a6-474e2684ea25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"b8172b27-24d8-11e5-a5a6-bb5035f20a23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"b8172b28-24d8-11e5-a5a6-df4632725fb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"status":-2},{"failures":[],"tindex":"b8175239-24d8-11e5-a5a6-91bdbc3935c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:802","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-2},{"failures":[25,26,27,28],"tindex":"b817523a-24d8-11e5-a5a6-399e105d017a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:484","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:234","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"b817523b-24d8-11e5-a5a6-2f2c12bd497a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Bag<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>));\n    return org.apache.commons.collections4.Bag<E>;\n} "},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2},{"failures":[29,30],"tindex":"b817523c-24d8-11e5-a5a6-cdfc3c48dd3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"b817794d-24d8-11e5-a5a6-4d7f2f534b9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"b817794e-24d8-11e5-a5a6-fb0dcfad79b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:470","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"b817794f-24d8-11e5-a5a6-bd61607495c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().first()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().last()"},"status":-1},{"failures":[],"tindex":"b817a060-24d8-11e5-a5a6-8b2245af6cb9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1292","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,22,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,24,110,111],"tindex":"b817a061-24d8-11e5-a5a6-fddb00d6b95b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"b817a062-24d8-11e5-a5a6-bf8df8e433f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"b817c773-24d8-11e5-a5a6-a32dcc453fba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:594","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(':')"},"variableMap":{"buf":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"b8172b27-24d8-11e5-a5a6-bb5035f20a23","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"type":"graph"}]}]}