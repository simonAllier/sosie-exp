{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":31,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":41,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":23,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":2,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":79,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":12,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":52,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":43,"org.apache.commons.collections4.list.TreeListTest.testRemove":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":56,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":78,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":21,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":48,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":17,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":73,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":13,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":54,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":4,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.list.TreeListTest.testBug35258":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":34,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":76,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":63,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":68,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":11,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":0},"transformations":[{"failures":[0],"tindex":"9706d93d-416c-11e5-a53e-25371184ac95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:283","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value has been returned yet\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:130","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[1],"tindex":"9706d93e-416c-11e5-a53e-697c8699a41e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:58","type":"CtReturnImpl","sourcecode":"return java.util.Queue<E>"},"variableMap":{"tmpQueue":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.QueueUtils:95","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue.transformingQueue(java.util.Queue<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-1},{"failures":[2,3,4],"tindex":"9706d93f-416c-11e5-a53e-f366471a126c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:378","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[],"tindex":"97070050-416c-11e5-a53e-997b6d267017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14],"tindex":"97070051-416c-11e5-a53e-876b3ff4aa28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:262","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(int)"},"variableMap":{"root":"root","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E)"},"status":-1},{"failures":[],"tindex":"97070052-416c-11e5-a53e-153250fabd25","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:356","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"status":-2},{"failures":[],"tindex":"97070053-416c-11e5-a53e-b14e44d13bfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"97070054-416c-11e5-a53e-0bb4534b371d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"obj","b":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:152","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49],"tindex":"97072765-416c-11e5-a53e-b13998a779f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:226","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[])"},"status":-1},{"failures":[],"tindex":"97072766-416c-11e5-a53e-355d6c1eec6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator"},"status":-2},{"failures":[],"tindex":"97072767-416c-11e5-a53e-4f2697f29b81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"97072768-416c-11e5-a53e-950d175d7128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"97072769-416c-11e5-a53e-edf35f6c5860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1100","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"9707276a-416c-11e5-a53e-55d6317c7cc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"child","current":"child","right":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:767","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"9707276b-416c-11e5-a53e-bf0499499951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"length","removeIndex":"hashCode","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[75,76,77,78],"tindex":"97074e7c-416c-11e5-a53e-efb69af2e564","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"obj","key2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:158","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().equals(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"97074e7d-416c-11e5-a53e-43a80570d913","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[79],"tindex":"97074e7e-416c-11e5-a53e-23db1a4b9854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().clear()"},"status":-1},{"failures":[],"tindex":"97074e7f-416c-11e5-a53e-033c024b9573","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Put<K, V> instanceof java.util.Map) {\n    return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>));\n} "},"variableMap":{"put":"put"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:241","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(org.apache.commons.collections4.Put<K, V>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}