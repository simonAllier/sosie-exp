{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":118,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":53,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":210,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":226,"org.apache.commons.collections4.map.LinkedMapTest.testReset":36,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":212,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":253,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":129,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":252,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":231,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":165,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":27,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":32,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":229,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":126,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":194,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":52,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":263,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":78,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":239,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":207,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":158,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":159,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":55,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":24,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":137,"org.apache.commons.collections4.map.HashedMapTest.testClone":164,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":166,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":238,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":144,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":103,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":104,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":138,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":175,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":68,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":197,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":150,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":6,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":148,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":183,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":234,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":184,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":171,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":26,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":260,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":152,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":163,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":122,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":120,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":58,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":42,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":70,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":34,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":168,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":18,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":110,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":38,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":215,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":202,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":40,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.LinkedMapTest.testClone":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":151,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":251,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":121,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":134,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":135,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":98,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":65,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":139,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":205,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":72,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":92,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":162,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":189,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":167,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":195,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":130,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":107,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":106,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":94,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":153,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":124,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.LRUMapTest.testClone":187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":123,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":154,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":228,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":69,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":232,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":16,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":156,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":157,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":76,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":14,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":209,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":127,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":95,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":44,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":179,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":180,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":146,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":264,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":214,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":255,"org.apache.commons.collections4.map.LRUMapTest.testLRU":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":145,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":30,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":79,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":28,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":13,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":190,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":199,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":248,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":219,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":222,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":221,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":90,"org.apache.commons.collections4.map.LRUMapTest.testReset":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":217,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":218,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":198,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":15,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":125,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":46,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":191,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":257,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":213,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":258,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":22,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":43},"transformations":[{"failures":[0,1,2,3],"tindex":"fb799c3e-253a-11e5-ba75-7dddabd58053","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"fb79c34f-253a-11e5-ba75-5dbe9f672ceb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":-2},{"failures":[4],"tindex":"fb79c350-253a-11e5-ba75-7f8370029b0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:119","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"fb79ea61-253a-11e5-ba75-5dc28edb77b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:163","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"tindex":"fb79ea62-253a-11e5-ba75-b9b8f5bb71b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:517","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int)"},"status":-1},{"failures":[],"tindex":"fb79ea63-253a-11e5-ba75-117a1cb2e2e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:805","type":"CtReturnImpl","sourcecode":"return long"},"variableMap":{"defaultValue":"timeToLive"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:199","type":"CtReturnImpl","sourcecode":"return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(long, java.util.concurrent.TimeUnit)"},"status":-2},{"failures":[],"tindex":"fb79ea64-253a-11e5-ba75-7f46e44d8cb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[248,249,250,251,252,253],"tindex":"fb7a1175-253a-11e5-ba75-69b2844b5748","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"x","lastItemIndex":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"status":-1},{"failures":[],"tindex":"fb7a1176-253a-11e5-ba75-1d8313640483","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"fb7a1177-253a-11e5-ba75-071bf40d964d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:539","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"fb7a1178-253a-11e5-ba75-2147b150a607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:183","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.get((org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))"},"status":-2},{"failures":[],"tindex":"fb7a1179-253a-11e5-ba75-fd9d8bc7ef79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:207","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fb7a388a-253a-11e5-ba75-d3c159e6b7b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"fb7a388b-253a-11e5-ba75-e16ac0695f71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"variableMap":{"endIndex2":"hashCode","endIndex1":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:632","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[],"tindex":"fb7a388c-253a-11e5-ba75-97f824304118","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-2},{"failures":[],"tindex":"fb7a388d-253a-11e5-ba75-2fa91d016ccf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"fb7a388e-253a-11e5-ba75-5b4710091458","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"fb7a5f9f-253a-11e5-ba75-f33dd67c42eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"fb7a5fa0-253a-11e5-ba75-85d0e12d46e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"modCount","start":"modCount","end":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:515","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"fb7a5fa1-253a-11e5-ba75-6b11c73bf768","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"fb7a1176-253a-11e5-ba75-1d8313640483","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"type":"graph"}]},{"transformation":"fb7a5fa0-253a-11e5-ba75-85d0e12d46e9","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_(modCount)++"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}