{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":28,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":105,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":88,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":8,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":33,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":117,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":74},"transformations":[{"failures":[],"tindex":"409ca299-2526-11e5-8aee-8f1139393afa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:73","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"status":-2},{"failures":[],"tindex":"409cc9aa-2526-11e5-8aee-c3f359da5de0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"409cf0bb-2526-11e5-8aee-9f56f85040b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"409cf0bc-2526-11e5-8aee-912badcbbeed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[0,1],"tindex":"409cf0bd-2526-11e5-8aee-0907258122dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[2,3],"tindex":"409d17ce-2526-11e5-8aee-07eb132e3ebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:464","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.add(int, K)"},"status":-1},{"failures":[4],"tindex":"409d17cf-2526-11e5-8aee-311a06739fb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"409d17d0-2526-11e5-8aee-7d99fd3b3c9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:437","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<E>.next()"},"status":-2},{"failures":[],"tindex":"409d17d1-2526-11e5-8aee-373679b2a369","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"409d3ee2-2526-11e5-8aee-1fa75333e8ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:137","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:451","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>(E)"},"status":-1},{"failures":[],"tindex":"409d3ee3-2526-11e5-8aee-2bcf5b25411c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:80","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>"},"status":-2},{"failures":[141],"tindex":"409d3ee4-2526-11e5-8aee-5f0858a8a014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[][0]"},"status":-1},{"failures":[],"tindex":"409d65f5-2526-11e5-8aee-617d1eeb2ece","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:430","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"409d65f6-2526-11e5-8aee-a57b50e26d68","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:286","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"409d65f7-2526-11e5-8aee-7ba3fcf0345c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:989","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this)"},"status":0},{"failures":[142],"tindex":"409d65f8-2526-11e5-8aee-e1e550eb360a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"409d65f9-2526-11e5-8aee-c9439bc53ea8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:110","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[143],"tindex":"409d65fa-2526-11e5-8aee-f9f46784f508","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:115","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().offer(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-1},{"failures":[],"tindex":"409d65fb-2526-11e5-8aee-55b43b78804c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"409d8d0c-2526-11e5-8aee-63d1e812d174","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"409d65f7-2526-11e5-8aee-7ba3fcf0345c","diffs":[{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]}]}