{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":4,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":25,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":56,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":34,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":63,"org.apache.commons.collections4.FactoryUtilsTest.testExceptionFactory":0,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":58,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":12,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":19,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":36,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":21,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":60,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":30,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":14,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":6,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":70,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":15,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":50,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":51,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":72,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":62,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":2,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":17,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":66,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":46,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":22,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":55,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":65,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":10,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":48,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":75,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":44,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":69,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":53,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":74,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":68,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":57,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":45,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":40,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":49},"transformations":[{"failures":[],"tindex":"5a37eb98-2e7a-11e5-9cc2-55e39476d9c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"o2","obj":"o2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"5a3812a9-2e7a-11e5-9cc2-03f1b3a88818","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"5a3839ba-2e7a-11e5-9cc2-fdf0d6e9441b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1367","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0],"tindex":"5a3839bb-2e7a-11e5-9cc2-514b01588b6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory))"},"status":-1},{"failures":[],"tindex":"5a3839bc-2e7a-11e5-9cc2-bf82dba3cff9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:68","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[1],"tindex":"5a3860cd-2e7a-11e5-9cc2-431d4a059be1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"result","i":"offset","j":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-1},{"failures":[],"tindex":"5a3860ce-2e7a-11e5-9cc2-79972114a9f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,1,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"5a3860cf-2e7a-11e5-9cc2-114eabaacd9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:216","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()"},"status":-1},{"failures":[],"tindex":"5a3887e0-2e7a-11e5-9cc2-77f24bb9c580","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"value","newCapacity":"value","proposedCapacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:504","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int)"},"status":-2},{"failures":[73,74],"tindex":"5a3887e1-2e7a-11e5-9cc2-498b1d68971f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"5a3887e2-2e7a-11e5-9cc2-054a8ccd2612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:96","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5a3887e3-2e7a-11e5-9cc2-3f88a74c4ecb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","key3":"key1","key4":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"5a38aef4-2e7a-11e5-9cc2-8541952eabd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported by this iterator\")"},"status":0},{"failures":[75],"tindex":"5a38aef5-2e7a-11e5-9cc2-21f8f631895a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"No Collection associated with this Iterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")"},"status":-1},{"failures":[],"tindex":"5a38d606-2e7a-11e5-9cc2-39cb0df3c617","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:331","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"next","prev":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:431","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"5a38d607-2e7a-11e5-9cc2-a18e2296b0cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"parent","left":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:559","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"5a38d608-2e7a-11e5-9cc2-9b14ddd95673","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:557","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"header","last":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"5a38fd19-2e7a-11e5-9cc2-df4c40182d46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"5a38fd1a-2e7a-11e5-9cc2-b7eae43fbe6d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}