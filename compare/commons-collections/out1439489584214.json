{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":77,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":87,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":132,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":137,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":0,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":54,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":88,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":90,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":47,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":111,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":118,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":135,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":130,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":93,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":109,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":110,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":55,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":104,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":52,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":106,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":14,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":131,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":133,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":82,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":116,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":114,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":57,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":92,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":12,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":59,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":2,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":136,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":63,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":68,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":60,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":81,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":24,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":89,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":62,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":76,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":43,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":53,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":83,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":18,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":19,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":129,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":13,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":141,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":8,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutNullValue":139,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":4,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":95,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":22,"org.apache.commons.collections4.CollectionUtilsTest.isFull":37,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":140,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":97,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":42,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":119},"transformations":[{"failures":[0],"tindex":"f0c3df2f-41e6-11e5-8fee-8bf97763a026","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:93","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"f0c40640-41e6-11e5-8fee-83e882dcf408","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"variableMap":{"total":"end","counter":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"status":-1},{"failures":[],"tindex":"f0c40641-41e6-11e5-8fee-2122015062ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1401","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:168","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.AbstractMapBag.BagIterator<E>(this)"},"status":-2},{"failures":[39],"tindex":"f0c40642-41e6-11e5-8fee-77aae73b472c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:366","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\")"},"status":-1},{"failures":[],"tindex":"f0c40643-41e6-11e5-8fee-d7b381cfdd79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:93","type":"CtReturnImpl","sourcecode":"return E.compareTo(E)"},"status":-2},{"failures":[],"tindex":"f0c40644-41e6-11e5-8fee-e931435404d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:197","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f0c40645-41e6-11e5-8fee-4febbf2dab17","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"item","value1":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":0},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"f0c42d56-41e6-11e5-8fee-0378b9098d16","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:194","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[],"tindex":"f0c42d57-41e6-11e5-8fee-89954fee2e7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[69,70,71],"tindex":"f0c42d58-41e6-11e5-8fee-2f87bb4b5824","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"f0c42d59-41e6-11e5-8fee-497de85986de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"f0c42d5a-41e6-11e5-8fee-115965d7a676","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:226","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[])"},"status":-1},{"failures":[],"tindex":"f0c4546b-41e6-11e5-8fee-89799e912c20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"y","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[122,123],"tindex":"f0c4546c-41e6-11e5-8fee-cd26e325490a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[124,125,126,127,128,129],"tindex":"f0c4546d-41e6-11e5-8fee-cf3ac7b70b00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"f0c47b7e-41e6-11e5-8fee-f7051ce6fe03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-2},{"failures":[],"tindex":"f0c47b7f-41e6-11e5-8fee-7bff4bfdff6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"f0c47b80-41e6-11e5-8fee-65a53411c092","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"siblingNode","node":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[130,131,132,39,133,134,135,136,137],"tindex":"f0c4a291-41e6-11e5-8fee-3b5e43a1454a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"i","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":-1},{"failures":[138,139,140,141],"tindex":"f0c4a292-41e6-11e5-8fee-ffe3826a76ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"found","h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}