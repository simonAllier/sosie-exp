{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":62,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":37,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":46,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":4,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":68,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":50,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":66,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":23,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":35,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":14,"org.apache.commons.collections4.set.CompositeSetTest.testContains":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":34,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":26,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":2,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testNextKey":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":22},"transformations":[{"failures":[],"tindex":"06f1e790-25d0-11e5-a316-bdcac280d7dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.charAt(int)) & org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.(org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int))) != 0"},"status":-2},{"failures":[],"tindex":"06f235b1-25d0-11e5-a316-0d93146a1cfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Integer, E>.put(java.lang.Integer.valueOf(int), E)"},"status":-2},{"failures":[],"tindex":"06f235b2-25d0-11e5-a316-99222d7d9dd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:165","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"entry","header":"before","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"06f235b3-25d0-11e5-a316-e121e358ea97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:69","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int))"},"variableMap":{"lengthInBits":"currentIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"currentIndex","beginIndex1":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:211","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"06f25cc4-25d0-11e5-a316-d56e7f6a5529","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"root","left":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"status":-2},{"failures":[0,1,2,3],"tindex":"06f25cc5-25d0-11e5-a316-ffb245b2d76e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-1},{"failures":[],"tindex":"06f25cc6-25d0-11e5-a316-01171b100d10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>)"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"06f25cc7-25d0-11e5-a316-33e0e7555598","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Transformer<? super E, ?>.transform(E)"},"status":-1},{"failures":[11,12,13],"tindex":"06f283d8-25d0-11e5-a316-77030813fd35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[14],"tindex":"06f283d9-25d0-11e5-a316-e9fef344fe6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1063","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey())"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"06f283da-25d0-11e5-a316-8543c9d33933","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"value","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[34,35],"tindex":"06f283db-25d0-11e5-a316-7bdf877830d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"06f2aaec-25d0-11e5-a316-0b34db61524a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[36,37],"tindex":"06f2aaed-25d0-11e5-a316-edb007b6d18c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:101","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"06f2aaee-25d0-11e5-a316-73b2c54832f6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:108","type":"CtReturnImpl","sourcecode":"return ((K) == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : K.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))"},"status":-2},{"failures":[],"tindex":"06f2aaef-25d0-11e5-a316-61228524fe4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:251","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K)"},"status":-2},{"failures":[],"tindex":"06f2d200-25d0-11e5-a316-0bc900219b05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[38,39,40],"tindex":"06f2d201-25d0-11e5-a316-1bcd52e5b8ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[41],"tindex":"06f2d202-25d0-11e5-a316-db2856a60c4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"offsetInBits","index":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1121","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-1},{"failures":[42,43,44,11,45,46,12,47,48,18,49,50,51,52,19,20,21,22,53,23,54,55,24,56,57,58,59,60,61,13,62,63,26,64,65,66,67,27,28,29,30,68,31,69,70,32,71,72],"tindex":"06f2f913-25d0-11e5-a316-5dfeafa1b44a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}