{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":129,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":150,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":40,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":77,"org.apache.commons.collections4.TransformerUtilsTest.testStringValueTransformer":100,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":180,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":53,"org.apache.commons.collections4.map.LinkedMapTest.testReset":23,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":71,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":149,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":78,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":171,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":146,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":2,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":19,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":121,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":89,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":124,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":102,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":10,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":179,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":132,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":15,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":128,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":112,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":148,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":147,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":12,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":131,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":168,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.LRUMapTest.testClone":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":4,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":169,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":109,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":28,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":176,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":69,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":177,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":178,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":108,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":111,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":144,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":174,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":42,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":175,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":91,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":173,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":7,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":51,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":155,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":107,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":117,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":123,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":151,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":159,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":31,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":158,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":184,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":160,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":80,"org.apache.commons.collections4.map.LRUMapTest.testLRU":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":118,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":37,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":113,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":156,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":136,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":44,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":43,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":145,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":45,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":143,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":29,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":13,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":59,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":114,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":164,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":95,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":58,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":14,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":105,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":85,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":140,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":87,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":18,"org.apache.commons.collections4.map.LRUMapTest.testReset":54,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":22,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":8,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":24,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":64,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":67,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":110,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":0,"org.apache.commons.collections4.map.LinkedMapTest.testClone":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":104,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":163,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":98,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":167,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":5,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":30},"transformations":[{"failures":[0],"tindex":"c3b816b1-24da-11e5-a9b9-97800b5b2017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"status":-1},{"failures":[1],"tindex":"c3b83dc2-24da-11e5-a9b9-61044b7a9112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))"},"variableMap":{"closure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:57","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>, org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure())"},"status":-1},{"failures":[],"tindex":"c3b83dc3-24da-11e5-a9b9-69c5650a636a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:326","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"c3b83dc4-24da-11e5-a9b9-e798f896aa47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"status":-1},{"failures":[89,90,91,92,93,94,95,96,97,98],"tindex":"c3b864d5-24da-11e5-a9b9-f300d2374733","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"c3b864d6-24da-11e5-a9b9-eb3519e275d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:800","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>))"},"status":-2},{"failures":[],"tindex":"c3b864d7-24da-11e5-a9b9-715658061e99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"variableMap":{"start":"size","maxElements":"mapSize","index":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:323","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)((((int) + int) / (float)) + 1))"},"status":0},{"failures":[],"tindex":"c3b864d8-24da-11e5-a9b9-fb76d3091604","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:96","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[99],"tindex":"c3b864d9-24da-11e5-a9b9-2bdd18a784b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1399","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-1},{"failures":[],"tindex":"c3b88bea-24da-11e5-a9b9-5d34704b8128","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\")"},"status":0},{"failures":[],"tindex":"c3b88beb-24da-11e5-a9b9-d11f11e83e7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:156","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"c3b88bec-24da-11e5-a9b9-8363a937a5a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:106","type":"CtReturnImpl","sourcecode":"return super.listIterator(0)"},"status":-2},{"failures":[],"tindex":"c3b88bed-24da-11e5-a9b9-894e65f59bd3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[100,101,102,103],"tindex":"c3b8b2fe-24da-11e5-a9b9-0b9865148319","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.StringValueTransformer:64","type":"CtReturnImpl","sourcecode":"return java.lang.String.valueOf(T)"},"status":-1},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"c3b8b2ff-24da-11e5-a9b9-ffb0da5ceeef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:378","type":"CtAssignmentImpl","sourcecode":"int = (31 * int) + (E == null ? 0 : E.hashCode())"},"status":-1},{"failures":[],"tindex":"c3b8b300-24da-11e5-a9b9-cd7930510f37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:534","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[145,146],"tindex":"c3b8b301-24da-11e5-a9b9-1dda384507c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()"},"status":-1},{"failures":[],"tindex":"c3b8b302-24da-11e5-a9b9-ada1976aef15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:54","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.UnmodifiableListIterator<E>(java.util.ListIterator<? extends E>)"},"status":-2},{"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"c3b8da13-24da-11e5-a9b9-d11b4eed87d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"status":-1},{"failures":[190,191],"tindex":"c3b8da14-24da-11e5-a9b9-8f7bdf26e3d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"c3b864d7-24da-11e5-a9b9-715658061e99","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"]},"type":"branch"}]}]}