{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":43,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":139,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":111,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":105,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":129,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":113,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":121,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":63},"transformations":[{"failures":[0,1],"tindex":"0abdbb77-2600-11e5-b56b-71e970ce671b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"0abe57b8-2600-11e5-b56b-ebc442981a5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"index","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[131],"tindex":"0abe7ec9-2600-11e5-b56b-0b16a2ec43a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.BagUtils:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-1},{"failures":[132,133,134,135,136],"tindex":"0abea5da-2600-11e5-b56b-1fa441d69dcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1070","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[137,138],"tindex":"0abef3fb-2600-11e5-b56b-d3bea03b7a79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0abf1b0c-2600-11e5-b56b-4d09861f09d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-2},{"failures":[],"tindex":"0abf421d-2600-11e5-b56b-91237bddb83f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"length","buckets":"object","length":"length","locks":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    int = ((java.util.Map<?, ?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"0abf692e-2600-11e5-b56b-cbaca9d9492e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:401","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<? extends E>)"},"status":-2},{"failures":[],"tindex":"0ac07a9f-2600-11e5-b56b-ef1a0e32cf4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:207","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"0ac0a1b0-2600-11e5-b56b-1b9b85381e49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"variableMap":{"coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"0ac0c8c1-2600-11e5-b56b-5ff699dfd4d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:112","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"0ac0c8c2-2600-11e5-b56b-a92924377607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0ac0efd3-2600-11e5-b56b-634bacf2de55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:972","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int)"},"status":-2},{"failures":[],"tindex":"0ac116e4-2600-11e5-b56b-c939b2e7c8eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"0ac13df5-2600-11e5-b56b-3b146690c4ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:255","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"0ac13df6-2600-11e5-b56b-43a04d633fc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:88","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"0ac16507-2600-11e5-b56b-cdc3c6ffb21f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"currentIndex","newCapacity":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:220","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"0ac18c18-2600-11e5-b56b-35dce0b9c35e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"variableMap":{"array":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object , int , int)"},"status":-2},{"failures":[139,140],"tindex":"0ac18c19-2600-11e5-b56b-17e78fb6fc2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"0ac1b32a-2600-11e5-b56b-cbbeab49f7a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>.inverseOrderedBidiMap()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}