{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":65,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":138,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":329,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":119,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":293,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":85,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":116,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":205,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":259,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":182,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":276,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":66,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":181,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":284,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":290,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":322,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":248,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":328,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":79,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":268,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":30,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":202,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":154,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":133,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":134,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":285,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":351,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":102,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":93,"org.apache.commons.collections4.map.HashedMapTest.testClone":96,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":345,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":41,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":335,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":125,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":127,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":113,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":114,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":232,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":266,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":344,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":58,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":323,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":279,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":262,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":53,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":340,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":168,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":32,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":48,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":302,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":128,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":342,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":263,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":71,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":37,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":141,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":231,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":143,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":309,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":157,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":229,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":258,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":192,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":257,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":162,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":161,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":314,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":253,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":158,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":196,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":331,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":61,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":235,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":292,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":176,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":131,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":289,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":199,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":304,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":64,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":343,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":318,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":291,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":326,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":254,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":123,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":108,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":354,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":350,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":320,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":121,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":173,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":230,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":28,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":310,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":13,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":175,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":295},"transformations":[{"failures":[],"tindex":"1bf73b9a-2363-11e5-8126-41ff2310ae41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl","sourcecode":"return \"Iterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1366","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[],"tindex":"1bf9105b-2363-11e5-8126-31a009c9bfe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:101","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.ListOrderedSet<E>(java.util.Set<E>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"1bf9376c-2363-11e5-8126-43f4c719d29d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[15,16],"tindex":"1bf9376d-2363-11e5-8126-9b4d7d482f46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"variableMap":{"iterator":"li"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:178","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"status":-1},{"failures":[],"tindex":"1bf9376e-2363-11e5-8126-8f612510f6f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:826","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.EntrySetIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"1bf95e7f-2363-11e5-8126-f12c1d339bdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:757","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26],"tindex":"1bfabe10-2363-11e5-8126-b3efe50b3015","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:230","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"1bfabe11-2363-11e5-8126-e51e74d1e50a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:293","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[],"tindex":"1bfae522-2363-11e5-8126-99175019dd12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:134","type":"CtAssignmentImpl","sourcecode":"int[][(int + int)] = int"},"variableMap":{"indexOfLargestMobileInteger":"total","offset":"total","keys":"object","tmpKey":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1354","type":"CtAssignmentImpl","sourcecode":"int = java.lang.reflect.Array.getLength(java.lang.Object)"},"status":-2},{"failures":[27],"tindex":"1bfae523-2363-11e5-8126-6d701a9a3b0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:855","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Enumeration must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,0,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,4,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,6,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,8,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,10,126,127,128,25,26,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,13,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"1bfae524-2363-11e5-8126-5f2261a32c61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:364","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null"},"variableMap":{"data":"data","i":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:549","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-1},{"failures":[],"tindex":"1bfb0c35-2363-11e5-8126-5dc74d1ec924","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"p","root":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:602","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"1bfb0c36-2363-11e5-8126-5d247ac8d024","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:129","type":"CtReturnImpl","sourcecode":"return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])))"},"variableMap":{"iArgs":"iArgs","input":"input","method":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:126","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])));\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' does not exist\"));\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\"));\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' threw an exception\") , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[180,181,182],"tindex":"1bfb3347-2363-11e5-8126-77c5ca406f58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:994","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++"},"variableMap":{"modCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:271","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"1bfbcf88-2363-11e5-8126-096aa7548859","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()"},"status":-2},{"failures":[183,184],"tindex":"1bfbcf89-2363-11e5-8126-0fcb612ceed9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"object","o2":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object));\n    return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n} "},"status":-1},{"failures":[],"tindex":"1bfc6bca-2363-11e5-8126-c5ca6d32ac92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[185,186],"tindex":"1bfd562b-2363-11e5-8126-772c5ccd6f7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NotPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"1bfd562c-2363-11e5-8126-eff139f8dec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:406","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator()"},"status":-2},{"failures":[187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"1bfd7d3d-2363-11e5-8126-8f548c059364","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:155","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"1bfd7d3e-2363-11e5-8126-45634a8d4eca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPTransformer:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<T, T>)(org.apache.commons.collections4.functors.NOPTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[226],"tindex":"1bfd7d3f-2363-11e5-8126-5d4d78280e0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:113","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey()"},"status":-1},{"failures":[227],"tindex":"1bfd7d40-2363-11e5-8126-75a2445e0fbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:74","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:798","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[228],"tindex":"1bfda451-2363-11e5-8126-1b5219fdf63c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1277","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"1bfda452-2363-11e5-8126-f3d4114173e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1103","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"1bfda453-2363-11e5-8126-e5ed7c20ad0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer<I, O>.org.apache.commons.collections4.functors.ConstantTransformer.nullTransformer()"},"status":-2},{"failures":[],"tindex":"1bfdcb64-2363-11e5-8126-3d44b5c56866","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1950","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = false"},"variableMap":{"blackColor":"name","dataElement":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:223","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"1bfdcb65-2363-11e5-8126-e1c4dfe5d7a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:155","type":"CtLocalVariableImpl","sourcecode":"final java.util.Collection<V> java.util.Collection<V> = super.values()"},"status":-2},{"failures":[],"tindex":"1bfdcb66-2363-11e5-8126-abec838a64cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:830","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"1bfe1987-2363-11e5-8126-f568b45e70f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1165","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[229,230,231],"tindex":"1bfe4098-2363-11e5-8126-45936b29307a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:243","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"1bfe4099-2363-11e5-8126-0f6320209ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:244","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1bfe409a-2363-11e5-8126-5b8ed2b62750","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[232,233],"tindex":"1bfe409b-2363-11e5-8126-57113fe7ceb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1039","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList<E>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"toAdd","modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-1},{"failures":[],"tindex":"1c00155c-2363-11e5-8126-55b0808e5c38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"1c00155d-2363-11e5-8126-bf8b38a5f9b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:76","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) && (org.apache.commons.collections4.Predicate<? super T>.evaluate(T))"},"status":-2},{"failures":[],"tindex":"1c00155e-2363-11e5-8126-9799464191fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:71","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"1c00155f-2363-11e5-8126-9f294494b205","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:671","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"1c001560-2363-11e5-8126-c5616f5fbcf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:127","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.size()"},"status":-2},{"failures":[234,235,236,237],"tindex":"1c003c71-2363-11e5-8126-a1cc082f308e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1185","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,229,269,270,271,272,273,274,275,276,277,278,230,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,231,349,350,351,352,353],"tindex":"1c003c72-2363-11e5-8126-b9347f1e6f01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"1c01ea23-2363-11e5-8126-f7d2ddbaff48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1100","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[354,355],"tindex":"1c01ea24-2363-11e5-8126-21176f38432b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[356],"tindex":"1c021135-2363-11e5-8126-0fb90803dcef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T).create()"},"status":-1},{"failures":[],"tindex":"1c021136-2363-11e5-8126-45b4a97a6ce6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"sm":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"status":-2},{"failures":[],"tindex":"1c021137-2363-11e5-8126-1373d72e0ac2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"next","before":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"1c023848-2363-11e5-8126-97af08b9f156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"1c023849-2363-11e5-8126-7f2f69742ee9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:746","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> == null) || (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:735","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":48,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}