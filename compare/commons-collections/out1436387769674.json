{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":24,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":60,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":12,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":32,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":13,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":51,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":1,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":15,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":9,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":4,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":62,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":21,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":38,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":7,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":10,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":28,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":0,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":5,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":18,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":52,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection":6,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":25,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":17},"transformations":[{"failures":[],"tindex":"f739cc44-25b0-11e5-a1c9-0bd009599c81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1079","type":"CtAssignmentImpl","sourcecode":"int = --(int)"},"variableMap":{"nextIndex":"maximumCacheSize","currentIndex":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"f739cc45-25b0-11e5-a1c9-7314e8bff502","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"status":-2},{"failures":[0],"tindex":"f739cc46-25b0-11e5-a1c9-39784d1e3fbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"f739cc47-25b0-11e5-a1c9-db5152a7f9ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"leftChild","to":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"f739f358-25b0-11e5-a1c9-b50f8f2bc0b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"variableMap":{"size":"index","this":"toAdd","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:330","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.addAll(int, java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"f739f359-25b0-11e5-a1c9-216988aab2b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:466","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createNode(E)"},"status":-2},{"failures":[1,2,3,4],"tindex":"f739f35a-25b0-11e5-a1c9-174704a30d01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"pos","otherOffsetInBits":"index","otherLengthInBits":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"f739f35b-25b0-11e5-a1c9-eb96700d39c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1646","type":"CtInvocationImpl","sourcecode":"java.util.Collection<java.util.List<E>>.add(org.apache.commons.collections4.iterators.PermutationIterator<E>.next())"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"tindex":"f739f35c-25b0-11e5-a1c9-e91fbaae8ee1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[13],"tindex":"f73a1a6d-25b0-11e5-a1c9-1f430b370a78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:117","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.add(T)"},"status":-1},{"failures":[14],"tindex":"f73a1a6e-25b0-11e5-a1c9-6f4a97a6b6dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ComparatorUtils:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Comparator cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1774","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"status":-1},{"failures":[],"tindex":"f73a1a6f-25b0-11e5-a1c9-afdd8bd29455","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[15],"tindex":"f73a1a70-25b0-11e5-a1c9-35929ad44e74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:119","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f73a1a71-25b0-11e5-a1c9-b12bb48fa030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key4","entry":"next","key2":"key2","previous":"next","hashCode":"hashCode","key3":"key3","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"f73a1a72-25b0-11e5-a1c9-df5c7f08bd03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:588","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"variableMap":{"buf":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Trie[\").append(java.util.AbstractMap<K, V>.size()).append(\"]={\\n\")"},"status":0},{"failures":[],"tindex":"f73a4183-25b0-11e5-a1c9-7b9cb1cdd146","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EmptyIterator:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.ResettableIterator<E>)(org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.ResettableIterator))"},"variableMap":{"org.apache.commons.collections4.iterators.EmptyIterator.RESETTABLE_INSTANCE":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object , int , int)"},"status":-2},{"failures":[16],"tindex":"f73a4184-25b0-11e5-a1c9-731a6092f295","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:97","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>))"},"variableMap":{"defaultClosure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.IfClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[],"tindex":"f73a4185-25b0-11e5-a1c9-e795a57fa323","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:322","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet())"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"f73a4186-25b0-11e5-a1c9-37feb7fdb086","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:567","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"f73a4187-25b0-11e5-a1c9-f5253e629758","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f73a1a72-25b0-11e5-a1c9-df5c7f08bd03","diffs":[{"variables":{"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":["org.apache.commons.collections4.trie.UnmodifiableTrie.org.apache.commons.collections4.trie.UnmodifiableTrie(org.apache.commons.collections4.Trie)_this.delegate = tmpTrie"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.int size()"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.int size()"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.int size()"]},"type":"graph"}]}]}