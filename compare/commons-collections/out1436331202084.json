{"failureDictionary":{"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":59,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":102,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":87,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":44,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":81,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":99,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":29,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":50,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":120,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":111,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":20,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":52,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":105,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":65,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":97,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":40,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":88,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":4,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":7,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":91,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":74,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":1,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":78,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":60,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":2,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":33,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":77,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":114,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":68,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":116,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":34,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":30,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":113,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":76,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":92,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":24,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":57,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":10,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":79},"transformations":[{"failures":[],"tindex":"4250de2c-252d-11e5-a351-fd7866f71f1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:154","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"variableMap":{"normalMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:203","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).headMap(K)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"4251053d-252d-11e5-a351-2d2e92b572cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:236","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this)"},"status":-1},{"failures":[],"tindex":"4251053e-252d-11e5-a351-d3d9ead619f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"4251053f-252d-11e5-a351-67c5fb0ceff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[],"tindex":"42512c50-252d-11e5-a351-277821d072ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hash3","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"42512c51-252d-11e5-a351-b7b3846f84aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag()"},"status":0},{"failures":[],"tindex":"42512c52-252d-11e5-a351-23c884e76cca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:95","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().get(int)"},"status":-2},{"failures":[],"tindex":"42512c53-252d-11e5-a351-6bf63471462d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    return false;\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.hasPrevious()"},"status":-2},{"failures":[],"tindex":"42512c54-252d-11e5-a351-61216efa2c96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:196","type":"CtTryImpl","sourcecode":"try {\n    java.io.ByteArrayOutputStream.close();\n} catch (final java.io.IOException ex) {\n}"},"variableMap":{"baos":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"42515365-252d-11e5-a351-29b1b75cf0d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":0},{"failures":[],"tindex":"42515366-252d-11e5-a351-593e3036e925","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"status":-2},{"failures":[116],"tindex":"42515367-252d-11e5-a351-1197431b1606","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:105","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"42515368-252d-11e5-a351-4f3b45a76648","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:512","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"42515369-252d-11e5-a351-1d00a82c9ae9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1421","type":"CtLocalVariableImpl","sourcecode":"K K = ((K)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"stream":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1267","type":"CtLocalVariableImpl","sourcecode":"final K K = ((K)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[117],"tindex":"4251536a-252d-11e5-a351-518ad175e719","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:42","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB":"i","bit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"42517a7b-252d-11e5-a351-9954327ea4a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"variableMap":{"this":"delegate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.lastKey()"},"status":-2},{"failures":[118],"tindex":"42517a7c-252d-11e5-a351-43aac462d2e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[119,120],"tindex":"42517a7d-252d-11e5-a351-6da5700a7fcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"42517a7e-252d-11e5-a351-0b48539661e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1507","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":0},{"failures":[],"tindex":"42517a7f-252d-11e5-a351-01d95f4c732c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:426","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"root","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:458","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"42517a7e-252d-11e5-a351-0b48539661e4","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":["org.apache.commons.collections4.map.LazySortedMap.java.util.SortedMap headMap(K) -> org.apache.commons.collections4.map.LazyMap.org.apache.commons.collections4.map.LazyMap(java.util.Map,org.apache.commons.collections4.Transformer)","org.apache.commons.collections4.map.LazySortedMap.java.util.SortedMap headMap(K) -> org.apache.commons.collections4.map.AbstractMapDecorator.org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)","org.apache.commons.collections4.map.LazySortedMap.java.util.SortedMap headMap(K) -> org.apache.commons.collections4.map.LazySortedMap.org.apache.commons.collections4.map.LazySortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer)"]},"type":"graph"}]}]}