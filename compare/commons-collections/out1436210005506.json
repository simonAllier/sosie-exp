{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":5,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":14,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":13,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":0,"org.apache.commons.collections4.ArrayStackTest.testSearch":9,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":4,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":2,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":8,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":15,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":1,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":11,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":3,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":6,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":12,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":7,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":10},"transformations":[{"failures":[],"tindex":"13894558-2413-11e5-90e9-19d43f1e65a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:125","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.Object.toString().toCharArray()"},"status":-2},{"failures":[],"tindex":"13896c69-2413-11e5-90e9-a78329b528ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":-2},{"failures":[],"tindex":"13896c6a-2413-11e5-90e9-47d751120fce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"1389937b-2413-11e5-90e9-41a496667eea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2139","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView()"},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:392","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet()"},"status":-2},{"failures":[],"tindex":"1389937c-2413-11e5-90e9-0557e3100f6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[0,1,2],"tindex":"1389937d-2413-11e5-90e9-ed4a3d87d40c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ConstantFactory<T>(T)"},"status":-1},{"failures":[],"tindex":"1389ba8e-2413-11e5-90e9-05ab38d61409","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"1389ba8f-2413-11e5-90e9-9d0e7c0d794c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:554","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"1389ba90-2413-11e5-90e9-7f3e4948d73a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"status":-2},{"failures":[],"tindex":"1389ba91-2413-11e5-90e9-7da8bf522355","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[3,4],"tindex":"1389e1a2-2413-11e5-90e9-9350cc7a7f76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"start1","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"1389e1a3-2413-11e5-90e9-c5a26f1a531e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:123","type":"CtIfImpl","sourcecode":"if ((T[].int) > 0) {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), 0)));\n} "},"status":-2},{"failures":[],"tindex":"138a08b4-2413-11e5-90e9-b332c43517f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"138a08b5-2413-11e5-90e9-cd40fd54d0cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":0},{"failures":[5,6,7,8],"tindex":"138a08b6-2413-11e5-90e9-330f83b67ea4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:196","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"138a2fc7-2413-11e5-90e9-e545fcc55e74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:382","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E)"},"status":-2},{"failures":[],"tindex":"138a2fc8-2413-11e5-90e9-5bb679c55c2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:179","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSet(java.util.Set<E>)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Set<E>)"},"status":0},{"failures":[9],"tindex":"138a2fc9-2413-11e5-90e9-c5d89aba9be8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"object","n":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"138a56da-2413-11e5-90e9-afe78265760d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:111","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.addComposited(java.util.Map<K, V>[][int])"},"status":-2},{"failures":[10,11,12,13,14,15],"tindex":"138a56db-2413-11e5-90e9-e73d524da480","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"138a08b5-2413-11e5-90e9-cd40fd54d0cc","diffs":[{"branches":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_currentEntry().b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().e1"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.comparators.ComparableComparator_int_compare(E,E).b","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e1","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e2","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e3","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).t2"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()"],"org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object)":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.int hashCode()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.boolean equals(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.comparators.NullComparator.int compare(E,E)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"]},"graph":"branch"}]}]}