{"failureDictionary":{"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":36,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":29,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":42,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":50,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":48,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testReverseListSort":85,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":90,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":8,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":51,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":83,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":68,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":76,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":57,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":38,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":72,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":26,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":0,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":17,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":73,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":92,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":34,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":5,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":74,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":15,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":9,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":66,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":33,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":63,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":7,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":71,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":14,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":10,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":41,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":11,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapHashCode":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":78,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":62,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":2,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":47,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":75,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":81,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":91,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":44,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArrayNull":94,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":87,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":79,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testRandomListSort":84,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":31,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testComparatorCompatibility":86,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":37,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":32,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":89,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":77,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":52},"transformations":[{"failures":[],"tindex":"bc9794f4-2520-11e5-892b-9bbe8f68e92d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:71","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated())"},"status":0},{"failures":[0,1,2],"tindex":"bc97e315-2520-11e5-892b-f5fe025a61ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"bc97e316-2520-11e5-892b-9f76dde4cd8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:694","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getKey()"},"status":-2},{"failures":[],"tindex":"bc97e317-2520-11e5-892b-65a49282a854","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:267","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[3,4],"tindex":"bc97e318-2520-11e5-892b-d548bb68c049","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:235","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"bc97e319-2520-11e5-892b-91d2833df991","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:93","type":"CtReturnImpl","sourcecode":"return E.compareTo(E)"},"status":-1},{"failures":[],"tindex":"bc980a2a-2520-11e5-892b-75b04f03a30e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"status":-2},{"failures":[],"tindex":"bc980a2b-2520-11e5-892b-0fde63fcf0b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:127","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"bc980a2c-2520-11e5-892b-31455465c288","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:515","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"bc980a2d-2520-11e5-892b-e304eb35a14b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":0},{"failures":[],"tindex":"bc98313e-2520-11e5-892b-3106f4262306","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[92],"tindex":"bc98313f-2520-11e5-892b-f5a90834f1d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"bc983140-2520-11e5-892b-3b14a0d1a0a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2090","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()"},"variableMap":{"node":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:248","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.getValue()"},"status":-2},{"failures":[93],"tindex":"bc983141-2520-11e5-892b-4505b4b961bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1123","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next())"},"status":-1},{"failures":[94],"tindex":"bc985852-2520-11e5-892b-e1c1c8732662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")"},"status":-1},{"failures":[],"tindex":"bc985853-2520-11e5-892b-83793420af8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:301","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"bc985854-2520-11e5-892b-2385c739c5d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:828","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"bc985855-2520-11e5-892b-b75fc19a9c70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:107","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":-2},{"failures":[],"tindex":"bc985856-2520-11e5-892b-b5369c4f19ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1337","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"status":-2},{"failures":[],"tindex":"bc985857-2520-11e5-892b-4d7043da1ed8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.next()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"bc9794f4-2520-11e5-892b-9bbe8f68e92d","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.set.UnmodifiableSortedSet.void writeObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.set.UnmodifiableSortedSet.java.util.Iterator iterator()","org.apache.commons.collections4.set.UnmodifiableSortedSet.void writeObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.iterators.UnmodifiableIterator.E next()","org.apache.commons.collections4.set.UnmodifiableSortedSet.void writeObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.iterators.UnmodifiableIterator.boolean hasNext()"]},"type":"graph"}]},{"transformation":"bc980a2c-2520-11e5-892b-31455465c288","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_(modCount)++","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]},{"transformation":"bc980a2d-2520-11e5-892b-e304eb35a14b","diffs":[{"variables":{"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":["org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.java.util.Iterator getIterator()_return iterator","org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry(org.apache.commons.collections4.map.ListOrderedMap,K)_this.parent = parent"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":["org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.V getValue()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.AbstractKeyValue.K getKey()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.java.util.Iterator iterator()"],"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":["org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.V getValue()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.AbstractKeyValue.K getKey()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.java.util.Iterator iterator()"],"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":["org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.V getValue()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.AbstractKeyValue.K getKey()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.ListOrderedMap.java.lang.String toString() -> org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.java.util.Iterator iterator()"]},"type":"graph"}]}]}