{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":99,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":157,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":97,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":57,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":102,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":101,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":158,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":138,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":113,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":21,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":25,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":134,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":58,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":120,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":155,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":130,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":36,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":152,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":114,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":146,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":129,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":59,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":13,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":160,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":38,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":131,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":127,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":132,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":3,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":74,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":173,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":31,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":49,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":90,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":86,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":109,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":141,"org.apache.commons.collections4.map.LRUMapTest.testLRU":79,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":128,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":92,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":76,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":151,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":15,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":175,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":106,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":23,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":27,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":37,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":80,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":18,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":169,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":19,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":163,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":45,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":52,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":111,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":162,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":39,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":164,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":167,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":165,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":154,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":51,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":150,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":126,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":48},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"e4f9fc03-24ef-11e5-97d7-d755a29b187b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e4f9fc04-24ef-11e5-97d7-7908f1dd7483","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:154","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"variableMap":{"normalMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:208","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).tailMap(K)"},"status":-2},{"failures":[],"tindex":"e4f9fc05-24ef-11e5-97d7-5defb858fe7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:298","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e4fa2316-24ef-11e5-97d7-4bf528aa2747","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"e4fa2317-24ef-11e5-97d7-7b67f9aa6d86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"status":-2},{"failures":[6,7,8,9],"tindex":"e4fa2318-24ef-11e5-97d7-f574172cb2fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[10,11],"tindex":"e4fa2319-24ef-11e5-97d7-237746ce8eaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"e4fa4a2a-24ef-11e5-97d7-db475554965c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[12,13,14,15],"tindex":"e4fa4a2b-24ef-11e5-97d7-571b2e90dcc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:76","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"e4fa4a2c-24ef-11e5-97d7-19e0d90ee726","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e4fa4a2d-24ef-11e5-97d7-4bf0dc9276a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V)"},"status":-2},{"failures":[16],"tindex":"e4fa4a2e-24ef-11e5-97d7-2f756f15bf38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"changed","nextCalled":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":-1},{"failures":[],"tindex":"e4fa713f-24ef-11e5-97d7-871a0efd83af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"e4fa7140-24ef-11e5-97d7-afe8aed627a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"e4fa7141-24ef-11e5-97d7-87b4e4df7e0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"b","list2":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"status":0},{"failures":[160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"e4fa7142-24ef-11e5-97d7-e78981afc70a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size())"},"status":-1},{"failures":[],"tindex":"e4fa9853-24ef-11e5-97d7-a35a110142cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()"},"status":-2},{"failures":[],"tindex":"e4fa9854-24ef-11e5-97d7-73943ee888bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"current","left":"current","root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[83,172,79,80,103],"tindex":"e4fa9855-24ef-11e5-97d7-fb2674773b6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:551","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"modCount","expectedModCount":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[173,174,175],"tindex":"e4fabf66-24ef-11e5-97d7-7305d9bf44d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:283","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e4fa7141-24ef-11e5-97d7-87b4e4df7e0b","diffs":[{"branches":{"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":["org.apache.commons.collections4.CollectionUtils$CardinalityHelper_int_freqB(java.lang.Object).b","org.apache.commons.collections4.CollectionUtils_<O>_java.util.Map_getCardinalityMap(java.lang.Iterable).l2","org.apache.commons.collections4.CollectionUtils$CardinalityHelper_int_getFreq(java.lang.Object,java.util.Map).b","org.apache.commons.collections4.CollectionUtils_<O>_java.util.Map_getCardinalityMap(java.lang.Iterable).b","org.apache.commons.collections4.CollectionUtils$CardinalityHelper_int_freqA(java.lang.Object).b","org.apache.commons.collections4.CollectionUtils_<O>_java.util.Map_getCardinalityMap(java.lang.Iterable).t1","org.apache.commons.collections4.CollectionUtils_<O>_java.util.Map_getCardinalityMap(java.lang.Iterable).e1","org.apache.commons.collections4.CollectionUtils$CardinalityHelper_int_getFreq(java.lang.Object,java.util.Map).t1","org.apache.commons.collections4.CollectionUtils$CardinalityHelper_org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":["org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqB(java.lang.Object)","org.apache.commons.collections4.CollectionUtils.<O> java.util.Map getCardinalityMap(java.lang.Iterable)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqA(java.lang.Object)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int getFreq(java.lang.Object,java.util.Map)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)"]},"edges":{"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":["org.apache.commons.collections4.CollectionUtils.boolean isEqualCollection(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqB(java.lang.Object)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqB(java.lang.Object) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqB(java.lang.Object)","org.apache.commons.collections4.CollectionUtils.boolean isEqualCollection(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqA(java.lang.Object) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqA(java.lang.Object)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqA(java.lang.Object) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int getFreq(java.lang.Object,java.util.Map)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.org.apache.commons.collections4.CollectionUtils$CardinalityHelper(java.lang.Iterable,java.lang.Iterable) -> org.apache.commons.collections4.CollectionUtils.<O> java.util.Map getCardinalityMap(java.lang.Iterable)","org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqB(java.lang.Object) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int getFreq(java.lang.Object,java.util.Map)","org.apache.commons.collections4.CollectionUtils.boolean isEqualCollection(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.CollectionUtils$CardinalityHelper.int freqA(java.lang.Object)"]},"type":"graph"}]}]}