{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":2,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":78,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":31,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":26,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":9,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":39,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":16,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":51,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":17,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":29,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":30,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":53,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":65,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":54,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":69,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":73,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":38,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":44,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":43,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":68,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":52,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":8,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":21,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":20,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":50,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":19,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":76,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":25,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":58},"transformations":[{"failures":[],"tindex":"67c9ef4b-2432-11e5-a9ae-bf229040b1eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:256","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.list()"},"status":-2},{"failures":[0],"tindex":"67ca165c-2432-11e5-a9ae-5d0cca75c51e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1},{"failures":[],"tindex":"67ca165d-2432-11e5-a9ae-f95f3391bff8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[1,2,3,4],"tindex":"67ca165e-2432-11e5-a9ae-e30cbc65e173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)"},"variableMap":{"v":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:360","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"67ca165f-2432-11e5-a9ae-39de08cae5a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey()).append('=').append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue()).toString()"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"67ca1660-2432-11e5-a9ae-8970b767afe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"status":-1},{"failures":[],"tindex":"67ca1661-2432-11e5-a9ae-3f3e2ff35935","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"67ca3d72-2432-11e5-a9ae-eb73d1717474","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:210","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"itemCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:432","type":"CtOperatorAssignmentImpl","sourcecode":"int += this.java.util.Map<K, V>[][int].size()"},"status":-1},{"failures":[],"tindex":"67ca3d73-2432-11e5-a9ae-a358ae58dc63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[],"tindex":"67ca3d74-2432-11e5-a9ae-1dbb0199cafb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:379","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[] , int)"},"variableMap":{"array":"array","start":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:397","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(java.lang.Object , int)"},"status":-2},{"failures":[],"tindex":"67ca3d75-2432-11e5-a9ae-fddd501104ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1195","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int"},"variableMap":{"parent":"this","modCount":"newCapacity","expectedModCount":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":-2},{"failures":[66],"tindex":"67ca3d76-2432-11e5-a9ae-ad8236ccfa5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"iter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1741","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    org.apache.commons.collections4.MultiMap<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[67],"tindex":"67ca3d77-2432-11e5-a9ae-e949ca115a05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:277","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\")"},"status":-1},{"failures":[],"tindex":"67ca3d78-2432-11e5-a9ae-11ed3636b68a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-2},{"failures":[66],"tindex":"67ca6489-2432-11e5-a9ae-fbbf94a24334","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1743","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MultiMap<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E))"},"status":-1},{"failures":[],"tindex":"67ca648a-2432-11e5-a9ae-9da9b22b1ecc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:769","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[68],"tindex":"67ca648b-2432-11e5-a9ae-9542dbc2184e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtIfImpl","sourcecode":"if (java.util.Set<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(java.util.Set<? extends E>));\n    return java.util.Set<E>;\n} "},"status":-1},{"failures":[],"tindex":"67ca648c-2432-11e5-a9ae-f37b00715fbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int)"},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,78],"tindex":"67ca648d-2432-11e5-a9ae-8963533a61f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[],"tindex":"67ca648e-2432-11e5-a9ae-2505138ce903","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"67ca3d73-2432-11e5-a9ae-a358ae58dc63","diffs":[{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":[],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":[],"org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":[],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":[]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"]},"type":"variable"}]}]}