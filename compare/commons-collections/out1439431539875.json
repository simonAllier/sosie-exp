{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":28,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":6,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":7,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":27,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":8,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":29,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":20,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":25,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":19,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":31,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":13,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":30,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":10,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":15,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":26,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":35,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":3,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":24,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":32,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":34,"org.apache.commons.collections4.SetUtilsTest.testHashCode":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":4,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":14,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":21,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":9,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":18,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":5,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":36,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":11,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":17},"transformations":[{"failures":[],"tindex":"cba477a5-415f-11e5-92d9-5bb28efb60ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"cba49eb6-415f-11e5-92d9-d58b5535a0b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"cba49eb7-415f-11e5-92d9-55cc0d9a2786","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:164","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"cba49eb8-415f-11e5-92d9-ff1c7dd2e05c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:734","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:169","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"status":-2},{"failures":[0],"tindex":"cba49eb9-415f-11e5-92d9-352eff05eebb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += T.hashCode()"},"status":-1},{"failures":[],"tindex":"cba49eba-415f-11e5-92d9-5f294fe8d3cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} "},"variableMap":{"ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[1,2,3,4],"tindex":"cba49ebb-415f-11e5-92d9-09bb89762d23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"cba49ebc-415f-11e5-92d9-0bdb5b9e1610","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:62","type":"CtInvocationImpl","sourcecode":"java.util.StringTokenizer.countTokens()"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"cba4c5cd-415f-11e5-92d9-1fec7e383486","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"cba4c5ce-415f-11e5-92d9-255ff6bffe1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"object","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"cba4c5cf-415f-11e5-92d9-a7f891cce5ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:124","type":"CtReturnImpl","sourcecode":"return java.util.Collection<?>.containsAll(java.util.Collection<?>)"},"status":-2},{"failures":[],"tindex":"cba4c5d0-415f-11e5-92d9-a9bd3e2c04f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"cba4ece1-415f-11e5-92d9-b7abf0c93356","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"cba4ece2-415f-11e5-92d9-0d08e336bc60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue())"},"status":0},{"failures":[],"tindex":"cba4ece3-415f-11e5-92d9-1b1a3f445e2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-2},{"failures":[],"tindex":"cba4ece4-415f-11e5-92d9-d1598af68a31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"cba4ece5-415f-11e5-92d9-ad5c6df4960c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[],"tindex":"cba4ece6-415f-11e5-92d9-8decf450d238","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[],"tindex":"cba4ece7-415f-11e5-92d9-39576194837b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:111","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if ((java.util.Set<E>.isEmpty()) == false) {\n        return false;\n    } \n}"},"variableMap":{"all":"all"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.add(this, java.util.List<java.util.Set<E>>, E)"},"status":-2},{"failures":[35,36],"tindex":"cba513f8-415f-11e5-92d9-13dab9ed931b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}