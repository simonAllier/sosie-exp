{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":123,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":9,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":87,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":90,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":124,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":4,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":3,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":7,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":68,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":112,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":0,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":38,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":60,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":1,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":95,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":82,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":46,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":104,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":16,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":23,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":24,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":125,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":6,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":57,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":47,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":25,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":114,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":12,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":27},"transformations":[{"failures":[],"tindex":"0259c25d-24dc-11e5-8396-9dc21e338f00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"valueTransformer cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:157","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() method is not supported\")"},"status":-2},{"failures":[],"tindex":"0259e96e-24dc-11e5-8396-0b3990db06e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"0259e96f-24dc-11e5-8396-c16367af6b6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:103","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Collection<E>.size()"},"status":-1},{"failures":[],"tindex":"025a1080-24dc-11e5-8396-bf01c8d2f375","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)"},"status":-2},{"failures":[],"tindex":"025a1081-24dc-11e5-8396-ffe8d7782d7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"025a1082-24dc-11e5-8396-ff1bc54fe85a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"025a1083-24dc-11e5-8396-65b024a7860c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":0},{"failures":[],"tindex":"025a1084-24dc-11e5-8396-dddb8e368efc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"025a3795-24dc-11e5-8396-b937f674016e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:117","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , org.apache.commons.collections4.Predicate<? super I>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"025a3796-24dc-11e5-8396-ad16ebbf6b47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:178","type":"CtAssignmentImpl","sourcecode":"java.lang.ref.ReferenceQueue<java.lang.Object> = new java.lang.ref.ReferenceQueue<java.lang.Object>()"},"status":-1},{"failures":[120,23],"tindex":"025a3797-24dc-11e5-8396-4d5b4f1adefd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"coll","existingSet":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:330","type":"CtInvocationImpl","sourcecode":"java.util.Collection<E>.clear()"},"status":-1},{"failures":[121],"tindex":"025a3798-24dc-11e5-8396-d10523987c92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"025a3799-24dc-11e5-8396-5b795ed4fd62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:139","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[122,123,124,125],"tindex":"025a5eaa-24dc-11e5-8396-178041280538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:370","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-1},{"failures":[126,127],"tindex":"025a5eab-24dc-11e5-8396-794eca8cd298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>)"},"status":-1},{"failures":[],"tindex":"025a5eac-24dc-11e5-8396-e9bbc5044335","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:166","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[],"tindex":"025a5ead-24dc-11e5-8396-612106f70647","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1602","type":"CtInvocationImpl","sourcecode":"java.lang.Iterable<? extends O>.iterator()"},"status":-2},{"failures":[],"tindex":"025a5eae-24dc-11e5-8396-1b9cb4bf21a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2},{"failures":[],"tindex":"025a5eaf-24dc-11e5-8396-536de50bdb81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-2},{"failures":[20,21],"tindex":"025a5eb0-24dc-11e5-8396-514f336bb3e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:483","type":"CtReturnImpl","sourcecode":"return int"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"025a1083-24dc-11e5-8396-65b024a7860c","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]"],"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().t1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().t1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1"]},"type":"branch"}]}]}