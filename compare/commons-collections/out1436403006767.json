{"failureDictionary":{"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":100,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":31,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":52,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":49,"org.apache.commons.collections4.SetUtilsTest.testEquals":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":59,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":92,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":89,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":80,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":51,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":55,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":14,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":86,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":70,"org.apache.commons.collections4.ArrayStackTest.testSearch":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsContract":83,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":28,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":47,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":71,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":75,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":61,"org.apache.commons.collections4.ListUtilsTest.testEquals":101,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":87,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":72,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":16,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":76,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":88,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":29,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":2,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":60,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":69,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":68,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":56,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":25,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":24,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":21,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":23,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":74,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":36,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":85,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":12,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":6,"org.apache.commons.collections4.CollectionUtilsTest.isFull":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsSelfHashCode":84,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":5,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":63,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":10,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":46,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":99},"transformations":[{"failures":[0],"tindex":"71432bb4-25d4-11e5-afb8-f7e069d18def","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"714379d5-25d4-11e5-afb8-d5f21668e8d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:83","type":"CtReturnImpl","sourcecode":"return this.java.util.Comparator<O>.compare(O, O)"},"status":-2},{"failures":[],"tindex":"714379d6-25d4-11e5-afb8-c98b2a3b1ed7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:605","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"7143a0e7-25d4-11e5-afb8-ef548a49e9fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"7143a0e8-25d4-11e5-afb8-a55cadea7b98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"full","beforeFirst":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"7143c7f9-25d4-11e5-afb8-4d2c0d3d859b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:749","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"7143c7fa-25d4-11e5-afb8-074d9dc2df8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:857","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(nextIndex()) - 1"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.nextIndex()"},"status":-2},{"failures":[98],"tindex":"7143c7fb-25d4-11e5-afb8-0df8de342af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"object","value":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"7143c7fc-25d4-11e5-afb8-bb3103652dbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:60","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BidiMap<K, V>)(super.decorated()))"},"status":-2},{"failures":[],"tindex":"7143c7fd-25d4-11e5-afb8-b95dc78c23db","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:223","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[99,100],"tindex":"7143ef0e-25d4-11e5-afb8-95289f9c38ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"7143ef0f-25d4-11e5-afb8-d58b2f137592","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:134","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>"},"status":-2},{"failures":[101],"tindex":"7143ef10-25d4-11e5-afb8-2b898e1dd8d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:257","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<?>.hasNext()) && (java.util.Iterator<?>.hasNext())) {\n    java.lang.Object = java.util.Iterator<?>.next();\n    java.lang.Object = java.util.Iterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"71441621-25d4-11e5-afb8-93f116a0b103","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:145","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"71441622-25d4-11e5-afb8-554061507b3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:106","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntrySetIterator(org.apache.commons.collections4.set.AbstractSetDecorator<java.util.Map.Entry<K, V>>.decorated().iterator())"},"status":-2},{"failures":[],"tindex":"71441623-25d4-11e5-afb8-63549f048fa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:375","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"71441624-25d4-11e5-afb8-6fc5fc6b6137","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"full","changed":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:313","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"71441625-25d4-11e5-afb8-1b42ba796c74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:254","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[],"tindex":"71443d36-25d4-11e5-afb8-f3d7bcf0741e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator"},"variableMap":{"org.apache.commons.collections4.functors.DefaultEquator.INSTANCE":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}