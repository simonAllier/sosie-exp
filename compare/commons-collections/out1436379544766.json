{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":25,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":5,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":30,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":68,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":10,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":20,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":57,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":33,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":71,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":16,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":6,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":34,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":50,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":39,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":23,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":14,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":59,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":55},"transformations":[{"failures":[0,1,2,3],"tindex":"d0ce9270-259d-11e5-928f-85a60d25c9a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super J, ? extends K>.transform(J)"},"status":-1},{"failures":[4,5],"tindex":"d0cee091-259d-11e5-928f-cd0bfb0e648e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:393","type":"CtAssignmentImpl","sourcecode":"boolean = java.util.Collection<V>.addAll(java.util.Collection<V>)"},"status":-1},{"failures":[6,7,8,9],"tindex":"d0cee092-259d-11e5-928f-b5fb9a585d5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"d0cee093-259d-11e5-928f-a573024ba307","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1342","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"key=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:398","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[],"tindex":"d0cee094-259d-11e5-928f-797e5262fe38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[42],"tindex":"d0cf07a5-259d-11e5-928f-11857c13f19e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:83","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[],"tindex":"d0cf07a6-259d-11e5-928f-df0f7f3fdf87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"d0cf07a7-259d-11e5-928f-f9019199e46e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:255","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"status":-2},{"failures":[43,44,42,45,46,47],"tindex":"d0cf07a8-259d-11e5-928f-d7721009c739","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"start2","end2":"end2","this":"this","i":"i","end1":"delta","k":"delta","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"d0cf2eb9-259d-11e5-928f-45bf56eee594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:307","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.util.List<java.util.Comparator<E>>.hashCode()"},"status":0},{"failures":[],"tindex":"d0cf2eba-259d-11e5-928f-91f481f2861d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[],"tindex":"d0cf2ebb-259d-11e5-928f-57bdbcd4777d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.NullPointerException(\"List must not be null\");\n} "},"variableMap":{"list":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":0},{"failures":[],"tindex":"d0cf55cc-259d-11e5-928f-7b5151a9310e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1496","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:577","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>, 0)"},"status":-2},{"failures":[],"tindex":"d0cf55cd-259d-11e5-928f-97bef96d016d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:224","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"d0cf55ce-259d-11e5-928f-b5ac3838f742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1296","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[48,49,50,51,52,53,54,55],"tindex":"d0cfa3ef-259d-11e5-928f-39645eafccac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"nodeCount","newCapacity":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1270","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"d0cfa3f0-259d-11e5-928f-b7f8b1f250e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:115","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"d0cfcb01-259d-11e5-928f-9f12321fb862","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d0cfcb02-259d-11e5-928f-7ba234fb72df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:849","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n    return true;\n} "},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"d0cfcb03-259d-11e5-928f-736974f25394","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}