{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":41,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":178,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":107,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":112,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":161,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":70,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionNullEquator":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":140,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":104,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":86,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":142,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":170,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":166,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":165,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":168,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":134,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":21},"transformations":[{"failures":[],"tindex":"9153344b-420f-11e5-9dfb-0b3454d68059","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"variableMap":{"args":"args","paramTypes":"args","methodName":"methodName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:83","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String , java.lang.Class<?>[] , java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"91535b5c-420f-11e5-9dfb-a17b20f6658f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (int + int) - int"},"variableMap":{"offset":"length","delta":"hashCode","k":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:477","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[0,1,2],"tindex":"91535b5d-420f-11e5-9dfb-6b9f3ba39327","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[],"tindex":"91535b5e-420f-11e5-9dfb-03ab4dbbfe3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"91535b5f-420f-11e5-9dfb-53bab6786328","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"index","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[154],"tindex":"91538270-420f-11e5-9dfb-f3d6e4247fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[155],"tindex":"91538271-420f-11e5-9dfb-758c04b72bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:544","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"equator may not be null\")"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"91538272-420f-11e5-9dfb-0109e158fe15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"91538273-420f-11e5-9dfb-e130e2a03045","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[156,157,158,159],"tindex":"9153a984-420f-11e5-9dfb-4f376d6e1b1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1058","type":"CtAssignmentImpl","sourcecode":"int = (int)++"},"variableMap":{"nextIndex":"h","currentIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:504","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"9153d095-420f-11e5-9dfb-0707a97a7c1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"status":-2},{"failures":[160],"tindex":"9153d096-420f-11e5-9dfb-a9c345f063f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:146","type":"CtReturnImpl","sourcecode":"return ((this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())) - 1"},"status":-1},{"failures":[],"tindex":"9153d097-420f-11e5-9dfb-eb8c53d23a2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"cloned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"9153d098-420f-11e5-9dfb-f1640657432a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:308","type":"CtAssignmentImpl","sourcecode":"E[][(int)++] = null"},"status":-1},{"failures":[],"tindex":"9153d099-420f-11e5-9dfb-a1e00cdb3adc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"9153d09a-420f-11e5-9dfb-e174c823ef00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"9153f7ab-420f-11e5-9dfb-cddc2c364d33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9153f7ac-420f-11e5-9dfb-25ea929186dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"next","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"9153f7ad-420f-11e5-9dfb-e51e35f1c78b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:196","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"9153f7ae-420f-11e5-9dfb-dbe07aaff868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:337","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:341","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}