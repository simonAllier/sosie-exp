{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":73,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":102,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":72,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":97,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":82,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":89,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":56,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":85,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":91,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":103,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":71,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":20,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":94,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":21,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":84,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":65,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":10,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":66,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":98,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":59,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":58,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":40,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":83,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":36,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":77,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":62,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":86,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":99,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":37,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":78,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":49,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":104,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":26,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":15,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":51,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":5,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":96,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":28,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":13,"org.apache.commons.collections4.SetUtilsTest.testHashCode":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":53,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":106,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":90,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":80,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":105,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":42,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":30,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":43,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":55,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":6,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":93,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":3,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":14,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":101,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":47,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":54,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":35,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":92,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":64,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":50,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":81},"transformations":[{"failures":[],"tindex":"ec3322ce-243c-11e5-92f7-65f861068add","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:139","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"ec3322cf-243c-11e5-92f7-2f3e0c5f6fcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ec3349e0-243c-11e5-92f7-8d89bcb07381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:568","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0],"tindex":"ec3349e1-243c-11e5-92f7-c96bd32ab411","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += T.hashCode()"},"status":-1},{"failures":[1,2,3,4],"tindex":"ec3349e2-243c-11e5-92f7-2f171b90c7f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().size()"},"status":-1},{"failures":[],"tindex":"ec3349e3-243c-11e5-92f7-7f1bbe1f0fb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:447","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator<E>)"},"status":-2},{"failures":[],"tindex":"ec3349e4-243c-11e5-92f7-2b0dfe8aabac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:156","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)"},"status":-2},{"failures":[],"tindex":"ec3349e5-243c-11e5-92f7-116edbe1c8cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], null)"},"status":-2},{"failures":[],"tindex":"ec3349e6-243c-11e5-92f7-23d11abdc8b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl","sourcecode":"return int > 0"},"variableMap":{"ret":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ec3370f7-243c-11e5-92f7-f51346c541e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"ec3370f8-243c-11e5-92f7-dd37769be0d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"ec3370f9-243c-11e5-92f7-37e600fe37ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:492","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator<K>(this)"},"status":0},{"failures":[],"tindex":"ec3370fa-243c-11e5-92f7-c5e82c5ec6bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:375","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"ec3370fb-243c-11e5-92f7-69741a9fb402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"))"},"status":-1},{"failures":[],"tindex":"ec3370fc-243c-11e5-92f7-8b44b0f1b323","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:602","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"ec33980d-243c-11e5-92f7-313b252dc705","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106],"tindex":"ec33980e-243c-11e5-92f7-ab0e483fd8a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"status":-1},{"failures":[107],"tindex":"ec33980f-243c-11e5-92f7-a95bfd5d4558","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"variableMap":{"predicate":"predicate","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> != null) && (org.apache.commons.collections4.Predicate<E> != null)) {\n    for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n        final E E = java.util.List<E>.get(int);\n        if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"ec339810-243c-11e5-92f7-c1cb1902771b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"variableMap":{"closures":"object","i":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    int = ((java.util.Map<?, ?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ec339811-243c-11e5-92f7-d178547e726e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"ec3370f9-243c-11e5-92f7-37e600fe37ee","diffs":[{"branches":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_nextEntry().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).l1","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator_org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap).b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_nextEntry().l3"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator_K_next().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap).b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)"]},"edges":{"org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next()":["org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()"],"org.apache.commons.collections4.map.AbstractReferenceMap.java.util.Iterator createKeySetIterator()":["org.apache.commons.collections4.map.AbstractReferenceMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator.K next()"]},"graph":"branch"}]}]}