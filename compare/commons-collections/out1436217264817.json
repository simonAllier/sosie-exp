{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":31,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":50,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":46,"org.apache.commons.collections4.CollectionUtilsTest.union":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":4,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":48,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":23,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":57,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":44,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":41,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":56,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":42,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":19,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":15,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":13,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":53,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":51,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":30,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":29,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":3,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":12,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":18,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":6,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":43,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":52,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":54,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":28,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":22,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":9,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":58,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":14,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":8,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":49,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":21,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":59,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":33,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":37,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":2,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":20,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":27,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":38,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":45,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":24,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":26,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":36,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":55,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":35,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":10,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":11},"transformations":[{"failures":[0,1],"tindex":"fa6b75f1-2423-11e5-9b7d-a9167bd8fc44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"status":-1},{"failures":[2,3],"tindex":"fa6b9d02-2423-11e5-9b7d-e72cf922269b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"status":-1},{"failures":[],"tindex":"fa6b9d03-2423-11e5-9b7d-8d3bc37532e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:470","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"fa6bc414-2423-11e5-9b7d-c5140b1d1b82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[4,5],"tindex":"fa6bc415-2423-11e5-9b7d-cd3b6fa3e067","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"nextNode":"parent","lastReturnedNode":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:651","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[6,7,8,9,10],"tindex":"fa6beb26-2423-11e5-9b7d-47b6d7ba95cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"fa6beb27-2423-11e5-9b7d-abc2bd71f7f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"result","changed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:205","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E)"},"status":-1},{"failures":[],"tindex":"fa6beb28-2423-11e5-9b7d-e3acf63233bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:229","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Transformer<? super V, ? extends V>) != null"},"variableMap":{"valueTransformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:123","type":"CtReturnImpl","sourcecode":"return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>)"},"status":0},{"failures":[],"tindex":"fa6c1239-2423-11e5-9b7d-490020fbab39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":0},{"failures":[],"tindex":"fa6c123a-2423-11e5-9b7d-7134553ebc8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[39],"tindex":"fa6c394b-2423-11e5-9b7d-2f18a0d209dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:251","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"fa6c394c-2423-11e5-9b7d-d3505b711fcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"fa6c394d-2423-11e5-9b7d-37a30a7b3612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:140","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"fa6c605e-2423-11e5-9b7d-873ff5366ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())"},"status":-2},{"failures":[],"tindex":"fa6c605f-2423-11e5-9b7d-47a45eb07add","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyMapIterator:46","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.MapIterator))"},"status":-2},{"failures":[52],"tindex":"fa6c6060-2423-11e5-9b7d-7dbfba05bb76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[53],"tindex":"fa6c8771-2423-11e5-9b7d-cf5734d68a65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:676","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Transformer must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\")"},"status":-1},{"failures":[54,55,56,57,58,59],"tindex":"fa6c8772-2423-11e5-9b7d-6f6f05f9bd4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"offset","d":"end1","offset":"offset","vDown":"vDown","delta":"start1","this":"this","sequence1":"sequence2","sequence2":"sequence1","vUp":"vDown","end2":"offset","equator":"equator","end1":"offset","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"fa6cae83-2423-11e5-9b7d-c5701bbb0cda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:68","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:199","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"status":-2},{"failures":[],"tindex":"fa6cae84-2423-11e5-9b7d-e1b923499346","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"fa6beb28-2423-11e5-9b7d-e3acf63233bf","diffs":[{"nodes":{"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.comparators.ComparableComparator.boolean equals(java.lang.Object)"]},"edges":{"org.apache.commons.collections4.comparators.TransformingComparator.boolean equals(java.lang.Object)":["org.apache.commons.collections4.comparators.TransformingComparator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.comparators.ComparableComparator.boolean equals(java.lang.Object)"],"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":[]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.comparators.ComparableComparator_boolean_equals(java.lang.Object).b"]},"type":"branch"}]},{"transformation":"fa6c1239-2423-11e5-9b7d-490020fbab39","diffs":[{"branches":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":["org.apache.commons.collections4.comparators.FixedOrderComparator_void_checkLocked().e1","org.apache.commons.collections4.comparators.FixedOrderComparator_void_checkLocked().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":["org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()"]},"edges":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":["org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked() -> org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()","org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked() -> org.apache.commons.collections4.comparators.FixedOrderComparator.boolean isLocked()"],"org.apache.commons.collections4.comparators.FixedOrderComparator.boolean add(T)":["org.apache.commons.collections4.comparators.FixedOrderComparator.boolean add(T) -> org.apache.commons.collections4.comparators.FixedOrderComparator.boolean isLocked()","org.apache.commons.collections4.comparators.FixedOrderComparator.boolean add(T) -> org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()"]},"graph":"branch"}]}]}