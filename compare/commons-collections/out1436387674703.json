{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":10,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":13,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":81,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEmptyMapCompatibility":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":52,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":54,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":72,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":16,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":25,"org.apache.commons.collections4.map.PredicatedMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":32,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":12,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":8,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":43,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":4,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":40,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":77,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":84,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":58,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":48,"org.apache.commons.collections4.map.SingletonMapTest.testMapRemove":6,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":39,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":62,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":61,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":37,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":85},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"bea0a8f7-25b0-11e5-97ca-67c05b38e83d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:130","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[],"tindex":"bea0d008-25b0-11e5-97ca-bb1e3594bfac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"bea0f719-25b0-11e5-97ca-e5fd1c36af10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[6],"tindex":"bea0f71a-25b0-11e5-97ca-8fd0d4521819","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:288","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[7,8],"tindex":"bea0f71b-25b0-11e5-97ca-65bd5df44e42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()"},"status":-1},{"failures":[],"tindex":"bea11e2c-25b0-11e5-97ca-2f47f783ae1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-2},{"failures":[],"tindex":"bea11e2d-25b0-11e5-97ca-e5564e1ba39b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:149","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-2},{"failures":[],"tindex":"bea11e2e-25b0-11e5-97ca-9db77feca827","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"bea11e2f-25b0-11e5-97ca-f5738ae355b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().first()"},"status":-1},{"failures":[],"tindex":"bea14540-25b0-11e5-97ca-81cd8e9cfec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    int -= 2;\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[49],"tindex":"bea14541-25b0-11e5-97ca-b760d65ddbbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"bea16c52-25b0-11e5-97ca-a18511067e53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:140","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().tailSet(E)"},"status":-2},{"failures":[],"tindex":"bea16c53-25b0-11e5-97ca-3bdc56f66863","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:875","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap(K , null)"},"status":-2},{"failures":[],"tindex":"bea16c54-25b0-11e5-97ca-2b3c9d844bd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:235","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"bea16c55-25b0-11e5-97ca-e5f7c2b96899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"key","o2":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:165","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(lookupKey(java.lang.Object)) != null"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"bea16c56-25b0-11e5-97ca-2f45eb9e77c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"left","parent":"entry","predecessor":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:221","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[80,81,82,83,84,85,86,87],"tindex":"bea19367-25b0-11e5-97ca-3df5651986d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[],"tindex":"bea19368-25b0-11e5-97ca-7b9c1394db12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl","sourcecode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))"},"status":-2},{"failures":[],"tindex":"bea19369-25b0-11e5-97ca-41eacbea14f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:167","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"bea0d008-25b0-11e5-97ca-bb1e3594bfac","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.V getValue()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.boolean hasNext()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.K next()"]},"type":"graph"}]}]}