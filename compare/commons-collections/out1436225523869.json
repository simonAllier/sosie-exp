{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":42,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":34,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":12,"org.apache.commons.collections4.map.LRUMapTest.testClone":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":57,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":58,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":71,"org.apache.commons.collections4.map.LinkedMapTest.testClone":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":44,"org.apache.commons.collections4.map.HashedMapTest.testClone":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":28},"transformations":[{"failures":[],"tindex":"3530a672-2437-11e5-9524-4dfd247323a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[0],"tindex":"3530cd83-2437-11e5-9524-973accb39b60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:214","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeSet without a SetMutator strategy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:811","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[],"tindex":"3530cd84-2437-11e5-9524-513deca0d7f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"3530cd85-2437-11e5-9524-91f88dddcaa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[1],"tindex":"3530cd86-2437-11e5-9524-1b2d7d3fc8a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:302","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(java.util.Map<org.apache.commons.collections4.Predicate<I>, org.apache.commons.collections4.Transformer<I, O>>)"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"3530cd87-2437-11e5-9524-858c4b4a2515","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"status":-1},{"failures":[],"tindex":"3530f498-2437-11e5-9524-1384a582f515","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:504","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"3530f499-2437-11e5-9524-05adb2256998","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"right","prior":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3530f49a-2437-11e5-9524-afa7cf6406ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"3530f49b-2437-11e5-9524-635058f9564d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"3530f49c-2437-11e5-9524-67029e98942e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:823","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:157","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"3530f49d-2437-11e5-9524-c54623d87018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"35311bae-2437-11e5-9524-997fd616493c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(this, java.util.List<java.util.Set<E>>, java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"35311baf-2437-11e5-9524-351ccf2a1913","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"status":0},{"failures":[8],"tindex":"35311bb0-2437-11e5-9524-fb69959c0027","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[9,10],"tindex":"35311bb1-2437-11e5-9524-df2ec118087f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1433","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<K, V>.getKey());\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<K, V>.getValue());\n}"},"variableMap":{"stream":"stream","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1432","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.size())"},"status":-1},{"failures":[],"tindex":"35311bb2-2437-11e5-9524-639077274149","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:861","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"35311bb3-2437-11e5-9524-57764fdbc27a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-1},{"failures":[24,25,26,27,28,29],"tindex":"353142c4-2437-11e5-9524-053e6114a648","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"353142c5-2437-11e5-9524-f7be381a8025","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}