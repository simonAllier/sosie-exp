{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":24,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":38,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":71,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":8,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":17,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":79,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":43,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":18,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":54,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":63,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":0,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":53,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":23,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":50,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":70,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":49,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":11,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":39,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":15,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":7,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":22,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":6,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":3,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":58,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":19,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":26,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":28,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":55,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":12,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":77,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":61,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":65,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":67,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":36,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":45,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":21,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":32,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":31,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":69,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":13},"transformations":[{"failures":[],"tindex":"dd3316ea-286c-11e5-a86d-a9341f49794e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-2},{"failures":[],"tindex":"dd33650b-286c-11e5-a86d-73d1d30404f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:224","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"dd33650c-286c-11e5-a86d-8d075c1b77ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:93","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"dd33650d-286c-11e5-a86d-2b3737ea7b6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap()"},"variableMap":{"this":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:59","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BidiMap<K, V>"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"dd338c1e-286c-11e5-a86d-bba1d51b1ec1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:402","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V)"},"status":-1},{"failures":[],"tindex":"dd338c1f-286c-11e5-a86d-8df82847f343","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:149","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().tailSet(E)"},"status":-2},{"failures":[],"tindex":"dd338c20-286c-11e5-a86d-35b4b9b8dff3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key4","i":"index","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[49],"tindex":"dd33b331-286c-11e5-a86d-dfa45129c861","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"dd33b332-286c-11e5-a86d-731f1f94c376","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"dd33b333-286c-11e5-a86d-61ef41bd7af3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"variableMap":{"coll":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"dd33b334-286c-11e5-a86d-9d44f147e143","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-2},{"failures":[],"tindex":"dd33da45-286c-11e5-a86d-d93a1d5ad272","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2000","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map.Entry.setValue is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"))"},"status":-2},{"failures":[],"tindex":"dd33da46-286c-11e5-a86d-919c40c2992d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58],"tindex":"dd33da47-286c-11e5-a86d-79a44eac12b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"dd340158-286c-11e5-a86d-37f124655690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"hash","expectedModCount":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[59],"tindex":"dd340159-286c-11e5-a86d-1f6f29426157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null))"},"status":-1},{"failures":[60,61,62,63,64,65,66,67,68,69],"tindex":"dd34015a-286c-11e5-a86d-35952f8df610","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,17,23],"tindex":"dd34286b-286c-11e5-a86d-bb3205254e38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:599","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:258","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-1},{"failures":[],"tindex":"dd34286c-286c-11e5-a86d-5991dad00af7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1292","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0"},"variableMap":{"modCount":"threshold","cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1264","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[],"tindex":"dd34286d-286c-11e5-a86d-fd5f9c9c945b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"dd340158-286c-11e5-a86d-37f124655690","diffs":[{"branches":{"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":["org.apache.commons.collections4.comparators.ComparatorChain_int_hashCode().t1","org.apache.commons.collections4.comparators.ComparatorChain_int_hashCode().e1"]},"type":"branch"}]},{"transformation":"dd34286c-286c-11e5-a86d-5991dad00af7","diffs":[{"branches":{"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"type":"graph"}]}]}