{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":16,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":36,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":67,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":19,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":41,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":49,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":29,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":17,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":5,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":15,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":50,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":46,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":31,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":57,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":51,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":34,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":14,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":18,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":12,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":74,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":30,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":22,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":64,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":38,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":55,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":78,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":21,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":75,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":70,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":59,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":0,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":65,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":63,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":80,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":66,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":48,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":2},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"f2bc01ca-46cf-11e5-9e4d-e72b344b8d0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-1},{"failures":[25,26,27,28,29,30,31,32],"tindex":"f2bc28db-46cf-11e5-9e4d-6912fe6656ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.util.List<E> java.util.List<E> = java.util.List<E>;\n    java.util.List<E> = null;\n    return java.util.List<E>;\n} "},"status":-1},{"failures":[],"tindex":"f2bc28dc-46cf-11e5-9e4d-4d743abebd64","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"p","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:593","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"f2bc4fed-46cf-11e5-9e4d-0114116d8200","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[33,34,35,36,37,38,39,40],"tindex":"f2bc4fee-46cf-11e5-9e4d-174e480f20f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"f2bc4fef-46cf-11e5-9e4d-bf54ffd6a98d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f2bc4ff0-46cf-11e5-9e4d-0f955881c0b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:92","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The size must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:181","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-2},{"failures":[41,42,43,44,45],"tindex":"f2bc4ff1-46cf-11e5-9e4d-09ed3ec7e8fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[25,28,29,30,32],"tindex":"f2bc7602-46cf-11e5-9e4d-27b752c0ca66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:119","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"f2bc7603-46cf-11e5-9e4d-7bad2e347abb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[46],"tindex":"f2bc7604-46cf-11e5-9e4d-434249c3f5e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1159","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"f2bc7605-46cf-11e5-9e4d-39d9b5c6205b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:80","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-1},{"failures":[],"tindex":"f2bc7606-46cf-11e5-9e4d-e3a857365c92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1087","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"f2bc7607-46cf-11e5-9e4d-b3465f2121b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:223","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":0},{"failures":[78],"tindex":"f2bc7608-46cf-11e5-9e4d-2f812b262ac5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:893","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.min()"},"variableMap":{"otherTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:87","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Collection<? extends E>)"},"status":-1},{"failures":[79,80,81,82,83,84],"tindex":"f2bc7609-46cf-11e5-9e4d-1b2931fecd7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"status":-1},{"failures":[],"tindex":"f2bc9d1a-46cf-11e5-9e4d-d57fd9a5f008","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())).append('}')"},"status":0},{"failures":[],"tindex":"f2bc9d1b-46cf-11e5-9e4d-15a13a88e9f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:342","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"f2bc9d1c-46cf-11e5-9e4d-c3bde05e27be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"f2bc9d1d-46cf-11e5-9e4d-f31b7aa691f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}