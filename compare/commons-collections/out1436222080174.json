{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":36,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":24,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":39,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":41,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":25,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":35,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":15,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":29,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":6,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":7,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":1,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":10,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":40,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":22,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":31,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":34,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":27,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":28,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testConstructorEx":43,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":33,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":2},"transformations":[{"failures":[],"tindex":"3096ccae-242f-11e5-89e5-e179cd0f6297","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:202","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":0},{"failures":[],"tindex":"3096f3bf-242f-11e5-89e5-11bd00fc5f6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"array","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"3096f3c0-242f-11e5-89e5-8134bf65f335","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:440","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Object, java.lang.Long>.put(K, java.lang.Long.valueOf(long))"},"status":-1},{"failures":[11,12,13,14,15],"tindex":"3096f3c1-242f-11e5-89e5-2b9c8fb9ceca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:427","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"root":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:506","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[16,17,18,19],"tindex":"30971ad2-242f-11e5-89e5-330c94e39533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"comparatorIndex","expectedModCount":"comparatorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[],"tindex":"30971ad3-242f-11e5-89e5-23c9ae450623","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[],"tindex":"30971ad4-242f-11e5-89e5-dfdef17e9784","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:57","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(java.util.Queue<? extends E>))"},"status":-2},{"failures":[20,21,22,23,24],"tindex":"30971ad5-242f-11e5-89e5-33bb6596c85b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"30971ad6-242f-11e5-89e5-b35bcb2effac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))"},"variableMap":{"closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:58","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ForClosure<E>(int , org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"30971ad7-242f-11e5-89e5-d56ef9e0c89c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34],"tindex":"309741e8-242f-11e5-89e5-b172e70d044f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"previousObjectSet","changed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"309741e9-242f-11e5-89e5-e5b49fb1c86d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"status":-2},{"failures":[35,36,37,38,39,40,41,42],"tindex":"309741ea-242f-11e5-89e5-9d5a4f3aa93a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:96","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"309741eb-242f-11e5-89e5-af7d5ccabd78","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:115","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"309741ec-242f-11e5-89e5-43be7026e049","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((java.util.List<E>)(decorated()))"},"status":-2},{"failures":[],"tindex":"309741ed-242f-11e5-89e5-a31fddf2b99a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:752","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<T>.remove()"},"status":-2},{"failures":[],"tindex":"309768fe-242f-11e5-89e5-e5eb428f3607","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:426","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"root","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:196","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[43],"tindex":"309768ff-242f-11e5-89e5-37eb291649fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The list must not be null\")"},"status":-1},{"failures":[],"tindex":"30976900-242f-11e5-89e5-a3d45a9b73a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\")"},"status":-2},{"failures":[],"tindex":"30976901-242f-11e5-89e5-d9ae12a06b3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"p","e":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:592","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3096ccae-242f-11e5-89e5-e179cd0f6297","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.comparators.FixedOrderComparator.boolean addAsEqual(T,T)":["org.apache.commons.collections4.comparators.FixedOrderComparator.boolean addAsEqual(T,T) -> org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()","org.apache.commons.collections4.comparators.FixedOrderComparator.boolean addAsEqual(T,T) -> org.apache.commons.collections4.comparators.FixedOrderComparator.boolean isLocked()"]},"graph":"branch"}]}]}