{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":70,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":7,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":13,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":54,"org.apache.commons.collections4.list.TreeListTest.testRemove":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":51,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":20,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":24,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":77,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":65,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":84,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":74,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":66,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":71,"org.apache.commons.collections4.ClosureUtilsTest.testNopClosure":3,"org.apache.commons.collections4.list.TreeListTest.testBug35258":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":59,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":6},"transformations":[{"failures":[],"tindex":"00156c89-24e6-11e5-9dcd-918ae07cda65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"siblingNode","this":"this","rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"0015baaa-24e6-11e5-9dcd-3fed0a805aef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"0015baab-24e6-11e5-9dcd-ade1e634912e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"variableMap":{"path":"current","current":"left","lengthInBits":"bitIndex","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0015baac-24e6-11e5-9dcd-51d860684c9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:212","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()"},"variableMap":{"this":"subSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:334","type":"CtAssignmentImpl","sourcecode":"java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size())"},"status":-2},{"failures":[],"tindex":"0015baad-24e6-11e5-9dcd-3d5f27600169","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[],"tindex":"0015e1be-24e6-11e5-9dcd-4b9bc61e9649","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0015e1bf-24e6-11e5-9dcd-4fcfa47b4b79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"length","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[0,1],"tindex":"001608d0-24e6-11e5-9dcd-81c6c19fae53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"list":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"001608d1-24e6-11e5-9dcd-5312b518e03e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[2,3,4],"tindex":"001608d2-24e6-11e5-9dcd-e94cdf1b5733","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14],"tindex":"001608d3-24e6-11e5-9dcd-696c095010c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:838","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"variableMap":{"s":"root","left":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E)"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"00162fe4-24e6-11e5-9dcd-e1e17fc6b6b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"00162fe5-24e6-11e5-9dcd-bbd47abb2712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:141","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"00162fe6-24e6-11e5-9dcd-a96da2ab35b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:417","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView()"},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:306","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this)"},"status":-2},{"failures":[95],"tindex":"00162fe7-24e6-11e5-9dcd-3fc3fb4b74b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Initial capacity must be a non negative number\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:144","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"001656f8-24e6-11e5-9dcd-fbdced0b1252","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"newNode","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"001656f9-24e6-11e5-9dcd-4dad916d91c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"status":-2},{"failures":[],"tindex":"001656fa-24e6-11e5-9dcd-3dc043580eee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:341","type":"CtReturnImpl","sourcecode":"return java.util.Collection<V>.contains(java.lang.Object)"},"status":-2},{"failures":[96,97],"tindex":"001656fb-24e6-11e5-9dcd-a9bbaeae8bed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"status":-1},{"failures":[],"tindex":"00167e0c-24e6-11e5-9dcd-c512a72170c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}