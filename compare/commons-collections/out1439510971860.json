{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":98,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":147,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":77,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":64,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":123,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":127,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.LinkedMapTest.testReset":121,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":79,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":0,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":47,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":65,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":48,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":114,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":28,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":99,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":6,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":69,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":148,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":32,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":38,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":8,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":158,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":142,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":146,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":12,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":115,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":144,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":129,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":35,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":126,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":131,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":176,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":9,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":2,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.map.LRUMapTest.testClone":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":24,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":110,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":111,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":51,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":154,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":73,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":128,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":177,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":74,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":68,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":18,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":43,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":29,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":46,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":151,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":166,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":180,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":27,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":78,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":118,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":10,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":19,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":175,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":84,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":103,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":112,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":119,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":97,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":134,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":102,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":83,"org.apache.commons.collections4.map.LRUMapTest.testLRU":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":31,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":49,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":89,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":156,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":157,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":82,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":132,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":36,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":52,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":135,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":40,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":58,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":62,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":37,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":93,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":96,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":95,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":94,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":41,"org.apache.commons.collections4.map.LRUMapTest.testReset":63,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":113,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":122,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":167,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":117,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":26,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":21,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":57,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":86,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":125,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":67,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":153,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.map.LinkedMapTest.testClone":120,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":137,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":20,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":87,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":116,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":163,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":25,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":133},"transformations":[{"failures":[0],"tindex":"bccc1dc8-4218-11e5-b2f0-398525dc48f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"root","start":"root","this":"this","predecessor":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[1,2,3,4,5],"tindex":"bccc44d9-4218-11e5-b2f0-0de438e11c51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[6],"tindex":"bccc44da-4218-11e5-b2f0-116599ed628f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"bccc6beb-4218-11e5-b2f0-7df8342b222d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:256","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"bccc6bec-4218-11e5-b2f0-19d5e65a534e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1076","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"bccc6bed-4218-11e5-b2f0-bbeba36b81f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1339","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Entry(\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1233","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"bccd2f3e-4218-11e5-b2f0-8d11c7df4125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:237","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[7,8],"tindex":"bccd2f3f-4218-11e5-b2f0-5bb3266baf8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[],"tindex":"bccd5650-4218-11e5-b2f0-5b2a99530918","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":-2},{"failures":[9,10],"tindex":"bccd7d61-4218-11e5-b2f0-bf8599591a09","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:269","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:205","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E)"},"status":-1},{"failures":[],"tindex":"bccd7d62-4218-11e5-b2f0-5b4ae7a37099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"lengthInBits","lengthInBits":"lengthInBits","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"lengthInBits","otherOffsetInBits":"lengthInBits","otherLengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"bccda473-4218-11e5-b2f0-17788e30c489","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"bccda474-4218-11e5-b2f0-4dd2723a6348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"bccda475-4218-11e5-b2f0-a3b1f80e510c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = (int[][(int + 1)]) - 1"},"status":-2},{"failures":[],"tindex":"bccda476-4218-11e5-b2f0-bbed39cbcd21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:149","type":"CtLocalVariableImpl","sourcecode":"final java.util.Collection<V> java.util.Collection<V> = super.values()"},"status":-2},{"failures":[],"tindex":"bccda477-4218-11e5-b2f0-fbb7083873c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:831","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"nextIndex":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:134","type":"CtAssignmentImpl","sourcecode":"int[][(int + int)] = int"},"status":-2},{"failures":[],"tindex":"bccdf298-4218-11e5-b2f0-b127a9065708","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:308","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"bccdf299-4218-11e5-b2f0-f73211b8ddfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[],"tindex":"bccdf29a-4218-11e5-b2f0-6518aed0aa42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"key","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key","keyType":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:496","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object = K"},"status":-2},{"failures":[],"tindex":"bcce19ab-4218-11e5-b2f0-f97f331a3516","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:428","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}