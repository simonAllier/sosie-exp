{"failureDictionary":{"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":13,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":18,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":26,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":21,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":28,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":17,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":24,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":20,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":14,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":29,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":12,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":7,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":9,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":10,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":6,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":16,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":25},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"43a65076-25cb-11e5-90a5-df0fc1278091","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"m","index":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:178","type":"CtLocalVariableImpl","sourcecode":"final int int = int - int"},"status":-1},{"failures":[],"tindex":"43a67787-25cb-11e5-90a5-496f37051785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:142","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int = 0;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[6,7,8,9,10],"tindex":"43a67788-25cb-11e5-90a5-8ba09fd39471","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[11],"tindex":"43a67789-25cb-11e5-90a5-9b6dd8572d40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"43a69e9a-25cb-11e5-90a5-174326f87acf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"43a69e9b-25cb-11e5-90a5-c16781e583bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:989","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this)"},"status":0},{"failures":[],"tindex":"43a69e9c-25cb-11e5-90a5-89deb52ae957","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rightChild","y":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:838","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"43a69e9d-25cb-11e5-90a5-c5353161e22d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":0},{"failures":[12,13,14],"tindex":"43a69e9e-25cb-11e5-90a5-3740513c3b3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"status":-1},{"failures":[],"tindex":"43a6c5af-25cb-11e5-90a5-ef05f8bd020c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:201","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()"},"status":0},{"failures":[15],"tindex":"43a6c5b0-25cb-11e5-90a5-f97b2b836e46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Iterator must not be null\")"},"status":-1},{"failures":[],"tindex":"43a6c5b1-25cb-11e5-90a5-e5ffcccbd813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V)"},"status":-2},{"failures":[],"tindex":"43a6c5b2-25cb-11e5-90a5-1d04a56b4d6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-2},{"failures":[16,17],"tindex":"43a6c5b3-25cb-11e5-90a5-433147cde013","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:614","type":"CtIfImpl","sourcecode":"if (O == null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (java.lang.Object == null) {\n            int++;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (O.equals(java.lang.Object)) {\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"43a6c5b4-25cb-11e5-90a5-a1634cc7bd87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"found","current":"found","right":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:967","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"43a6ecc5-25cb-11e5-90a5-e1e2ca192067","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().lastIndexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"43a6ecc6-25cb-11e5-90a5-0167c81015a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:383","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.Bag<?>.getCount(E)"},"status":-2},{"failures":[18,19,20],"tindex":"43a6ecc7-25cb-11e5-90a5-01725f7c64be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:353","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"status":-1},{"failures":[21,22,23,24],"tindex":"43a6ecc8-25cb-11e5-90a5-7f3eb8880150","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"status":-1},{"failures":[25,26,27,28,29,30],"tindex":"43a6ecc9-25cb-11e5-90a5-8beda835e806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"43a69e9b-25cb-11e5-90a5-c16781e583bb","diffs":[{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"}]}]}