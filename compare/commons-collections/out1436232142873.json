{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":15,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":22,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":85,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":70,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":145,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":107,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":62,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":115,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":7,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":116,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":118,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":131,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":24,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":48,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":104,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":50,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":111,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":31,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":17,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":109,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":3,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":128,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":28,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":108,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":68,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":5,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":53,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":79},"transformations":[{"failures":[],"tindex":"9e6ccfe9-2446-11e5-9c7b-a9b4b74410e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"y","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:891","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"9e6ccfea-2446-11e5-9c7b-79e22b24d0b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"left","left":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:583","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"9e6ccfeb-2446-11e5-9c7b-a70e864027cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[0],"tindex":"9e6cf6fc-2446-11e5-9c7b-c518e0d0ac40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:229","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"9e6cf6fd-2446-11e5-9c7b-1328bd6ae3f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:212","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[1],"tindex":"9e6cf6fe-2446-11e5-9c7b-cf67eb4c509d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\")"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"9e6cf6ff-2446-11e5-9c7b-858198a9b02e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    return false;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"9e6cf700-2446-11e5-9c7b-adf47fe3632d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[67,68,69,70,71,72],"tindex":"9e6cf701-2446-11e5-9c7b-75090fe64ba4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"start1","d":"end2","offset":"end1","vDown":"vDown","delta":"offset","this":"this","sequence1":"sequence1","sequence2":"sequence1","vUp":"vDown","equator":"equator","end2":"start2","end1":"end1","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[73,74,75,76],"tindex":"9e6d1e12-2446-11e5-9c7b-db162367acca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:92","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The size must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1202","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"))"},"status":-1},{"failures":[],"tindex":"9e6d1e13-2446-11e5-9c7b-43dd2df3d86f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(this, java.util.List<java.util.Set<E>>, java.util.Collection<? extends E>)"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"9e6d1e14-2446-11e5-9c7b-5f2ac4314059","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:215","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"9e6d1e15-2446-11e5-9c7b-8ff9dfebb0b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"retval":"lcsLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:73","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":0},{"failures":[94,95,96,97,98,99,100,101,102],"tindex":"9e6d1e16-2446-11e5-9c7b-3bc759ada3f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[103,104],"tindex":"9e6d1e17-2446-11e5-9c7b-7d27ae4cf4d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[105],"tindex":"9e6d1e18-2446-11e5-9c7b-f5ed715e8c6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"9e6d4529-2446-11e5-9c7b-3719ec38205d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[105],"tindex":"9e6d452a-2446-11e5-9c7b-9b985e9be0e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:275","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"9e6d452b-2446-11e5-9c7b-5fb7004b326b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"status":-1},{"failures":[],"tindex":"9e6d452c-2446-11e5-9c7b-d54c36f0c289","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"modified","removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:774","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"9e6ccfe9-2446-11e5-9c7b-a9b4b74410e6","diffs":[{"nodes":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":[],"org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1"]},"type":"branch"}]}]}