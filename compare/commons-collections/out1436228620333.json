{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":77,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":95,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":80,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":29,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":86,"org.apache.commons.collections4.CollectionUtilsTest.find":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":7,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":53,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":90,"org.apache.commons.collections4.map.LRUMapTest.testLRU":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":36,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":57,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":45,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":74},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"6ad60018-243e-11e5-afb3-bf8760b88d8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"6ad64e39-243e-11e5-afb3-0ff73ab701d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"variableMap":{"total":"i","keys":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":0},{"failures":[45,46,47,48,49,50,0,1,2,3,4,51,5,6,7,52,8,53,54,55,56,57,58,59,60,9,61,10,11,12,13,62,14,15,16,17,18,19,20,21,63,64,22,65],"tindex":"6ad6754a-243e-11e5-afb3-733f3f5b5abe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:137","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"6ad6754b-243e-11e5-afb3-37bba5ed6162","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:70","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.GrowthList<E>(java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"6ad6754c-243e-11e5-afb3-c93b70815c93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:177","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == 0"},"status":-2},{"failures":[66,67,68],"tindex":"6ad69c5d-243e-11e5-afb3-1d5f2636fd10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[69,70],"tindex":"6ad6c36e-243e-11e5-afb3-23afc07b2b10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:308","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[71],"tindex":"6ad6c36f-243e-11e5-afb3-934782bf01e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"status":-1},{"failures":[23,72,73,74,75,76,77,78,79,80,81,82,83,84,85,34],"tindex":"6ad6ea80-243e-11e5-afb3-6f410dda9842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[86,87,88],"tindex":"6ad6ea81-243e-11e5-afb3-6d1d96f59a09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<E>copy(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"iClosures":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:126","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>[])(org.apache.commons.collections4.Closure<? super E>[].clone()))"},"status":-1},{"failures":[],"tindex":"6ad6ea82-243e-11e5-afb3-219e3551c765","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"status":-2},{"failures":[],"tindex":"6ad71193-243e-11e5-afb3-87839e3c9fec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[89,90],"tindex":"6ad71194-243e-11e5-afb3-fffdd2752b15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.addAll(java.util.List<E>)"},"variableMap":{"temp":"setOrder","sl":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:330","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.addAll(int, java.util.List<E>)"},"status":-1},{"failures":[],"tindex":"6ad71195-243e-11e5-afb3-6b73118e1e7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:739","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[91,92,93,94],"tindex":"6ad738a6-243e-11e5-afb3-99439122ea66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"hashCode","key":"key1","bitIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[92],"tindex":"6ad738a7-243e-11e5-afb3-f1e8e01344e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:319","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K), V)"},"status":-1},{"failures":[95],"tindex":"6ad75fb8-243e-11e5-afb3-810f4db40ebc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:43","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map Entry must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[20,96,42],"tindex":"6ad75fb9-243e-11e5-afb3-4d6b0c40b50f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[97,98],"tindex":"6ad75fba-243e-11e5-afb3-f928a5ba4888","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:627","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"6ad75fbb-243e-11e5-afb3-8731e8fb8e35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"6ad75fbb-243e-11e5-afb3-8731e8fb8e35","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.V getValue()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.boolean hasNext()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.K next()"]},"graph":"branch"}]}]}