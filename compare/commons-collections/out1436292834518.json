{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.union":34,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":19,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":91,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":7,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":50,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":81,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":79,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":23,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":78,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":27,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":39,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":52,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":98,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":6,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":26,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":24,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":80,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":67,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":100,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":16,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":102,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":90,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":74,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":87,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":62,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":45,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":75},"transformations":[{"failures":[0,1,2],"tindex":"ed77353e-24d3-11e5-99d9-33c93e7a57b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[],"tindex":"ed775c4f-24d3-11e5-99d9-2d636f5be900","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1428","type":"CtReturnImpl","sourcecode":"return !org.apache.commons.collections4.CollectionUtils.(org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection<?>))"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"ed775c50-24d3-11e5-99d9-692b9b099518","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"variableMap":{"iterators":"iterators","valueSet":"valueSet","values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"ed775c51-24d3-11e5-99d9-cdcaa9fd4bdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ed778362-24d3-11e5-99d9-6b21ef736271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"ed778363-24d3-11e5-99d9-b78ea48bd046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:668","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.bidimap.AbstractDualBidiMap.MapEntry.this.getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:164","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K K = ((K)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"ed778364-24d3-11e5-99d9-a7e9a5061f3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:386","type":"CtReturnImpl","sourcecode":"return \"[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[],"tindex":"ed778365-24d3-11e5-99d9-87b38ed42a76","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"size":"size","cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:551","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":0},{"failures":[34,35,36],"tindex":"ed778366-24d3-11e5-99d9-37a4d10b24fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:230","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O))"},"status":-1},{"failures":[37,38,39,40,41,42,43],"tindex":"ed778367-24d3-11e5-99d9-59dc3ed7f684","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)"},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-1},{"failures":[44,45,46],"tindex":"ed77aa78-24d3-11e5-99d9-c3a4ee912f75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"ed77aa79-24d3-11e5-99d9-759051847e4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:83","type":"CtAssignmentImpl","sourcecode":"char = 0"},"variableMap":{"k":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:91","type":"CtAssignmentImpl","sourcecode":"char = java.lang.String.charAt(int)"},"status":-1},{"failures":[],"tindex":"ed77aa7a-24d3-11e5-99d9-ed79944bdfd6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:260","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"ed77aa7b-24d3-11e5-99d9-755a2d5f91d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"))"},"status":-1},{"failures":[],"tindex":"ed77aa7c-24d3-11e5-99d9-39706ebb85f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>"},"variableMap":{"decorated":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(org.apache.commons.collections4.SortedBag<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"ed77d18d-24d3-11e5-99d9-57f0e98ff397","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"ed77d18e-24d3-11e5-99d9-a1773671aa7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:380","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"ed77d18f-24d3-11e5-99d9-af8e5868bab6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"variableMap":{"coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)"},"status":-2},{"failures":[47,48,49,50,45,51,52,53,92,54,55,93,56,57,58,59,60,61,94,62,95,96,63,64,97,98,99,65,66,100,67,68,69,101,102,103,70,104,105,106,107,108,109,110,111,71],"tindex":"ed77d190-24d3-11e5-99d9-8f85d07ec358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"ed77f8a1-24d3-11e5-99d9-eb5cddf66c00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rightChild","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:834","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}