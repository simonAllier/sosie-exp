{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":7,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":11,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":15,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":46,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":20,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":16,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":24,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":29,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":52,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":43,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":2,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":33,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToMapEntry":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":61,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":53,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":42,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":55,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":17},"transformations":[{"failures":[],"tindex":"41e15ae3-25be-11e5-a01e-d5d17272f1ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"41e181f4-25be-11e5-a01e-55ff86c51f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:564","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"41e181f5-25be-11e5-a01e-99f1dbd5dd27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:430","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"41e181f6-25be-11e5-a01e-35e253d468ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:920","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"41e1a907-25be-11e5-a01e-131653928f48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1218","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString()"},"status":-2},{"failures":[],"tindex":"41e1a908-25be-11e5-a01e-93c4d186d9d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[0,1],"tindex":"41e1a909-25be-11e5-a01e-61c28dc3b14a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:436","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"41e1d01a-25be-11e5-a01e-9dca209ca58f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:109","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.containsKey(java.lang.Object)"},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"41e1d01b-25be-11e5-a01e-b588dba6d4fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"k","start":"k","end":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[8,9],"tindex":"41e1d01c-25be-11e5-a01e-d95827a035b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:149","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-1},{"failures":[10],"tindex":"41e1d01d-25be-11e5-a01e-6733c64e8da5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:150","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode())"},"status":-1},{"failures":[11,12,13],"tindex":"41e1f72e-25be-11e5-a01e-cfafd851422b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"41e1f72f-25be-11e5-a01e-bd7c0db31f15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"variableMap":{"buf":"buf","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[14,15],"tindex":"41e1f730-25be-11e5-a01e-c54b1aa68f04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:79","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"variableMap":{"i":"maximumCacheSize","beginIndex1":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:217","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, ((int) - (int)))"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"41e1f731-25be-11e5-a01e-4543f9af7b15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:763","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"41e21e42-25be-11e5-a01e-594edcfdcea6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[],"tindex":"41e21e43-25be-11e5-a01e-7f4bf7b3c1ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"41e21e44-25be-11e5-a01e-1b7eec72280f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:203","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"41e21e45-25be-11e5-a01e-91c785d42938","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Trie must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:220","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"41e181f6-25be-11e5-a01e-35e253d468ee","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"type":"graph"}]}]}