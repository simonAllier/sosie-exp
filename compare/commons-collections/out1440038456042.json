{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":10,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":19,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":2,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":42,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":24,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":12,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":43,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":28,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":49,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":17,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":4,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":44,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":21,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":45,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":6,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":9,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":46,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":52,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":29,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.CollectionUtilsTest.transform2":54,"org.apache.commons.collections4.CollectionUtilsTest.transform1":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":26,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":51,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":58,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":11,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":40},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"e1de54a4-46e4-11e5-8e93-399f167b63bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:983","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":-1},{"failures":[],"tindex":"e1de7bb5-46e4-11e5-8e93-2509bd19e0d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Closure<? super E>"},"variableMap":{"iClosure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.IfClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[6,7,8,9,10,11],"tindex":"e1de7bb6-46e4-11e5-8e93-8fac08725c12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"e1dea2c7-46e4-11e5-8e93-0dcb1cffb20c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"status":-1},{"failures":[],"tindex":"e1dea2c8-46e4-11e5-8e93-6d3873fb6b6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:264","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"link":"before","header":"before","after":"link"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:303","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"status":-2},{"failures":[36,1,37,38,2,4,39,40],"tindex":"e1dea2c9-46e4-11e5-8e93-c5b9746daf2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[41,42],"tindex":"e1dea2ca-46e4-11e5-8e93-edf240f581e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:168","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"e1dea2cb-46e4-11e5-8e93-93389cd36f9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"current","parent":"parent","predecessor":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:212","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[43,44],"tindex":"e1dea2cc-46e4-11e5-8e93-a3d661e29a4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"status":-1},{"failures":[],"tindex":"e1dec9dd-46e4-11e5-8e93-e9f36c9fdc98","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[45],"tindex":"e1dec9de-46e4-11e5-8e93-816b85346c69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:214","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"status":-1},{"failures":[46,47,48,49,50,51,52],"tindex":"e1dec9df-46e4-11e5-8e93-0b694c375ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:148","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(java.lang.Object))))"},"status":-1},{"failures":[53,54],"tindex":"e1dec9e0-46e4-11e5-8e93-4fcdfcbc7c4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<C> != null) && (org.apache.commons.collections4.Transformer<? super C, ? extends C> != null)) {\n    if (java.util.Collection<C> instanceof java.util.List<?>) {\n        final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n        for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n            java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n        }\n    } else {\n        final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n        java.util.Collection<C>.clear();\n        java.util.Collection<C>.addAll(java.util.Collection<C>);\n    }\n} "},"status":-1},{"failures":[55],"tindex":"e1dec9e1-46e4-11e5-8e93-d7aee15f4cbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":-1},{"failures":[],"tindex":"e1def0f2-46e4-11e5-8e93-73a59c3ac808","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[36],"tindex":"e1def0f3-46e4-11e5-8e93-c514c9091838","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:907","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1056","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"e1def0f4-46e4-11e5-8e93-ed857c630e6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1260","type":"CtAssignmentImpl","sourcecode":"float = java.io.ObjectInputStream.readFloat()"},"status":-1},{"failures":[],"tindex":"e1def0f5-46e4-11e5-8e93-d1a6521f816e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[56],"tindex":"e1def0f6-46e4-11e5-8e93-ede61188f849","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[57,58],"tindex":"e1df1807-46e4-11e5-8e93-bd2e0a095fe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:348","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}