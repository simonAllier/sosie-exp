{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":4,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":80,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":28,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":81,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":83,"org.apache.commons.collections4.CollectionUtilsTest.collect":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":75,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":23,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":71,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":33,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":39,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":60,"org.apache.commons.collections4.CollectionUtilsTest.transform2":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":18},"transformations":[{"failures":[],"tindex":"f8214d0f-2455-11e5-a123-c3e1a7de2d47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:147","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[0,1,2],"tindex":"f8214d10-2455-11e5-a123-53e1da9421a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"f8217421-2455-11e5-a123-f3a62b50b4ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[3,4,5],"tindex":"f8217422-2455-11e5-a123-990a22410968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"f8217423-2455-11e5-a123-adb75856dc7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:802","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[6,7,8,9,10,11,12],"tindex":"f8217424-2455-11e5-a123-9b411c3a814d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"f8217425-2455-11e5-a123-bd94522f5875","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f8217426-2455-11e5-a123-c507d50b7123","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[13,14,15,16,17],"tindex":"f8217427-2455-11e5-a123-e3f732621ae2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ClosureUtils.org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E,java.lang.Object>invokerTransformer(java.lang.String))"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"f8219b38-2455-11e5-a123-57e137d31f0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:141","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"next":"node","cachedNode":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:557","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"f8219b39-2455-11e5-a123-8970e5f65952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[82],"tindex":"f8219b3a-2455-11e5-a123-4189095aa171","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"f8219b3b-2455-11e5-a123-43fa080f486d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:338","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"f8219b3c-2455-11e5-a123-b39a1cd45ec5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:617","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"parent":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"f821c24d-2455-11e5-a123-6f68e07a7a15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[],"tindex":"f821c24e-2455-11e5-a123-0dbc289651c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key5","next":"entry","entry":"entry","key2":"key2","previous":"previous","hashCode":"hashCode","key3":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"f821c24f-2455-11e5-a123-afeb5ed60007","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:670","type":"CtReturnImpl","sourcecode":"return T.compareTo(T)"},"status":-2},{"failures":[],"tindex":"f821c250-2455-11e5-a123-a38594093b60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":0},{"failures":[83],"tindex":"f821c251-2455-11e5-a123-a91f367bea63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[],"tindex":"f821c252-2455-11e5-a123-0501d601664d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:249","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f821c250-2455-11e5-a123-a38594093b60","diffs":[{"branches":{"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":["org.apache.commons.collections4.iterators.IteratorIterable_org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).t1","org.apache.commons.collections4.iterators.IteratorIterable_org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean).t1"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":["org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorIterable.org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)"]},"edges":{"org.apache.commons.collections4.IteratorUtils.<E> java.lang.Iterable asMultipleUseIterable(java.util.Iterator)":["org.apache.commons.collections4.IteratorUtils.<E> java.lang.Iterable asMultipleUseIterable(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorIterable.org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean)"],"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":["org.apache.commons.collections4.iterators.IteratorIterable.org.apache.commons.collections4.iterators.IteratorIterable(java.util.Iterator,boolean) -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"]},"graph":"branch"}]}]}