{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":21,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":1,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":7,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":6,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":81,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":102,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":58,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":42,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":37,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":9,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":50,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":94,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":85,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":71,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":74,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":45,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":35,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":43,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":90,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":27,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":75,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":30,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":62,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":64,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":40,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":101,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":95},"transformations":[{"failures":[0,1,2],"tindex":"28696b3a-25df-11e5-9ebf-47b083fff2ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)"},"status":-1},{"failures":[],"tindex":"2869e06b-25df-11e5-9ebf-ad212e632889","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1507","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:95","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2},{"failures":[],"tindex":"286a077c-25df-11e5-9ebf-f9a6b3bb63f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1369","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('{')"},"status":0},{"failures":[],"tindex":"286a077d-25df-11e5-9ebf-fd1f7db80179","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:484","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"size":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"status":0},{"failures":[],"tindex":"286a2e8e-25df-11e5-9ebf-57e5b2de9141","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:286","type":"CtReturnImpl","sourcecode":"return super.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"286a2e8f-25df-11e5-9ebf-f5fc04049693","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[],"tindex":"286a54a0-25df-11e5-9ebf-dd03612daace","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:307","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"286a54a1-25df-11e5-9ebf-1daa034727c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:139","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.lang.Boolean.booleanValue()"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"286a7bb2-25df-11e5-9ebf-d37a20fedeba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"286a7bb3-25df-11e5-9ebf-935e1cdb7d26","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:296","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1108","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))"},"status":-2},{"failures":[8,9,10,11],"tindex":"286aa2c4-25df-11e5-9ebf-c1292ab72c39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:336","type":"CtInvocationImpl","sourcecode":"super.clear()"},"status":-1},{"failures":[],"tindex":"286ac9d5-25df-11e5-9ebf-bdbb72fb7173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1233","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next())"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"286ac9d6-25df-11e5-9ebf-cd1b1b8f8e6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[60],"tindex":"286af0e7-25df-11e5-9ebf-b37bb03242a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:101","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.HashMap<V, K>()"},"variableMap":{"reverseMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:392","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.TreeMap<V, K>(java.util.Comparator<? super V>)"},"status":-1},{"failures":[],"tindex":"286b17f8-25df-11e5-9ebf-673b2f17b752","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"found","this":"this","bitIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    int -= 2;\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"286b3f09-25df-11e5-9ebf-0518cb244d2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()"},"status":-1},{"failures":[],"tindex":"286b661a-25df-11e5-9ebf-c37ed1acaf7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1002","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.listIterator()"},"status":-2},{"failures":[103,104],"tindex":"286b8d2b-25df-11e5-9ebf-5baa122d6a68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:288","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[105,106,107],"tindex":"286b8d2c-25df-11e5-9ebf-dfcb13525330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:327","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"286a077c-25df-11e5-9ebf-f9a6b3bb63f5","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.Flat3Map.V put(K,V)_delegateMap.put(key, value)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"]},"type":"variable"}]}]}