{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":28,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":11,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":17,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":16,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":37,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":6},"transformations":[{"failures":[],"tindex":"9736a74a-250a-11e5-8caf-0f803858ac04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1149","type":"CtIfImpl","sourcecode":"if ((int) != (java.util.Map<?, ?>.size())) {\n    return false;\n} "},"variableMap":{"other":"other","size":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"9736f56b-250a-11e5-8caf-8f7ea536a7db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:308","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(java.util.Map.Entry<K, V>)"},"status":-2},{"failures":[],"tindex":"9736f56c-250a-11e5-8caf-f30d5c0367d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>"},"variableMap":{"tmpMap":"sm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"status":-1},{"failures":[0],"tindex":"9736f56d-250a-11e5-8caf-d72b3af694e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\")"},"status":-1},{"failures":[],"tindex":"9736f56e-250a-11e5-8caf-b92031457e4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get(int);\n}"},"variableMap":{"this":"list","m":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:144","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(((int) - 1))"},"status":-2},{"failures":[],"tindex":"97371c7f-250a-11e5-8caf-535941ef4dfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:440","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse"},"status":-2},{"failures":[1],"tindex":"9737dfd0-250a-11e5-8caf-25e29df1f2cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K), V)"},"status":-1},{"failures":[],"tindex":"9737dfd1-250a-11e5-8caf-fdd8b055d8d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:99","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[int]"},"status":-2},{"failures":[2,3,4,5],"tindex":"9737dfd2-250a-11e5-8caf-d9a03c70e029","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)"},"status":-1},{"failures":[],"tindex":"973806e3-250a-11e5-8caf-8174a19f7647","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:62","type":"CtInvocationImpl","sourcecode":"java.util.StringTokenizer.countTokens()"},"status":0},{"failures":[],"tindex":"973806e4-250a-11e5-8caf-a3ca343c3612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"left","parent":"current","left":"current","h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:671","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"973806e5-250a-11e5-8caf-3bd37517e189","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":0},{"failures":[],"tindex":"973806e6-250a-11e5-8caf-7fc97e8472ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[6],"tindex":"973806e7-250a-11e5-8caf-8bd2ab5b712e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:130","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"973806e8-250a-11e5-8caf-297a555729db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue())"},"status":0},{"failures":[],"tindex":"973806e9-250a-11e5-8caf-e314cdeedd3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"97382dfa-250a-11e5-8caf-f32ab5faa211","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:69","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int))"},"variableMap":{"lengthInBits":"otherOffsetInBits","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"otherOffsetInBits","beginIndex1":"otherOffsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:67","type":"CtLocalVariableImpl","sourcecode":"final int int = int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":-1},{"failures":[],"tindex":"97382dfb-250a-11e5-8caf-c1ac0de5d5f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"97382dfc-250a-11e5-8caf-27752768dc51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:293","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[],"tindex":"97382dfd-250a-11e5-8caf-75c186ded7cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"a","list2":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"9736a74a-250a-11e5-8caf-0f803858ac04","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.V getValue()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.boolean hasNext()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.K next()"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.V getValue()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.boolean hasNext()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.K next()"]},"type":"graph"}]},{"transformation":"973806e8-250a-11e5-8caf-297a555729db","diffs":[{"branches":{"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":["org.apache.commons.collections4.map.PredicatedMap_org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).e1","org.apache.commons.collections4.map.PredicatedMap_org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).l2","org.apache.commons.collections4.map.PredicatedMap_org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).l1"],"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":["org.apache.commons.collections4.map.PredicatedMap_org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).e1","org.apache.commons.collections4.map.PredicatedMap_org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).l2","org.apache.commons.collections4.map.PredicatedMap_org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).l1"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":["org.apache.commons.collections4.map.PredicatedMap.org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.map.PredicatedMap.void validate(K,V)"],"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":["org.apache.commons.collections4.map.PredicatedMap.org.apache.commons.collections4.map.PredicatedMap(java.util.Map,org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.map.PredicatedMap.void validate(K,V)"]},"type":"graph"}]}]}