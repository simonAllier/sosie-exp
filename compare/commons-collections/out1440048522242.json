{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":41,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":73,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":8,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":84,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":66,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":56,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":31,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":59,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":21,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":39,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":71,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":28,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":70,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":1,"org.apache.commons.collections4.CollectionUtilsTest.select":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":40,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":26,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":75},"transformations":[{"failures":[],"tindex":"51ca3f5c-46fc-11e5-b60a-d95016ac3d76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[0,1],"tindex":"51ca666d-46fc-11e5-b60a-99d996504e56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:162","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[][int].evaluate(I)) == true) {\n    return org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int].transform(I);\n} "},"status":-1},{"failures":[],"tindex":"51ca666e-46fc-11e5-b60a-15f7aa329d4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-2},{"failures":[],"tindex":"51ca8d7f-46fc-11e5-b60a-97a28454ef42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"51ca8d80-46fc-11e5-b60a-dfc609c57fa0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"status":0},{"failures":[2,3],"tindex":"51ca8d81-46fc-11e5-b60a-1ba49c8d0e80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[4,5,6,7,8,9],"tindex":"51ca8d82-46fc-11e5-b60a-0dd4a616d74f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"51ca8d83-46fc-11e5-b60a-bd76f6a6da7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:477","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"51ca8d84-46fc-11e5-b60a-9343d49cd9d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:93","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"status":0},{"failures":[],"tindex":"51ca8d85-46fc-11e5-b60a-6d0275189a57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[10],"tindex":"51cab496-46fc-11e5-b60a-8961fae266cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"variableMap":{"predicate":"predicate","answer":"answer","this":"this","inputCollection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:902","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"status":-1},{"failures":[],"tindex":"51cab497-46fc-11e5-b60a-0fe5c5fcd713","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-2},{"failures":[],"tindex":"51cab498-46fc-11e5-b60a-5ffc6d5e3944","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:246","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.compareTo(java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"51cab499-46fc-11e5-b60a-db1994812ff0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20],"tindex":"51cab49a-46fc-11e5-b60a-130544b08c97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"51cab49b-46fc-11e5-b60a-23cd269a6367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[67],"tindex":"51cadbac-46fc-11e5-b60a-6fdae33cb22b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:79","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The prototype must be cloneable via a public clone method\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"51cadbad-46fc-11e5-b60a-116f30268841","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[89,90],"tindex":"51cadbae-46fc-11e5-b60a-9ddaa68ba5f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:268","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity()"},"status":-1},{"failures":[],"tindex":"51cb02bf-46fc-11e5-b60a-d59b78dfb447","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().indexOf(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}