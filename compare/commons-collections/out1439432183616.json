{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":53,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":62,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":4,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":61,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":0,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":3,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":52,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":16,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":21,"org.apache.commons.collections4.list.SetUniqueListTest.testSimpleSerialization":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":70,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":82,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":19,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":41,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":6,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":42,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":15,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":65,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":35,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":5,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":31,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":90},"transformations":[{"failures":[],"tindex":"4b576583-4161-11e5-b0bb-bfe5e3e45eef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:299","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"4b578c94-4161-11e5-b0bb-094da43df711","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:247","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"4b578c95-4161-11e5-b0bb-2d5be8499380","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:802","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-2},{"failures":[],"tindex":"4b578c96-4161-11e5-b0bb-c3ad13325197","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"status":-2},{"failures":[],"tindex":"4b57b3a7-4161-11e5-b0bb-e7fd74efefa2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":0},{"failures":[],"tindex":"4b57b3a8-4161-11e5-b0bb-e705209744c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<K>)"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"4b57b3a9-4161-11e5-b0bb-2f6332943d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[35],"tindex":"4b57b3aa-4161-11e5-b0bb-ff5652cf7419","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:676","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Transformer must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"4b57b3ab-4161-11e5-b0bb-2746a61720a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1144","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"4b57b3ac-4161-11e5-b0bb-3107d6397d85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"found","parent":"found","left":"found","root":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"4b57dabd-4161-11e5-b0bb-4bc242bbd89e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"4b57dabe-4161-11e5-b0bb-cb8bb3548938","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1716","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualValue(java.lang.Object)"},"status":-2},{"failures":[80,81],"tindex":"4b57dabf-4161-11e5-b0bb-e31eb7274d25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:110","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-1},{"failures":[],"tindex":"4b57dac0-4161-11e5-b0bb-833de1518890","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"4b57dac1-4161-11e5-b0bb-8fa8d8ce2399","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"path","parent":"path","left":"path","h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:464","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[82,83,84,85,86,87,88,89,90,91],"tindex":"4b5801d2-4161-11e5-b0bb-f99f2a815ccb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"replacement","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"4b5801d3-4161-11e5-b0bb-8d2872920178","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:356","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.put(this, this.java.util.Map<K, V>[], K, V)"},"status":-2},{"failures":[],"tindex":"4b5801d4-4161-11e5-b0bb-5737f2e1934e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[92,93,94,95],"tindex":"4b5801d5-4161-11e5-b0bb-176671fc8d77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"retval":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:663","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"4b5801d6-4161-11e5-b0bb-cd91c5e041f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"setOrder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:184","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}