{"failureDictionary":{"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":3,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":56,"org.apache.commons.collections4.FactoryUtilsTest.testExceptionFactory":8,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":12,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":1,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":24,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":7,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":9,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":38,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":22,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":0,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":28,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":61,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":23,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":42,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":6,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":52,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":11,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":10,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":5},"transformations":[{"failures":[0,1],"tindex":"44ce2725-4231-11e5-b224-f7749c4673f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"44ce4e36-4231-11e5-b224-f39f64ca2d2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"44ce4e37-4231-11e5-b224-e31482964742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"44ce4e38-4231-11e5-b224-f777b96cf3a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key3","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"44ce7549-4231-11e5-b224-7daa9a3dfa58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:367","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[2,3,4,5,6],"tindex":"44ce754a-4231-11e5-b224-55bead877abe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"44ce754b-4231-11e5-b224-dd28ba78696a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:89","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"44ce754c-4231-11e5-b224-c7bc7e4c301b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"44ce754d-4231-11e5-b224-dbad4cebfa2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:103","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()"},"status":-2},{"failures":[7],"tindex":"44ce754e-4231-11e5-b224-d3c5898d3acc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1324","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[8],"tindex":"44ce9c5f-4231-11e5-b224-a1ade941881c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory))"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"44ce9c60-4231-11e5-b224-e3a92e49c6cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[38,39,40],"tindex":"44ce9c61-4231-11e5-b224-c9771e138389","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\")"},"status":-1},{"failures":[],"tindex":"44ce9c62-4231-11e5-b224-e56172b6667f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:387","type":"CtReturnImpl","sourcecode":"return ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 3) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))"},"status":-2},{"failures":[],"tindex":"44ce9c63-4231-11e5-b224-8f337de573c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>.getBag().remove(java.lang.Object, int)"},"status":-2},{"failures":[],"tindex":"44ce9c64-4231-11e5-b224-7fbe3214ef28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51],"tindex":"44cec375-4231-11e5-b224-9510f87fbec5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:503","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey())"},"status":-1},{"failures":[52,53,54],"tindex":"44cec376-4231-11e5-b224-dfa61bdc0648","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:181","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[55,56,57,58,59,60,61],"tindex":"44cec377-4231-11e5-b224-cb369fa882e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:369","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"44cec378-4231-11e5-b224-a98baf458f65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:634","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}