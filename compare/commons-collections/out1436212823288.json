{"failureDictionary":{"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":99,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":60,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":69,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":149,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":57,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":146,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":93,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":90,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":159,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":172,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":100,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":154,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":131,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":165,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":0,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":88,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":157,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":5,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":32,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":156,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":175,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":36,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":22,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":21,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":139,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":118,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":50,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":9,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":55,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":84,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":89,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":129,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":130,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":111,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":86,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":140,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":2,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":80,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":16,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":73,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":174,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":56,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":12,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":127,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":102,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":91,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":70,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":115,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":24,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":7,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":25,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":41,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":40,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":122,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":53,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":58,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":113,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":105,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":137,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":61,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":1,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":52,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":6,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":167,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":20,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":15,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":13,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":112,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":79,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":78,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":116,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":8,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":141,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":3,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":76,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":33,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":54,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":62,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":151,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":143,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":23,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":71,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":108,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":109,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":152,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":98,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":128,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":85,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":106,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":27,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":77,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":124,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":166,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":65,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":37,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":96,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":29,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":46,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":119,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":164,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":18},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"a30defd5-2419-11e5-be76-5d3a698dfcbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()"},"status":-1},{"failures":[150],"tindex":"a30e8c16-2419-11e5-be76-fb508c24113d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a30eb327-2419-11e5-be76-49227cde92dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:434","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[151,152,153,154],"tindex":"a30eb328-2419-11e5-be76-d51778eb8f54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:99","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:424","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[155,156],"tindex":"a30eb329-2419-11e5-be76-ff9be9017c74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-1},{"failures":[157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"a30eb32a-2419-11e5-be76-5f9143bb2961","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"status":-1},{"failures":[],"tindex":"a30eb32b-2419-11e5-be76-aba2c6968e66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"variableMap":{"keySet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":0},{"failures":[169,170,171,172],"tindex":"a30eb32c-2419-11e5-be76-15d95c076562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:133","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[173,174],"tindex":"a30eb32d-2419-11e5-be76-9b80f6d572c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"deletedNode","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a30eda3e-2419-11e5-be76-bbd6707f50d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()"},"status":-2},{"failures":[],"tindex":"a30eda3f-2419-11e5-be76-91e1ec3cba7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"status":-2},{"failures":[],"tindex":"a30eda40-2419-11e5-be76-676e8bc12a19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:229","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"a30eda41-2419-11e5-be76-cba0ee3f0928","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1081","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":0},{"failures":[],"tindex":"a30eda42-2419-11e5-be76-696e5ba4302f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:223","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"a30eda43-2419-11e5-be76-65f171c1b180","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:145","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a30eda44-2419-11e5-be76-47eb5d3317df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:419","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<K, V>>"},"status":-2},{"failures":[],"tindex":"a30eda45-2419-11e5-be76-3d0b3a7c1b04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:225","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"a30f0156-2419-11e5-be76-abed213e64e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[175],"tindex":"a30f0157-2419-11e5-be76-afe555c1f32d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1384","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"a30f0158-2419-11e5-be76-6d688ca8beca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1270","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"nodeCount":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a30eb32b-2419-11e5-be76-aba2c6968e66","diffs":[{"branches":{"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":["org.apache.commons.collections4.set.UnmodifiableSet_org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set).b","org.apache.commons.collections4.set.UnmodifiableSet_<E>_java.util.Set_unmodifiableSet(java.util.Set).b","org.apache.commons.collections4.set.UnmodifiableSet_<E>_java.util.Set_unmodifiableSet(java.util.Set).e1","org.apache.commons.collections4.set.AbstractSerializableSetDecorator_org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":["org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set)","org.apache.commons.collections4.set.AbstractSerializableSetDecorator.org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)","org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set)"]},"edges":{"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":["org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set) -> org.apache.commons.collections4.set.AbstractSerializableSetDecorator.org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set)","org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set) -> org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set)","org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set) -> org.apache.commons.collections4.set.AbstractSetDecorator.org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)"],"org.apache.commons.collections4.map.UnmodifiableMap.java.util.Set keySet()":["org.apache.commons.collections4.map.UnmodifiableMap.java.util.Set keySet() -> org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set)"]},"graph":"branch"}]},{"transformation":"a30f0158-2419-11e5-be76-6d688ca8beca","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":[],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":[],"org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":[],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":[]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}