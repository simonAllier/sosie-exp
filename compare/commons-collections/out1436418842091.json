{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":69,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":34,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":13,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":73,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":90,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":49,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":64,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":97,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":68,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":76,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":85,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":87,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":63,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":79,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":44,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":0,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":101,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":58,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":88,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":25,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":46,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":75,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":65,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":91,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":18,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":5,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":6,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":81,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":19,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":3,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":92,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":67,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":15,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":77,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":60,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.map.CompositeMapTest.testGet":99,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":83,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":74,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":4,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":33,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":40,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":84,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.set.CompositeSetTest.testContains":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":24,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":72,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":86,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":82,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":95},"transformations":[{"failures":[0,1],"tindex":"4fd4d200-25f9-11e5-97b3-45b700427437","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:315","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getKey()"},"status":-1},{"failures":[],"tindex":"4fd4f911-25f9-11e5-97b3-dfe1e95f607d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:131","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"4fd4f912-25f9-11e5-97b3-a5bb90a3f2b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[],"tindex":"4fd4f913-25f9-11e5-97b3-43a462421bcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1388","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\")\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>)"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"4fd4f914-25f9-11e5-97b3-f32f06a76772","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:389","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Set<E>>.remove(java.util.Set<E>)"},"variableMap":{"all":"all","set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:358","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Set<E>>.add(java.util.Set<E>)"},"status":-1},{"failures":[47,48,49,50],"tindex":"4fd52025-25f9-11e5-97b3-6b4dcef5a303","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:510","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"4fd52026-25f9-11e5-97b3-6db7e4e3e4df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"header","header":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[2,3,4,5,6,7,51,9,10,11,12,14,52,17,18,53,19,20,21,22,23,54,55,24,25,26,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,30,32,33,34,35,82,37,38,39,40,83,41,42,43,44,84,45,46,85,86,87],"tindex":"4fd52027-25f9-11e5-97b3-33d840ea5bbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"4fd54738-25f9-11e5-97b3-e504a8be4814","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:209","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[88],"tindex":"4fd54739-25f9-11e5-97b3-dd32d7f24520","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"status":-1},{"failures":[89,90,91,92,93,94],"tindex":"4fd5473a-25f9-11e5-97b3-cb74d578342d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4fd5473b-25f9-11e5-97b3-9df520489fd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1337","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1386","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()"},"status":-2},{"failures":[95,96,97,98],"tindex":"4fd5473c-25f9-11e5-97b3-8d7e89e4c5c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")"},"status":-1},{"failures":[99],"tindex":"4fd56e4d-25f9-11e5-97b3-65207e9d68c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"composite","i":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-1},{"failures":[100,101,102,103],"tindex":"4fd56e4e-25f9-11e5-97b3-772c0e625d9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"4fd56e4f-25f9-11e5-97b3-3fbcb4a8a757","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[104,105],"tindex":"4fd56e50-25f9-11e5-97b3-bb1b79ae5d0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1327","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"4fd56e51-25f9-11e5-97b3-41a102fcfe99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:849","type":"CtReturnImpl","sourcecode":"return super.put(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V)"},"status":-2},{"failures":[],"tindex":"4fd56e52-25f9-11e5-97b3-49c1ae8e0cfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1002","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"4fd59563-25f9-11e5-97b3-d379ec04620f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:811","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"4fd4f913-25f9-11e5-97b3-43a462421bcc","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()"]},"type":"graph"}]}]}