{"failureDictionary":{"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":25,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":21,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsContract":18,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":8,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEqualsNull":15,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":23,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testRemove":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":3,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":24,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":6,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testSimpleSerialization":17,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":7,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalEmptyCollectionExists":16,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectEqualsSelf":13,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testObjectHashCodeEqualsSelfHashCode":19,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":9,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testCanonicalFullCollectionExists":14,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":10},"transformations":[{"failures":[],"tindex":"51f8a880-25ca-11e5-9e69-3db1c3d4e7e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:189","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[0],"tindex":"51f8a881-25ca-11e5-9e69-2129f3377284","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")"},"status":-1},{"failures":[],"tindex":"51f8cf92-25ca-11e5-9e69-27672a140975","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"status":0},{"failures":[],"tindex":"51f8cf93-25ca-11e5-9e69-2999a27cc4e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:396","type":"CtForEachImpl","sourcecode":"for (final java.util.Iterator<? extends E> java.util.Iterator<? extends E> : java.util.ArrayList<java.util.Iterator<? extends E>>) {\n    if (java.util.Iterator<? extends E>.hasNext()) {\n        return true;\n    } \n}"},"variableMap":{"iters":"iterators"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyValueSet(java.util.BitSet)) || org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyHasNext(java.util.ArrayList<java.util.Iterator<? extends E>>))"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"51f8cf94-25ca-11e5-9e69-5f471d8e4d1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":-1},{"failures":[],"tindex":"51f8cf95-25ca-11e5-9e69-97482ac7395b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[23],"tindex":"51f8cf96-25ca-11e5-9e69-d5e304574f2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:55","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>"},"variableMap":{"iterator":"listIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:461","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(java.util.ListIterator<E>)"},"status":-1},{"failures":[],"tindex":"51f8f6a7-25ca-11e5-9e69-5b8347553a9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"51f8f6a8-25ca-11e5-9e69-df487ce322d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2162","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:462","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"51f8f6a9-25ca-11e5-9e69-877244317c39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:569","type":"CtAssignmentImpl","sourcecode":"java.util.Map<?, ?> = java.util.Map<?, ?>"},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:242","type":"CtAssignmentImpl","sourcecode":"java.util.Map<? extends K, ? extends V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<? extends K, ? extends V>)"},"status":0},{"failures":[],"tindex":"51f8f6aa-25ca-11e5-9e69-d929b6ad3fea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"status":0},{"failures":[],"tindex":"51f8f6ab-25ca-11e5-9e69-1338befefe2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:270","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-2},{"failures":[24],"tindex":"51f8f6ac-25ca-11e5-9e69-61b67c777ff5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:883","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"current":"firstCachedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:140","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[25],"tindex":"51f91dbd-25ca-11e5-9e69-61354b3eb3b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1393","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"variableMap":{"buf":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:581","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.Character)"},"status":-1},{"failures":[],"tindex":"51f91dbe-25ca-11e5-9e69-e3791188fc25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:259","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[],"tindex":"51f91dbf-25ca-11e5-9e69-3fe20fab0b7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.CloneTransformer.org.apache.commons.collections4.Transformer"},"variableMap":{"org.apache.commons.collections4.functors.CloneTransformer.INSTANCE":"org.apache.commons.collections4.functors.NOPTransformer.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPTransformer:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.org.apache.commons.collections4.Transformer"},"status":0},{"failures":[],"tindex":"51f91dc0-25ca-11e5-9e69-ab9c3861fc43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:122","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"51f91dc1-25ca-11e5-9e69-07dff8e9729e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-2},{"failures":[],"tindex":"51f91dc2-25ca-11e5-9e69-a53caf6694f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"51f944d3-25ca-11e5-9e69-69f8b27cfe3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[][0]"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"51f8cf92-25ca-11e5-9e69-27672a140975","diffs":[{"nodes":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"]},"edges":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void lockChain()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void lockChain()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void lockChain()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void lockChain()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void lockChain()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void lockChain()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1"]},"type":"branch"}]},{"transformation":"51f8f6a9-25ca-11e5-9e69-877244317c39","diffs":[{"nodes":{"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"]},"edges":{"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.K transformKey(K)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.V transformValue(V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.TransformedSortedMap.java.util.Comparator comparator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.K transformKey(K)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.V transformValue(V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).t1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).l2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().t1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).e1","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.TransformedMap_V_transformValue(V).b","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).e1","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.TransformedMap_K_transformKey(K).e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).t1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.TransformedMap_V_transformValue(V).e1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).l2","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.TransformedMap_K_transformKey(K).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.functors.NOPTransformer_T_transform(T).b","org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"]},"type":"branch"}]},{"transformation":"51f8f6aa-25ca-11e5-9e69-d929b6ad3fea","diffs":[{"variables":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)_parent.left = child","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)_final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> child = (h.left) == h ? h.right ","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)_final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parent = h.parent"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setValue(V).b","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setKeyValue(K,V).b"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setKeyValue(K,V).b","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setValue(V).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)"]},"edges":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V getValue()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V getValue()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"]},"type":"graph"}]}]}