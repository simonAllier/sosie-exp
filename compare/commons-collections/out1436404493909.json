{"failureDictionary":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":26,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":32,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesClearChangesMap":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":41,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":24,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":16,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":42,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":6,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":17,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":1,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":65,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":18,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":3,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":4,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":53,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":66,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetClearChangesMap":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":40,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":33,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":57,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":54,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetClearChangesMap":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":36,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":63,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":46},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"e7a5feca-25d7-11e5-a079-393b7fb3ce74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:277","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23],"tindex":"e7a625db-25d7-11e5-a079-415ad0b4cc68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"nextIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:481","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Map.Entry<K, V>.hashCode()"},"status":-1},{"failures":[],"tindex":"e7a625dc-25d7-11e5-a079-39cfef7f16e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:249","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"e7a625dd-25d7-11e5-a079-bdd1a92616d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1439","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.Object[].int) - 1"},"status":-2},{"failures":[24],"tindex":"e7a625de-25d7-11e5-a079-df8132906c54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:405","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.(containsKey(java.lang.Object))) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-1},{"failures":[],"tindex":"e7a64cef-25d7-11e5-a079-7f2d4669ce1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"newCapacity":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"e7a64cf0-25d7-11e5-a079-39bd25d2761e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[25,26,27,28],"tindex":"e7a64cf1-25d7-11e5-a079-3b310a7a1e15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"nCopies":"h","size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:674","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[],"tindex":"e7a64cf2-25d7-11e5-a079-afdf6401cd0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"e7a64cf3-25d7-11e5-a079-1dad10a3fcae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:974","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e7a64cf4-25d7-11e5-a079-5dafe3be0cf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:155","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e7a67405-25d7-11e5-a079-8b32c419e684","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"e7a67406-25d7-11e5-a079-c3818fb09577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key2","length":"hashCode","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[29],"tindex":"e7a67407-25d7-11e5-a079-1b3f3044bb11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"status":-1},{"failures":[30,31],"tindex":"e7a67408-25d7-11e5-a079-49b1fcfb7c60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.BagUtils:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(org.apache.commons.collections4.SortedBag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBag<E>"},"status":-1},{"failures":[],"tindex":"e7a69b19-25d7-11e5-a079-1136af8e62a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e7a69b1a-25d7-11e5-a079-ab85d839273c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"e7a69b1b-25d7-11e5-a079-27ce4412220e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":-2},{"failures":[],"tindex":"e7a69b1c-25d7-11e5-a079-ad4142f476ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key3","hashCode":"index","key3":"key3","key4":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"e7a6c22d-25d7-11e5-a079-a1f1208e2de0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}