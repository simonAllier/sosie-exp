{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":84,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":90,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":117,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":121,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":76,"org.apache.commons.collections4.map.TransformedMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":64,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":63,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":8,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":119,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":38,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":89,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":68,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEmptyMapCompatibility":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":72,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFullMapCompatibility":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":37,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":13,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.map.TransformedMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":7,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":66,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":36,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":65},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"d7e43f0d-4c37-11e5-abdb-6991face7478","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtInvocationImpl","sourcecode":"java.util.Collections.<K,V>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:154","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[],"tindex":"d7e4661e-4c37-11e5-abdb-cfc9f685867a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-2},{"failures":[],"tindex":"d7e4661f-4c37-11e5-abdb-95765db18663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:326","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int"},"status":-2},{"failures":[],"tindex":"d7e48d30-4c37-11e5-abdb-65bb61c1f3b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[6,7],"tindex":"d7e48d31-4c37-11e5-abdb-578f82a07fa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"size","bitIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:119","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1},{"failures":[8],"tindex":"d7e48d32-4c37-11e5-abdb-2df9d2d33ea6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:676","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Transformer must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:216","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String, java.lang.Integer.valueOf(int)))"},"status":-1},{"failures":[],"tindex":"d7e48d33-4c37-11e5-abdb-edaa09a94d40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"variableMap":{"predicates":"preds","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-2},{"failures":[9,10,11,12,13,14,15],"tindex":"d7e48d34-4c37-11e5-abdb-4dcfef97e79b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"d7e4b445-4c37-11e5-abdb-6d0de9798af7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"status":0},{"failures":[],"tindex":"d7e4b446-4c37-11e5-abdb-bf66b08102be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1181","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"d7e4b447-4c37-11e5-abdb-9f98646c76a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1261","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"status":-1},{"failures":[113,114,115,116,117,118,119,120,121],"tindex":"d7e4b448-4c37-11e5-abdb-e5222203427b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)"},"status":-1},{"failures":[122],"tindex":"d7e4b449-4c37-11e5-abdb-895d20cba3c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-1},{"failures":[],"tindex":"d7e4db5a-4c37-11e5-abdb-a5fd032cffcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"bit"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.charAt(int)) & org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.(org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int))) != 0"},"status":-2},{"failures":[],"tindex":"d7e4db5b-4c37-11e5-abdb-fd9d4db54b7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"variableMap":{"transformers":"key1","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"d7e4db5c-4c37-11e5-abdb-ada689aea339","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"d7e4db5d-4c37-11e5-abdb-358aa319685c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()"},"status":0},{"failures":[123],"tindex":"d7e5026e-4c37-11e5-abdb-ff0f10ad3733","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:175","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"d7e5026f-4c37-11e5-abdb-4d37832d0d66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:117","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<E, ? super V>.size()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}