{"failureDictionary":{"org.apache.commons.collections4.iterators.NodeListIteratorTest.testNullConstructor":1,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":4,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":7,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":2,"org.apache.commons.collections4.CollectionUtilsTest.filter":3,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithStringTokenizer":6,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":5},"transformations":[{"failures":[0],"tindex":"7028ea3d-246e-11e5-98e8-b3df93343c3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-1},{"failures":[1],"tindex":"7029114e-246e-11e5-98e8-2d54d09e3270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")"},"status":-1},{"failures":[2],"tindex":"7029114f-246e-11e5-98e8-db2e654d2b22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:875","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"status":-1},{"failures":[],"tindex":"70293760-246e-11e5-98e8-7795acb6000e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:176","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K)"},"status":-2},{"failures":[],"tindex":"70293761-246e-11e5-98e8-e3b80b960586","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:121","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(E)"},"status":-2},{"failures":[],"tindex":"70293762-246e-11e5-98e8-738935a89793","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:966","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[],"tindex":"70293763-246e-11e5-98e8-4de4ff372cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-2},{"failures":[3,4],"tindex":"70295e74-246e-11e5-98e8-594fdd0dc981","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:753","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[5],"tindex":"70295e75-246e-11e5-98e8-47e2cfdeb32b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:89","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"70295e76-246e-11e5-98e8-2d058b00743f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.hasNext()"},"status":-2},{"failures":[],"tindex":"70298587-246e-11e5-98e8-ed690febfb96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:168","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Comparator<T>.compare(T, T)"},"status":-2},{"failures":[],"tindex":"70298588-246e-11e5-98e8-4bb594540f5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":0},{"failures":[],"tindex":"70298589-246e-11e5-98e8-5750b08b2a6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"7029ac9a-246e-11e5-98e8-8b3c218e753c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[6],"tindex":"7029d3ab-246e-11e5-98e8-fb7d0759842d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:63","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"status":-1},{"failures":[7],"tindex":"7029d3ac-246e-11e5-98e8-a3c9dce3a134","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1872","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"fromKey > toKey\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"status":-1},{"failures":[],"tindex":"7029d3ad-246e-11e5-98e8-c725f3b7baa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-2},{"failures":[],"tindex":"7029fabe-246e-11e5-98e8-13f53a835ddd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"7029fabf-246e-11e5-98e8-a5ca31f839a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:675","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7029fac0-246e-11e5-98e8-bf09f5e5c10d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:264","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"70298588-246e-11e5-98e8-4bb594540f5e","diffs":[{"branches":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l3","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l14","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t7","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l13","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t6","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t10","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t3","org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_boolean_isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t11","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_firstEntry().e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e9","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e6","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e5","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e8","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e7","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e4","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e3","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e10","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_boolean_hasNext().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e11","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e12","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry().e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry().e2"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString()":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.boolean hasNext()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator.java.util.Map$Entry next()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.java.util.Set entrySet()"]},"graph":"branch"}]}]}