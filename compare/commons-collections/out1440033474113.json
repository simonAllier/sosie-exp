{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":66,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":33,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":135,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":120,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":49,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":90,"org.apache.commons.collections4.FactoryUtilsTest.testNullFactory":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":114},"transformations":[{"failures":[],"tindex":"48695c14-46d9-11e5-8d50-997ae51f5af7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"4869aa35-46d9-11e5-8d50-a152b770bae7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:746","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-2},{"failures":[],"tindex":"4869aa36-46d9-11e5-8d50-45c86b3e523f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"4869d147-46d9-11e5-8d50-b7e878f613cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.org.apache.commons.collections4.ListUtils.longestCommonSubsequence(java.util.List<E>, java.util.List<E>, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator())"},"status":-2},{"failures":[],"tindex":"4869d148-46d9-11e5-8d50-7783d3402d24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:90","type":"CtThrowImpl","sourcecode":"throw new java.util.EmptyStackException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:303","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-2},{"failures":[0,1],"tindex":"4869d149-46d9-11e5-8d50-dfa1c54a6b40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"removed","beforeFirst":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:211","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"4869f85a-46d9-11e5-8d50-a55db3ce89fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:391","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"4869f85b-46d9-11e5-8d50-ddd58c7ec958","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[48],"tindex":"4869f85c-46d9-11e5-8d50-b5d16513a1a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtIfImpl","sourcecode":"if (int < 4) {\n    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n        org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    }\n} else {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>);\n}"},"status":-1},{"failures":[49],"tindex":"486a1f6d-46d9-11e5-8d50-73b25e37b5ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1356","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-1},{"failures":[50,51,52,53],"tindex":"486a1f6e-46d9-11e5-8d50-f5f9432c0f43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:55","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory))"},"status":-1},{"failures":[],"tindex":"486a1f6f-46d9-11e5-8d50-adac1fc9c7fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"486a1f70-46d9-11e5-8d50-4bc1cfab1eba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"486a4681-46d9-11e5-8d50-072d9c47e6ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":0},{"failures":[78,79,80,81,54,55,82,83,84,85,86,56,87,88,57,58,89,59,60,61,62,90,63,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,64,65,113,114,115,116,117,67,118,119,120,121,122,123,124,68,69,125,70,71,72,73,126,74,127,75,128,129,76,77,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"486a4682-46d9-11e5-8d50-cf722cbecd54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:890","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[151,152],"tindex":"486a6d93-46d9-11e5-8d50-ebb953c367e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"486a6d94-46d9-11e5-8d50-819770cc1bf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"486a6d95-46d9-11e5-8d50-9f2b785a28cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:145","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.entrySet())"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.entrySet()"},"status":0},{"failures":[],"tindex":"486a6d96-46d9-11e5-8d50-fff465efbee9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"variableMap":{"org.apache.commons.collections4.functors.NOPClosure.INSTANCE":"org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.org.apache.commons.collections4.Closure"},"status":-2},{"failures":[],"tindex":"486a94a7-46d9-11e5-8d50-f58a68452b32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}