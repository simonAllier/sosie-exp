{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":17,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":41,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":59,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":40,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":63,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":38,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":72,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":45,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":56,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":28,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":30,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":18,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":53,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":33,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":13,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":0,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":57,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":39},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"3b0091d0-2473-11e5-80d0-836bd96053ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:325","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"3b00b8e1-2473-11e5-80d0-2dfc0cb2a867","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[],"tindex":"3b00b8e2-2473-11e5-80d0-f50b238fd69f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"current","previous":"path","left":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"3b00b8e3-2473-11e5-80d0-f7004b076b96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":0},{"failures":[56,57,58,59,60,61],"tindex":"3b00b8e4-2473-11e5-80d0-672b3ce056eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"variableMap":{"sum":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:189","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72],"tindex":"3b00dff5-2473-11e5-80d0-b5c3f2041a30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1823","type":"CtReturnImpl","sourcecode":"return int <= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"3b00dff6-2473-11e5-80d0-79bbf76c4125","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"3b00dff7-2473-11e5-80d0-3f869038b52d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"3b00dff8-2473-11e5-80d0-f5b91e899465","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:188","type":"CtLocalVariableImpl","sourcecode":"E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"3b00dff9-2473-11e5-80d0-2d6ef91b970d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"3b00dffa-2473-11e5-80d0-dfe7ce0978f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>)"},"status":0},{"failures":[73],"tindex":"3b01070b-2473-11e5-80d0-dd6f222dee22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"3b01070c-2473-11e5-80d0-bf660229d67a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl","sourcecode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"status":-2},{"failures":[],"tindex":"3b01070d-2473-11e5-80d0-555da1d4286a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"3b01070e-2473-11e5-80d0-fd5f196e4b88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:339","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"3b01070f-2473-11e5-80d0-25e706884f74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:118","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[74,75,76],"tindex":"3b010710-2473-11e5-80d0-93cce080e7ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[77],"tindex":"3b012e21-2473-11e5-80d0-33b15c5b7348","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"3b012e22-2473-11e5-80d0-578b5e197eb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"3b012e23-2473-11e5-80d0-4b63f5e84716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:539","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3b01070d-2473-11e5-80d0-555da1d4286a","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1"]},"type":"branch"}]}]}