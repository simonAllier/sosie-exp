{"failureDictionary":{"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":14,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":18,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":5,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":13,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":9,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":3,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":21,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":6,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":24,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":10,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":11,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":8,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":26,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":2,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":29,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":28,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":20,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":19,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":25,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":27,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":12},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"09750e69-46d6-11e5-8938-fdbf9f7ed130","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"09750e6a-46d6-11e5-8938-d921305185ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:523","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:165","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"09750e6b-46d6-11e5-8938-9b83896f89d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:701","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[7],"tindex":"0975357c-46d6-11e5-8938-371bffb0cfc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:196","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.clear()"},"variableMap":{"normalMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-1},{"failures":[],"tindex":"0975357d-46d6-11e5-8938-bd115fa212da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:517","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[8,9],"tindex":"0975357e-46d6-11e5-8938-a98aaf0b310c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"size","beyond":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[10,11,12,13,14],"tindex":"0975357f-46d6-11e5-8938-fd629fa37e91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:223","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.remove(E)"},"status":-1},{"failures":[15,16,17,18],"tindex":"09753580-46d6-11e5-8938-078a241f976c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:227","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"09755c91-46d6-11e5-8938-addcdf6041b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"09755c92-46d6-11e5-8938-bb196a6739b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"09755c93-46d6-11e5-8938-397982ccaf85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:559","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.LcsVisitor<E>.getSubSequence()"},"status":-2},{"failures":[],"tindex":"09755c94-46d6-11e5-8938-d5f76d80c0b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"end2","maxElements":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"09755c95-46d6-11e5-8938-af57976e31b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:119","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[],"tindex":"097583a6-46d6-11e5-8938-cffd3039c41d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:774","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"097583a7-46d6-11e5-8938-8d058638c35f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28],"tindex":"097583a8-46d6-11e5-8938-453af876a0b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:165","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"097583a9-46d6-11e5-8938-970690408d08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[29],"tindex":"097583aa-46d6-11e5-8938-9f696fd1880e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1967","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"delegate\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\")"},"status":-1},{"failures":[],"tindex":"097583ab-46d6-11e5-8938-afb9ae27b754","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:117","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[30,31,32,33],"tindex":"0975aabc-46d6-11e5-8938-43e1f979c291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}