{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":8,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":14,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":5,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":44,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":34,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":49,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":53,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":12,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":11,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":17,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":54,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":56,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":18,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":16,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":6,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":33,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":27,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":43,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":41,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":48,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":42,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":36,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":25},"transformations":[{"failures":[0,1,2,3],"tindex":"fd732126-245c-11e5-9fb1-8790256a50fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:94","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"variableMap":{"pendingDeletions":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"fd732127-245c-11e5-9fb1-d93517d54142","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:212","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Get must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be less than zero\")"},"status":-2},{"failures":[],"tindex":"fd734838-245c-11e5-9fb1-3b045bd595b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:296","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"fd734839-245c-11e5-9fb1-8d9f8278daf9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof org.apache.commons.collections4.Bag<?>) {\n    return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O);\n} "},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"fd73483a-245c-11e5-9fb1-cb6548098810","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:603","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.list.AbstractLinkedList<E>.size())"},"status":-1},{"failures":[],"tindex":"fd73483b-245c-11e5-9fb1-97e5434e4204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:103","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"fd73483c-245c-11e5-9fb1-d530be614013","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:276","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")"},"status":-2},{"failures":[15],"tindex":"fd73483d-245c-11e5-9fb1-794bc6c384fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:344","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.addAll(java.util.List<E>)"},"variableMap":{"subSet":"coll","list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:380","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Collection<E>>.remove(java.util.Collection<E>)"},"status":-1},{"failures":[16,17],"tindex":"fd73483e-245c-11e5-9fb1-6944961849f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[18],"tindex":"fd736f4f-245c-11e5-9fb1-efc6aa206925","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:397","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap()"},"variableMap":{"this":"cloned","delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1123","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone()"},"status":-1},{"failures":[19],"tindex":"fd736f50-245c-11e5-9fb1-77681b02b6fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V)"},"status":-1},{"failures":[],"tindex":"fd736f51-245c-11e5-9fb1-5f1652169361","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:240","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"fd736f52-245c-11e5-9fb1-9bf1df56d305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:89","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"fd736f53-245c-11e5-9fb1-158f1e3b95aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:154","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().uniqueSet()"},"status":-2},{"failures":[20,21,22,23,24,25,26],"tindex":"fd736f54-245c-11e5-9fb1-1fce809da4ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"fd736f55-245c-11e5-9fb1-5d87f1fbb78a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:330","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int"},"status":-1},{"failures":[],"tindex":"fd739666-245c-11e5-9fb1-9106bfba926f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:607","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"fd739667-245c-11e5-9fb1-934e83096493","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[62],"tindex":"fd739668-245c-11e5-9fb1-6b7611e3f0f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[],"tindex":"fd739669-245c-11e5-9fb1-ed33a0ff677c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (int + int) - int"},"variableMap":{"offset":"hashCode","delta":"length","k":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:309","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}