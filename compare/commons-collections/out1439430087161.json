{"failureDictionary":{"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":15,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":24,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":49,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":22,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":31,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":47,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":30,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":16,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":28,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":13,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":33,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":8,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":21,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":53,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":11,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":12,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":54,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":26,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":43,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":7,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":57,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":66,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":38,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":9,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":55,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":51,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":52,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":35,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":60},"transformations":[{"failures":[],"tindex":"69c1c043-415c-11e5-8332-d7c8a092e9dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"69c1e754-415c-11e5-8332-2da2d2bd313c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"offset","vDown":"vUp","delta":"delta","end2":"end2","this":"this","i":"end2","end1":"delta","k":"delta","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"69c1e755-415c-11e5-8332-21794a64413f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:58","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(super.decorated()))"},"status":-2},{"failures":[6,7,8,9,10,11,12,13],"tindex":"69c1e756-415c-11e5-8332-a1735b2ac716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"69c1e757-415c-11e5-8332-376f3c2ce891","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()"},"status":-2},{"failures":[],"tindex":"69c1e758-415c-11e5-8332-395ab131181a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:195","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-2},{"failures":[14,15,16,17],"tindex":"69c1e759-415c-11e5-8332-5d78b4308d5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:674","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28],"tindex":"69c20e6a-415c-11e5-8332-4b1e009111ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"69c20e6b-415c-11e5-8332-678e23edd73e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"value","s1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"69c20e6c-415c-11e5-8332-e36c38b11e35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:660","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"69c20e6d-415c-11e5-8332-83aec0bcc380","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:468","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet())"},"status":-1},{"failures":[],"tindex":"69c20e6e-415c-11e5-8332-d52904c52102","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"value","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"69c20e6f-415c-11e5-8332-4f3e2faec3f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"result","i":"size","j":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:196","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"status":0},{"failures":[],"tindex":"69c23580-415c-11e5-8332-33efae6b4eaa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:189","type":"CtReturnImpl","sourcecode":"return (java.lang.System.identityHashCode(java.lang.Object)) ^ (java.lang.System.identityHashCode(java.lang.Object))"},"variableMap":{"value":"object","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"69c23581-415c-11e5-8332-bd6bf7228725","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1337","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"RootEntry(\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"status":0},{"failures":[42,43,44,45,46,47,48,49],"tindex":"69c23582-415c-11e5-8332-a7e9f87312d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60],"tindex":"69c23583-415c-11e5-8332-4da197a9cc7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[],"tindex":"69c23584-415c-11e5-8332-f14acf63078c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:157","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"69c23585-415c-11e5-8332-31c7f642a4f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"right","e":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:223","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[61,62,63,64,65,66],"tindex":"69c23586-415c-11e5-8332-5bba68aa8894","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.size())"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}