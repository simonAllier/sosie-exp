{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":89,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":101,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":0,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":103,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":96,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":36,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":93,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":58,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":67,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":4,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":91,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":100,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":56,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":7,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":5,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":69,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":3,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":54,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":21,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":104,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":44,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":22,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":92,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":24,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":71,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":37,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":81,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":14},"transformations":[{"failures":[0],"tindex":"aa2cd851-423a-11e5-8ca2-bb3f769f77cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"variableMap":{"a":"key2","b":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"tindex":"aa2cff62-423a-11e5-8ca2-9f5ecfcb5663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"purgeValues","changed":"purgeValues"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1033","type":"CtAssignmentImpl","sourcecode":"this.boolean = java.io.ObjectInputStream.readBoolean()"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"aa2cff63-423a-11e5-8ca2-abfda4368d31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<I>.remove()"},"status":-1},{"failures":[],"tindex":"aa2cff64-423a-11e5-8ca2-d75c7a3001bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:145","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, ? super V>.clear()"},"status":-2},{"failures":[],"tindex":"aa2cff65-423a-11e5-8ca2-c72cf15b7212","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"variableMap":{"entry":"entry","index":"hashCode","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"aa2d2676-423a-11e5-8ca2-fdeb6cc76a77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:310","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[47,48,49,50],"tindex":"aa2d2677-423a-11e5-8ca2-4f65035bac48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:72","type":"CtInvocationImpl","sourcecode":"java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>.add(org.apache.commons.collections4.sequence.KeepCommand<T>)"},"status":-1},{"failures":[],"tindex":"aa2d2678-423a-11e5-8ca2-edf351248f75","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE":"org.apache.commons.collections4.functors.ExceptionPredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.Predicate"},"status":-2},{"failures":[51,52,53,54,55,56,57,58],"tindex":"aa2d2679-423a-11e5-8ca2-fbf758270629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:259","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[59,60,61,62,63,64],"tindex":"aa2d267a-423a-11e5-8ca2-5550cd191207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.size())"},"status":-1},{"failures":[],"tindex":"aa2d4d8b-423a-11e5-8ca2-c9291295f627","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:162","type":"CtAssignmentImpl","sourcecode":"int = boolean ? int : 0"},"status":-2},{"failures":[],"tindex":"aa2d4d8c-423a-11e5-8ca2-297c9ebc3f1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"status":-2},{"failures":[],"tindex":"aa2d4d8d-423a-11e5-8ca2-431de54e2798","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:381","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<E>.next()"},"status":-2},{"failures":[],"tindex":"aa2d4d8e-423a-11e5-8ca2-f1b4bd7f1e99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.PredicatedList<E>.decorated()"},"variableMap":{"this":"nextPermutation"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:126","type":"CtAssignmentImpl","sourcecode":"java.util.List<E> = null"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"aa2d4d8f-423a-11e5-8ca2-7fa7f1b8faa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"aa2d4d90-423a-11e5-8ca2-75abb6614d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-2},{"failures":[],"tindex":"aa2d4d91-423a-11e5-8ca2-3f3055ccc2df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:257","type":"CtReturnImpl","sourcecode":"return "},"status":0},{"failures":[],"tindex":"aa2d74a2-423a-11e5-8ca2-31cf184e00df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:88","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())"},"status":-2},{"failures":[96,97,98,99,100,101,102,103,104,105],"tindex":"aa2d74a3-423a-11e5-8ca2-67ce2a40a69f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"aa2d74a4-423a-11e5-8ca2-3dc35d6cf519","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}