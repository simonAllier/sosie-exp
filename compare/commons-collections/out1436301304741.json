{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":16,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":12,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":0,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":35,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":28,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":50,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":59,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":47,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":43,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":56,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":61,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":41,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":33,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":65,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":18,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":70,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":9,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":39,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":27,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":62,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":42,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":38,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":49,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":14,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":7,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":71},"transformations":[{"failures":[0],"tindex":"a61c83f9-24e7-11e5-8ee6-792f1d905870","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)"},"status":-1},{"failures":[],"tindex":"a61cab0a-24e7-11e5-8ee6-6f38f5bcaaa4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"a61cd21b-24e7-11e5-8ee6-81942f898c12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"a61cd21c-24e7-11e5-8ee6-075987b2f458","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:177","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == 0"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"a61cf92d-24e7-11e5-8ee6-ef6edb85fca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"status":-1},{"failures":[27,28,29,30,31,32,33,34],"tindex":"a61cf92e-24e7-11e5-8ee6-cdda55986326","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"a61cf92f-24e7-11e5-8ee6-85aac6fa179b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:386","type":"CtReturnImpl","sourcecode":"return (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))"},"status":-1},{"failures":[62,63,64,65,66,67],"tindex":"a61cf930-24e7-11e5-8ee6-f3685e9b5a64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[68,69,70],"tindex":"a61cf931-24e7-11e5-8ee6-5db663e1b65d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"a61d2042-24e7-11e5-8ee6-3390f6da5dcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"status":-2},{"failures":[71,72,73],"tindex":"a61d2043-24e7-11e5-8ee6-593140ef802d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"root","left":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"status":-1},{"failures":[],"tindex":"a61d2044-24e7-11e5-8ee6-afd0ddd11d4f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1177","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"i":"size","hashIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:521","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"a61d2045-24e7-11e5-8ee6-817ea88badec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:104","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[74,75,76],"tindex":"a61d2046-24e7-11e5-8ee6-47c5519d17c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:259","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"a61d2047-24e7-11e5-8ee6-dd92371b4420","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"status":-2},{"failures":[],"tindex":"a61d4758-24e7-11e5-8ee6-253e60f1a047","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:425","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[77,78,79,80],"tindex":"a61d4759-24e7-11e5-8ee6-5f366b008ebd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[81],"tindex":"a61d475a-24e7-11e5-8ee6-bb80c37ce5c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-1},{"failures":[],"tindex":"a61d475b-24e7-11e5-8ee6-d1ee7f54c52c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Trie<K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(org.apache.commons.collections4.Trie<K, ? extends V>));\n    return org.apache.commons.collections4.Trie<K, V>;\n} "},"variableMap":{"trie":"trie"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(org.apache.commons.collections4.Trie<K, ? extends V>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}