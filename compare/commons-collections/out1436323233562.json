{"failureDictionary":{"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":39,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":2,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":53,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":17,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":22,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":32,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":31,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":33,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":57,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":38,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":4,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":52,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":80,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":26,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":30,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":15,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":37,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":56,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":14,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":9,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":65,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":68,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":13,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":72,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":34,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":3,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":43,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":27,"org.apache.commons.collections4.ClosureUtilsTest.testNopClosure":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":42,"org.apache.commons.collections4.map.Flat3MapTest.testToString":11,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":78,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":77,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":64,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":75,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":36,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":47,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":45,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":28},"transformations":[{"failures":[0,1,2,3],"tindex":"b4b6bc6e-251a-11e5-bbf4-8512e2b3f4fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[4,5,6,7,8,9],"tindex":"b4b6e37f-251a-11e5-bbf4-c3db7d7d7661","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"b4b70a90-251a-11e5-bbf4-25503f7ed935","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[10],"tindex":"b4b758b1-251a-11e5-bbf4-a59f4ab643fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:558","type":"CtAssignmentImpl","sourcecode":"V = V"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,10,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"b4b758b2-251a-11e5-bbf4-93a3806cad78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"b4b77fc3-251a-11e5-bbf4-17bb2ad8b949","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>) != null"},"status":-2},{"failures":[64,65],"tindex":"b4b77fc4-251a-11e5-bbf4-bb2ae5551b03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[],"tindex":"b4b77fc5-251a-11e5-bbf4-cbedb9e551b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:616","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"b4b7a6d6-251a-11e5-bbf4-49f15b33f837","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} "},"variableMap":{"mutator":"mutator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:385","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(this, this.java.util.Map<K, V>[], java.util.Map<? extends K, ? extends V>)"},"status":0},{"failures":[10],"tindex":"b4b7a6d7-251a-11e5-bbf4-b14d13dd3ff0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:573","type":"CtReturnImpl","sourcecode":"return V"},"status":-1},{"failures":[],"tindex":"b4b7a6d8-251a-11e5-bbf4-973d10f1df2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74],"tindex":"b4b7a6d9-251a-11e5-bbf4-b7559c02c01d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[],"tindex":"b4b7a6da-251a-11e5-bbf4-25d8a3ae9ec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:258","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[],"tindex":"b4b7cdeb-251a-11e5-bbf4-9b5b849cb09a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:260","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[75],"tindex":"b4b7f4fc-251a-11e5-bbf4-81ee0bc708a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:180","type":"CtAssignmentImpl","sourcecode":"boolean = int >= 0"},"status":-1},{"failures":[76,77],"tindex":"b4b7f4fd-251a-11e5-bbf4-a379a46aa844","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b4b7f4fe-251a-11e5-bbf4-016903d681e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<K, V>"},"status":-2},{"failures":[78],"tindex":"b4b7f4ff-251a-11e5-bbf4-07a50d217be2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformedPredicate<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T> , org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[79,80,81],"tindex":"b4b81b10-251a-11e5-bbf4-77b2a4e66240","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}