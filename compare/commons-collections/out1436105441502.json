{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":122,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":2,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":157,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":1,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":80,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":81,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":118,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIterator":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":123,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":125,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":169,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":16,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":111,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":43,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":37,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":124,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":22,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":79,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":74,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":151,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":119,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":99,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":36,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":134,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":142,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":128,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":103,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":33,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":75,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":6,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":164,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":55,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":67,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":156,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":76,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":177,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":155,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":47,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":138,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":23,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":65,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":181,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":44,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":93,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":102,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":68,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":152,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":87,"org.apache.commons.collections4.map.LRUMapTest.testLRU":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":91,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":159,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":199,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":17,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":35,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":116,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":141,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":129,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":40,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":12,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":72,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":73,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":161,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":8},"transformations":[{"failures":[],"tindex":"9e86065e-231f-11e5-9761-dfaa24177fae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:395","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"9e862d6f-231f-11e5-9761-95f11c78bc1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl","sourcecode":"return java.util.Collection<? extends E>.size()"},"status":-2},{"failures":[],"tindex":"9e862d70-231f-11e5-9761-97ad8360e820","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.org.apache.commons.collections4.Closure"},"variableMap":{"org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE":"org.apache.commons.collections4.functors.NOPClosure.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"status":0},{"failures":[],"tindex":"9e862d71-231f-11e5-9761-bf84cfc579da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:386","type":"CtReturnImpl","sourcecode":"return \"[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:184","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.toString()"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"9e862d72-231f-11e5-9761-2d64993162da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[8,9,10,11],"tindex":"9e862d73-231f-11e5-9761-fb2f4dc8bac5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:73","type":"CtIfImpl","sourcecode":"if (((org.w3c.dom.NodeList) != null) && ((int) < (org.w3c.dom.NodeList.getLength()))) {\n    return org.w3c.dom.NodeList.item((int)++);\n} "},"status":-1},{"failures":[12,13,14,15,16],"tindex":"9e862d74-231f-11e5-9761-5df69598dc1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"9e865485-231f-11e5-9761-955474356a33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:104","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"9e865486-231f-11e5-9761-51d0bd62390a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:286","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"9e865487-231f-11e5-9761-65405656cd8f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:78","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.isEmpty()"},"variableMap":{"this":"nextPermutation"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>) != null"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"9e865488-231f-11e5-9761-61efe9a4ea73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:183","type":"CtAssignmentImpl","sourcecode":"T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()))"},"status":-1},{"failures":[],"tindex":"9e865489-231f-11e5-9761-e5a072260aa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[60,61,62,62,63,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"9e86a2aa-231f-11e5-9761-8dbd69a5e06e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"9e86a2ab-231f-11e5-9761-1384248d2d60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[13,86,16,87,88,89],"tindex":"9e86c9bc-231f-11e5-9761-e7be5bcd28a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[],"tindex":"9e86c9bd-231f-11e5-9761-2d85ffbbfec7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":0},{"failures":[],"tindex":"9e86c9be-231f-11e5-9761-b9d70bdead12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:781","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"9e86c9bf-231f-11e5-9761-15b4fcc206c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"9e86c9c0-231f-11e5-9761-e5bd50465635","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[90,91,92,93,94],"tindex":"9e86c9c1-231f-11e5-9761-e395a3c604cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>"},"status":-1},{"failures":[95],"tindex":"9e86f0d2-231f-11e5-9761-b17ae7011af2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:235","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[96],"tindex":"9e86f0d3-231f-11e5-9761-87a3b86af93c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object))"},"status":-1},{"failures":[97],"tindex":"9e86f0d4-231f-11e5-9761-cf380b49bc40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":-1},{"failures":[],"tindex":"9e86f0d5-231f-11e5-9761-4b21364b2caf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:123","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[98],"tindex":"9e86f0d6-231f-11e5-9761-df0fa1aca339","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[99,100],"tindex":"9e86f0d7-231f-11e5-9761-497290fc3edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:614","type":"CtIfImpl","sourcecode":"if (O == null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (java.lang.Object == null) {\n            int++;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (O.equals(java.lang.Object)) {\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"9e86f0d8-231f-11e5-9761-9db8ef78db60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[101],"tindex":"9e86f0d9-231f-11e5-9761-8fc9b94dafb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.firstKey()"},"variableMap":{"delegate":"delegate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.lastKey()"},"status":-1},{"failures":[],"tindex":"9e86f0da-231f-11e5-9761-8561e2fa0f14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"list2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"9e8717eb-231f-11e5-9761-3fa3676818d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:385","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[],"tindex":"9e8717ec-231f-11e5-9761-07b8eb9186d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,18,19,20,21,122,22,23,123,24,124,25,125,126,127,128,129,130,131,132,133,134,135,26,27,136,28,29,30,31,32,33,34,35,137,36,37,138,139,140,141,142,143,144,145,146,147,148,40,41,42,43,149,44,45,150,46,151,47,152,153,154,155,156,157,158,159,160,161,38,39,162,48,49,163,50,51,52,53,54,55,56,57,164,58,59,165,166,167,168],"tindex":"9e8717ed-231f-11e5-9761-8103fcbf0add","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"9e8717ee-231f-11e5-9761-f17e74162a50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Closure<? super T>"},"variableMap":{"iClosure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))"},"status":-2},{"failures":[],"tindex":"9e8717ef-231f-11e5-9761-c551166ee37a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"9e8717f0-231f-11e5-9761-4351686277cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"9e8717f1-231f-11e5-9761-f596cf4e981d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure<? super T>)"},"status":-2},{"failures":[],"tindex":"9e873f02-231f-11e5-9761-935a966d8a02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtIfImpl","sourcecode":"if (java.lang.Double == null) {\n    java.lang.Double = java.lang.Double;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1218","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"9e873f03-231f-11e5-9761-63d278a820ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:397","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"status":-2},{"failures":[],"tindex":"9e873f04-231f-11e5-9761-5b4a6c690f0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:59","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super E>[])"},"status":-2},{"failures":[181,182,183,184,185,186,187,188,189],"tindex":"9e873f05-231f-11e5-9761-89d6152aa33c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1049","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":-1},{"failures":[190,191,192,193,194],"tindex":"9e873f06-231f-11e5-9761-35d814195684","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:143","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[],"tindex":"9e873f07-231f-11e5-9761-b9852149edd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:135","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"9e873f08-231f-11e5-9761-275e5b58f4e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:118","type":"CtReturnImpl","sourcecode":"return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>)"},"status":-2},{"failures":[],"tindex":"9e873f09-231f-11e5-9761-e1372bf063f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"p","predecessor":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[195,196,197,198,199],"tindex":"9e87661a-231f-11e5-9761-a741a38052f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:306","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"9e87661b-231f-11e5-9761-8d63aa57a79c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1751","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection<C>, org.apache.commons.collections4.Predicate<? super C>)"},"status":-2},{"failures":[],"tindex":"9e87661c-231f-11e5-9761-13a8e1c11387","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"9e87661d-231f-11e5-9761-0bbf41d647e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:153","type":"CtReturnImpl","sourcecode":"return V"},"status":-1},{"failures":[],"tindex":"9e87661e-231f-11e5-9761-a998185def3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"first","removed":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:369","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"9e87661f-231f-11e5-9761-93068f832dd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>.evaluate(T)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}