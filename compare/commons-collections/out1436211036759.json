{"failureDictionary":{"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":30,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":60,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":58,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":6,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":53,"org.apache.commons.collections4.map.LRUMapTest.testLRU":41,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":8,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":2,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":59,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":0,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":29,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":24,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":12,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":21,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":25,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":18,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":16,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":62,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":45,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":56,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":31,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":10,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":49,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":51,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":54,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":52,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":47,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":23,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":3},"transformations":[{"failures":[],"tindex":"7a367357-2415-11e5-9b23-e340735f7bc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"7a36c178-2415-11e5-9b23-f533c006cb46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:232","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:212","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"7a36c179-2415-11e5-9b23-7fe32e5ef5c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl","sourcecode":"return new java.util.HashSet<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":-2},{"failures":[],"tindex":"7a36c17a-2415-11e5-9b23-038ad82c7dc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:174","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"7a36e88b-2415-11e5-9b23-533986648607","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:418","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"hasNext":"debug","org.apache.commons.collections4.map.AbstractHashedMap.NO_NEXT_ENTRY":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"7a36e88c-2415-11e5-9b23-c757569eb6b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:177","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == 0"},"status":-1},{"failures":[41,42,43,44,45],"tindex":"7a36e88d-2415-11e5-9b23-d9e88dcec8bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-1},{"failures":[46],"tindex":"7a370f9e-2415-11e5-9b23-8d408935e559","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1276","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Enumeration<?>.nextElement();\n    } else {\n        java.util.Enumeration<?>.nextElement();\n    }\n}"},"status":-1},{"failures":[],"tindex":"7a370f9f-2415-11e5-9b23-f11397aa43f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:662","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:447","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator<E>)"},"status":-2},{"failures":[],"tindex":"7a370fa0-2415-11e5-9b23-69ce4122ebd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:107","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getValue()"},"status":-2},{"failures":[],"tindex":"7a3736b1-2415-11e5-9b23-e3c1861373bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"mapSize","index":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:323","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)((((int) + int) / (float)) + 1))"},"status":0},{"failures":[],"tindex":"7a3736b2-2415-11e5-9b23-c9a0536fcb65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:433","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator()"},"status":0},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"7a3736b3-2415-11e5-9b23-f7b8a538b937","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[60,61,62,63],"tindex":"7a375dc4-2415-11e5-9b23-e3e10e5d6acf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"index","listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[],"tindex":"7a3784d5-2415-11e5-9b23-1d23ebad8b67","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"7a3784d6-2415-11e5-9b23-f72f567544a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"status":-2},{"failures":[64],"tindex":"7a3784d7-2415-11e5-9b23-63ff002d572d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:83","type":"CtIfImpl","sourcecode":"if (((java.util.Set<E>.size()) > 0) || ((java.util.List<E>.size()) > 0)) {\n    throw new java.lang.IllegalArgumentException(\"Set and List must be empty\");\n} "},"variableMap":{"set":"item","list":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:196","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"7a3784d8-2415-11e5-9b23-4d6cc8c89037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:98","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"7a37abe9-2415-11e5-9b23-5bf39071c8c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"transformers":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1245","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"7a37abea-2415-11e5-9b23-b19cb0e961e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:197","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V>.inverseBidiMap()"},"variableMap":{"this":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedBidiMap<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"7a3736b2-2415-11e5-9b23-c9a0536fcb65","diffs":[{"branches":{"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.EmptyOrderedIterator_<E>_org.apache.commons.collections4.OrderedIterator_emptyOrderedIterator().b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()_return (next) != (parent.header)"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"edges":{"org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createKeySetIterator()":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"],"org.apache.commons.collections4.set.MapBackedSet.boolean retainAll(java.util.Collection)":["org.apache.commons.collections4.set.MapBackedSet.boolean retainAll(java.util.Collection) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.set.MapBackedSet.int hashCode()":["org.apache.commons.collections4.set.MapBackedSet.int hashCode() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":[]},"graph":"branch"}]},{"transformation":"7a3736b1-2415-11e5-9b23-e3c1861373bd","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_V_get(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"]},"type":"branch"}]}]}