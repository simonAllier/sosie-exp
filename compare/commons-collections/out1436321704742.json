{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":64,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":71,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":50,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":73,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":14,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":72,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":15,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":46,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":69,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":62,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":56,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":28,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":75,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":29,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":58,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":48,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":35,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":59,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":31,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":77,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":52,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":24,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":40,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":51,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":26,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":74,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":21,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":55,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":70,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":38,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":43,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":6},"transformations":[{"failures":[],"tindex":"25768d87-2517-11e5-a59c-b75036ae2f0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:148","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:194","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"2576b498-2517-11e5-a59c-d7606febd483","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:666","type":"CtInvocationImpl","sourcecode":"C.execute(T)"},"status":-2},{"failures":[],"tindex":"2576b499-2517-11e5-a59c-fb8358dcb31f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:465","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[],"tindex":"2576b49a-2517-11e5-a59c-3f40e28ee7ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[0],"tindex":"2576dbab-2517-11e5-a59c-4503d8ab0d23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"variableMap":{"startIndex":"removeIndex","index":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"status":-1},{"failures":[],"tindex":"2576dbac-2517-11e5-a59c-ffc06ab9a864","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"2576dbad-2517-11e5-a59c-8df5af29a390","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"parent","e":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:583","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[1,2],"tindex":"2576dbae-2517-11e5-a59c-8589b5c524e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[3],"tindex":"257702bf-2517-11e5-a59c-6929c1d11273","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:284","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"257702c0-2517-11e5-a59c-57a4c6773f7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:886","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[4,5,6,1,2],"tindex":"257702c1-2517-11e5-a59c-79226fe370d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"257729d2-2517-11e5-a59c-3b1e130776fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:482","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"257729d3-2517-11e5-a59c-cbb361c9bbfb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"257729d4-2517-11e5-a59c-573b3f067b3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:237","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"257750e5-2517-11e5-a59c-299c0cfac5c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1263","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<?>.next();\n    } \n    java.util.Iterator<?>.next();\n}"},"variableMap":{"i":"i","it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int)"},"status":-2},{"failures":[],"tindex":"257750e6-2517-11e5-a59c-4bc76c635610","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:275","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedSet(java.util.SortedSet<E>)"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":0},{"failures":[69,70,71,72,73,74,75,76,77],"tindex":"257750e7-2517-11e5-a59c-6d9559d1ca30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"257777f8-2517-11e5-a59c-d9997b3e883d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[],"tindex":"257777f9-2517-11e5-a59c-49af3e847885","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"257777fa-2517-11e5-a59c-fb4ae2b89862","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:95","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"257777f8-2517-11e5-a59c-d9997b3e883d","diffs":[{"variables":{"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":["org.apache.commons.collections4.sequence.SequencesComparator$Snake.org.apache.commons.collections4.sequence.SequencesComparator$Snake(int,int,int)_this.end = end","org.apache.commons.collections4.sequence.SequencesComparator$Snake.int getEnd()_return end"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":["org.apache.commons.collections4.sequence.SequencesComparator_void_buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript).l5"],"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":["org.apache.commons.collections4.sequence.SequencesComparator_void_buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript).l5","org.apache.commons.collections4.sequence.SequencesComparator_void_buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript).t2"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":["org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int) -> org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int)","org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int) -> org.apache.commons.collections4.functors.DefaultEquator.boolean equate(T,T)"],"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":["org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int) -> org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int)","org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int) -> org.apache.commons.collections4.functors.DefaultEquator.boolean equate(T,T)","org.apache.commons.collections4.sequence.SequencesComparator.void buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript) -> org.apache.commons.collections4.functors.DefaultEquator.boolean equate(T,T)"]},"type":"graph"}]}]}