{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":2,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":47,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":33,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":27,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":14,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":20,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":52,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":68,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":29,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":72,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":70,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":65,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":15,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":10,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":51,"org.apache.commons.collections4.list.TreeListTest.testRemove":63,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":77,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":32,"org.apache.commons.collections4.map.LRUMapTest.testLRU":9,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":8,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":61,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":73,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":3,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":48,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":38,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":60,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":74,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":19,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":0,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":31,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":78,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":6,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":54,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":39,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":71,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":11,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":7,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":69,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":45,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":44,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":43,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.map.LRUMapTest.testReset":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":58,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":41,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":5,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":37,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":23,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":75,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":35,"org.apache.commons.collections4.list.TreeListTest.testBug35258":66,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":17,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":24,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":18,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":34,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":16,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":76,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":12,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":67,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":4,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":36,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":28,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":62,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":30},"transformations":[{"failures":[0,1,2],"tindex":"f0118e13-25a2-11e5-a9fe-f7f14f3a56da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f011b524-25a2-11e5-a9fe-7966d6ad9a77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[],"tindex":"f011b525-25a2-11e5-a9fe-6b6ab7cb513a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"variableMap":{"array":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:298","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object , int)"},"status":-2},{"failures":[],"tindex":"f011b526-25a2-11e5-a9fe-697b31729de7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1398","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":0},{"failures":[],"tindex":"f011b527-25a2-11e5-a9fe-7dae73655897","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:180","type":"CtAssignmentImpl","sourcecode":"boolean = int >= 0"},"variableMap":{"result":"tmpDirection","comparison":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:137","type":"CtAssignmentImpl","sourcecode":"boolean[][(int + int)] = boolean"},"status":0},{"failures":[],"tindex":"f011b528-25a2-11e5-a9fe-23b495c70e20","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)"},"variableMap":{"coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-2},{"failures":[3,4],"tindex":"f011b529-25a2-11e5-a9fe-59f520d4721f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[],"tindex":"f011dc3a-25a2-11e5-a9fe-89b451842f30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated()"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"f011dc3b-25a2-11e5-a9fe-6b3dcd758acc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"f011dc3c-25a2-11e5-a9fe-d14c6057c3e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())).append('}').toString()"},"status":0},{"failures":[],"tindex":"f012034d-25a2-11e5-a9fe-7961ec692fa6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:443","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[59],"tindex":"f012034e-25a2-11e5-a9fe-33c134ede74d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:544","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"equator may not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"f012034f-25a2-11e5-a9fe-a7cd968f3f58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:991","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey()"},"status":-2},{"failures":[60,61],"tindex":"f0120350-25a2-11e5-a9fe-9358a8402509","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyMapIterator:35","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71],"tindex":"f0120351-25a2-11e5-a9fe-151bc9a8751a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[],"tindex":"f0120352-25a2-11e5-a9fe-fdb5aeb8db63","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:54","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"status":-2},{"failures":[],"tindex":"f0122a63-25a2-11e5-a9fe-c5208656c865","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:694","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getKey()"},"status":-2},{"failures":[],"tindex":"f0122a64-25a2-11e5-a9fe-3f5dad4e2202","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:54","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<java.lang.Class<? extends T>, T>)(org.apache.commons.collections4.functors.InstantiateTransformer.org.apache.commons.collections4.Transformer))"},"variableMap":{"org.apache.commons.collections4.functors.InstantiateTransformer.NO_ARG_INSTANCE":"org.apache.commons.collections4.functors.CloneTransformer.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:49","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<T, T>)(org.apache.commons.collections4.functors.CloneTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[],"tindex":"f0122a65-25a2-11e5-a9fe-31ff66a56f4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1024","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.values()"},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Map<K, V>.values())"},"status":-1},{"failures":[72,73,74,75,76,77,78],"tindex":"f0122a66-25a2-11e5-a9fe-9fd77f26aaad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f011dc3c-25a2-11e5-a9fe-d14c6057c3e8","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":["org.apache.commons.collections4.map.SingletonMap.java.lang.String toString() -> org.apache.commons.collections4.map.SingletonMap.V getValue()","org.apache.commons.collections4.map.SingletonMap.java.lang.String toString() -> org.apache.commons.collections4.map.SingletonMap.java.lang.String toString()","org.apache.commons.collections4.map.SingletonMap.java.lang.String toString() -> org.apache.commons.collections4.map.SingletonMap.K getKey()"]},"type":"graph"}]}]}