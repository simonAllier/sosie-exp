{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.countMatches":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":67,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":13,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":10,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testToString":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":88,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":150,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":132,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":73,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":58,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":59,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":186,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":169,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":87,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.PredicateUtilsTest.testFalsePredicate":5,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":153,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":7,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":68,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":90,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testToString":189,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":134,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":173,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":85,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":77,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":103,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":62,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":182,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":177,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":109,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":28,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":165,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":96,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":82,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":180,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":126,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":157,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":56,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":53,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":97,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":159,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":139,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":98,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":140,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":181,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":164,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":154,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":69,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":142,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":20,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":130,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":156,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":9,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":119,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":118,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":175,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":63,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":123,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":14,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":23,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":99,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":33,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":32,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":191,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":111,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":11},"transformations":[{"failures":[],"tindex":"e1707d44-2336-11e5-b5a9-db86e8cab442","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj1","this":"obj2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:257","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<?>.hasNext()) && (java.util.Iterator<?>.hasNext())) {\n    java.lang.Object = java.util.Iterator<?>.next();\n    java.lang.Object = java.util.Iterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e170a455-2336-11e5-b5a9-e78f82d80015","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1264","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":-2},{"failures":[0,1],"tindex":"e170a456-2336-11e5-b5a9-97ded26be643","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"status":-1},{"failures":[],"tindex":"e170a457-2336-11e5-b5a9-6739d3d8d3dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"transformers":"cmds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"status":0},{"failures":[],"tindex":"e170a458-2336-11e5-b5a9-2151b9e57bee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:339","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"e170a459-2336-11e5-b5a9-3f870d3c3a8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FalsePredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate))"},"status":-1},{"failures":[],"tindex":"e170cb6a-2336-11e5-b5a9-591896b44339","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-2},{"failures":[17],"tindex":"e170cb6b-2336-11e5-b5a9-29c68c4a7916","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"count","lengthInBits":"count","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"count","otherOffsetInBits":"count","otherLengthInBits":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            int++;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"e170cb6c-2336-11e5-b5a9-03cb81bd490a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"e170cb6d-2336-11e5-b5a9-6157c727186f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[18,19,20,21,22,23,24,25,26],"tindex":"e171198e-2336-11e5-b5a9-0daaa90eccc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"yFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"e171198f-2336-11e5-b5a9-0bf3331746e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:95","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"status":-2},{"failures":[],"tindex":"e1711990-2336-11e5-b5a9-1df9558dc35e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:674","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[],"tindex":"e1711991-2336-11e5-b5a9-8b96291c153e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}"},"status":-2},{"failures":[],"tindex":"e17140a2-2336-11e5-b5a9-197d3bbf8a2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[27],"tindex":"e1718ec3-2336-11e5-b5a9-59a8d733a210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:388","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"e1718ec4-2336-11e5-b5a9-afbaa46d21a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"e1718ec5-2336-11e5-b5a9-cbccac8a64a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"status":-1},{"failures":[],"tindex":"e1718ec6-2336-11e5-b5a9-37a767a28fbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:137","type":"CtReturnImpl","sourcecode":"return E"},"status":-2},{"failures":[],"tindex":"e1718ec7-2336-11e5-b5a9-cd831b5a2176","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:275","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[134,135],"tindex":"e171b5d8-2336-11e5-b5a9-21f0c0143289","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:230","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[136,137,138,139,140,141,142,143,144],"tindex":"e171b5d9-2336-11e5-b5a9-a959fb0fab64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:204","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e171b5da-2336-11e5-b5a9-8172c4ec635b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-2},{"failures":[],"tindex":"e171b5db-2336-11e5-b5a9-fd0b15464c5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>resettableEmptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"e171b5dc-2336-11e5-b5a9-775ad605dadf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"status":-1},{"failures":[0],"tindex":"e171b5dd-2336-11e5-b5a9-1146f5099d6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:208","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[47,59,76],"tindex":"e171b5de-2336-11e5-b5a9-0f1f136dcc1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:224","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[161],"tindex":"e171b5df-2336-11e5-b5a9-4b101ed8cff1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-1},{"failures":[],"tindex":"e171b5e0-2336-11e5-b5a9-bf5b529d958e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:172","type":"CtLocalVariableImpl","sourcecode":"final int int = int - int"},"variableMap":{"start1":"size","end1":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:323","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)((((int) + int) / (float)) + 1))"},"status":0},{"failures":[],"tindex":"e171b5e1-2336-11e5-b5a9-25c44bd1f39f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:195","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[162,163,164],"tindex":"e171dcf2-2336-11e5-b5a9-f568dbbd5106","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"e171dcf3-2336-11e5-b5a9-dbe9ed6e608a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:360","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[int]"},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:99","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[int]"},"status":0},{"failures":[],"tindex":"e171dcf4-2336-11e5-b5a9-81e133bb810a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.clear()"},"status":-2},{"failures":[],"tindex":"e171dcf5-2336-11e5-b5a9-217c8fc4bc60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"replacement","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[165,166,167,168,169,170,171,172],"tindex":"e171dcf6-2336-11e5-b5a9-b521f126eb9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"status":-1},{"failures":[173,174,175,176,177,178,179,180,181,182,183],"tindex":"e171dcf7-2336-11e5-b5a9-65200669c31c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:525","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"e171dcf8-2336-11e5-b5a9-259226a8b4aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:130","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])))"},"variableMap":{"result":"result","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:171","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.util.Iterator<E>.next()"},"status":-2},{"failures":[184,185],"tindex":"e171dcf9-2336-11e5-b5a9-475a65a6e09d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()"},"status":-1},{"failures":[186],"tindex":"e171dcfa-2336-11e5-b5a9-e545351a1b64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:807","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.addAll(java.util.Collection<C>)"},"variableMap":{"resultCollection":"collection","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1123","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.add(java.util.Iterator<? extends C>.next())"},"status":-1},{"failures":[],"tindex":"e172040b-2336-11e5-b5a9-0373a0ad9569","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"left","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e172040c-2336-11e5-b5a9-9909d1aaab87","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[187,188,189],"tindex":"e172040d-2336-11e5-b5a9-bf0febee49a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey()).append('=')"},"status":-1},{"failures":[],"tindex":"e172040e-2336-11e5-b5a9-3be2705f9b66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"status":-2},{"failures":[190,191,192,193,194],"tindex":"e172040f-2336-11e5-b5a9-d1e8376dde30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2000","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map.Entry.setValue is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"))"},"status":-1},{"failures":[],"tindex":"e1720410-2336-11e5-b5a9-d940b725292f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:608","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"e1722b21-2336-11e5-b5a9-fdfb4f583b6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1454","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyIterator:66","type":"CtReturnImpl","sourcecode":"return ((java.util.Iterator<E>)(org.apache.commons.collections4.iterators.EmptyIterator.java.util.Iterator))"},"status":-2},{"failures":[195,196],"tindex":"e1722b22-2336-11e5-b5a9-c1c976e0fc73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"e1722b23-2336-11e5-b5a9-bbd764420031","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"e1722b24-2336-11e5-b5a9-13129615dea9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:155","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[197],"tindex":"e1722b25-2336-11e5-b5a9-757209a04dc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:61","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0])"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}