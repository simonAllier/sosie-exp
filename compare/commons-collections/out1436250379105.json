{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":37,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":29,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":83,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":58,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":27,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":56},"transformations":[{"failures":[],"tindex":"14108713-2471-11e5-aba9-0b84927dd2d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.set(E)"},"status":-2},{"failures":[0,1,2,3],"tindex":"1410ae24-2471-11e5-aba9-fb6bcb8d35df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[],"tindex":"1410ae25-2471-11e5-aba9-692ceffb9160","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()"},"status":-2},{"failures":[],"tindex":"1410ae26-2471-11e5-aba9-5fdb89a6e77c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()"},"status":-2},{"failures":[],"tindex":"1410d537-2471-11e5-aba9-a7afa87afb28","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"o1","this":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"1410d538-2471-11e5-aba9-7f1cdd4cbaaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:134","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > (T[].int)) {\n    return ((T[])(java.lang.Object[]));\n} "},"status":-1},{"failures":[4],"tindex":"1410d539-2471-11e5-aba9-65261107fe76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:115","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().offer(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-1},{"failures":[],"tindex":"1410d53a-2471-11e5-aba9-a765ae3446f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:126","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"1410d53b-2471-11e5-aba9-affb417e6f5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:154","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[5,6],"tindex":"1410d53c-2471-11e5-aba9-1bcdb2a66aab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:50","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"1410d53d-2471-11e5-aba9-8f9039049b41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:105","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"1410fc4e-2471-11e5-aba9-a70f72e98008","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1221","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[],"tindex":"1410fc4f-2471-11e5-aba9-871923707092","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:144","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - 1"},"variableMap":{"size":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:217","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, ((int) - (int)))"},"status":-2},{"failures":[],"tindex":"1410fc50-2471-11e5-aba9-4113687f3f7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"maximumCacheSize","bitIndex":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"1410fc51-2471-11e5-aba9-53df69e148ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1262","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"1410fc52-2471-11e5-aba9-0706ebb32baa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:903","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[],"tindex":"1410fc53-2471-11e5-aba9-fb4fa1b54a23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:830","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:172","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"14112364-2471-11e5-aba9-05d877487f6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"14112365-2471-11e5-aba9-63609f5b744c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:548","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"14112364-2471-11e5-aba9-05d877487f6d","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.Flat3Map.V put(K,V)_delegateMap.put(key, value)","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString()":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.MultiKey.java.lang.String toString()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()"]},"graph":"branch"}]},{"transformation":"1410fc52-2471-11e5-aba9-0706ebb32baa","diffs":[{"branches":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":["org.apache.commons.collections4.trie.KeyAnalyzer_boolean_isEqualBitKey(int).b","org.apache.commons.collections4.trie.KeyAnalyzer_boolean_isNullBitKey(int).b","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer_int_bitIndex(java.lang.String,int,int,java.lang.String,int,int).e6"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":["org.apache.commons.collections4.trie.KeyAnalyzer.boolean isNullBitKey(int)","org.apache.commons.collections4.trie.KeyAnalyzer.boolean isEqualBitKey(int)"]},"edges":{"org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(K)":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(K) -> org.apache.commons.collections4.trie.KeyAnalyzer.boolean isNullBitKey(int)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(K) -> org.apache.commons.collections4.trie.KeyAnalyzer.boolean isValidBitIndex(int)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(K) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie.int bitIndex(K,K)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(K) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie.boolean compareKeys(K,K)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry higherEntry(K) -> org.apache.commons.collections4.trie.KeyAnalyzer.boolean isEqualBitKey(int)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":[]},"graph":"branch"}]}]}