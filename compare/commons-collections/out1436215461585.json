{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":83,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":32,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":5,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":38,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":10,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":3,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":60,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":84,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":6,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":14,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":44,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":35,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":16,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":98,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":59,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":57,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":55,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":70,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":27,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":1,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":82,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":72,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":22,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":25,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":54,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":46},"transformations":[{"failures":[],"tindex":"c79cb47b-241f-11e5-82b5-17bc3e325bbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"c79cdb8c-241f-11e5-82b5-a1c56a11b7cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[18,19,20,21,22,23],"tindex":"c79d029d-241f-11e5-82b5-3d0080030f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:75","type":"CtInvocationImpl","sourcecode":"super.doReadObject(new java.util.HashMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>(), java.io.ObjectInputStream)"},"status":-1},{"failures":[],"tindex":"c79d029e-241f-11e5-82b5-2b42e9fac0cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"left","this":"this","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[24],"tindex":"c79d029f-241f-11e5-82b5-3fc5455b2674","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:639","type":"CtReturnImpl","sourcecode":"return V"},"status":-1},{"failures":[],"tindex":"c79d29b0-241f-11e5-82b5-65a651d5b4e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:519","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"status":-2},{"failures":[25],"tindex":"c79d29b1-241f-11e5-82b5-bd30e694b3d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure<? super T>)"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c79d29b2-241f-11e5-82b5-970ad9f39768","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"status":-1},{"failures":[],"tindex":"c79d29b3-241f-11e5-82b5-13082f947f32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"variableMap":{"keySet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":0},{"failures":[],"tindex":"c79d29b4-241f-11e5-82b5-978e6010fa9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()"},"status":0},{"failures":[46,47,48],"tindex":"c79d29b5-241f-11e5-82b5-5593324a9c9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:146","type":"CtReturnImpl","sourcecode":"return ((this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())) - 1"},"status":-1},{"failures":[],"tindex":"c79d29b6-241f-11e5-82b5-794365c554ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:224","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)"},"status":-2},{"failures":[49],"tindex":"c79d50c7-241f-11e5-82b5-4172988892f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:85","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":-1},{"failures":[],"tindex":"c79d50c8-241f-11e5-82b5-cb038a8a3137","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"aColl2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:418","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"c79d50c9-241f-11e5-82b5-0d56a95a4cc6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"c79d50ca-241f-11e5-82b5-0b743e66a3cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"c79d50cb-241f-11e5-82b5-01fbf2986995","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[96,97,98],"tindex":"c79d50cc-241f-11e5-82b5-f3353dbccee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"c79d77dd-241f-11e5-82b5-e989a8beb8b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(org.apache.commons.collections4.Bag<? extends E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"c79d29b3-241f-11e5-82b5-13082f947f32","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.FixedSizeMap.java.util.Set keySet()":["org.apache.commons.collections4.map.FixedSizeMap.java.util.Set keySet() -> org.apache.commons.collections4.map.FixedSizeMap.java.util.Set keySet()","org.apache.commons.collections4.map.FixedSizeMap.java.util.Set keySet() -> org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set)"]},"graph":"branch"}]}]}