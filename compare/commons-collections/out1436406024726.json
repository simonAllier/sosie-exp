{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":56,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":69,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":41,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":1,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":39,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":96,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":93,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":9,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":81,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":17,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":102,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":89,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":13,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":72,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":77,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":14,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":57,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":109,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":15,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":28,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":32,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":55,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":60,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":110,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":95,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":99,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":68,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":29,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":108,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":16,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":91,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":58,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":18,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":78,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":62,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":63,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":4,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":92,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":73,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":44,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":24,"org.apache.commons.collections4.map.LRUMapTest.testLRU":80,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":8,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":88,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":90,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":52,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":26,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapHashCode":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":106,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":45,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":36,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":10,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":46,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":84,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":43},"transformations":[{"failures":[0,1,2,3,4],"tindex":"7817cf8c-25db-11e5-ac8e-331253c29156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:133","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"7817f69d-25db-11e5-ac8e-f5e3db2adabe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:832","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7817f69e-25db-11e5-ac8e-15ed57b10e69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:402","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"status":-2},{"failures":[],"tindex":"78181daf-25db-11e5-ac8e-c52fa7edcba7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"root","parent":"found","left":"root","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    int -= 2;\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[5,6,7,8],"tindex":"78181db0-25db-11e5-ac8e-6b8c77f09ab9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:232","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1},{"failures":[],"tindex":"781844c1-25db-11e5-ac8e-e754abd66e28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:939","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"781844c2-25db-11e5-ac8e-815a154ec3a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[],"tindex":"781844c3-25db-11e5-ac8e-0f404b07497c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"781844c4-25db-11e5-ac8e-c1fc7e1bfe46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:142","type":"CtReturnImpl","sourcecode":"return this.java.util.Comparator<? super E>.compare(E, E)"},"status":-1},{"failures":[],"tindex":"78186bd5-25db-11e5-ac8e-f98946202ca4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[][0]"},"status":-2},{"failures":[80,81,82],"tindex":"78186bd6-25db-11e5-ac8e-51252f5d9923","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"modCount","modifications":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[83],"tindex":"781892e7-25db-11e5-ac8e-332d06b0cb44","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:237","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[84,85,86,87],"tindex":"781892e8-25db-11e5-ac8e-53cc6aca434c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"x","hash2":"x","hash1":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"status":-1},{"failures":[88],"tindex":"781892e9-25db-11e5-ac8e-d59ff2f08f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"variableMap":{"predicate":"predicate","trueClosure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[],"tindex":"7818b9fa-25db-11e5-ac8e-53dcd3918fd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:478","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[],"tindex":"7818b9fb-25db-11e5-ac8e-2f2c632be0cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:402","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[89,90,91],"tindex":"7818b9fc-25db-11e5-ac8e-4fb7b366189e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:178","type":"CtAssignmentImpl","sourcecode":"T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)))"},"status":-1},{"failures":[92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"7818b9fd-25db-11e5-ac8e-c5cfdd9115d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:316","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next())"},"status":-1},{"failures":[104,105,106,107,108,109,110],"tindex":"7818e10e-25db-11e5-ac8e-1f2a4d2ce03b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1269","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"781844c1-25db-11e5-ac8e-e754abd66e28","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void modify()"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void modify()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.void remove()_if ((modifications) != (expectedModifications)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.void remove()_(expectedModifications)++","org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.org.apache.commons.collections4.bidimap.TreeBidiMap$Node navigateNext()_if ((modifications) != (expectedModifications)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)_expectedModifications = modifications"]},"type":"variable"}]}]}