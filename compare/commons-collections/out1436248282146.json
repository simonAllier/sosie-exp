{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testSimpleSerialization":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":112,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":13,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":37,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":93,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":107,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":108,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":38,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":14,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":1,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":105},"transformations":[{"failures":[0],"tindex":"322f0bf3-246c-11e5-b21c-7fbf84ca87c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[1,2],"tindex":"322f3304-246c-11e5-b21c-977e9657416c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionFactory invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index\")"},"status":-1},{"failures":[3],"tindex":"322f3305-246c-11e5-b21c-a383dc153971","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:46","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.EnumerationIterator<E>.this(null, null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.EnumerationIterator<E>.this(java.util.Enumeration<? extends E>, null)"},"status":-1},{"failures":[],"tindex":"322f5a16-246c-11e5-b21c-fbc6a611d87b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:343","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"322f5a17-246c-11e5-b21c-553ea01a1335","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(this, java.util.List<java.util.Collection<E>>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"322f5a18-246c-11e5-b21c-d38b1ef407cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:356","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-2},{"failures":[4],"tindex":"322f5a19-246c-11e5-b21c-71b739ac4e13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"status":-1},{"failures":[5,6],"tindex":"322f5a1a-246c-11e5-b21c-fd289364acaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:97","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"322f5a1b-246c-11e5-b21c-dd7d66d2ac06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"322f5a1c-246c-11e5-b21c-8ba83fb1fbdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"322f812d-246c-11e5-b21c-ff1a066a50c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"322f812e-246c-11e5-b21c-39e95d54ddb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[7],"tindex":"322f812f-246c-11e5-b21c-016df06409cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"322f8130-246c-11e5-b21c-2dbf96c9b024","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:222","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"322fa841-246c-11e5-b21c-0d36d50440d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"322fa842-246c-11e5-b21c-77ffbd2b3448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()"},"status":-2},{"failures":[],"tindex":"322fa843-246c-11e5-b21c-8b5c3a62bc28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1342","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"key=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:600","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(']')"},"status":0},{"failures":[105,106,107,108,109,110,111,112],"tindex":"322fa844-246c-11e5-b21c-e53effad2659","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[113],"tindex":"322fa845-246c-11e5-b21c-036c81fed09d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:114","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"322fcf56-246c-11e5-b21c-11ca068b592d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:288","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.clear()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"322f812d-246c-11e5-b21c-ff1a066a50c3","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.<E> org.apache.commons.collections4.BoundedCollection unmodifiableBoundedCollection(java.util.Collection)":["org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.<E> org.apache.commons.collections4.BoundedCollection unmodifiableBoundedCollection(java.util.Collection) -> org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.<E> org.apache.commons.collections4.BoundedCollection unmodifiableBoundedCollection(java.util.Collection)"]},"graph":"branch"}]},{"transformation":"322f5a1b-246c-11e5-b21c-dd7d66d2ac06","diffs":[{"branches":{"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.collection.AbstractCollectionDecorator_int_size().b","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.collection.AbstractCollectionDecorator_int_size().b","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.collection.AbstractCollectionDecorator_int_size().b","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.int size()"]},"edges":{"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractMapBag.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractBagDecorator.org.apache.commons.collections4.Bag decorated()"],"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":[],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object)":["org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":[],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractMapBag.int size()"]},"graph":"branch"}]},{"transformation":"322f5a1c-246c-11e5-b21c-8ba83fb1fbdb","diffs":[{"branches":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]},{"transformation":"322fa843-246c-11e5-b21c-8b5c3a62bc28","diffs":[{"variables":{"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)_this.collection = coll"],"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)_this.collection = coll"]},"type":"variable"}]}]}