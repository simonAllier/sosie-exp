{"failureDictionary":{"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":10,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":0,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":3,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":7,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":1,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":9,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":5,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":8,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":6,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":11},"transformations":[{"failures":[],"tindex":"526bf5a5-2526-11e5-aca8-43bbeaa02c26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[0],"tindex":"526c43c6-2526-11e5-aca8-99fbe9292eee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:48","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"526c43c7-2526-11e5-aca8-eb4ec4ffbdc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:237","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0},{"failures":[1,2],"tindex":"526c6ad8-2526-11e5-aca8-830e302c601e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:94","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"526c6ad9-2526-11e5-aca8-9de644a2bb41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[3],"tindex":"526c6ada-2526-11e5-aca8-df759eaaa0b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"status":-1},{"failures":[],"tindex":"526c6adb-2526-11e5-aca8-6dd599c34528","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:190","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"endIndex":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:42","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> int"},"status":-2},{"failures":[4,5,6],"tindex":"526c91ec-2526-11e5-aca8-233625ca3e0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[],"tindex":"526c91ed-2526-11e5-aca8-7dfcc8d27184","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:94","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[],"tindex":"526c91ee-2526-11e5-aca8-85727edd0584","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:455","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[7,8],"tindex":"526c91ef-2526-11e5-aca8-91253146ad1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1149","type":"CtIfImpl","sourcecode":"if ((int) != (java.util.Map<?, ?>.size())) {\n    return false;\n} "},"variableMap":{"other":"other","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.Object java.lang.Object = null;\n    switch (int) {\n        case 3 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 2 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 1 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"526cb900-2526-11e5-aca8-7d64d6c80d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"variableMap":{"this":"normalMap","out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[],"tindex":"526cb901-2526-11e5-aca8-119b74e3cc44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"526cb902-2526-11e5-aca8-134e6a38f285","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"526ce013-2526-11e5-aca8-7f81736b399e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1569","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"next":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1099","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"526ce014-2526-11e5-aca8-0d9dc5539a27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)"},"variableMap":{"fromIndex":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)"},"status":-2},{"failures":[9,10],"tindex":"526ce015-2526-11e5-aca8-cd2b10f158d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[11],"tindex":"526ce016-2526-11e5-aca8-855fb310ee0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"size","start":"size","end":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:541","type":"CtAssignmentImpl","sourcecode":"int = 2"},"status":-1},{"failures":[],"tindex":"526d0727-2526-11e5-aca8-8d755a976893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"526d0728-2526-11e5-aca8-332be0840292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:268","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"526c43c7-2526-11e5-aca8-eb4ec4ffbdc6","diffs":[{"nodes":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"]},"edges":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.FilterIterator.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.FilterIterator.void remove()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.FilterIterator.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.FilterIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.FilterIterator.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.FilterIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.void remove()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.V next()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.V next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_if ((currentIterator) == null) {    updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator.remove()","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_if ((currentIterator) == null) {    updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator.remove()","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"]},"type":"variable"}]}]}