{"failureDictionary":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor":24,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":0,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":2,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":16,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":35,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":10,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEmptyListSort":31,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":45,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testRandomListSort":29,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":4,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":8,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorIsSerializable":33,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":17,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":44,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":22,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":9,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":43,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":42,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":28,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":5,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsSelfHashCode":38,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":21,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":19,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testReverseListSort":30,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":15,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":41,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":6,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":7,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorCompatibility":32,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":37,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":40,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":25,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSimpleSerialization":36,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual":26,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":14},"transformations":[{"failures":[],"tindex":"315165ee-2599-11e5-971a-2dfda36fb496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:451","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[0,1],"tindex":"3151b40f-2599-11e5-971a-af0c28b73b20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:179","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"status":-1},{"failures":[2,3],"tindex":"3151b410-2599-11e5-971a-7701a7ae73d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"result","changed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:393","type":"CtAssignmentImpl","sourcecode":"boolean = java.util.Collection<V>.addAll(java.util.Collection<V>)"},"status":-1},{"failures":[],"tindex":"3151b411-2599-11e5-971a-9b6afe88bebc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:401","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"3151b412-2599-11e5-971a-c3eb20fd6430","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"siblingNode","this":"this","rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1064","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"3151da23-2599-11e5-971a-6f75c59e2caa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":-2},{"failures":[],"tindex":"3151da24-2599-11e5-971a-5b243066661d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:211","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"31520135-2599-11e5-971a-098889675d95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:746","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-2},{"failures":[],"tindex":"31520136-2599-11e5-971a-a145dda4dbfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:430","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"31520137-2599-11e5-971a-9b57a3e2e2bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"31522848-2599-11e5-971a-03ff59ac2268","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1101","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"status":-2},{"failures":[],"tindex":"31522849-2599-11e5-971a-715490ed93d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))))"},"status":-2},{"failures":[],"tindex":"3152284a-2599-11e5-971a-eb85a18f8c9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[16,17,18,19,20,21],"tindex":"31524f5b-2599-11e5-971a-473dda35b257","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"31524f5c-2599-11e5-971a-ff8887068ea1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:62","type":"CtReturnImpl","sourcecode":"return java.util.List<T> == null ? java.util.Collections.<T>emptyList() : java.util.List<T>"},"status":-2},{"failures":[22],"tindex":"31524f5d-2599-11e5-971a-212663a6ed71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"31524f5e-2599-11e5-971a-1bbb32d573c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-1},{"failures":[],"tindex":"3152766f-2599-11e5-971a-3bf20d51ce1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator<K, V>)"},"status":-2},{"failures":[40,41,42,43,44,45],"tindex":"31527670-2599-11e5-971a-fdafda0272a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"start2","d":"offset","offset":"d","vDown":"vUp","delta":"delta","this":"this","sequence1":"sequence1","sequence2":"sequence1","vUp":"vUp","end2":"delta","equator":"equator","end1":"end1","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}