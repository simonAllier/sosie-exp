{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":22,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":115,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":74,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":215,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":252,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":372,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":146,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":201,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":54,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":371,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":366,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":335,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":165,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":337,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":6,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":346,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":282,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":98,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":20,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":116,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":235,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":318,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":385,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":85,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":205,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":220,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":338,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":55,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":138,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":247,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":398,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":79,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":102,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":162,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":236,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":164,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":145,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":285,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":315,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":293,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":340,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":258,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":395,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":323,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":178,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":307,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":108,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":175,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":312,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":41,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":207,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":342,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":333,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":27,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":28,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":26,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":12,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":387,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":133,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":180,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":181,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":100,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":272,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":103,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":124,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":139,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":39,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":122,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":121,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":203,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":202,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":370,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":3,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":119,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":185,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":269,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":377,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":8,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":218,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":36,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":208,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":270,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":96,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":51,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":234,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":127,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":105,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":219,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":304,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":253,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":73,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":369,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":89,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":324,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":58,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":109,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":148,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":195,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":358,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":72,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":71,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":70,"org.apache.commons.collections4.map.LRUMapTest.testReset":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":192,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":268,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":188,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":248,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":281,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":227,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.LinkedMapTest.testReset":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":238,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":56,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":23,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":76,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":233,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":75,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":0,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":380,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":316,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":214,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":206,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":321,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":231,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":9,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":299,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":170,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":331,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":310,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":376,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":151,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":174,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":277,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":390,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":86,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":245,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":246,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":114,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":295,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":383,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":391,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":136,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":95,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":5,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":156,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":296,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":191,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":261,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":266,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":210,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":209,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":15,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":211,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":140,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":97,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":173,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":190,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":320,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":356,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":298,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":262,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":352,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":351,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":354,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":353,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":348,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":365,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":350,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":221,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":314,"org.apache.commons.collections4.CollectionUtilsTest.isFull":344,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":62,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":167,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":182,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":373,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":16,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":90,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":112,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":142,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":341,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":92,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":157,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":378,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":292,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":131,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":106,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":250,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":284,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":200,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":249,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":7,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":11,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":329,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":359,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":19,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":283,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":230,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":129,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":275,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":276,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":228,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":384,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":339,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":379,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":388,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":21,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":169,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":297,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":189,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":159,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":259,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":286,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":59,"org.apache.commons.collections4.map.LRUMapTest.testLRU":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":389,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":257,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":368,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":4,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":254,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":319,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":363,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":317,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":336,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":265,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":303,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":34,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":143,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":94,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":64,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":367,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":40,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":305,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":35,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":375,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":311},"transformations":[{"failures":[0,1],"tindex":"819f7a01-243f-11e5-b94c-07dd10e84caf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[2,3],"tindex":"819fc822-243f-11e5-b94c-bd92ca90269a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":-1},{"failures":[],"tindex":"819fc823-243f-11e5-b94c-fb5279fa1472","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:538","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"819fef34-243f-11e5-b94c-63a86268ec8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[4,5],"tindex":"819fef35-243f-11e5-b94c-0f1e30442d3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[6],"tindex":"81a01646-243f-11e5-b94c-af946e8ec6f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:423","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"81a01647-243f-11e5-b94c-0988dd44702c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(indexOf(java.lang.Object)) != (-1)"},"status":-2},{"failures":[7,8,9],"tindex":"81a03d58-243f-11e5-b94c-dbe36701f770","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"tindex":"81a03d59-243f-11e5-b94c-3f9afddba99c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:170","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"variableMap":{"array":"org.apache.commons.collections4.map.AbstractHashedMap.NULL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"status":-1},{"failures":[],"tindex":"81a08b7a-243f-11e5-b94c-e39711adfce2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1207","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"81a0b28b-243f-11e5-b94c-a75f2048ea45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NotPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[324,325,326,327,328,329,330,331,332],"tindex":"81a0b28c-243f-11e5-b94c-93816c354cc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[333,334,335,336,337,338,339,340,341,342,343],"tindex":"81a0d99d-243f-11e5-b94c-7174e9ef4a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"81a0d99e-243f-11e5-b94c-a5b8bceb1133","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"maxElements","lengthInBits":"end","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"end","otherOffsetInBits":"end","otherLengthInBits":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"81a100af-243f-11e5-b94c-47c9fdc20e23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)"},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, 1)"},"status":-2},{"failures":[],"tindex":"81a127c0-243f-11e5-b94c-2974070f100a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"allNull","changed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"81a127c1-243f-11e5-b94c-db6541b6601a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:156","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[382,383],"tindex":"81a127c2-243f-11e5-b94c-2bc4f3fc4611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:174","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")"},"status":-1},{"failures":[34,35,36,37,49,50,52,53,54,57,59,62,63,70,71,72,77,80,81,82,83,84,88,85,99,100,102,103,104,107,109,112,113,120,121,122,127,130,131,132,133,134,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,141,142,144,145,146,149,151,154,155,162,163,164,169,172,173,174,175,176,181,191,192,194,195,196,199,201,204,205,212,213,214,219,222,223,224,225,226,232,233,234,235,236,238,239,240,241,250,251,256,257,259,260,261,264,266,269,270,277,278,279,284,287,288,289,290,291,295,297,300,301,303,305,0,307,308,310,312,315,316,318,320,1,322,323],"tindex":"81a14ed3-243f-11e5-b94c-bb2d52465d08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:221","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[359,363],"tindex":"81a14ed4-243f-11e5-b94c-2738e0640517","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"LRUMap max size must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"819fef34-243f-11e5-b94c-63a86268ec8e","diffs":[{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"]},"type":"variable"}]}]}