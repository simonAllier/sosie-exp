{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":71,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":85,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":9,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":69,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":37,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":5,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":86,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":55,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":42,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":67,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":2,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":88,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":97},"transformations":[{"failures":[],"tindex":"192ac64d-25da-11e5-9041-4de8efb5c4e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap()"},"variableMap":{"this":"inverseBidiMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:83","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(java.util.Map<V, K> , java.util.Map<K, V> , org.apache.commons.collections4.BidiMap<K, V>)"},"status":-2},{"failures":[],"tindex":"192b146e-25da-11e5-9041-df66c7d39899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:997","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"192b146f-25da-11e5-9041-bf3f90fbd10a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"current","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[46,47],"tindex":"192b3b80-25da-11e5-9041-632fd14ec0a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[48],"tindex":"192b3b81-25da-11e5-9041-1765d8795d57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:175","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[49,50],"tindex":"192b3b82-25da-11e5-9041-cbc4304d6589","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"192b6293-25da-11e5-9041-bdb160ef0c27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:256","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"192b6294-25da-11e5-9041-bb21d1db6e7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"status":0},{"failures":[],"tindex":"192b6295-25da-11e5-9041-13a4cedc78dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"variableMap":{"vDown":"keys","x":"offset","i":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:134","type":"CtAssignmentImpl","sourcecode":"int[][(int + int)] = int"},"status":-2},{"failures":[0,2,3,5,6,4,8,9,11,12,13,14,15,16,18,21,22,26,27,29,30,31,35,44,45],"tindex":"192b6296-25da-11e5-9041-715248c199d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:83","type":"CtAssignmentImpl","sourcecode":"char = 0"},"variableMap":{"k":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:91","type":"CtAssignmentImpl","sourcecode":"char = java.lang.String.charAt(int)"},"status":-1},{"failures":[],"tindex":"192b89a7-25da-11e5-9041-c5b651ff3634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"entry","parent":"right","left":"root","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[69],"tindex":"192bb0b8-25da-11e5-9041-0d882e1eb6ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1502","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize()"},"status":-1},{"failures":[70,71,72,73],"tindex":"192bb0b9-25da-11e5-9041-d50d0c38f384","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:145","type":"CtReturnImpl","sourcecode":"return (this.int) - (this.int)"},"variableMap":{"startIndex":"h","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:678","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"192bb0ba-25da-11e5-9041-6f6a7c28337b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":-2},{"failures":[74,75],"tindex":"192bd7cb-25da-11e5-9041-1724b9e01903","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"No Collection associated with this Iterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:188","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[],"tindex":"192bd7cc-25da-11e5-9041-c3548ff07c1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"variableMap":{"buf":"buf","first":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[5,6,4,22,29,30,36,40,76,77,78,79,80,81],"tindex":"192bd7cd-25da-11e5-9041-5f54d984aada","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"current","e":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:442","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"192bfede-25da-11e5-9041-87688697934c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:180","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"192bfedf-25da-11e5-9041-617db0c7c7e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:558","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"before","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:267","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"192bfee0-25da-11e5-9041-2b4adf2274f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"192bd7cc-25da-11e5-9041-c3548ff07c1b","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.MultiKey.java.lang.String toString()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.Flat3Map.V put(K,V)_delegateMap.put(key, value)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"]},"type":"variable"}]}]}