{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":14,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":23,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":26,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testRemove":2,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":29,"org.apache.commons.collections4.CollectionUtilsTest.reverse":72,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":10,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":28,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors":64,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":50,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":13,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":73,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray":66,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":9,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":67,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":24,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":37,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":55,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":36,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":8,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":31,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":40},"transformations":[{"failures":[],"tindex":"0aea36f2-424b-11e5-b36e-2dbe722eca0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"predecessor","left":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:217","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[0,1,2],"tindex":"0aea5e03-424b-11e5-b36e-c3911b8b1b7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:112","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0aea5e04-424b-11e5-b36e-5b5f5cd854f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0aea5e05-424b-11e5-b36e-99fc6a61ef7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"size","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[],"tindex":"0aea5e06-424b-11e5-b36e-13b995374aaa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"next","after":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[3,4,5,6,7,8],"tindex":"0aea5e07-424b-11e5-b36e-a9b1b5c419ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:168","type":"CtReturnImpl","sourcecode":"return K"},"status":-1},{"failures":[9],"tindex":"0aea8518-424b-11e5-b36e-e567bab90a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"previous","key2":"key3","previous":"entry","hashCode":"index","key3":"key2","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"0aea8519-424b-11e5-b36e-c1fa4d33eb4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"variableMap":{"closure":"iClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super T>.execute(T)"},"status":0},{"failures":[10,11,12,13,9,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"0aea851a-424b-11e5-b36e-f18894507bfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"total","listSize":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"0aea851b-424b-11e5-b36e-3178e51b0c66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:203","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":0},{"failures":[71],"tindex":"0aeaac2c-424b-11e5-b36e-114aed63c161","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:893","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.min()"},"variableMap":{"otherTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:273","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null"},"status":-1},{"failures":[],"tindex":"0aeaac2d-424b-11e5-b36e-cb0758d3f9b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")"},"status":-2},{"failures":[17],"tindex":"0aeaac2e-424b-11e5-b36e-2340c21ea8f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0aeaac2f-424b-11e5-b36e-917239d4f90b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"key1","parentNode":"key2","dataElement":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-2},{"failures":[],"tindex":"0aeaac30-424b-11e5-b36e-01c522c7ee73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"0aead341-424b-11e5-b36e-a1ed2df172e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"status":0},{"failures":[72],"tindex":"0aead342-424b-11e5-b36e-edcec529c061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1445","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object"},"status":-1},{"failures":[73],"tindex":"0aead343-424b-11e5-b36e-bf7d6b5bac18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:131","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this"},"status":-1},{"failures":[],"tindex":"0aead344-424b-11e5-b36e-f773e9f445ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"0aead345-424b-11e5-b36e-213e2ce0b227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:321","type":"CtReturnImpl","sourcecode":"return true"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}