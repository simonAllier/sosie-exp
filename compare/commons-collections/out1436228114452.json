{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":53,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testFullIterator":10,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testEmptyIterator":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testEmptyIterator":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":40,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":24,"org.apache.commons.collections4.map.LRUMapTest.testLRU":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":49,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":4,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":33,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":42,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":36,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":26,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":50,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":32,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":46,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":19,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":7,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":30,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":51,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":52,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyIterator":13,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":54,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":35,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":28},"transformations":[{"failures":[],"tindex":"3d4d01da-243d-11e5-9add-e7299548f774","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"3d4d28eb-243d-11e5-9add-8df71e72563e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-2},{"failures":[],"tindex":"3d4d28ec-243d-11e5-9add-1957652a343f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V)"},"status":0},{"failures":[],"tindex":"3d4d28ed-243d-11e5-9add-4364b6e0fe87","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:344","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.addAll(java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"3d4d28ee-243d-11e5-9add-91d188df62f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":0},{"failures":[],"tindex":"3d4d4fff-243d-11e5-9add-c9b5d3f646c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:63","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.collection.TransformedCollection<E>(java.util.Collection<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[0,1],"tindex":"3d4d5000-243d-11e5-9add-877e35796068","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"3d4d5001-243d-11e5-9add-7fd03f7a7054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"status":-1},{"failures":[],"tindex":"3d4d5002-243d-11e5-9add-617a7a8bfc66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"3d4d5003-243d-11e5-9add-db0b407f10db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:539","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"3d4d7714-243d-11e5-9add-0596e9364585","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:735","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:746","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> == null) || (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"status":-1},{"failures":[],"tindex":"3d4d7715-243d-11e5-9add-5b51cbb2c32f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"3d4d7716-243d-11e5-9add-8bac4d17d157","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"3d4d7717-243d-11e5-9add-c3658350c3ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[30,31,32,33,34],"tindex":"3d4d9e28-243d-11e5-9add-937a6d4a45f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"3d4d9e29-243d-11e5-9add-6113fb58ecc2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1569","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"next":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:196","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43],"tindex":"3d4d9e2a-243d-11e5-9add-89b4d529d759","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"3d4d9e2b-243d-11e5-9add-833585341b70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:154","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"variableMap":{"normalMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:203","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).headMap(K)"},"status":-2},{"failures":[44],"tindex":"3d4d9e2c-243d-11e5-9add-3305aeb9ce0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2279","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int"},"variableMap":{"modCount":"removeIndex","expectedModCount":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:220","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"3d4dc53d-243d-11e5-9add-7b36b79563b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:289","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n        final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n        return V;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}