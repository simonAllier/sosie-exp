{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":36,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":65,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":69,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":82,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":66,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":6,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":18,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":14,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":71,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":75,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":83,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":51,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":87,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":79,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":21,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":46,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":70,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":3,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":9,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":11,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":86,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":47,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":57,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":72,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":76,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":81,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":30,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":64,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":22,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":55,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":74,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":31,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":28},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"cccdeb94-46cf-11e5-afdb-37a853c4d75f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"ccce12a5-46cf-11e5-afdb-75bc578dbf55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:435","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[9],"tindex":"ccce12a6-46cf-11e5-afdb-49b0665b63e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:74","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"ccce39b7-46cf-11e5-afdb-593256e5121e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:441","type":"CtOperatorAssignmentImpl","sourcecode":"int += E == null ? 0 : E.hashCode()"},"status":-1},{"failures":[],"tindex":"ccce39b8-46cf-11e5-afdb-a32b144125b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.isBitSet(K, int, int)"},"status":-2},{"failures":[32,33,34],"tindex":"ccce39b9-46cf-11e5-afdb-410deb0decf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:505","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"n","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:331","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"ccce60ca-46cf-11e5-afdb-49ddd85bd5d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"ccce60cb-46cf-11e5-afdb-2f0ac3528d95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:752","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"ccce87dc-46cf-11e5-afdb-a31311b9e39e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:308","type":"CtAssignmentImpl","sourcecode":"E[][(int)++] = null"},"status":-1},{"failures":[55,56,57,58,59,60,61],"tindex":"ccce87dd-46cf-11e5-afdb-97eeec72d1d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1},{"failures":[],"tindex":"ccce87de-46cf-11e5-afdb-63d43c4d3f0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[62,63,64],"tindex":"ccce87df-46cf-11e5-afdb-097f809f48bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:170","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.get(0)"},"status":-1},{"failures":[],"tindex":"ccce87e0-46cf-11e5-afdb-2906302beac5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"ccce87e1-46cf-11e5-afdb-87497313381c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"ccceaef2-46cf-11e5-afdb-4f096dacc020","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1730","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n    return null;\n} "},"variableMap":{"this":"normalMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:135","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.get(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"ccceaef3-46cf-11e5-afdb-677d83c6fa2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:278","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"ccceaef4-46cf-11e5-afdb-bd3f70f52dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"i","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ccceaef5-46cf-11e5-afdb-79d39f2c415c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:656","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-2},{"failures":[],"tindex":"ccceaef6-46cf-11e5-afdb-898402c8289a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"parent","current":"parent","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:737","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"ccced607-46cf-11e5-afdb-77cca41b7262","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:109","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.containsKey(java.lang.Object)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}