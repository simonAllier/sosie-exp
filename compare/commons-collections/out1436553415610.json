{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":57,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":4,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":10,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":64,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":28,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":16,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":20,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":3,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":66,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":56,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":0,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSimpleSerialization":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":24,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":31,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":59,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":54,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":32,"org.apache.commons.collections4.map.Flat3MapTest.testToString":13,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":67,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":74,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":26,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":68},"transformations":[{"failures":[],"tindex":"a3e881e8-2732-11e5-ba16-7d51e317b57e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:874","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:182","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a3e8a8f9-2732-11e5-ba16-5bbca2528178","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"a3e8a8fa-2732-11e5-ba16-6bdb4d65bf99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"a3e8d00b-2732-11e5-ba16-8d73cd414cbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:256","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRemoveKey(java.lang.Object)"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"a3e8d00c-2732-11e5-ba16-99d65d6b574c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:699","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"node":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:956","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a3e8d00d-2732-11e5-ba16-e93ea1a57e88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"aColl1","this":"aColl1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:412","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"a3e8d00e-2732-11e5-ba16-c3cb645c1741","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"status":0},{"failures":[],"tindex":"a3e8d00f-2732-11e5-ba16-979288bed39a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"key4","d":"h","delta":"h","i":"h","k":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"a3e8d010-2732-11e5-ba16-7b67c66578b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl","sourcecode":"return \"Iterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1366","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[],"tindex":"a3e8f721-2732-11e5-ba16-bf3d39734827","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1703","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"a3e8f722-2732-11e5-ba16-f19667e42385","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[70,71],"tindex":"a3e8f723-2732-11e5-ba16-1114382d40a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"a3e8f724-2732-11e5-ba16-2f0f11c8d53d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"a3e8f725-2732-11e5-ba16-058499e86bcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1703","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"a3e91e36-2732-11e5-ba16-5b4db94f0923","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-2},{"failures":[],"tindex":"a3e91e37-2732-11e5-ba16-e54cd4fac362","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:409","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<java.util.Set<E>>)"},"status":-2},{"failures":[72,73,74,75],"tindex":"a3e91e38-2732-11e5-ba16-a961564fed28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"a3e91e39-2732-11e5-ba16-c75035125257","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"validForUpdate","removed":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"a3e91e3a-2732-11e5-ba16-d57d609afa83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1177","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"i":"threshold","hashIndex":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1264","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":-2},{"failures":[],"tindex":"a3e91e3b-2732-11e5-ba16-93db9430cd11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:366","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer(java.lang.Class<?>[], java.lang.Object[])"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a3e8d010-2732-11e5-ba16-7b67c66578b9","diffs":[{"variables":{"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.<T> java.lang.Object toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.MultiKeyMap.org.apache.commons.collections4.map.MultiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)_map","org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Map decorated()_map","org.apache.commons.collections4.map.AbstractMapDecorator.org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)_map","org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.<T> java.lang.Object toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength,T,int)_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent"]},"type":"variable"}]},{"transformation":"a3e8a8f9-2732-11e5-ba16-5bbca2528178","diffs":[{"nodes":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"edges":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void checkLocked()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.iterators.IteratorChain.void addIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_iteratorChain","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_lastUsedIterator"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_iteratorChain","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_lastUsedIterator"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_iteratorChain","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_lastUsedIterator"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_lastUsedIterator"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_iteratorChain","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_lastUsedIterator"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_iteratorChain","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()_lastUsedIterator"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.EmptyIterator_<E>_java.util.Iterator_emptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().t2","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().e2"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.EmptyIterator_<E>_java.util.Iterator_emptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().t2","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().e2"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.EmptyIterator_<E>_java.util.Iterator_emptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().t2","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.EmptyIterator_org.apache.commons.collections4.iterators.EmptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().e2"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.EmptyIterator_<E>_java.util.Iterator_emptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().t2","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().e2","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().l3"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.AbstractEmptyIterator_org.apache.commons.collections4.iterators.AbstractEmptyIterator().b","org.apache.commons.collections4.iterators.EmptyIterator_<E>_java.util.Iterator_emptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().t2","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.EmptyIterator_org.apache.commons.collections4.iterators.EmptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().e2"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.EmptyIterator_<E>_java.util.Iterator_emptyIterator().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().b","org.apache.commons.collections4.iterators.IteratorChain_void_checkLocked().e1","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().t2","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.IteratorChain_void_updateCurrentIterator().e2"]},"type":"branch"}]}]}