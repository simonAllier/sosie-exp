{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":127,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":4,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":22,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":130,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":67,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":28,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":121,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":128,"org.apache.commons.collections4.list.TreeListTest.testRemove":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":33,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":47,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":6,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":90,"org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility":117,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":71,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":35,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":110,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":97,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":116,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":62,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":82,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":10,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":81,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":57,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":65,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":43,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":23,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":49,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":122,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":134,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":8,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":131,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":109,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":74,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":9,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":106,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":54,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":105,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":98,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":64,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":69,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":48,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":31,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":58,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":17,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":114,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":95,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":70,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":13,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":12,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":42,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":120,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":24,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":73,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":93,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":25,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":85,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.list.TreeListTest.testBug35258":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":27,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":1,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":2,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":59,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":100,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":102,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":125},"transformations":[{"failures":[],"tindex":"6165c57b-2419-11e5-84e8-3bcd44e1047c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[],"tindex":"6165ec8c-2419-11e5-84e8-d14c3185d1c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:887","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"6166139d-2419-11e5-84e8-7fd8fb3faf05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[],"tindex":"6166139e-2419-11e5-84e8-e3b8320d486f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value can be removed at present\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:549","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-2},{"failures":[],"tindex":"6166139f-2419-11e5-84e8-117a11615a09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} "},"variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"61663ab0-2419-11e5-84e8-bb49cfe8a61d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:277","type":"CtAssignmentImpl","sourcecode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this)"},"status":-1},{"failures":[],"tindex":"61663ab1-2419-11e5-84e8-23b978fea9fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"parent","parent":"current","left":"parent","h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:712","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"616661c2-2419-11e5-84e8-cb40bc981971","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1359","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[115,116,117,118,119,120],"tindex":"616661c3-2419-11e5-84e8-23ec76e9733a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:176","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-1},{"failures":[121],"tindex":"616661c4-2419-11e5-84e8-f3a8648d5995","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1298","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object))"},"status":-1},{"failures":[122,123,124],"tindex":"616688d5-2419-11e5-84e8-a58d7a6122c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:165","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"616688d6-2419-11e5-84e8-8f42c54a27d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"))"},"status":-2},{"failures":[],"tindex":"616688d7-2419-11e5-84e8-0b3a4a43e10e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:279","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"6166afe8-2419-11e5-84e8-b557acb2f4b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:308","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"6166afe9-2419-11e5-84e8-d7f3185e3bdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:80","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , org.apache.commons.collections4.Transformer<T, T>[])"},"status":-2},{"failures":[],"tindex":"6166afea-2419-11e5-84e8-5f6a624b5fd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[125,126,127,128,129,130,131,132,133],"tindex":"6166afeb-2419-11e5-84e8-a52b8569b5ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1059","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.next()"},"variableMap":{"next":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null)"},"status":-1},{"failures":[],"tindex":"6166d6fc-2419-11e5-84e8-2b73c88774fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:317","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.list.SetUniqueList<E>.createSetBasedOnList(java.util.Set<E>, java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"6166d6fd-2419-11e5-84e8-2f5c77514cac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:140","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[134,135],"tindex":"6166d6fe-2419-11e5-84e8-db8684c83ee4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"6166afea-2419-11e5-84e8-5f6a624b5fd2","diffs":[{"nodes":{"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.int size()"]},"edges":{"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractMapBag.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractBagDecorator.org.apache.commons.collections4.Bag decorated()"],"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":[],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object)":["org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int size()"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":[],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.bag.AbstractMapBag.int size()"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.collection.AbstractCollectionDecorator_int_size().b","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.collection.AbstractCollectionDecorator_int_size().b","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.collection.AbstractCollectionDecorator_int_size().b","org.apache.commons.collections4.bag.AbstractMapBag_int_size().b"]},"type":"branch"}]}]}