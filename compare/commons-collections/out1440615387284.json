{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":81,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":75,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":29,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":34,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":73,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":13,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":63,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":31,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":37,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":5,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":68,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":8,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":70,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":91},"transformations":[{"failures":[0,1,2,3],"tindex":"27af6d95-4c24-11e5-ac40-7588b618a0c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"27af6d96-4c24-11e5-ac40-f35648c460eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"status":-2},{"failures":[],"tindex":"27af94a7-4c24-11e5-ac40-fd9bf87f88c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:134","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[],"tindex":"27af94a8-4c24-11e5-ac40-cd3ff183928b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"parent","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"27af94a9-4c24-11e5-ac40-c3128698c3fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"27af94aa-4c24-11e5-ac40-c7b5c7ce6a96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"27af94ab-4c24-11e5-ac40-c1af2718a46b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[],"tindex":"27afbbbc-4c24-11e5-ac40-c9aa7d5da1da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(K)"},"status":0},{"failures":[],"tindex":"27afbbbd-4c24-11e5-ac40-81e40624f584","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:275","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"27afbbbe-4c24-11e5-ac40-57e8c05535d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:568","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"27afbbbf-4c24-11e5-ac40-a9f86701d2b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":0},{"failures":[],"tindex":"27afbbc0-4c24-11e5-ac40-fdaa614baeb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:652","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{"data":"data","newEntries":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:632","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":0},{"failures":[],"tindex":"27afbbc1-4c24-11e5-ac40-e9d64015e5f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","child":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[64,65],"tindex":"27afe2d2-4c24-11e5-ac40-ad42d68ab87e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[66,67],"tindex":"27afe2d3-4c24-11e5-ac40-8fb41f4bc7a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:699","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"27afe2d4-4c24-11e5-ac40-cf8a2c65c1d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1471","type":"CtReturnImpl","sourcecode":"return int != org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.(size())"},"variableMap":{"size":"i","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"27afe2d5-4c24-11e5-ac40-6b9c1b06901a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[8,80,81,82,83,84,85,86,87,88,39,89,90,91,92,93,94,95,96],"tindex":"27afe2d6-4c24-11e5-ac40-73fc492f387e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"27b009e7-4c24-11e5-ac40-37421872ccd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"left","left":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"27b009e8-4c24-11e5-ac40-d1f466535d46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"variableMap":{"endIndex2":"indexOfLargestMobileInteger","endIndex1":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:132","type":"CtLocalVariableImpl","sourcecode":"final int int = int[][int]"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}