{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.CollectionUtilsTest.union":81,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":52,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":7,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":42,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.CollectionUtilsTest.intersection":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":79,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":30,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":37,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":41,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":9,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":18,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":87,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":21,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":4,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":13,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":15,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":2,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":14,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":80,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":44,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":22,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":51,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":45,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":88,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":29,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":75,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":47,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":35,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":25,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":78,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":49,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":76,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":6,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":77,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":24},"transformations":[{"failures":[0,1],"tindex":"05e1c114-46c9-11e5-9e50-99dfa6f51cd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:972","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"05e1e825-46c9-11e5-9e50-cb9225cae9db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"nextObjectSet","changed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"05e1e826-46c9-11e5-9e50-a7e991baa5b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-1},{"failures":[],"tindex":"05e1e827-46c9-11e5-9e50-37d4d9e9f735","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"05e1e828-46c9-11e5-9e50-895743a193c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"path","predecessor":"path","bitIndex":"bitIndex","child":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"05e20f39-46c9-11e5-9e50-272223f66792","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:81","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.hashCode()"},"status":-2},{"failures":[],"tindex":"05e20f3a-46c9-11e5-9e50-0f95905151f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:130","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])))"},"variableMap":{"result":"result","i":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:197","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37],"tindex":"05e20f3b-46c9-11e5-9e50-7d1adb0cbc75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"05e20f3c-46c9-11e5-9e50-bd68ba0c1452","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","modCount":"hashIndex","before":"previous","header":"previous","after":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"05e2364d-46c9-11e5-9e50-8bf610f3ae30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1364","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode())"},"status":-1},{"failures":[],"tindex":"05e2364e-46c9-11e5-9e50-31b635d92bdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:293","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[],"tindex":"05e2364f-46c9-11e5-9e50-83d67fc5f8b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"05e23650-46c9-11e5-9e50-436f45172f69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":0},{"failures":[55],"tindex":"05e23651-46c9-11e5-9e50-21b0eab63519","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null))"},"status":-1},{"failures":[],"tindex":"05e25d62-46c9-11e5-9e50-5329f34a5fe7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:830","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"nextCachedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:170","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"05e25d63-46c9-11e5-9e50-b1d060b4c8c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:643","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"05e25d64-46c9-11e5-9e50-2b2e6f067377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:445","type":"CtInvocationImpl","sourcecode":"java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)))"},"status":-1},{"failures":[],"tindex":"05e25d65-46c9-11e5-9e50-85a0e04326d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:558","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"entry","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"05e25d66-46c9-11e5-9e50-3399a483ad74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:252","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this)"},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:400","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet()"},"status":-2},{"failures":[86,87,88],"tindex":"05e28477-46c9-11e5-9e50-cdc47526ed2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:231","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}