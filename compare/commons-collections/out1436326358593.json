{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":40,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":73,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":63,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":44,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":32,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":10,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":95,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":33,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":54,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":18,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":17,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":97,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":113,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":99,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":56,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":100,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":28,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":45,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":43,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":53,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":52,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":71,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":57,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":48,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":111,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":26,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":8,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":51,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":64,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":65,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":112,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":62,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":108},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"fb5ef1a0-2521-11e5-ad47-5b992950b2cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"previousObjectSet","changed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[10],"tindex":"fb5f18b1-2521-11e5-ad47-075e68e28c6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value can be removed at present\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[11,12,13,14,15,16],"tindex":"fb5f18b2-2521-11e5-ad47-5b16a5c7f8e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:287","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[17],"tindex":"fb5f18b3-2521-11e5-ad47-d1d8d35fb800","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:216","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String, java.lang.Integer.valueOf(int)))"},"status":-1},{"failures":[18,19,20,21],"tindex":"fb5f18b4-2521-11e5-ad47-69cbbbc46cd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"value","b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[22,23,24,25,19,26,27,28,29,30,31],"tindex":"fb5f3fc5-2521-11e5-ad47-f7378ca6607b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"fb5f3fc6-2521-11e5-ad47-856cf9afb1d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2},{"failures":[32],"tindex":"fb5f3fc7-2521-11e5-ad47-2f400e0aa06c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[],"tindex":"fb5f3fc8-2521-11e5-ad47-5dfc9363872b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:465","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"fb5f3fc9-2521-11e5-ad47-c9e185486721","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"modCount","lastItemIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:512","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"fb5f3fca-2521-11e5-ad47-17a6be36a447","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"entry","parent":"entry","left":"entry","h":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"fb5f66db-2521-11e5-ad47-d3e8a1de098e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"fb5f66dc-2521-11e5-ad47-0d3c125f4eb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:342","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"))"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"fb5f66dd-2521-11e5-ad47-076655cc1c33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"fb5f66de-2521-11e5-ad47-d570532acaca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[67],"tindex":"fb5f8def-2521-11e5-ad47-8b6c38958adc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ComparatorPredicate<T>.org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T, java.util.Comparator<T>, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)"},"status":-1},{"failures":[],"tindex":"fb5f8df0-2521-11e5-ad47-c9d95f07d2be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1159","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"fb5f8df1-2521-11e5-ad47-179fee063631","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"next","before":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[111,112,113],"tindex":"fb5f8df2-2521-11e5-ad47-cf62cedf8b4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"fb5f8df3-2521-11e5-ad47-8d506b101787","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:482","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:918","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}