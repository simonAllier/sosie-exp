{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":18,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":26,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":2,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":11,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":13,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":3,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":6,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":22,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":20,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":15,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":0,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":21,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":17},"transformations":[{"failures":[],"tindex":"a4b7af36-246b-11e5-935e-319d207a7d03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:184","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(org.apache.commons.collections4.map.LinkedMap<K, V>.get(int))"},"status":-2},{"failures":[],"tindex":"a4b7d647-246b-11e5-935e-a748535d4618","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1028","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":-2},{"failures":[],"tindex":"a4b7d648-246b-11e5-935e-37be69aeaef0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a4b7fd59-246b-11e5-935e-c1b88dabaf92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:182","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-2},{"failures":[],"tindex":"a4b7fd5a-246b-11e5-935e-171a50ec6d2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:568","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":0},{"failures":[0],"tindex":"a4b7fd5b-246b-11e5-935e-65dfadfc6f06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"variableMap":{"hash":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:617","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"a4b8246c-246b-11e5-935e-0d63a4fd2042","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"variableMap":{"inverse":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:347","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[1,2],"tindex":"a4b8246d-246b-11e5-935e-5d07f9064926","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1758","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:356","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-1},{"failures":[],"tindex":"a4b8246e-246b-11e5-935e-bd00fbbec201","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<K, V>"},"status":-2},{"failures":[3,4],"tindex":"a4b84b7f-246b-11e5-935e-d92d1da54ead","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:115","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"a4b84b80-246b-11e5-935e-d3d942ee8ca0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a4b84b81-246b-11e5-935e-c18899a1d6e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"status":-2},{"failures":[5,6,7,8],"tindex":"a4b87292-246b-11e5-935e-d9446f4a1d11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:133","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"a4b87293-246b-11e5-935e-4597c6a31525","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"a4b87294-246b-11e5-935e-435335b7458f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:294","type":"CtInvocationImpl","sourcecode":"super.clear()"},"status":-1},{"failures":[23],"tindex":"a4b87295-246b-11e5-935e-2d39bf4b3e00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"validForUpdate","nextCalled":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"status":-1},{"failures":[24,25,26],"tindex":"a4b899a6-246b-11e5-935e-b1ed803b0128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"a4b899a7-246b-11e5-935e-592ea9317292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[],"tindex":"a4b8c0b8-246b-11e5-935e-4b83842b8a6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)"},"variableMap":{"fromIndexInclusive":"totalSize","toIndexExclusive":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"status":-2},{"failures":[],"tindex":"a4b8e7c9-246b-11e5-935e-218074bc85fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:130","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.TransformedBag<E>.getBag().uniqueSet()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a4b7fd5a-246b-11e5-935e-171a50ec6d2d","diffs":[{"branches":{"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"]},"edges":{"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":[],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":[],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":[],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":[],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":[],"org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":[],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":[],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":[],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":[]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"]},"type":"variable"}]}]}