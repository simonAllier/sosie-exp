{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":15,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":36,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":52,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":54,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":46,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":21,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":10,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":60,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":42,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":5,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":25,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":50,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":14,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":18,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":17,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":19,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":16,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":11,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":22,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":45,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":12,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":35,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":38,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":23,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":44,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":6,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":26,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":2,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":1,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":55,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":9,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":53,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":59,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":58,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":41,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":37,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":31,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":28,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":7},"transformations":[{"failures":[0],"tindex":"64a827ae-4132-11e5-aba2-8fa34cd462f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)"},"status":-1},{"failures":[1],"tindex":"64a827af-4132-11e5-aba2-d552c19746c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:372","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n        continue;\n    } \n    boolean boolean = false;\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n        if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n            boolean = true;\n            break;\n        } \n    }\n    if (boolean) {\n        continue;\n    } else {\n        return false;\n    }\n}"},"status":-1},{"failures":[],"tindex":"64a84ec0-4132-11e5-aba2-af0ccda072c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hash","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"64a84ec1-4132-11e5-aba2-fb9b3f66e90c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:439","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"64a84ec2-4132-11e5-aba2-8368456d9381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1024","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(int)"},"variableMap":{"estimatedSize":"toIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:144","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)"},"status":-1},{"failures":[34],"tindex":"64a84ec3-4132-11e5-aba2-fd6c93867107","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"64a84ec4-4132-11e5-aba2-a38b67548312","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:423","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"64a875d5-4132-11e5-aba2-bbf2aa8c95b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[35,36,37,38,39,40],"tindex":"64a875d6-4132-11e5-aba2-6368898d3787","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:214","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"64a875d7-4132-11e5-aba2-ab7c31acf52a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, V>> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.Set<java.util.Map.Entry<K, V>>;\n} "},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":-2},{"failures":[],"tindex":"64a875d8-4132-11e5-aba2-b99d661d8bf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[41,42],"tindex":"64a875d9-4132-11e5-aba2-e3b87a17226c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-1},{"failures":[43],"tindex":"64a875da-4132-11e5-aba2-37d9fd795e13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[44,44,45,45,46,47,48,49,50,51,52,53,54],"tindex":"64a875db-4132-11e5-aba2-f7ceef9f3168","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"64a89cec-4132-11e5-aba2-4906ef93cca3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[55,56,57,58,59],"tindex":"64a89ced-4132-11e5-aba2-735b36cc1c93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:169","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion) {\n    case EQUAL :\n        boolean = int == 0;\n        break;\n    case GREATER :\n        boolean = int > 0;\n        break;\n    case LESS :\n        boolean = int < 0;\n        break;\n    case GREATER_OR_EQUAL :\n        boolean = int >= 0;\n        break;\n    case LESS_OR_EQUAL :\n        boolean = int <= 0;\n        break;\n    default :\n        throw new java.lang.IllegalStateException(((\"The current criterion \\'\" + (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)) + \"\\' is invalid.\"));\n}"},"status":-1},{"failures":[60],"tindex":"64a89cee-4132-11e5-aba2-af95a33271b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"variableMap":{"entry":"nextEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"status":-1},{"failures":[],"tindex":"64a89cef-4132-11e5-aba2-9f6b582f5a7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"status":-2},{"failures":[],"tindex":"64a89cf0-4132-11e5-aba2-e3ada5aad460","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:576","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(int), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    if ((int) < 0) {\n        (int)++;\n    } \n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(int), org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    if ((int) > 0) {\n        (int)--;\n    } \n}"},"variableMap":{"left":"root","this":"root","relativePosition":"index","right":"root","indexRelativeToMe":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-2},{"failures":[],"tindex":"64a89cf1-4132-11e5-aba2-77209bdac25e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:213","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(E[], null)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}