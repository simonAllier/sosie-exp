{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":16,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":50,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":8,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":23,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":43,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":18,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":39,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":2,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":44,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":13,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":48,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":38,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":11,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":3,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":37,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":14,"org.apache.commons.collections4.CollectionUtilsTest.isFull":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":45},"transformations":[{"failures":[0],"tindex":"03df2541-2538-11e5-8997-f7b34ddddd57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"status":-1},{"failures":[],"tindex":"03df4c52-2538-11e5-8997-a341cd1df2c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:112","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1)"},"status":-2},{"failures":[],"tindex":"03df4c53-2538-11e5-8997-bb6390fe7861","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"child","root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:517","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"03df4c54-2538-11e5-8997-fdf032eb0e67","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1165","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"03df4c55-2538-11e5-8997-950054f506aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:273","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(int)"},"status":-2},{"failures":[1,2],"tindex":"03df4c56-2538-11e5-8997-8d3aba35c2aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:588","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[3],"tindex":"03df7367-2538-11e5-8997-632a8273376c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"03df7368-2538-11e5-8997-35800b20d940","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:142","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[],"tindex":"03df7369-2538-11e5-8997-0b3400dcab39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>"},"status":-2},{"failures":[4,5,6,7,8],"tindex":"03df736a-2538-11e5-8997-cd3f265529d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[9,10,11,12,13,14,15],"tindex":"03df9a7b-2538-11e5-8997-91349c11fa6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:652","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{"data":"data","newEntries":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":-1},{"failures":[],"tindex":"03df9a7c-2538-11e5-8997-5d9c44ab5cbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:103","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"03df9a7d-2538-11e5-8997-0b02efda7dc2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:783","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"NodeList must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"))"},"status":-2},{"failures":[16,17,18,19],"tindex":"03df9a7e-2538-11e5-8997-032fb22e3a35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)"},"status":-1},{"failures":[20],"tindex":"03df9a7f-2538-11e5-8997-bb19d3f248bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"status":-1},{"failures":[21],"tindex":"03dfc190-2538-11e5-8997-bfada007ac23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:233","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)))"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"03dfc191-2538-11e5-8997-250ef1a0ef66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"03dfc192-2538-11e5-8997-3307b1e78f17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"list","n":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[49,50],"tindex":"03dfc193-2538-11e5-8997-ad15bfe5aa4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"proposedCapacity","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"03dfc194-2538-11e5-8997-83942ecc3258","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>.evaluate(T)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}