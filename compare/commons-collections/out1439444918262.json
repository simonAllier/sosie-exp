{"failureDictionary":{"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":4,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":10,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":18,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":7,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":1,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":38,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":54,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":20,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":23,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":24,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":46,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":37,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":5,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":14,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":51,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":53,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":9,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":17,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":2,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":16,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":45,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":41,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":0,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":56,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":35,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":40},"transformations":[{"failures":[],"tindex":"f1cb5f69-417e-11e5-8505-fffce1e600dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:287","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"f1cb867a-417e-11e5-8505-e3526faf1eee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26],"tindex":"f1cbad8b-417e-11e5-8505-fdff9bc51357","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[27,28,29,30],"tindex":"f1cbad8c-417e-11e5-8505-cb7ebf8d9c9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:131","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"status":-1},{"failures":[],"tindex":"f1cbad8d-417e-11e5-8505-3bcef655e5c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Factory<? extends O>.create()"},"status":-2},{"failures":[31,32],"tindex":"f1cbd49e-417e-11e5-8505-95d161f51e12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-1},{"failures":[33],"tindex":"f1cbfbaf-417e-11e5-8505-dbfb30754fd3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:119","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[],"tindex":"f1cbfbb0-417e-11e5-8505-e7537ba152a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2172","type":"CtLocalVariableImpl","sourcecode":"java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:213","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.getEntry(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f1cbfbb1-417e-11e5-8505-c52d678a1ace","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:788","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()"},"status":-2},{"failures":[],"tindex":"f1cc22c2-417e-11e5-8505-f3f7ae8fbc5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:996","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.int)"},"status":-2},{"failures":[],"tindex":"f1cc22c3-417e-11e5-8505-f5a1db1f6492","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:185","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(--(int))"},"status":-2},{"failures":[32],"tindex":"f1cc22c4-417e-11e5-8505-5bc0181cbf78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"status":-1},{"failures":[34],"tindex":"f1cc22c5-417e-11e5-8505-c9e73a60107b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1104","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object));\n    return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n} "},"status":-1},{"failures":[],"tindex":"f1cc49d6-417e-11e5-8505-f7901deed561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:92","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"f1cc49d7-417e-11e5-8505-25149d167ede","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.keySet())"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"f1cc70e8-417e-11e5-8505-d950b3973a1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"status":-1},{"failures":[],"tindex":"f1cc70e9-417e-11e5-8505-1f0333e3c1ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:145","type":"CtReturnImpl","sourcecode":"return ((java.lang.Comparable<K>)(K)).compareTo(K)"},"status":-2},{"failures":[],"tindex":"f1cc70ea-417e-11e5-8505-2719cb73eeca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1245","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"f1cc70eb-417e-11e5-8505-092524aafedf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:578","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(java.lang.CharSequence), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(java.lang.CharSequence))"},"status":-2},{"failures":[56],"tindex":"f1cc97fc-417e-11e5-8505-ad8c956d903c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}