{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":56,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testMapIteratorSet":2,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":26,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":64,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":72,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":8,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":31,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":61,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":6,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":65,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":18,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":69,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":70,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":81,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":57,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":73,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":67,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":66,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":13,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":17,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":10,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":43,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":0,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":76,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":71,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":21,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":28,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":80,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":63,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":78,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":30,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":14,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":68,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":36,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":3,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyIterator":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":35,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":79,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":74,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullIterator":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":15},"transformations":[{"failures":[],"tindex":"3c5c07b6-24db-11e5-90f2-b997fa9dbe6d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:165","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"3c5c2ec7-24db-11e5-90f2-d31b952f9488","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"3c5c55d8-24db-11e5-90f2-73ea8d49d7f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.getKey()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.next()"},"status":-1},{"failures":[],"tindex":"3c5c7ce9-24db-11e5-90f2-c17b84fa69ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:276","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"3c5c7cea-24db-11e5-90f2-15017fa562a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"3c5c7ceb-24db-11e5-90f2-6fb6d8683a1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"3c5ca3fc-24db-11e5-90f2-db16e68cabe1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl","sourcecode":"E = java.util.Enumeration<? extends E>.nextElement()"},"status":-2},{"failures":[],"tindex":"3c5ca3fd-24db-11e5-90f2-7fcaab9cd8b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"status":-2},{"failures":[],"tindex":"3c5ca3fe-24db-11e5-90f2-b3be6bce65c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:220","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, true)"},"status":-2},{"failures":[51,52],"tindex":"3c5ca3ff-24db-11e5-90f2-191ee91f79b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:223","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"3c5ccb10-24db-11e5-90f2-01dae61ea87b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[],"tindex":"3c5ccb11-24db-11e5-90f2-cd657a525ede","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:734","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"nodeToInsert"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:495","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[53,54],"tindex":"3c5ccb12-24db-11e5-90f2-032686880d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:301","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[55,56,57,58],"tindex":"3c5ccb13-24db-11e5-90f2-d36e0733be51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:677","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"3c5cf224-24db-11e5-90f2-eb503326e326","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"object","length":"length","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[59,60,61,62,63,64,65],"tindex":"3c5cf225-24db-11e5-90f2-810b1ca6474a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:385","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[66,67,68,69,70],"tindex":"3c5cf226-24db-11e5-90f2-a10be5fd516e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(E, 1)"},"status":-1},{"failures":[71],"tindex":"3c5d1937-24db-11e5-90f2-8dc6ed154da8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:538","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[],"tindex":"3c5d1938-24db-11e5-90f2-ff1707f61420","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:302","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(java.util.Map<org.apache.commons.collections4.Predicate<I>, org.apache.commons.collections4.Transformer<I, O>>)"},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81],"tindex":"3c5d1939-24db-11e5-90f2-f737bf950f51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:391","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}