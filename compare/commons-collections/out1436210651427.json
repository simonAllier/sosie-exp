{"failureDictionary":{"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":20,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":21,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":37,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":68,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":61,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":70,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":35,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":42,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":8,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":75,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":57,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":38,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":9,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":73,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":53,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":36,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":6,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":43,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":40,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":56,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":74,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":65,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":28,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":10,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":16,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":33,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":77,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":15,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":4,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":49,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":17,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":27,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":69},"transformations":[{"failures":[0,1,2],"tindex":"948862d9-2414-11e5-8d69-2974839763ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:278","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{"n":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:331","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"9488b0fa-2414-11e5-8d69-5389c59625df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:439","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:137","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"9488b0fb-2414-11e5-8d69-4b7f1d6504b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"variableMap":{"buf":"value","hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"9488d80c-2414-11e5-8d69-3fe6846ecab6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:142","type":"CtReturnImpl","sourcecode":"return this.java.util.Comparator<? super E>.compare(E, E)"},"status":-1},{"failures":[73,74,75,76],"tindex":"9488d80d-2414-11e5-8d69-0f62da443e18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:228","type":"CtAssignmentImpl","sourcecode":"K = java.util.Map<V, K>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"9488d80e-2414-11e5-8d69-6d9aad063727","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:209","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"status":-2},{"failures":[],"tindex":"9488ff1f-2414-11e5-8d69-0d7c94b95ec8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"status":0},{"failures":[],"tindex":"9488ff20-2414-11e5-8d69-79c83d84f0ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:122","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.CloneTransformer.<T>cloneTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"status":-2},{"failures":[],"tindex":"9488ff21-2414-11e5-8d69-274bcb71be1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:189","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"9488ff22-2414-11e5-8d69-1fbe329d92ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"variableMap":{"e":"entry","this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:190","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()))"},"status":-2},{"failures":[77],"tindex":"94892633-2414-11e5-8d69-e9827c9b2308","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"94892634-2414-11e5-8d69-133cde691c56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"length","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[78,79],"tindex":"94894d45-2414-11e5-8d69-adc41763e1a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:140","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-1},{"failures":[],"tindex":"94894d46-2414-11e5-8d69-655b7a80f412","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} "},"status":-2},{"failures":[],"tindex":"94894d47-2414-11e5-8d69-f5ddc0eee9d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:375","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"94897458-2414-11e5-8d69-ad31e0bde2ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:549","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"94897459-2414-11e5-8d69-55f1b7669d9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:81","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.hashCode()"},"status":-2},{"failures":[],"tindex":"9489745a-2414-11e5-8d69-8907eebcf569","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:265","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"9489745b-2414-11e5-8d69-232a54329221","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1146","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"94899b6c-2414-11e5-8d69-7ba339d7b475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1286","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.map.AbstractHashedMap<K, V> org.apache.commons.collections4.map.AbstractHashedMap<K, V> = ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>)(super.clone()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int];\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = null;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = null;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = null;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this);\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>;\n} catch (final java.lang.CloneNotSupportedException ex) {\n    throw new java.lang.InternalError();\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"9488ff1f-2414-11e5-8d69-0d7c94b95ec8","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":["org.apache.commons.collections4.map.AbstractHashedMap.boolean isEmpty()_return (size) == 0"]},"type":"variable"}]},{"transformation":"9488b0fa-2414-11e5-8d69-5389c59625df","diffs":[{"branches":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":["org.apache.commons.collections4.list.AbstractLinkedList_org.apache.commons.collections4.list.AbstractLinkedList$Node_createNode(E).b","org.apache.commons.collections4.list.AbstractLinkedList$Node_void_setValue(E).b","org.apache.commons.collections4.list.AbstractLinkedList$Node_org.apache.commons.collections4.list.AbstractLinkedList$Node(E).b","org.apache.commons.collections4.list.NodeCachingLinkedList_org.apache.commons.collections4.list.AbstractLinkedList$Node_createNode(E).e1","org.apache.commons.collections4.list.NodeCachingLinkedList_org.apache.commons.collections4.list.AbstractLinkedList$Node_createNode(E).t1"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":["org.apache.commons.collections4.list.AbstractLinkedList$Node.void setValue(E)","org.apache.commons.collections4.list.AbstractLinkedList$Node.org.apache.commons.collections4.list.AbstractLinkedList$Node(E)","org.apache.commons.collections4.list.AbstractLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E)"]},"edges":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":["org.apache.commons.collections4.list.AbstractLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E) -> org.apache.commons.collections4.list.AbstractLinkedList$Node.org.apache.commons.collections4.list.AbstractLinkedList$Node(E)"],"org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E)":["org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E) -> org.apache.commons.collections4.list.AbstractLinkedList$Node.void setValue(E)","org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E) -> org.apache.commons.collections4.list.AbstractLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node createNode(E)"],"org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node getNodeFromCache()":["org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node getNodeFromCache() -> org.apache.commons.collections4.list.AbstractLinkedList$Node.org.apache.commons.collections4.list.AbstractLinkedList$Node()"]},"graph":"branch"}]}]}