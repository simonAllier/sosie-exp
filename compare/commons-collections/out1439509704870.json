{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":49,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":99,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":52,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":28,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":15,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":72,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":73,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":21,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.LinkedMapTest.testReset":76,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":30,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":122,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":159,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":157,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":16,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":65,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":70,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":155,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":165,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":183,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":10,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":138,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":166,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":169,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":20,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":101,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":100,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":142,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":104,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":148,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":185,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":94,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":102,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":66,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":96,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":81,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":114,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":78,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":145,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":181,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":130,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":163,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":170,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.LRUMapTest.testClone":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":134,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":61,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":62,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":116,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":7,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":182,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":24,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":80,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":129,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":25,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":19,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":153,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":17,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":156,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":103,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":118,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":132,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":29,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":137,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":117,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":127,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":35,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":54,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":63,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":177,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":86,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":176,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":162,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":88,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":172,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":178,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":184,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":34,"org.apache.commons.collections4.map.LRUMapTest.testLRU":2,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":141,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":180,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":40,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":168,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":108,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":107,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":109,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":33,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":84,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":11,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":8,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":146,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":154,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":150,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":161,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":186,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":5,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":14,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":125,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":95,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":147,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":160,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":44,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":47,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":151,"org.apache.commons.collections4.map.LRUMapTest.testReset":3,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":64,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":77,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":43,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":136,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":140,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":13,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":79,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":18,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":105,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":164,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":91,"org.apache.commons.collections4.map.LinkedMapTest.testClone":74,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":89,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":179,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":126,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":38,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":158,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":67,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":31,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":135},"transformations":[{"failures":[],"tindex":"c99d3ed8-4215-11e5-b2d2-937ed1b83830","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1703","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"c99ddb19-4215-11e5-b2d2-d3c80d60e8f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{')"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1228","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"c99e022a-4215-11e5-b2d2-5b22400f8548","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"c99e293b-4215-11e5-b2d2-87a49e8808fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1207","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c99e293c-4215-11e5-b2d2-f32cf7be3771","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:274","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n        return null;\n    } \n    for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n            final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n            return V;\n        } \n    }\n    final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n}"},"status":-2},{"failures":[],"tindex":"c99e504d-4215-11e5-b2d2-33939693f306","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:110","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"c99e504e-4215-11e5-b2d2-e1d128badad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[],"tindex":"c99e775f-4215-11e5-b2d2-f73c5a7897ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:326","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"c99e7760-4215-11e5-b2d2-a51d9d5d5b48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:286","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"variableMap":{"node":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"c99e7761-4215-11e5-b2d2-132e9daf2209","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"c99e7762-4215-11e5-b2d2-5502eb653a06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[158,159,160,161],"tindex":"c99e7763-4215-11e5-b2d2-451b43abb503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"c99e7764-4215-11e5-b2d2-53c57aceccba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.IteratorChain<E>"},"status":-2},{"failures":[],"tindex":"c99e7765-4215-11e5-b2d2-63ae6b7ced29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"variableMap":{"dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:124","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"c99ec486-4215-11e5-b2d2-a5faa98f654b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:355","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"modified":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"c99ec487-4215-11e5-b2d2-0119b9f785a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[174,175,176,177,178,179,180,181,182],"tindex":"c99ec488-4215-11e5-b2d2-59918cfc99ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:187","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map<K, V>.(size()) == 0"},"status":-1},{"failures":[183,184,185,186],"tindex":"c99ec489-4215-11e5-b2d2-1b0b98b5074b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"removed","changed":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:137","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[187,188],"tindex":"c99eeb9a-4215-11e5-b2d2-c7744c6d68f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":-1},{"failures":[],"tindex":"c99eeb9b-4215-11e5-b2d2-e7307ab3d4a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:299","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}