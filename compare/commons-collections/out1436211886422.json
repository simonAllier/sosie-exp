{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":24,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":285,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":72,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":106,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":262,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":170,"org.apache.commons.collections4.map.LinkedMapTest.testReset":55,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":108,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":207,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":291,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":175,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":247,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":277,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":272,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":147,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":312,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":288,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":243,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":173,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":204,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":220,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":240,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":232,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":269,"org.apache.commons.collections4.ArrayStackTest.testNewStack":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":42,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":183,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":103,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":254,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":20,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":275,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":305,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":257,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":74,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":23,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":107,"org.apache.commons.collections4.map.HashedMapTest.testClone":146,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":188,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":296,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":134,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":135,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":157,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":192,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":286,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":32,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":11,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":164,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":9,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":178,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":166,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":253,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":153,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":328,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":68,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":255,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":321,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":13,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":295,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":200,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":75,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":198,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":280,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":61,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":34,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":245,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":306,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":246,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":259,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":236,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":56,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":111,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":98,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":316,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":214,"org.apache.commons.collections4.map.LinkedMapTest.testClone":57,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":322,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":294,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":199,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":325,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":213,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":129,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":44,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":300,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":252,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":185,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":29,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":28,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":36,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":120,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":334,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":331,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":149,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":89,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":137,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":318,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":125,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":60,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":287,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":14,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":202,"org.apache.commons.collections4.map.LRUMapTest.testClone":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":201,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":15,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":315,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":33,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":176,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":97,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":227,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":17,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":40,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":313,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":301,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":205,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":126,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":218,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":63,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":161,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":162,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":282,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":319,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":110,"org.apache.commons.collections4.map.LRUMapTest.testLRU":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":6,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":278,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":156,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":308,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":239,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":332,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":85,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":311,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":115,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":299,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":117,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":298,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":251,"org.apache.commons.collections4.map.LRUMapTest.testReset":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":31,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":113,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":114,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":92,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":163,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":264,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":39,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":335,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":65,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":307,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":324,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":244,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":109,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":233},"transformations":[{"failures":[],"tindex":"74a3885b-2417-11e5-ba53-c9a87b641a57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"74a3885c-2417-11e5-ba53-d503ab7d1b41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"i","currentIndex":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"74a3af6d-2417-11e5-ba53-75ed21f502a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:517","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int)"},"status":-1},{"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"74a3af6e-2417-11e5-ba53-592ec3d32c9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"74a3af6f-2417-11e5-ba53-733da9ea5c5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-2},{"failures":[],"tindex":"74a3d680-2417-11e5-ba53-235cf1cbe17c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1090","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next())"},"status":-2},{"failures":[],"tindex":"74a3d681-2417-11e5-ba53-91aab8827cdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"next","key2":"key1","previous":"next","hashCode":"hashCode","key3":"key4","key4":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"74a3d682-2417-11e5-ba53-a54d3c792745","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"cloned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"status":0},{"failures":[],"tindex":"74a3d683-2417-11e5-ba53-07aa8ed18bea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:788","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"74a3fd94-2417-11e5-ba53-5b3902422027","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"74a3fd95-2417-11e5-ba53-c5c927f3ae52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:136","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<V, K>)(java.util.Map<V, K>)).comparator()"},"status":-2},{"failures":[],"tindex":"74a3fd96-2417-11e5-ba53-53a9a01b1c54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:305","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":0},{"failures":[269,270,271,272],"tindex":"74a3fd97-2417-11e5-ba53-373cd609f77f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"purgeValues"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:998","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeBoolean(boolean)"},"status":-1},{"failures":[273,274],"tindex":"74a3fd98-2417-11e5-ba53-cd31b6f2b733","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-1},{"failures":[275],"tindex":"74a3fd99-2417-11e5-ba53-1b79f882ff62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionBag<E>(org.apache.commons.collections4.Bag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-1},{"failures":[],"tindex":"74a3fd9a-2417-11e5-ba53-bbc8289d75a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[276],"tindex":"74a424ab-2417-11e5-ba53-51a8c9e4fd93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:125","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.remove((int - 1))"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"status":-1},{"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"tindex":"74a424ac-2417-11e5-ba53-db29d9dfecf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"74a424ad-2417-11e5-ba53-f9efe5fd5d20","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:572","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"74a3d682-2417-11e5-ba53-a54d3c792745","diffs":[{"variables":{"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.value = value","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.key = key"]},"type":"variable"}]},{"transformation":"74a3fd94-2417-11e5-ba53-5b3902422027","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.list.CursorableLinkedList.void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)":["org.apache.commons.collections4.list.CursorableLinkedList.void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node) -> org.apache.commons.collections4.list.CursorableLinkedList.void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)"]},"graph":"branch"}]},{"transformation":"74a3fd9a-2417-11e5-ba53-bbc8289d75a6","diffs":[{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"]},"type":"variable"}]}]}