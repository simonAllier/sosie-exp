{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":67,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":25,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":10,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":9,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":132,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":29,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":76,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":22,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":82,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":94,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":21,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":6,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":97,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":90,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":134,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":1,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":37,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":15,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":8,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":148,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":109,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":124,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":128,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":141,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":117,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":101,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":62,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":16,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":147,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":99,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":120,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":146,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":72,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":116,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":136,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":0,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":73,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":32,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":36,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":52,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":58,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":150,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":138,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":153,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":64,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":106,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":59,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":111,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":55,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":112,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":127,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":130,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":113,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":4,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":114,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":78,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":77,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":60,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":131,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":149,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":119,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":122,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":12,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":98,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":88,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":66,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":118},"transformations":[{"failures":[],"tindex":"8c862b12-46c6-11e5-9d78-59e8706276d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())"},"status":0},{"failures":[],"tindex":"8c865223-46c6-11e5-9d78-95419298c427","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-2},{"failures":[],"tindex":"8c865224-46c6-11e5-9d78-1bb6f7ec79ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"leastIndex","newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[0,1,2],"tindex":"8c865225-46c6-11e5-9d78-1dc05a670bb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"endIndex":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:99","type":"CtReturnImpl","sourcecode":"return (this.int) > org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())"},"status":-1},{"failures":[3,4,5,6],"tindex":"8c867936-46c6-11e5-9d78-c96210b3968b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"8c867937-46c6-11e5-9d78-7306f43d5aca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"convertedKey","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"8c867938-46c6-11e5-9d78-3d795e5a9364","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"node","node":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:830","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"8c867939-46c6-11e5-9d78-557472a10085","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:285","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>.contains(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"8c86793a-46c6-11e5-9d78-5114fc9dc867","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:551","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":0},{"failures":[],"tindex":"8c86a04b-46c6-11e5-9d78-ef51c0fc14b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"entry":"path","predecessor":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:437","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[],"tindex":"8c86a04c-46c6-11e5-9d78-cf9c8562ba41","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"8c86a04d-46c6-11e5-9d78-47c643b11def","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"8c86a04e-46c6-11e5-9d78-c9389b699866","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:886","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[],"tindex":"8c86a04f-46c6-11e5-9d78-cb795e460406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"8c86c760-46c6-11e5-9d78-bb0542a12d3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"allNull","changed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"8c86c761-46c6-11e5-9d78-c163988b4750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:456","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V)"},"status":-2},{"failures":[],"tindex":"8c86c762-46c6-11e5-9d78-95a8d1317ba1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1496","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated().iterator())"},"status":-2},{"failures":[],"tindex":"8c86c763-46c6-11e5-9d78-a18d83b516bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))))"},"status":-2},{"failures":[155],"tindex":"8c86c764-46c6-11e5-9d78-5b71a4404332","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:136","type":"CtInvocationImpl","sourcecode":"super.clear()"},"status":-1},{"failures":[],"tindex":"8c86c765-46c6-11e5-9d78-b3084aa3227e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}