{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":58,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":44,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":127,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":35,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":50,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":80,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":3,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":53,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":33,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":14,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":106,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":115,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":5,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":77,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":102,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":75,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":56,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":119,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":69,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":30,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":46,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":20,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":61,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":103,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":107,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":114,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":91,"org.apache.commons.collections4.map.LRUMapTest.testLRU":0,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":62,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":67,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":57,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":29,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":9,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":120,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":92,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":93,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":97,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":90},"transformations":[{"failures":[],"tindex":"0ce9ab37-2472-11e5-8588-1fdc21587296","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"child","rightChild":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"0ce9f958-2472-11e5-8588-c5f841f87782","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:341","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[0,1,2],"tindex":"0ce9f959-2472-11e5-8588-6d4c97f0dbb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"modCount","expectedModCount":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[3],"tindex":"0cea477a-2472-11e5-8588-bff5cfbb0827","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionFactory invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[4,5],"tindex":"0cea477b-2472-11e5-8588-3324c241e384","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0cea477c-2472-11e5-8588-318c83214639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0cea6e8d-2472-11e5-8588-6769518a4862","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"0cea6e8e-2472-11e5-8588-a94b8900bdcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"0cea959f-2472-11e5-8588-a3f7333cab75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"0cea95a0-2472-11e5-8588-ed9289892968","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:139","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(java.lang.Object[], 0, T[], 0, java.lang.Object[].int)"},"status":-2},{"failures":[34,35],"tindex":"0cea95a1-2472-11e5-8588-87f8e7d873f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"status":-1},{"failures":[],"tindex":"0ceabcb2-2472-11e5-8588-9152d13f200b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:78","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"i":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:201","type":"CtAssignmentImpl","sourcecode":"this.int = -1"},"status":0},{"failures":[],"tindex":"0ceabcb3-2472-11e5-8588-519edecf6720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"0ceabcb4-2472-11e5-8588-71436396d4a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:143","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"variableMap":{"currentIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"status":0},{"failures":[],"tindex":"0ceabcb5-2472-11e5-8588-e36842f796c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-2},{"failures":[],"tindex":"0ceae3c6-2472-11e5-8588-7d3a02652ec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"0ceb31e7-2472-11e5-8588-11c4f399b1c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0ceb58f8-2472-11e5-8588-3f9b831750e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map<K, V>, org.apache.commons.collections4.Predicate<? super K>, org.apache.commons.collections4.Predicate<? super V>)"},"status":-2},{"failures":[],"tindex":"0ceb58f9-2472-11e5-8588-a77407b54203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()"},"variableMap":{"this":"hm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:175","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>.lastKey()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}