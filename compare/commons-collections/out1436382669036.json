{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":225,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":163,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":162,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":176,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":172,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":124,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":224,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":178,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":116,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":102,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":218,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":226,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":207,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":255,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":194,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":150,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":149,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":146,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":148,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":147,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":142,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":144,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":190,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":192,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":252,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":236,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":25,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":168,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":60,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":198,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":227,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":248,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":208,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":111,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":160,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":6},"transformations":[{"failures":[],"tindex":"17212d9a-25a5-11e5-9320-f9ea9592ca13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:605","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[],"tindex":"17228d2b-25a5-11e5-9320-8bafcc0393ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()"},"status":-2},{"failures":[0],"tindex":"1722b43c-25a5-11e5-9320-51a238d0962b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[],"tindex":"1722b43d-25a5-11e5-9320-d3f7af205758","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:539","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1722b43e-25a5-11e5-9320-cfb4a6ec9f5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:91","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"1722b43f-25a5-11e5-9320-a98109f2047a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"1722db50-25a5-11e5-9320-bf9519ab0c0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":0},{"failures":[97],"tindex":"1722db51-25a5-11e5-9320-73e478d434c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"nextObjectSet","removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:165","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"1722db52-25a5-11e5-9320-5d9a02206b05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[98,99,100,101,102],"tindex":"17230263-25a5-11e5-9320-95aea11e81e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:306","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"17230264-25a5-11e5-9320-cd191fba469e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"total":"cnt","hashCode":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:179","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int"},"status":-1},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,0,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"17230265-25a5-11e5-9320-976d4f215ede","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"variableMap":{"hash":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:234","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"17232976-25a5-11e5-9320-6d105ee55899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"path","root":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"17232977-25a5-11e5-9320-d55868552c05","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl","sourcecode":"return new java.util.HashSet<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:319","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(K)"},"status":-2},{"failures":[217],"tindex":"17232978-25a5-11e5-9320-bfa5373817ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2000","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map.Entry.setValue is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:366","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\")"},"status":-1},{"failures":[218],"tindex":"17232979-25a5-11e5-9320-c32035d0de8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))"},"status":-1},{"failures":[],"tindex":"1723508a-25a5-11e5-9320-3f8a4de3f772","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap()"},"variableMap":{"this":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:59","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BidiMap<K, V>"},"status":-2},{"failures":[],"tindex":"1723508b-25a5-11e5-9320-afa5e6bec69e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:149","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"i":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[219],"tindex":"1723508c-25a5-11e5-9320-1759102232b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:119","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"1723508d-25a5-11e5-9320-87df7a5415c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"1723508b-25a5-11e5-9320-afa5e6bec69e","diffs":[{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"}]}]}