{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":101,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":52,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":102,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":0,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":47,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":40,"org.apache.commons.collections4.CollectionUtilsTest.get":28,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":95,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":97,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":91,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":90,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":72,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":11,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":42,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":68,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":94,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":100,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":69,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":26,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":12,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":6,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":46,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":35,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":5,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":24,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":75,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":17,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":38,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":8,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":78,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":79,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":99,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":29,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":104,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":25,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":31,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":14,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":10,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":96,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":93,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":82},"transformations":[{"failures":[],"tindex":"75c136ad-46f0-11e5-b0c2-535f2f725c69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"75c15dbe-46f0-11e5-b0c2-f588c52958b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[],"tindex":"75c15dbf-46f0-11e5-b0c2-0102aad58a83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:433","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:435","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator<K>(this)"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"75c15dc0-46f0-11e5-b0c2-6354ebece460","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"replacement","rightChild":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[28,29,30],"tindex":"75c15dc1-46f0-11e5-b0c2-857d2fe57f01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"75c15dc2-46f0-11e5-b0c2-59dcde4b48a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1176","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"75c184d3-46f0-11e5-b0c2-df059c9beb69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"75c184d4-46f0-11e5-b0c2-95616b7917a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:296","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"75c184d5-46f0-11e5-b0c2-03f4de3b0644","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1002","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[31,32,33,34,35,36],"tindex":"75c184d6-46f0-11e5-b0c2-ff028278964d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:994","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean)"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"75c184d7-46f0-11e5-b0c2-4f25a27e14f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:236","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-1},{"failures":[98,99],"tindex":"75c1abe8-46f0-11e5-b0c2-198e2aca6a0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"root","current":"left","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"75c1abe9-46f0-11e5-b0c2-b7834dc71a02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:157","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[100,101,102,103],"tindex":"75c1abea-46f0-11e5-b0c2-9b1469f559b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"retval":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:515","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[],"tindex":"75c1abeb-46f0-11e5-b0c2-d58fa3a55a58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:239","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[101,100,102,103,104],"tindex":"75c1abec-46f0-11e5-b0c2-25daf1fa24d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"h","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"75c1d2fd-46f0-11e5-b0c2-d3dcd8719fde","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:197","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"variableMap":{"start1":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH","x":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH","k":"bitIndex","start2":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":-2},{"failures":[],"tindex":"75c1d2fe-46f0-11e5-b0c2-15f389e575a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"status":-2},{"failures":[],"tindex":"75c1d2ff-46f0-11e5-b0c2-115ee43bcb00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n} "},"variableMap":{"size":"index","this":"setOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:301","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(int, E)"},"status":-2},{"failures":[],"tindex":"75c1d300-46f0-11e5-b0c2-d1d6f565c578","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}