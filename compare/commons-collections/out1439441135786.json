{"failureDictionary":{"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":32,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":44,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":69,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":42,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":54,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":23,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":53,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":3,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":14,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":56,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":28,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":66,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":16,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":7,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":30,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":43,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":50,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":24,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":25,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":48,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":27,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":9,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":71,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":2,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":5,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":45,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":46,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":41,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":29,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":17,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":38,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":4,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":0,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":60,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":52,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":31,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":34,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":70},"transformations":[{"failures":[0,1,2],"tindex":"234049a4-4176-11e5-a467-0bad0d218256","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"status":-1},{"failures":[3,4,5,6,7,8,9],"tindex":"234070b5-4176-11e5-a467-8b905634e5b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:143","type":"CtAssignmentImpl","sourcecode":"boolean[][int] = !(boolean[][int])"},"variableMap":{"i":"offset","direction":"direction"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:136","type":"CtAssignmentImpl","sourcecode":"boolean[][int] = boolean[][(int + int)]"},"status":-1},{"failures":[],"tindex":"234070b6-4176-11e5-a467-158781ebd653","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"234070b7-4176-11e5-a467-577089a11b9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:800","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K)"},"status":-2},{"failures":[],"tindex":"234070b8-4176-11e5-a467-6b607f9a1f75","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:113","type":"CtReturnImpl","sourcecode":"return this.E[][this.int]"},"variableMap":{"array":"array","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:150","type":"CtReturnImpl","sourcecode":"return ((E)(java.lang.reflect.Array.get(java.lang.Object, (int)++)))"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"234070b9-4176-11e5-a467-95cc07a10e9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:186","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"variableMap":{"orderingBits":"valueSet","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[22,23,24,25],"tindex":"234070ba-4176-11e5-a467-7952957eeac6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"234097cb-4176-11e5-a467-bfc4e80866eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1176","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:285","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"234097cc-4176-11e5-a467-cf67fe1f47b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"234097cd-4176-11e5-a467-3998bfef6cd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:226","type":"CtAssignmentImpl","sourcecode":"int[][int] = int--"},"status":-2},{"failures":[],"tindex":"234097ce-4176-11e5-a467-096bd601196d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:230","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[26],"tindex":"234097cf-4176-11e5-a467-8712ccf1978c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))"},"variableMap":{"closure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"234097d0-4176-11e5-a467-bf9301f0285f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"2340bde1-4176-11e5-a467-0574fc1b4bfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:392","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = java.util.Iterator<E>.hasNext()"},"status":-2},{"failures":[],"tindex":"2340bde2-4176-11e5-a467-51aea067682e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:330","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.set(int, null)"},"status":-2},{"failures":[56,57],"tindex":"2340bde3-4176-11e5-a467-6d58c43aac36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"2340bde4-4176-11e5-a467-219c6f073b8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"2340bde5-4176-11e5-a467-07f21a845a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1231","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(int)"},"status":-1},{"failures":[22],"tindex":"2340bde6-4176-11e5-a467-d16997bebf9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2340e4f7-4176-11e5-a467-5f98354f5737","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1550","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), boolean)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}