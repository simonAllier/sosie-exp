{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":68,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":211,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":182,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":44,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":170,"org.apache.commons.collections4.map.LinkedMapTest.testReset":100,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":23,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":223,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":94,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":95,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":217,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":173,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":2,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":221,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":59,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":137,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":129,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":227,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":135,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":116,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":127,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":81,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":85,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":122,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":139,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":224,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":213,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":36,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":80,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":178,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":6,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":58,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":128,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":142,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":149,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":216,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":210,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":145,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":206,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":150,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":45,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":161,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":47,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":7,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":205,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":119,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":220,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":49,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":153,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":193,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":73,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":82,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":66,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":109,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":167,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":113,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":158,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":229,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":26,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":39,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":230,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":103,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":219,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":104,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":190,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":130,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":169,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":71,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":78,"org.apache.commons.collections4.map.LinkedMapTest.testClone":101,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":69,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":98,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":99,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":174,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":92,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":231,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":171,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":152,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":72,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":97,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":74,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":160,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":67,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":126,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":176,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":125,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":61,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":123,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":5,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":55,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":108,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.map.LRUMapTest.testClone":155,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":131,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":157,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":107,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":179,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":32,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":172,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":88,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":65,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":28,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":13,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":64,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":111,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":11,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":24,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":187,"org.apache.commons.collections4.map.LRUMapTest.testLRU":164,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":30,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":3,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":225,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":118,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":222,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":51,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":0,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":163,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":166,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":42,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":43,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":40,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":197,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":200,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":86,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.LRUMapTest.testReset":154,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":151,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":195,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":196,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":192,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":31,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":162,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":87,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":115,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":156,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":191,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":57,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":185,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":110,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":214},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"144d795b-46d8-11e5-8913-cf9a36daad8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[73,74],"tindex":"144da06c-46d8-11e5-8913-c7c568676514","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:168","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"144da06d-46d8-11e5-8913-35a33ae73d4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"predecessor","parent":"parentOfSubtree","left":"predecessor","root":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[75,76,77,78,79],"tindex":"144dc77e-46d8-11e5-8913-f129326b5c4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[80],"tindex":"144e159f-46d8-11e5-8913-8984cba769ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:136","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The closure array must not be null\")"},"status":-1},{"failures":[],"tindex":"144e15a0-46d8-11e5-8913-5371356f3f1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:189","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"status":-2},{"failures":[],"tindex":"144e3cb1-46d8-11e5-8913-0548adf5011f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))"},"status":0},{"failures":[],"tindex":"144e3cb2-46d8-11e5-8913-29bbb79d5f56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"144e3cb3-46d8-11e5-8913-b1db79bc6470","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"144e3cb4-46d8-11e5-8913-27aeff19c988","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1228","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"144e3cb5-46d8-11e5-8913-718ba60693fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[81],"tindex":"144e3cb6-46d8-11e5-8913-47a9b3c24354","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtIfImpl","sourcecode":"if (java.util.Set<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(java.util.Set<? extends E>));\n    return java.util.Set<E>;\n} "},"status":-1},{"failures":[],"tindex":"144e63c7-46d8-11e5-8913-d921b5d395f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:83","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>"},"status":-2},{"failures":[82],"tindex":"144e63c8-46d8-11e5-8913-0ba544785272","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1356","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-1},{"failures":[],"tindex":"144e63c9-46d8-11e5-8913-194839726a32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"variableMap":{"label":"key1","out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[83],"tindex":"144e63ca-46d8-11e5-8913-151862cb7e61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"144e63cb-46d8-11e5-8913-873056af66ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"current","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],"tindex":"144e8adc-46d8-11e5-8913-81fcb11730f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:128","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[],"tindex":"144e8add-46d8-11e5-8913-59281160b489","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1016","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator<I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, new java.util.ArrayList<O>())"},"status":-2},{"failures":[],"tindex":"144e8ade-46d8-11e5-8913-795e4adf5e52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:180","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(lookupValue(java.lang.Object)) != null"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}