{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":149,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":81,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":67,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":152,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":128,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":115,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":41,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":42,"org.apache.commons.collections4.map.LinkedMapTest.testReset":40,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":121,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":130,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":151,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":34,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":116,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":35,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":165,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":32,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":2,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":107,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":15,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":150,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":69,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":120,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":68,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":19,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":25,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":72,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":62,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":70,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":166,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":64,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":49,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":22,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":47,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":51,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":96,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":98,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":169,"org.apache.commons.collections4.map.LRUMapTest.testClone":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":11,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":161,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":160,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":74,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":104,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":124,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":48,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":95,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":125,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":119,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":30,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":117,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":33,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":71,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":86,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":4,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":14,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":38,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":129,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":7,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":85,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":0,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":93,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":6,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":135,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":127,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":89,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":154,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":148,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":54,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":153,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":5,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":134,"org.apache.commons.collections4.map.LRUMapTest.testLRU":112,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":132,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":18,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":36,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":140,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":76,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":75,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":77,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":52,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":133,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":23,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":105,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":27,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":141,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":102,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":24,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":168,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":144,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":147,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":146,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":45,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":28,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":46,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.LRUMapTest.testReset":101,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":162,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":37,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":142,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":13,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":17,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":43,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":110,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":137,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":73,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":118,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":9,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.map.LinkedMapTest.testClone":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":57,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":103,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":94,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":138,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":167,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":26,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":83,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":3,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":12,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":53},"transformations":[{"failures":[],"tindex":"82e7a3c6-25c2-11e5-95b4-adc97f1702eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:458","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:194","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"82e7a3c7-25c2-11e5-95b4-8b5d0b5d6573","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"82e7cad8-25c2-11e5-95b4-fd3483edbff2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"82e7cad9-25c2-11e5-95b4-a711276c4924","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"82e7f1ea-25c2-11e5-95b4-3d441e37e84f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"status":-2},{"failures":[],"tindex":"82e7f1eb-25c2-11e5-95b4-2917617d7b0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"82e7f1ec-25c2-11e5-95b4-932cbd56ae8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[0],"tindex":"82e818fd-25c2-11e5-95b4-8de69a5a46c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:283","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"82e818fe-25c2-11e5-95b4-697d186c75a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:555","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"82e818ff-25c2-11e5-95b4-3bf2008c4919","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:231","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()"},"status":-2},{"failures":[],"tindex":"82e81900-25c2-11e5-95b4-596c80b8bba8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())"},"status":0},{"failures":[],"tindex":"82e84011-25c2-11e5-95b4-dde97b4eceda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:141","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"82e84012-25c2-11e5-95b4-231a381b8953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"82e84013-25c2-11e5-95b4-7314ec6cdc64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:112","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.keyvalue.DefaultMapEntry<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1309","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Map<K, V>.entrySet(), int)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"82e84014-25c2-11e5-95b4-1722f9871d3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[],"tindex":"82e86725-25c2-11e5-95b4-2da389b0f24b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"82e88e36-25c2-11e5-95b4-c771e32b9542","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:377","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"82e88e37-25c2-11e5-95b4-97aed51e7ebb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:156","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)"},"status":-2},{"failures":[],"tindex":"82e88e38-25c2-11e5-95b4-03043bfb9027","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:452","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"size":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:220","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[168,169,170,171,172],"tindex":"82e88e39-25c2-11e5-95b4-f1fda03288c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1076","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"82e81900-25c2-11e5-95b4-596c80b8bba8","diffs":[{"nodes":{"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":["org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Iterator iterator()","org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator()","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.boolean hasNext()"]},"edges":{"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator() -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Iterator iterator() -> org.apache.commons.collections4.bag.AbstractBagDecorator.org.apache.commons.collections4.Bag decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Iterator iterator() -> org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Iterator iterator() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Iterator iterator()","org.apache.commons.collections4.bag.CollectionBag.void writeObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Iterator iterator()","org.apache.commons.collections4.bag.CollectionBag.void writeObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.boolean hasNext()"]},"type":"graph"}]}]}