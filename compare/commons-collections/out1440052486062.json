{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":31,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":58,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":14,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":23,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":61,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":13,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":21,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.ListUtilsTest.testPartition":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":60,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":40,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":51,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":36,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":24,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":22,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":52,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":43,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":48,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":65,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":44},"transformations":[{"failures":[0],"tindex":"8c69a3b7-4705-11e5-b6fb-2751d84d1649","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"8c69cac8-4705-11e5-b6fb-a9a77418c571","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:189","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"8c69cac9-4705-11e5-b6fb-97c4ae1212fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"nextObjectSet","removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"8c69caca-4705-11e5-b6fb-238f6a39d295","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18],"tindex":"8c69cacb-4705-11e5-b6fb-d9fbdfbf3bc6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"8c69cacc-4705-11e5-b6fb-61b5979772a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"8c69f1dd-4705-11e5-b6fb-71e64a2e0880","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key3","key5":"key4","hashCode":"hashCode","key3":"key3","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"8c69f1de-4705-11e5-b6fb-b5bdd4764e29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:155","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"8c69f1df-4705-11e5-b6fb-fb0e9e8c5ecd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key2","this":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"8c69f1e0-4705-11e5-b6fb-f34e9b531c10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:991","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-1},{"failures":[],"tindex":"8c69f1e1-4705-11e5-b6fb-c994ccf8f71d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:562","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":0},{"failures":[],"tindex":"8c69f1e2-4705-11e5-b6fb-252891fcefff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"8c6a18f3-4705-11e5-b6fb-33e772c1fba6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"8c6a18f4-4705-11e5-b6fb-cf2cbb0ad15b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:332","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<E> java.util.Set<E>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:151","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().uniqueSet()"},"status":-2},{"failures":[],"tindex":"8c6a18f5-4705-11e5-b6fb-23eb3ad89eaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8c6a18f6-4705-11e5-b6fb-af2987a952ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"previous","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"8c6a4007-4705-11e5-b6fb-8173a5fe6977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:190","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"endIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":-1},{"failures":[],"tindex":"8c6a4008-4705-11e5-b6fb-6b952773ae9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1240","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[71,72],"tindex":"8c6a4009-4705-11e5-b6fb-4b4bfd039dc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")"},"status":-1},{"failures":[],"tindex":"8c6a400a-4705-11e5-b6fb-6deb2da202a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:288","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    int = (31 * int) + (java.lang.Object == null ? 0 : java.lang.Object.hashCode());\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}