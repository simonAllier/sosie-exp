{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":47,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":42,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":56,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":68,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":7,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":85,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":76,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":53,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":54,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":70,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":45,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":91,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":88,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":26,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":30,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":79,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":8,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":74,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":37,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":78,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":81,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":65},"transformations":[{"failures":[],"tindex":"55ceee6b-414d-11e5-a2ff-ddd139cb7b98","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:414","type":"CtLocalVariableImpl","sourcecode":"final int int = int - (int)"},"variableMap":{"index":"length","relativePosition":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:396","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[],"tindex":"55ceee6c-414d-11e5-a2ff-657121e8659c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:852","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"55cf157d-414d-11e5-a2ff-f3dcd1660e5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"status":-2},{"failures":[],"tindex":"55cf157e-414d-11e5-a2ff-4f01bee47873","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:141","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"55cf157f-414d-11e5-a2ff-9745408ee84f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<K>)"},"status":-2},{"failures":[],"tindex":"55cf1580-414d-11e5-a2ff-9be63948e65d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:553","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-2},{"failures":[0],"tindex":"55cf1581-414d-11e5-a2ff-671b8c62d1e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"55cf1582-414d-11e5-a2ff-d7089dadccff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:122","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[1,2],"tindex":"55cf1583-414d-11e5-a2ff-eb0d98f20875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} "},"status":-1},{"failures":[],"tindex":"55cf3c94-414d-11e5-a2ff-a3e80d463a6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"55cf3c95-414d-11e5-a2ff-a95a91035f4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"55cf3c96-414d-11e5-a2ff-63bf32362c92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"))"},"status":-1},{"failures":[],"tindex":"55cf3c97-414d-11e5-a2ff-0debb5ca6b80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:228","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"status":0},{"failures":[35,36,37,38,39,40],"tindex":"55cf3c98-414d-11e5-a2ff-9d2dd5434186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1366","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:386","type":"CtReturnImpl","sourcecode":"return \"[]\""},"status":-1},{"failures":[],"tindex":"55cf3c99-414d-11e5-a2ff-4fa096f64198","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:102","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.MultiKeyMap<K, V>(org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-2},{"failures":[],"tindex":"55cf63aa-414d-11e5-a2ff-97e8b7386245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:439","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":0},{"failures":[],"tindex":"55cf63ab-414d-11e5-a2ff-47ea3763132c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"55cf63ac-414d-11e5-a2ff-c52a2236658c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"55cf63ad-414d-11e5-a2ff-8bd865ce41a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:98","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Set<E>.size()"},"status":-1},{"failures":[],"tindex":"55cf63ae-414d-11e5-a2ff-3f51b0d8f76c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}