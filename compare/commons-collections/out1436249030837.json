{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":11,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":29,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":46,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":22},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"f072d267-246d-11e5-91f3-352dd2e2ad1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:129","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"status":-1},{"failures":[],"tindex":"f0732088-246d-11e5-91f3-cdaae3ae9b00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1176","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:350","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"f0732089-246d-11e5-91f3-4d4792244250","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:81","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":0},{"failures":[],"tindex":"f073208a-246d-11e5-91f3-1d9a6af7f1c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"f073479b-246d-11e5-91f3-83f69a45194d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:276","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next())"},"variableMap":{"this":"this","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:347","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1)"},"status":-2},{"failures":[],"tindex":"f073479c-246d-11e5-91f3-c7c19d826b08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().uniqueSet()"},"status":-2},{"failures":[],"tindex":"f073479d-246d-11e5-91f3-8377fcbb9bd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1218","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map<?, ?>))"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"f0736eae-246d-11e5-91f3-bb7b04b91bf0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null nonNullComparator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")"},"status":-2},{"failures":[],"tindex":"f0736eaf-246d-11e5-91f3-e9a944b899cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[],"tindex":"f0736eb0-246d-11e5-91f3-d7e08cb7a7fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1292","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0"},"status":0},{"failures":[45,46],"tindex":"f07395c1-246d-11e5-91f3-b3f1c55d2673","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"f07395c2-246d-11e5-91f3-398175de8c1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"status":0},{"failures":[],"tindex":"f07395c3-246d-11e5-91f3-9b3e449e665c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1169","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f07395c4-246d-11e5-91f3-57cacfe9523d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f073bcd5-246d-11e5-91f3-abbb108b59bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:391","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>)"},"status":-1},{"failures":[],"tindex":"f073e3e6-246d-11e5-91f3-611eadadee0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtIfImpl","sourcecode":"if (java.util.SortedSet<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.SortedSet<E>;\n} "},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"f073e3e7-246d-11e5-91f3-b5de3250cb30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl","sourcecode":"return java.util.SortedSet<E>"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":0},{"failures":[],"tindex":"f073e3e8-246d-11e5-91f3-bb28b0c2bca9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[],"tindex":"f0740af9-246d-11e5-91f3-bd4f3559f5be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.BidiOrderedMapIterator<K, V>(this)"},"status":-2},{"failures":[47],"tindex":"f0740afa-246d-11e5-91f3-97bed0985165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f073479d-246d-11e5-91f3-8377fcbb9bd5","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.MapUtils_boolean_isEmpty(java.util.Map).b"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":["org.apache.commons.collections4.MapUtils_boolean_isEmpty(java.util.Map).b","org.apache.commons.collections4.map.AbstractSortedMapDecorator_org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap).b","org.apache.commons.collections4.map.UnmodifiableSortedMap_<K,V>_java.util.SortedMap_unmodifiableSortedMap(java.util.SortedMap).b","org.apache.commons.collections4.map.UnmodifiableSortedMap_<K,V>_java.util.SortedMap_unmodifiableSortedMap(java.util.SortedMap).e1","org.apache.commons.collections4.map.UnmodifiableSortedMap_org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.MapUtils.boolean isEmpty(java.util.Map)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":["org.apache.commons.collections4.MapUtils.boolean isEmpty(java.util.Map)","org.apache.commons.collections4.map.UnmodifiableSortedMap.<K,V> java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)","org.apache.commons.collections4.map.UnmodifiableSortedMap.org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)","org.apache.commons.collections4.map.AbstractSortedMapDecorator.org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.MapIterator getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.MapUtils.boolean isEmpty(java.util.Map)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.V getValue()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator.boolean hasNext()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator.K next()","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean doEquals(java.lang.Object,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.map.UnmodifiableSortedMap.<K,V> java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":[],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.UnmodifiableSortedMap.<K,V> java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap) -> org.apache.commons.collections4.map.AbstractMapDecorator.org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)","org.apache.commons.collections4.map.UnmodifiableSortedMap.<K,V> java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap) -> org.apache.commons.collections4.map.AbstractSortedMapDecorator.org.apache.commons.collections4.map.AbstractSortedMapDecorator(java.util.SortedMap)","org.apache.commons.collections4.map.UnmodifiableSortedMap.<K,V> java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap) -> org.apache.commons.collections4.map.UnmodifiableSortedMap.org.apache.commons.collections4.map.UnmodifiableSortedMap(java.util.SortedMap)"]},"graph":"branch"}]},{"transformation":"f0736eb0-246d-11e5-91f3-d7e08cb7a7fe","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"}]},{"transformation":"f07395c2-246d-11e5-91f3-398175de8c1a","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.functors.NonePredicate.<T> org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)":["org.apache.commons.collections4.functors.NonePredicate.<T> org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection) -> org.apache.commons.collections4.functors.TruePredicate.<T> org.apache.commons.collections4.Predicate truePredicate()"]},"graph":"branch"}]}]}