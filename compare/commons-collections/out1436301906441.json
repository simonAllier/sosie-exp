{"failureDictionary":{"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":21,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectEqualsSelf":11,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":2,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":22,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":7,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":53,"org.apache.commons.collections4.map.LRUMapTest.testLRU":64,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":3,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":41,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":43,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":73,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":9,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectHashCodeEqualsSelfHashCode":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":54,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":42,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":32,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":38,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":44,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":66,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEqualsNull":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":24,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":30,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":61,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":65,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":57,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":67,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":48,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testCanonicalFullCollectionExists":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":27,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":26,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":70,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectHashCodeEqualsContract":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":56,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testSimpleSerialization":15,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":20,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testRemove":10,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testCanonicalEmptyCollectionExists":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":23,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":39},"transformations":[{"failures":[],"tindex":"0cc16920-24e9-11e5-bfea-b595b309f9f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key4","hashCode":"hashCode","key3":"key3","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"0cc1b741-24e9-11e5-bfea-5772a05c1a17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"0cc1b742-24e9-11e5-bfea-7341bd3badf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"variableMap":{"vDown":"keys","x":"value","i":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:88","type":"CtAssignmentImpl","sourcecode":"int[][(int - 1)] = int"},"status":-1},{"failures":[],"tindex":"0cc1b743-24e9-11e5-bfea-21f89fd0a585","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:82","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>"},"variableMap":{"iPredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"0cc1b744-24e9-11e5-bfea-afb780b57284","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[20,21],"tindex":"0cc1b745-24e9-11e5-bfea-814e3aa15e95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:139","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"0cc1de56-24e9-11e5-bfea-4d95ded13db7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"0cc1de57-24e9-11e5-bfea-6b56aa7d44a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:455","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.CompositeCollection<V>"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71],"tindex":"0cc1de58-24e9-11e5-bfea-db498240a045","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[72],"tindex":"0cc1de59-24e9-11e5-bfea-99f0330b3419","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1614","type":"CtAssignmentImpl","sourcecode":"O = O"},"status":-1},{"failures":[],"tindex":"0cc2056a-24e9-11e5-bfea-d39002ddcdea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:339","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"0cc2056b-24e9-11e5-bfea-45d92d800eea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"0cc2056c-24e9-11e5-bfea-dff6fc527662","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:192","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"))"},"status":-2},{"failures":[],"tindex":"0cc2056d-24e9-11e5-bfea-9ba605f71723","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"predecessor","root":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"0cc2056e-24e9-11e5-bfea-41419f134166","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"status":-2},{"failures":[73,74],"tindex":"0cc2056f-24e9-11e5-bfea-bd4e9dc1a7e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:321","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"0cc22c80-24e9-11e5-bfea-4d511d8d0569","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:493","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.FixedSizeList.fixedSizeList(java.util.List<E>)"},"variableMap":{"list":"superSubList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:318","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.unmodifiableList(new org.apache.commons.collections4.list.SetUniqueList<E>(java.util.List<E> , java.util.Set<E>))"},"status":0},{"failures":[],"tindex":"0cc22c81-24e9-11e5-bfea-9d461f6a5203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet()"},"status":-2},{"failures":[],"tindex":"0cc22c82-24e9-11e5-bfea-49833824d3bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:148","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"end":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:182","type":"CtAssignmentImpl","sourcecode":"int[][(1 + int)] = int + 1"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0cc22c80-24e9-11e5-bfea-4d511d8d0569","diffs":[{"nodes":{"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":["org.apache.commons.collections4.list.FixedSizeList.E remove(int)","org.apache.commons.collections4.list.UnmodifiableList.E remove(int)","org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList(java.util.List)","org.apache.commons.collections4.list.UnmodifiableList.<E> java.util.List unmodifiableList(java.util.List)","org.apache.commons.collections4.list.FixedSizeList.org.apache.commons.collections4.list.FixedSizeList(java.util.List)","org.apache.commons.collections4.list.FixedSizeList.<E> org.apache.commons.collections4.list.FixedSizeList fixedSizeList(java.util.List)","org.apache.commons.collections4.ListUtils.<E> java.util.List unmodifiableList(java.util.List)"]},"edges":{"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":["org.apache.commons.collections4.list.SetUniqueList.java.util.List subList(int,int) -> org.apache.commons.collections4.list.AbstractListDecorator.org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)","org.apache.commons.collections4.list.SetUniqueList.java.util.List subList(int,int) -> org.apache.commons.collections4.list.SetUniqueList.org.apache.commons.collections4.list.SetUniqueList(java.util.List,java.util.Set)","org.apache.commons.collections4.ListUtils.<E> java.util.List unmodifiableList(java.util.List) -> org.apache.commons.collections4.ListUtils.<E> java.util.List unmodifiableList(java.util.List)","org.apache.commons.collections4.list.FixedSizeList.<E> org.apache.commons.collections4.list.FixedSizeList fixedSizeList(java.util.List) -> org.apache.commons.collections4.list.AbstractListDecorator.org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)","org.apache.commons.collections4.ListUtils.<E> java.util.List unmodifiableList(java.util.List) -> org.apache.commons.collections4.list.UnmodifiableList.<E> java.util.List unmodifiableList(java.util.List)","org.apache.commons.collections4.list.SetUniqueList.java.util.List subList(int,int) -> org.apache.commons.collections4.ListUtils.<E> java.util.List unmodifiableList(java.util.List)","org.apache.commons.collections4.list.UnmodifiableList.<E> java.util.List unmodifiableList(java.util.List) -> org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList(java.util.List)","org.apache.commons.collections4.list.FixedSizeList.<E> org.apache.commons.collections4.list.FixedSizeList fixedSizeList(java.util.List) -> org.apache.commons.collections4.list.AbstractSerializableListDecorator.org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)","org.apache.commons.collections4.list.SetUniqueList.java.util.List subList(int,int) -> org.apache.commons.collections4.list.FixedSizeList.<E> org.apache.commons.collections4.list.FixedSizeList fixedSizeList(java.util.List)","org.apache.commons.collections4.list.FixedSizeList.<E> org.apache.commons.collections4.list.FixedSizeList fixedSizeList(java.util.List) -> org.apache.commons.collections4.list.FixedSizeList.org.apache.commons.collections4.list.FixedSizeList(java.util.List)","org.apache.commons.collections4.list.FixedSizeList.<E> org.apache.commons.collections4.list.FixedSizeList fixedSizeList(java.util.List) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.list.SetUniqueList.java.util.List subList(int,int) -> org.apache.commons.collections4.list.AbstractSerializableListDecorator.org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)","org.apache.commons.collections4.list.UnmodifiableList.<E> java.util.List unmodifiableList(java.util.List) -> org.apache.commons.collections4.list.AbstractSerializableListDecorator.org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)","org.apache.commons.collections4.list.UnmodifiableList.<E> java.util.List unmodifiableList(java.util.List) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.list.UnmodifiableList.<E> java.util.List unmodifiableList(java.util.List) -> org.apache.commons.collections4.list.AbstractListDecorator.org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)","org.apache.commons.collections4.list.SetUniqueList.java.util.List subList(int,int) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":["org.apache.commons.collections4.list.UnmodifiableList_org.apache.commons.collections4.list.UnmodifiableList(java.util.List).b","org.apache.commons.collections4.ListUtils_<E>_java.util.List_unmodifiableList(java.util.List).b","org.apache.commons.collections4.list.UnmodifiableList_E_remove(int).b","org.apache.commons.collections4.list.UnmodifiableList_<E>_java.util.List_unmodifiableList(java.util.List).e1","org.apache.commons.collections4.list.FixedSizeList_E_remove(int).b","org.apache.commons.collections4.list.FixedSizeList_org.apache.commons.collections4.list.FixedSizeList(java.util.List).b","org.apache.commons.collections4.list.FixedSizeList_<E>_org.apache.commons.collections4.list.FixedSizeList_fixedSizeList(java.util.List).b","org.apache.commons.collections4.list.UnmodifiableList_<E>_java.util.List_unmodifiableList(java.util.List).b"]},"type":"branch"}]}]}