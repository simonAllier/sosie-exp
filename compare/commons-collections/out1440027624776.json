{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":128,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":6,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":122,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":123,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":132,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":169,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":118,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":162,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":67,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":168,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":148,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":39,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":144,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":3,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":127,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":85,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":180,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":119,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":93,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":75,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":178,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":61,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":95,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":12,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":120,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":29,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":172,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":76,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":64,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":28,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":163,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":173,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":166,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":81,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":190,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":187,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":149,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":53,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":63,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":68,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":191,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":171,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":183,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":7,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":31,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":42,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":91,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":177,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":17,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":92,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":18,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":79,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":160,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":27,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":131,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":147,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":179,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":165,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":36,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":46,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":156,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":188,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":167,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":65,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":86,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":124,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":2,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":4,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":58,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":1},"transformations":[{"failures":[],"tindex":"a9ee7348-46cb-11e5-a4b8-b314079a2f64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))))"},"status":-2},{"failures":[],"tindex":"a9ee9a59-46cb-11e5-a4b8-cb03632fe9bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"a9eec16a-46cb-11e5-a4b8-5f4d1c3211e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:252","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this)"},"status":-1},{"failures":[],"tindex":"a9eec16b-46cb-11e5-a4b8-498e7eacd01f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"a9eec16c-46cb-11e5-a4b8-a12d8c4f8734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:359","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.size()"},"status":-2},{"failures":[178],"tindex":"a9eec16d-46cb-11e5-a4b8-079eb1f6d9f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl","sourcecode":"return java.util.Enumeration<? extends E>.hasMoreElements()"},"status":-1},{"failures":[],"tindex":"a9eee87e-46cb-11e5-a4b8-9bc1bb6a867b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:343","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":0},{"failures":[],"tindex":"a9eee87f-46cb-11e5-a4b8-fb70e039347d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"a9eee880-46cb-11e5-a4b8-a5c7f80e02fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":0},{"failures":[],"tindex":"a9eee881-46cb-11e5-a4b8-d77f1d396e83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"current","e":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:212","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"a9eee882-46cb-11e5-a4b8-7567d9db7fa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"a9eee883-46cb-11e5-a4b8-475b3f103246","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":0},{"failures":[],"tindex":"a9ef0f94-46cb-11e5-a4b8-7d65bd2da658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[179,180],"tindex":"a9ef0f95-46cb-11e5-a4b8-e9103ecec377","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:777","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer()"},"status":-1},{"failures":[],"tindex":"a9ef0f96-46cb-11e5-a4b8-8fea6b4a85d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"a9ef0f97-46cb-11e5-a4b8-3f9a93be82fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"right","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[181],"tindex":"a9ef36a8-46cb-11e5-a4b8-8dc26c189d8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[182,183,184,185,186,187,188,189,190],"tindex":"a9ef36a9-46cb-11e5-a4b8-b5a13c0aea0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"maximumCacheSize":"i","cacheSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a9ef36aa-46cb-11e5-a4b8-cfb3122e1992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[191],"tindex":"a9ef36ab-46cb-11e5-a4b8-85100ad29402","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}