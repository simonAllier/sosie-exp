{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":0,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":33,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":90,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":89,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":54,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":10,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":93,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":100,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":73,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":79,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":71,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":67,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":17,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":48,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":19,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":25,"org.apache.commons.collections4.map.LRUMapTest.testLRU":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":102,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":103,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":104,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":58,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":26,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":40,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":83,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":37,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":72,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":75,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":12},"transformations":[{"failures":[],"tindex":"60d5850b-241f-11e5-a64e-4f88613e37e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:788","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()"},"status":-2},{"failures":[],"tindex":"60d5ac1c-241f-11e5-a64e-9f1f3d83f587","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","bitIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:626","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"60d5ac1d-241f-11e5-a64e-8d405404269d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"60d5ac1e-241f-11e5-a64e-c164a30bee51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:77","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.set.TransformedSet<E> org.apache.commons.collections4.set.TransformedSet<E> = new org.apache.commons.collections4.set.TransformedSet<E>(java.util.Set<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"60d5ac1f-241f-11e5-a64e-814ab8d5d51c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:254","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"60d5ac20-241f-11e5-a64e-bdace8d14e77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[34],"tindex":"60d5d331-241f-11e5-a64e-892aa0166218","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"remove() cannot be called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1196","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int))"},"status":-1},{"failures":[],"tindex":"60d5d332-241f-11e5-a64e-3179b91a6aec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:286","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"60d5d333-241f-11e5-a64e-b74e3d75b046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()"},"status":-2},{"failures":[],"tindex":"60d5d334-241f-11e5-a64e-0f4344873b48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:88","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int = -1"},"status":-2},{"failures":[],"tindex":"60d5d335-241f-11e5-a64e-8b1388bcb3e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:509","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"next","node":"header","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:519","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43],"tindex":"60d5d336-241f-11e5-a64e-cbf12108ade7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:321","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V)"},"status":-1},{"failures":[],"tindex":"60d5d337-241f-11e5-a64e-c5eeea3ac663","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[44,45],"tindex":"60d5fa48-241f-11e5-a64e-195244d8b096","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:288","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"60d5fa49-241f-11e5-a64e-d1a21ce3ef71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-2},{"failures":[],"tindex":"60d5fa4a-241f-11e5-a64e-99e245c670d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"modified","removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:747","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"60d5fa4b-241f-11e5-a64e-87a18402248c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.SortedBag<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return org.apache.commons.collections4.SortedBag<E>;\n} "},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:195","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(org.apache.commons.collections4.SortedBag<E>)"},"status":-2},{"failures":[],"tindex":"60d5fa4c-241f-11e5-a64e-4d52f92ea1d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1507","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"sm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"60d5fa4d-241f-11e5-a64e-0fffb9f47b89","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[],"tindex":"60d6215e-241f-11e5-a64e-8949518d1567","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"newCapacity":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:303","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"60d5d337-241f-11e5-a64e-c5eeea3ac663","diffs":[{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()"],"org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object)":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.int hashCode()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.boolean equals(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.comparators.NullComparator.int compare(E,E)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_currentEntry().b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().e1"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.comparators.ComparableComparator_int_compare(E,E).b","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e1","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e2","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e3","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).t2"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"]},"type":"branch"}]}]}