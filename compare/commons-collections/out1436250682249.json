{"failureDictionary":{"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":111,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":112,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":92,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":49,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":68,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapHashCode":90,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":121,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":0,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":51,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":36,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":4,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":3,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":2,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":69,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":31,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":85,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":103,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":124,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapHashCode":79,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":47,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":93,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":40,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":86,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":118,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":21,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":72,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":1,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":71,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":107,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":13,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":76,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":104,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":60,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":56,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":55,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":52,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":105,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":53,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":10,"org.apache.commons.collections4.CollectionUtilsTest.isFull":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":19,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":64,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":43},"transformations":[{"failures":[],"tindex":"c8df4dc5-2471-11e5-8578-bf855b20c858","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:281","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2],"tindex":"c8e0d466-2471-11e5-8578-9b87fa247aa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:259","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.Object>.add(java.lang.Object)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c8e0d467-2471-11e5-8578-09459a546133","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode()"},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:176","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size()"},"status":-1},{"failures":[],"tindex":"c8e0fb78-2471-11e5-8578-a15d6f0ece01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:93","type":"CtReturnImpl","sourcecode":"return E"},"status":-2},{"failures":[],"tindex":"c8e0fb79-2471-11e5-8578-d598b1e98c1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:332","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<E> java.util.Set<E>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:130","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.TransformedBag<E>.getBag().uniqueSet()"},"status":-2},{"failures":[46,47,48,49],"tindex":"c8e0fb7a-2471-11e5-8578-23bdfbda4cb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"pos","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"c8e197bb-2471-11e5-8578-c52a518b4131","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"c8e1becc-2471-11e5-8578-2301d4f75b73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.size()"},"variableMap":{"delegate":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:157","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.hashCode()"},"status":-1},{"failures":[122],"tindex":"c8e1becd-2471-11e5-8578-a7423923b223","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"Internal Error\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"c8e1bece-2471-11e5-8578-8b3dba67899a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1234","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue())"},"status":0},{"failures":[123],"tindex":"c8e1e5df-2471-11e5-8578-2b6f88c2cddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"h":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1},{"failures":[],"tindex":"c8e1e5e0-2471-11e5-8578-69c230221c8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<java.util.Map.Entry<K, V>>)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:58","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":0},{"failures":[],"tindex":"c8e1e5e1-2471-11e5-8578-a31212cfb3c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"c8e20cf2-2471-11e5-8578-b955ac3b1739","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"status":-2},{"failures":[],"tindex":"c8e20cf3-2471-11e5-8578-6dbcc10a3a17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"c8e23404-2471-11e5-8578-f7f987fea125","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"status":-2},{"failures":[124],"tindex":"c8e23405-2471-11e5-8578-b3cebab77732","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be less than zero\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\")"},"status":-1},{"failures":[],"tindex":"c8e25b16-2471-11e5-8578-3366ce668872","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-2},{"failures":[],"tindex":"c8e2f757-2471-11e5-8578-7731ba9d1252","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1124","type":"CtConstructorCallImpl","sourcecode":"new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=')"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"c8e1e5e0-2471-11e5-8578-69c230221c8c","diffs":[{"nodes":{"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)"],"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.iterators.AbstractIteratorDecorator.org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)"],"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)"],"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.iterators.UnmodifiableIterator.E next()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.iterators.UnmodifiableIterator.boolean hasNext()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)","org.apache.commons.collections4.iterators.UnmodifiableIterator.<E> java.util.Iterator unmodifiableIterator(java.util.Iterator)","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)","org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator(java.util.Iterator)"],"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)"],"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)"]},"edges":{"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()":["org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()"],"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":[],"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()":["org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":[],"org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set)":["org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.set.AbstractSetDecorator.org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)"],"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":["org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractIteratorDecorator.org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.java.util.Iterator getIterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.set.AbstractSetDecorator.java.util.Set decorated()"],"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":[],"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()":["org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()"],"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":["org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractIteratorDecorator.org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.set.AbstractSetDecorator.java.util.Set decorated()"],"org.apache.commons.collections4.iterators.UnmodifiableIterator.E next()":["org.apache.commons.collections4.iterators.UnmodifiableIterator.E next() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.java.util.Map$Entry next()"],"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.iterators.UnmodifiableIterator.boolean hasNext() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractIteratorDecorator.org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.UnmodifiableIterator.<E> java.util.Iterator unmodifiableIterator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.java.util.Iterator getIterator()","org.apache.commons.collections4.iterators.UnmodifiableIterator.E next() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)","org.apache.commons.collections4.iterators.UnmodifiableIterator.<E> java.util.Iterator unmodifiableIterator(java.util.Iterator) -> org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator()","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.set.AbstractSetDecorator.java.util.Set decorated()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.set.AbstractSetDecorator.java.util.Set decorated()"],"org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator()":["org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.java.util.Iterator iterator()"],"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":[]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.UnmodifiableEntrySet_org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set).b"],"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":["org.apache.commons.collections4.map.UnmodifiableEntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.iterators.AbstractIteratorDecorator_org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator).b","org.apache.commons.collections4.map.UnmodifiableEntrySet_org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set).b","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator_org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator).b"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.UnmodifiableEntrySet_org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set).b"],"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":["org.apache.commons.collections4.map.UnmodifiableEntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry_org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry).b","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.UnmodifiableEntrySet_org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set).b","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator_org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator).b"],"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":["org.apache.commons.collections4.map.UnmodifiableEntrySet_org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set).b"],"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":["org.apache.commons.collections4.map.UnmodifiableEntrySet_org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set).b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.java.util.Iterator getIterator()_return iterator"]},"type":"variable"}]},{"transformation":"c8e1bece-2471-11e5-8578-8b3dba67899a","diffs":[{"nodes":{"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()"]},"edges":{"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()"],"org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream)":["org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_currentEntry().b"]},"type":"branch"}]}]}