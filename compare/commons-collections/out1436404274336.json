{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":80,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":12,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":117,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":41,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":50,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":9,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":68,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":32,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":96,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":85,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":115,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":90,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":3,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":93,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":29,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":15,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":11,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":107,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":57,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":91,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":58,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":83,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":43,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":73,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":97,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":78,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":8,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":104,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":63,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":39,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":82,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":101,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":105,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":24,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":19,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":14,"org.apache.commons.collections4.map.CompositeMapTest.testPut":120,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":74,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":109,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":119,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":22,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":72,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":17,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":88,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":26,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":79,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":2,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":116},"transformations":[{"failures":[0,1,2],"tindex":"64cc1285-25d7-11e5-a77a-792ab002f1cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"root","left":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10],"tindex":"64cc87b6-25d7-11e5-a77a-15af8a194868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[11,12,13,14,15],"tindex":"64ccaec7-25d7-11e5-a77a-9319a580620c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[16,17,18,19,20,21,22],"tindex":"64ccd5d8-25d7-11e5-a77a-4bd9fde17252","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"64ccd5d9-25d7-11e5-a77a-9fa126eccf85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:314","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"64ccfcea-25d7-11e5-a77a-274286f26ff0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1072","type":"CtReturnImpl","sourcecode":"return R"},"status":-2},{"failures":[],"tindex":"64ccfceb-25d7-11e5-a77a-5fa43ee751b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:569","type":"CtAssignmentImpl","sourcecode":"java.util.Map<?, ?> = java.util.Map<?, ?>"},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:242","type":"CtAssignmentImpl","sourcecode":"java.util.Map<? extends K, ? extends V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<? extends K, ? extends V>)"},"status":0},{"failures":[],"tindex":"64cd23fc-25d7-11e5-a77a-63552123ffd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:543","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"64cd4b0d-25d7-11e5-a77a-4b7db762aba7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"status":-2},{"failures":[],"tindex":"64cd4b0e-25d7-11e5-a77a-dfd0cd397ca1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>.evaluate(T)"},"status":0},{"failures":[23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,40,4,41,42,43,44,45,46,47,48,49,50,51,5,52,53,54,55,56,57,58,59,60,61,62,6,63,64,65,66,67,68,69,70,71,72,73,7,74,75,76,77,78,79,80,81,82,83,84,8,85,86,87,88,89,90,91,92,93,94,95,9,96,97,98,99,100,101,102,103,104,10,105,106,107],"tindex":"64cd721f-25d7-11e5-a77a-d9008fa4ce70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"64cd9930-25d7-11e5-a77a-4dbc00accc70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(java.util.Enumeration<? extends E>))"},"status":-2},{"failures":[108],"tindex":"64cdc041-25d7-11e5-a77a-930a646ac16c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":-1},{"failures":[109,110,111,112,113,114],"tindex":"64cde752-25d7-11e5-a77a-1f1a04104f2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:200","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C)"},"status":-1},{"failures":[115,116,117,118],"tindex":"64cde753-25d7-11e5-a77a-c5929135f17b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    E = java.util.Iterator<? extends E>.next();\n    boolean = true;\n} else {\n    boolean = true;\n    E = null;\n    boolean = false;\n}"},"status":-1},{"failures":[119],"tindex":"64ce0e64-25d7-11e5-a77a-b124b6ecb139","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set and List must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")"},"status":-1},{"failures":[],"tindex":"64ce3575-25d7-11e5-a77a-878bfd7e793a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"variableMap":{"root":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:585","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"64ce5c86-25d7-11e5-a77a-3d2b8cd678ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[120,121,122],"tindex":"64ce5c87-25d7-11e5-a77a-d52fec439520","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{ java.util.Map<K, V> , java.util.Map<K, V> }, org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>)"},"status":-1},{"failures":[],"tindex":"64ce8398-25d7-11e5-a77a-fd44e662cd3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:592","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"64cd4b0e-25d7-11e5-a77a-dfd0cd397ca1","diffs":[{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":["org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":["org.apache.commons.collections4.functors.NullIsExceptionPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsExceptionPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.NullIsExceptionPredicate.boolean evaluate(T)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":["org.apache.commons.collections4.functors.TruePredicate_boolean_evaluate(T).b"]},"type":"branch"}]}]}