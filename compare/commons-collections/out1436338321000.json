{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":82,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":57,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":15,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":84,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":90,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":130,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":131,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":45,"org.apache.commons.collections4.SetUtilsTest.testEquals":6,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":129,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":95,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemove":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":2,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":42,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":33,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":96,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":41,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":118,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":72,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":73,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":32,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":94,"org.apache.commons.collections4.map.HashedMapTest.testClone":7,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":43,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":39,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":44,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":18,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":109,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":66,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":23,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":91,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":25,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":64,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":27,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":68,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":88,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":59,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":97,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":0,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":110,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":29,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":30,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":93,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":117,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":38},"transformations":[{"failures":[],"tindex":"d5858c30-253d-11e5-b63a-dd35d06eb5a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:65","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:187","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(java.util.Map<? extends J, ? extends U>.size())"},"status":0},{"failures":[],"tindex":"d5858c31-253d-11e5-b63a-25ad942b447b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[0,1],"tindex":"d585b342-253d-11e5-b63a-0b6f636f49ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:76","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"underlying nodeList has no more elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[2],"tindex":"d585b343-253d-11e5-b63a-359512ff46af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"maxElements","bitIndex":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"status":-1},{"failures":[3],"tindex":"d585b344-253d-11e5-b63a-dbe6b0b7af29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1284","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"status":-1},{"failures":[],"tindex":"d585b345-253d-11e5-b63a-dde91ccae252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:482","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createNode(E)"},"status":-2},{"failures":[],"tindex":"d585b346-253d-11e5-b63a-5beac318a29b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[4,5],"tindex":"d585b347-253d-11e5-b63a-613eb5b872cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-1},{"failures":[6],"tindex":"d585da58-253d-11e5-b63a-3d3510503c7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:118","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"d585da59-253d-11e5-b63a-a77d84c7d50e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d585da5a-253d-11e5-b63a-2d56bc8ab2e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:886","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"d585da5b-253d-11e5-b63a-85a794824f6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:701","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:536","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K) , V)"},"status":-1},{"failures":[],"tindex":"d585da5c-253d-11e5-b63a-e52d3fb530a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:148","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>[][int].execute(E)"},"status":-2},{"failures":[],"tindex":"d586016d-253d-11e5-b63a-bda724d6daa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d586016e-253d-11e5-b63a-cfed305d9f27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:599","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"next":"next","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"d586016f-253d-11e5-b63a-4ff651ece990","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1134","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[122,123],"tindex":"d5860170-253d-11e5-b63a-fbd55dae28e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.addAll(java.util.List<E>)"},"variableMap":{"temp":"list","sl":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:323","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[],"tindex":"d5862881-253d-11e5-b63a-bb34463a334b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1339","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Entry(\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1382","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',').append(' ')"},"status":0},{"failures":[124,125,126,127,128,129,130,131],"tindex":"d5862882-253d-11e5-b63a-71aa93e24d71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"d5862883-253d-11e5-b63a-95ba01b038d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:88","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"d5862881-253d-11e5-b63a-bb34463a334b","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.Flat3Map.V put(K,V)_delegateMap.put(key, value)"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"]},"type":"variable"}]},{"transformation":"d5858c30-253d-11e5-b63a-dd35d06eb5a4","diffs":[{"nodes":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"]},"edges":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t1","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"]},"type":"branch"}]}]}