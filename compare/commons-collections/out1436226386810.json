{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testListEquals":1,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":22,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":40,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":18,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":10,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":21,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":27,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":5,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":20,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":6,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":13,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":3,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":4,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":30,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectHashCodeEqualsSelfHashCode":38,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":7,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":12,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEqualsNull":34,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":26,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":29,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":17,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":0,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":48,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":23,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":44,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":9,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testCanonicalFullCollectionExists":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":47,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":46,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":41,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":42,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":25,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectHashCodeEqualsContract":37,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":2,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":16,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testSimpleSerialization":36,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":14,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testRemove":31,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testCanonicalEmptyCollectionExists":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":50,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":24},"transformations":[{"failures":[],"tindex":"388934f5-2439-11e5-b7fb-cd808029099c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"388defe6-2439-11e5-b7fb-1521c278f180","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:110","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"388defe7-2439-11e5-b7fb-e583483b395e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"result","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:140","type":"CtIfImpl","sourcecode":"if ((T[].int) > (java.lang.Object[].int)) {\n    T[][java.lang.Object[].int] = null;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"388defe8-2439-11e5-b7fb-c7b5c8dd7df8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:230","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Collection<? extends E>.size()"},"status":-1},{"failures":[],"tindex":"388e16f9-2439-11e5-b7fb-39fa47a79742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:86","type":"CtAssignmentImpl","sourcecode":"E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"388e16fa-2439-11e5-b7fb-cb77cc95a0f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:143","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.isEmpty()"},"status":-2},{"failures":[],"tindex":"388f015b-2439-11e5-b7fb-95c7f195ad85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:426","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"added","root":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[24],"tindex":"389087fc-2439-11e5-b7fb-8d0b6e0c2f72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:93","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")"},"status":-1},{"failures":[],"tindex":"389087fd-2439-11e5-b7fb-b7493b100c32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"38920e9e-2439-11e5-b7fb-a720d2a45082","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-2},{"failures":[],"tindex":"38920e9f-2439-11e5-b7fb-6ffe51661f64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:117","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , org.apache.commons.collections4.Predicate<? super I>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"389235b0-2439-11e5-b7fb-f5b73703c41a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"389235b1-2439-11e5-b7fb-0d4c3ac28e2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:181","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:186","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.collection.CompositeCollection<E>.size()"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"389235b2-2439-11e5-b7fb-7fda4782aa33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:133","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int + int)]"},"variableMap":{"indexOfLargestMobileInteger":"value","offset":"value","keys":"keys"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:88","type":"CtAssignmentImpl","sourcecode":"int[][(int - 1)] = int"},"status":-1},{"failures":[],"tindex":"38959113-2439-11e5-b7fb-37c81b8a0d7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"3895b824-2439-11e5-b7fb-ef609d39f9ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:803","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"3895b825-2439-11e5-b7fb-b78b9d84be93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"3899afc6-2439-11e5-b7fb-2f06caf3c77a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"node","current":"right","tree":"node","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"3899d6d7-2439-11e5-b7fb-97bca6a4b00c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:148","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51],"tindex":"3899d6d8-2439-11e5-b7fb-5bbb064c79df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"variableMap":{"startIndex":"end","index":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:237","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}