{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":8,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":28,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":62,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":6,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":65,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":51,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":67,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSimpleSerialization":70,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":14,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":26,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":17,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":15,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":44,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":11,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":7,"org.apache.commons.collections4.set.CompositeSetTest.testContains":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":3,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":46,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":55,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":37},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"b9aa6598-24e9-11e5-a62a-6f557c3c90d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"hasNext","beforeFirst":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18],"tindex":"b9aa6599-24e9-11e5-a62a-4fd03a198de5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:525","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[19,20],"tindex":"b9aa8caa-24e9-11e5-a62a-333dc28abb8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:356","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31],"tindex":"b9aa8cab-24e9-11e5-a62a-2796e7dfc024","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b9aa8cac-24e9-11e5-a62a-d51eef53a0ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:202","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[32,33,34,35,36,37,38],"tindex":"b9aa8cad-24e9-11e5-a62a-ffd5bd396188","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"b9aa8cae-24e9-11e5-a62a-f334f8e66502","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"b9aab3bf-24e9-11e5-a62a-b16b084e505e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"b9aab3c0-24e9-11e5-a62a-134521a16c44","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:95","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"b9aab3c1-24e9-11e5-a62a-3931a561513c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:130","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68],"tindex":"b9aab3c2-24e9-11e5-a62a-2bc62e65b189","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b9aab3c3-24e9-11e5-a62a-5d83326a3d33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"b9aab3c4-24e9-11e5-a62a-919d78617b87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:468","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator()"},"status":0},{"failures":[69,70],"tindex":"b9aadad5-24e9-11e5-a62a-b7c2284c39e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:529","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"b9aadad6-24e9-11e5-a62a-9d7f9354994d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1195","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int"},"variableMap":{"parent":"this","modCount":"threshold","expectedModCount":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:631","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":-2},{"failures":[],"tindex":"b9aadad7-24e9-11e5-a62a-1d4b069ad24d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)"},"status":-2},{"failures":[],"tindex":"b9aadad8-24e9-11e5-a62a-530989fd7ffb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:576","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"last":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:284","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K) , V)"},"status":-2},{"failures":[],"tindex":"b9aadad9-24e9-11e5-a62a-631a51db6eef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:434","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[71],"tindex":"b9ab01ea-24e9-11e5-a62a-6397e9b727b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","bitIndex":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:217","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, ((int) - (int)))"},"status":-1},{"failures":[],"tindex":"b9ab01eb-24e9-11e5-a62a-9bb6b1d47373","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"b9aab3c4-24e9-11e5-a62a-919d78617b87","diffs":[{"variables":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()_return (next) != (parent.header)"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":["org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)"]},"edges":{"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator(org.apache.commons.collections4.map.AbstractLinkedMap)"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"]},"type":"graph"}]},{"transformation":"b9ab01eb-24e9-11e5-a62a-9bb6b1d47373","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap_org.apache.commons.collections4.bidimap.TreeBidiMap$Node_nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2","org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e3","org.apache.commons.collections4.bidimap.TreeBidiMap_org.apache.commons.collections4.bidimap.TreeBidiMap$Node_nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t2"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e3"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"type":"graph"}]}]}