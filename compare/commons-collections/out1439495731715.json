{"failureDictionary":{"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":98,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":62,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":81,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":47,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":50,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":9,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":78,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":2,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":7,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":19,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":18,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":100,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":14,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":71,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":46,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":96,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":79,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":102,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":6,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":70,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":13,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":83,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":30,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":97,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":1,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":74,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":31,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":94,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":85,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":66,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":76,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":42,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":3,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":80,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":99,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":4,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":73,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":95,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":93,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":92,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":89,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":90,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":87,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":86,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":29,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":72,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":8,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":20},"transformations":[{"failures":[0,1,2],"tindex":"40f5c6d9-41f5-11e5-a0e8-33272abfe3d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")"},"status":-1},{"failures":[],"tindex":"40f5edea-41f5-11e5-a0e8-d5acf7f76494","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"parent","parent":"p","h":"p","predecessor":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[3],"tindex":"40f5edeb-41f5-11e5-a0e8-218f143eb3fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:162","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.remove() is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1291","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-1},{"failures":[],"tindex":"40f5edec-41f5-11e5-a0e8-fb6abe4d8753","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:274","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"variableMap":{"coll":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:252","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"40f614fd-41f5-11e5-a0e8-9deade48cd8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:633","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(java.lang.Object)"},"variableMap":{"parent":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:269","type":"CtAssignmentImpl","sourcecode":"V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"40f614fe-41f5-11e5-a0e8-6f98f94034c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"40f614ff-41f5-11e5-a0e8-e90d247a272a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"variableMap":{"h":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"40f61500-41f5-11e5-a0e8-db090f6e45f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet()"},"status":-2},{"failures":[],"tindex":"40f61501-41f5-11e5-a0e8-350167d36177","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl","sourcecode":"return java.util.Collection<E>"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"40f61502-41f5-11e5-a0e8-ef6c9cdee104","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"40f63c13-41f5-11e5-a0e8-8987665f8add","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<T,T>copy(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"variableMap":{"iTransformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:172","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>[])(org.apache.commons.collections4.Transformer<? super I, ? extends O>[].clone()))"},"status":-2},{"failures":[38,39,40],"tindex":"40f63c14-41f5-11e5-a0e8-d345f55292a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"40f63c15-41f5-11e5-a0e8-314ad154dc6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"p","left":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:583","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"40f63c16-41f5-11e5-a0e8-f3fc6a57f780","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[59],"tindex":"40f63c17-41f5-11e5-a0e8-eff7291f2db2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"40f66328-41f5-11e5-a0e8-c9942fd99b26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"hashCode","maxElements":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:276","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V)"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"40f66329-41f5-11e5-a0e8-3f153d843336","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"40f6632a-41f5-11e5-a0e8-2b9503e7dcfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:307","type":"CtIfImpl","sourcecode":"if (null != E) {\n    E[][(int)++] = null;\n    if ((int) >= (int)) {\n        int = 0;\n    } \n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"40f6632b-41f5-11e5-a0e8-f7020d4d4dc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"40f6632c-41f5-11e5-a0e8-09e11a868027","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key1","key5":"key1","previous":"next","hashCode":"hashCode","key3":"key3","key4":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}