{"failureDictionary":{"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":58,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":29,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":23,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":49,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":18,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":67,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalEmptyCollectionExists":37,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":41,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":66,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":50,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":16,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":43,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":4,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":8,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":63,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":7,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":60,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":22,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":54,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":3,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":31,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":21,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":33,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":15,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":0,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":42,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":40,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":44,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":34,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":14,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":68,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":57,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCanonicalFullCollectionExists":38,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":10,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":17,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":53,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":52,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":61,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":25,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":64,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":11,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":51,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":6,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":36,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":9,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":13,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":46,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":2,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":19,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":26},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"e1188cd8-240f-11e5-bd41-e178b97366bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion == null) {\n    throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n} "},"variableMap":{"criterion":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:347","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[],"tindex":"e118b3e9-240f-11e5-bd41-a59b55ac46f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl","sourcecode":"return \"Iterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"e118b3ea-240f-11e5-bd41-39182e2a75bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.BagUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(org.apache.commons.collections4.Bag<? extends E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(org.apache.commons.collections4.Bag<? extends E>)"},"status":-1},{"failures":[],"tindex":"e118dafb-240f-11e5-bd41-c5699c3e9ea5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"e118dafc-240f-11e5-bd41-f52bd130063c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:388","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e118dafd-240f-11e5-bd41-dfeba7d97469","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"modified","beforeFirst":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:725","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[51,52,53,54,55,56,57],"tindex":"e118dafe-240f-11e5-bd41-0535edcc7351","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:201","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"e119020f-240f-11e5-bd41-dfbd1d2d211e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[58,59,60],"tindex":"e1190210-240f-11e5-bd41-0d54d689e1f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[61,62,63,64],"tindex":"e1192921-240f-11e5-bd41-8d80bc87c52a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"status":-1},{"failures":[],"tindex":"e1192922-240f-11e5-bd41-adce75b743fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e1192923-240f-11e5-bd41-7901f4248203","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:486","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":0},{"failures":[65],"tindex":"e1195034-240f-11e5-bd41-2557ff90ec0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:353","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\")"},"status":-1},{"failures":[],"tindex":"e1195035-240f-11e5-bd41-138e05d191d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"variableMap":{"map":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:206","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":0},{"failures":[],"tindex":"e1197746-240f-11e5-bd41-b723a49d9e34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:131","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<E, ? super V>.size()"},"status":-2},{"failures":[],"tindex":"e1197747-240f-11e5-bd41-e305ccd33851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-2},{"failures":[66],"tindex":"e1197748-240f-11e5-bd41-b3e543e62b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\")"},"status":-1},{"failures":[67],"tindex":"e1197749-240f-11e5-bd41-fd81fad116ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:807","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Node must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")"},"status":-1},{"failures":[],"tindex":"e1199e5a-240f-11e5-bd41-096315778850","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:170","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"variableMap":{"array":"org.apache.commons.collections4.map.AbstractHashedMap.NULL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"status":0},{"failures":[68],"tindex":"e1199e5b-240f-11e5-bd41-d54963be7134","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e118b3e9-240f-11e5-bd41-a59b55ac46f6","diffs":[{"variables":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":["org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.OrderedBidiMap inverseBidiMap()_return inverse","org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.OrderedBidiMap inverseBidiMap()_inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse()"]},"type":"variable"}]}]}