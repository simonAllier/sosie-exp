{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":92,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":81,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":101,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":197,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":116,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":112,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":18,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":57,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":27,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":168,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":32,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":185,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":60,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":93,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse":1,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":14,"org.apache.commons.collections4.CollectionUtilsTest.select":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":16,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":102,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":158,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":74,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":201,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":137,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":149,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":175,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":170,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":114,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":38,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":85,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":83,"org.apache.commons.collections4.SetUtilsTest.testHashCode":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":109,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":128,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":205,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":202,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":155,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":135,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":166,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":76,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":20,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":187,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":59,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":94,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":130,"org.apache.commons.collections4.list.TreeListTest.testBug35258":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":121,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":24,"org.apache.commons.collections4.ListUtilsTest.testSelect":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":132,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":194,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":66,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":178,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":65,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":98,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":33,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":160,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":152,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":90,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":25,"org.apache.commons.collections4.list.TreeListTest.testRemove":97,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":188,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":127,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":191,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":75,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":122,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":169,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":186,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":72,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":36,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":110,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":156,"org.apache.commons.collections4.ListUtilsTest.testSubtract":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":62,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":143,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":141,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":17,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":26,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":23,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":84,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":174,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":150,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":95,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":184,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":34,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":148,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":71,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":68,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":44,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testEmptyListIteratorIsIndeedEmpty":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":124,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":87,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":120,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":181,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":193,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":117,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":47,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":43,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":103},"transformations":[{"failures":[],"tindex":"3b59483b-2418-11e5-9f0a-35036bffa6fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:109","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[int]"},"status":-2},{"failures":[0,1,2],"tindex":"3b596f4c-2418-11e5-9f0a-93f55fab1531","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:88","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-1},{"failures":[],"tindex":"3b596f4d-2418-11e5-9f0a-6d13c136e524","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:79","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.util.Queue<E>.toArray()))"},"status":-2},{"failures":[3],"tindex":"3b596f4e-2418-11e5-9f0a-6bdf4c6576cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"3b596f4f-2418-11e5-9f0a-1f7e05310978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"3b59bd70-2418-11e5-9f0a-1b5ee723d6be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-2},{"failures":[4,5,6,7],"tindex":"3b59bd71-2418-11e5-9f0a-a76b7e9f3d40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"3b59bd72-2418-11e5-9f0a-f933e23e3e68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[40,41],"tindex":"3b59bd73-2418-11e5-9f0a-79cd211a504e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[42],"tindex":"3b59e484-2418-11e5-9f0a-898a9fe0e7aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:539","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3b59e485-2418-11e5-9f0a-11e4974a3d97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1366","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[],"tindex":"3b59e486-2418-11e5-9f0a-3d73e6536939","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:319","type":"CtInvocationImpl","sourcecode":"java.lang.Math.min(java.util.Collection<E>.size(), java.util.Collection<?>.size())"},"status":0},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"3b59e487-2418-11e5-9f0a-d974989739c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:385","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size())"},"variableMap":{"coll":"coll","values":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:263","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1)"},"status":-1},{"failures":[97,98,99,100,101,102,103,104,105],"tindex":"3b59e488-2418-11e5-9f0a-4f9fdee35cea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:865","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.balance()"},"variableMap":{"s":"root","sAncestor":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null)"},"status":-1},{"failures":[],"tindex":"3b59e489-2418-11e5-9f0a-2fc933028d9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"parent","e":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:583","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"3b5a0b9a-2418-11e5-9f0a-2f201e8effb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[106,107,108,109,110,111],"tindex":"3b5a0b9b-2418-11e5-9f0a-e72c58e43f59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object)"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"3b5a0b9c-2418-11e5-9f0a-a3e697073132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,4,173,174,175,176,177,178,179,180,181,182,183,184,5,185,186,187,188,189,190,6,191,192,193,7,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"tindex":"3b5a32ad-2418-11e5-9f0a-09df17026b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtIfImpl","sourcecode":"if (java.lang.Runnable == null) {\n    throw new java.lang.NullPointerException();\n} "},"variableMap":{"r":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"3b5a32ae-2418-11e5-9f0a-e7779c02c3f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3b596f4f-2418-11e5-9f0a-1f7e05310978","diffs":[{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2"]},"type":"branch"}]},{"transformation":"3b59e485-2418-11e5-9f0a-11e4974a3d97","diffs":[{"variables":{"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_this.parent = parent"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractMapDecorator.org.apache.commons.collections4.map.AbstractMapDecorator(java.util.Map)_this.map = map","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Map decorated()_return map","org.apache.commons.collections4.map.MultiKeyMap.org.apache.commons.collections4.map.MultiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap)_this.map = map","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry(org.apache.commons.collections4.map.AbstractReferenceMap,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_this.parent = parent"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent"]},"type":"variable"}]}]}