{"failureDictionary":{"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":45,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":159,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":42,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":131,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":117,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":168,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":132,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":27,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":77,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":20,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":12,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":13,"org.apache.commons.collections4.CollectionUtilsTest.transform2":185,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":91,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":118,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":96,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":40,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":82,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":110,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":170,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":85,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":136,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":172,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":129,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":60,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":191,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":173,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":93,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":29,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":194,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":109,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":24,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":31,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":98,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":0,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":9,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":10,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":43,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":177,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":122,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":146,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":195,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":5,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":59,"org.apache.commons.collections4.map.LRUMapTest.testLRU":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":4,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":78,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":141,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":49,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":161,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":189,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":175,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":112,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":58},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"048dc86b-234e-11e5-b4e7-0980c5d59b7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:221","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[146],"tindex":"048def7c-234e-11e5-b4e7-77b6916d6fd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"retval","start":"retval","end":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"048e168d-234e-11e5-b4e7-334441043f57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:147","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[],"tindex":"048e168e-234e-11e5-b4e7-0511cbb414cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:229","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Integer java.lang.Integer = java.util.Map<T, java.lang.Integer>.get(T)"},"status":-2},{"failures":[],"tindex":"048e168f-234e-11e5-b4e7-fb7f4d718eb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:419","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ListIterator does not support set\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\")"},"status":-2},{"failures":[147,148,149,150,151,152,153,154,155,156],"tindex":"048e1690-234e-11e5-b4e7-97b868c29f89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[157],"tindex":"048e1691-234e-11e5-b4e7-f1e1093d25b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\")"},"status":-1},{"failures":[],"tindex":"048e3da2-234e-11e5-b4e7-35271bf8b3f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:489","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":-2},{"failures":[],"tindex":"048e3da3-234e-11e5-b4e7-a5553f278a18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"status":-2},{"failures":[],"tindex":"048e3da4-234e-11e5-b4e7-678ae22b9d40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:146","type":"CtReturnImpl","sourcecode":"return ((this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())) - 1"},"status":-2},{"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"tindex":"048e3da5-234e-11e5-b4e7-796913451f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"048e3da6-234e-11e5-b4e7-57d4e100ebef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","left":"right","h":"node","right":"child","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[],"tindex":"048e64b7-234e-11e5-b4e7-2dee48a2cabd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl","sourcecode":"return new java.util.HashSet<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"status":-2},{"failures":[],"tindex":"048e64b8-234e-11e5-b4e7-730ff1931bff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:330","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"048e64b9-234e-11e5-b4e7-915da67064c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"status":-2},{"failures":[],"tindex":"048e64ba-234e-11e5-b4e7-d7c3c742d728","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:260","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":-2},{"failures":[],"tindex":"048e64bb-234e-11e5-b4e7-e3d21edc5c99","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:106","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"048e64bc-234e-11e5-b4e7-5fcd9134f54b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"048e64bd-234e-11e5-b4e7-654296937d99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":0},{"failures":[],"tindex":"048e64be-234e-11e5-b4e7-9f295b8ec3ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[],"tindex":"048e8bcf-234e-11e5-b4e7-5fce4425e251","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[185],"tindex":"048ed9f0-234e-11e5-b4e7-6134a711deae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:807","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.addAll(java.util.Collection<C>)"},"status":-1},{"failures":[],"tindex":"048ed9f1-234e-11e5-b4e7-6bd865b179aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:332","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<E> java.util.Set<E>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:101","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().uniqueSet()"},"status":-2},{"failures":[],"tindex":"048ed9f2-234e-11e5-b4e7-afdde6e9f8e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"048ed9f3-234e-11e5-b4e7-77c010f9c378","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.this(java.util.List<T>, java.util.List<T>, org.apache.commons.collections4.functors.DefaultEquator.defaultEquator())"},"status":-2},{"failures":[],"tindex":"048ed9f4-234e-11e5-b4e7-9774312d2db5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:156","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int)"},"variableMap":{"this":"setOrder","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:345","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.List<E>.remove(int)"},"status":-2},{"failures":[],"tindex":"048ed9f5-234e-11e5-b4e7-97c9314413dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[8,28,186,46,187,188,59,77,89,189,97,190,191,116],"tindex":"048ed9f6-234e-11e5-b4e7-9fc8bbfd326e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V)"},"status":-1},{"failures":[],"tindex":"048f0107-234e-11e5-b4e7-97290da9ac30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"048f0108-234e-11e5-b4e7-a9dc125e5d93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1419","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.ObjectInputStream.readInt()"},"variableMap":{"stream":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:395","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"048f0109-234e-11e5-b4e7-ffa54fba1133","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.ChainedTransformer<T>.this(true, org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"status":-2},{"failures":[],"tindex":"048f010a-234e-11e5-b4e7-2343366e5473","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:162","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.toString()"},"status":-2},{"failures":[],"tindex":"048f010b-234e-11e5-b4e7-bd2ba5a1c487","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:343","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"status":-2},{"failures":[],"tindex":"048f010c-234e-11e5-b4e7-47871452682e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:412","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object))"},"status":-2},{"failures":[192],"tindex":"048f010d-234e-11e5-b4e7-d3f914fca268","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:251","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[193,194,195],"tindex":"048f010e-234e-11e5-b4e7-f9b0c1c6acdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"048f010f-234e-11e5-b4e7-0d26fafa4227","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"048f0110-234e-11e5-b4e7-0b2d5b01b1e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = (int[][(int + 1)]) - 1"},"variableMap":{"vUp":"key3","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:666","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"048f0111-234e-11e5-b4e7-9b4de399f6d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:279","type":"CtReturnImpl","sourcecode":"return java.util.Set<V>"},"variableMap":{"values":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<V>)"},"status":-2},{"failures":[],"tindex":"048f0112-234e-11e5-b4e7-619b8a70ba57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","hashCode":"hashCode","this":"this","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"048f2823-234e-11e5-b4e7-298f4639ff89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"predecessor","prior":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1202","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[196,197],"tindex":"048f2824-234e-11e5-b4e7-b584ac05441e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":-1},{"failures":[],"tindex":"048f2825-234e-11e5-b4e7-ade5261066dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"048f2826-234e-11e5-b4e7-5329a789e166","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1343","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"048f2827-234e-11e5-b4e7-3b3fc8895d7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:223","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"048f2828-234e-11e5-b4e7-95108bf39157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"variableMap":{"childValue":"key2","out":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"048f4f39-234e-11e5-b4e7-ff726914b31c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"o","dataElement":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:218","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"048f4f3a-234e-11e5-b4e7-d7de37ef040e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()"},"status":-2},{"failures":[],"tindex":"048f4f3b-234e-11e5-b4e7-01547d8e6a64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl","sourcecode":"final E E = E"},"status":-2},{"failures":[],"tindex":"048f4f3c-234e-11e5-b4e7-9fd4090f049d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:157","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator())"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}