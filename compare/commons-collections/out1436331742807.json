{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":44,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":27,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":16,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":48,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":8,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":17,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":7,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":51,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":23,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":37,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":9,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":29,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":39,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":20,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":45,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":24,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":15,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":21,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":30,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":50,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":53,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":54,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":35,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":13,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":46,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":25,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":36,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":52,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":41,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":47,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":14,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":49,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":40},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"849d1af5-252e-11e5-a068-c9083fa766df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"delta","d":"delta","vDown":"vUp","delta":"start1","end2":"start2","this":"this","i":"start2","end1":"end2","k":"start1","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"849d4206-252e-11e5-a068-7bd643f7644f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:116","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[26,27,28,29],"tindex":"849d4207-252e-11e5-a068-bbc0de629eaf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"849d6918-252e-11e5-a068-d7586e39822d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:62","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) != (org.apache.commons.collections4.Transformer<? super I, ? extends O>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n} "},"variableMap":{"predicates":"key1","transformers":"key1","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":0},{"failures":[],"tindex":"849d6919-252e-11e5-a068-0df57ba4f06e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()))"},"status":0},{"failures":[],"tindex":"849d691a-252e-11e5-a068-e50faf0bdf14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"849d691b-252e-11e5-a068-5b2f53bbfdca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[30],"tindex":"849d691c-252e-11e5-a068-5d4c4bd3d5a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:51","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.PredicateTransformer<T>(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"849d902d-252e-11e5-a068-df7b7165794e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:434","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"849d902e-252e-11e5-a068-dbd3fcc9812e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"right","root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:578","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"849d902f-252e-11e5-a068-e77394801a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.listIterator(0)"},"status":-2},{"failures":[31],"tindex":"849d9030-252e-11e5-a068-9b0c95cbe56f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:159","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].equals(java.util.Map<K, V>)) {\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[int - 1];\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int);\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1));\n    this.java.util.Map<K, V>[] = java.util.Map<K, V>[];\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[32,33,34,35,36,37,38],"tindex":"849d9031-252e-11e5-a068-27927f178a8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47],"tindex":"849db742-252e-11e5-a068-1d204dc9012a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:282","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++"},"variableMap":{"size":"total","locks":"v","hash":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:462","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"849db743-252e-11e5-a068-53a035fba7cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().last()"},"status":-2},{"failures":[],"tindex":"849db744-252e-11e5-a068-3d2a410be237","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:633","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[48],"tindex":"849db745-252e-11e5-a068-2fc340e14e79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"849db746-252e-11e5-a068-d375784e62fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:394","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<K, V>>"},"status":-2},{"failures":[49,50,51,52,53,54,55],"tindex":"849db747-252e-11e5-a068-b76f020e8db8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1967","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"delegate\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"849dde58-252e-11e5-a068-97a99116dc1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"849d6919-252e-11e5-a068-0df57ba4f06e","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":["org.apache.commons.collections4.map.SingletonMap.java.lang.String toString() -> org.apache.commons.collections4.map.SingletonMap.V getValue()","org.apache.commons.collections4.map.SingletonMap.java.lang.String toString() -> org.apache.commons.collections4.map.SingletonMap.java.lang.String toString()","org.apache.commons.collections4.map.SingletonMap.java.lang.String toString() -> org.apache.commons.collections4.map.SingletonMap.K getKey()"]},"type":"graph"}]}]}