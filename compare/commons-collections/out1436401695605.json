{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.SingletonMapTest.testFullMapCompatibility":50,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":75,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":51,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap":42,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":54,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":58,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":45,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":5,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":49,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":14,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":28,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":30,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":70,"org.apache.commons.collections4.map.SingletonMapTest.testKeyValue":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":24,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":23,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":4,"org.apache.commons.collections4.map.SingletonMapTest.testClone":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":33,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":7,"org.apache.commons.collections4.ListUtilsTest.testSubtract":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":26,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":67,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":72,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":12,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":38},"transformations":[{"failures":[0,1,2,3],"tindex":"63bcd3cf-25d1-11e5-b974-a12af479f3c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:423","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"63bcfae0-25d1-11e5-b974-b7d9d7d090a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"63bcfae1-25d1-11e5-b974-6ff46ee08a8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:440","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse"},"status":-2},{"failures":[24,25,6,7,8,9,10,26,27,11],"tindex":"63bd21f2-25d1-11e5-b974-8311090a0ce7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"63bd21f3-25d1-11e5-b974-d16ca4924d9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key","i":"i","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[28],"tindex":"63bd21f4-25d1-11e5-b974-1fe9fb9f80a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:140","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>)"},"status":-1},{"failures":[29,30,31],"tindex":"63bd4905-25d1-11e5-b974-e7b2469d80f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[32,25,33,34,35,36,37,38,39],"tindex":"63bd4906-25d1-11e5-b974-7560d7d54c7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"63bd4907-25d1-11e5-b974-cd8b81b17ceb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:57","type":"CtLocalVariableImpl","sourcecode":"final K K = this.K"},"status":-2},{"failures":[],"tindex":"63bd7018-25d1-11e5-b974-01ef0ba3de5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:516","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"63bd7019-25d1-11e5-b974-4b80a7d293c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.get(K)"},"status":-2},{"failures":[40],"tindex":"63bd701a-25d1-11e5-b974-59b0ec332f8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"variableMap":{"endIndex":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().addAll(int, java.util.Collection<? extends E>)"},"status":-1},{"failures":[],"tindex":"63bd701b-25d1-11e5-b974-63c8f4a6f0a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:256","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"63bd972c-25d1-11e5-b974-0b3adc808d89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:687","type":"CtInvocationImpl","sourcecode":"C.execute(java.util.Iterator<T>.next())"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"63bd972d-25d1-11e5-b974-251346046e26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:202","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"63bde54e-25d1-11e5-b974-2b1c21044a9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:319","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"63bde54f-25d1-11e5-b974-672d2088665d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()"},"status":-2},{"failures":[],"tindex":"63be0c60-25d1-11e5-b974-213eb070decb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":-2},{"failures":[],"tindex":"63be0c61-25d1-11e5-b974-838d6092ece6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"status":0},{"failures":[],"tindex":"63be0c62-25d1-11e5-b974-a78fe729b3e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"63be0c61-25d1-11e5-b974-838d6092ece6","diffs":[{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)"]},"edges":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V getValue()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V getValue()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.V removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setValue(V)","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.V setKeyValue(K,V)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setValue(V).b","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setKeyValue(K,V).b"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setKeyValue(K,V).b","org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry_V_setValue(V).b"]},"type":"branch"}]}]}