{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":61,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":18,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":48,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":50,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":53,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":29,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":68,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":1,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":47,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":70,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.LRUMapTest.testLRU":67,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":56,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":9,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":51,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":12,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":60,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":10,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":2,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":21,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":54,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":13,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":6,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":23,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":58,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":32,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":28,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":5,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":17,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":16,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":43,"org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":33},"transformations":[{"failures":[],"tindex":"31d3a9e5-2410-11e5-a075-0b15afe53cd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:171","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":-2},{"failures":[],"tindex":"31d3d0f6-2410-11e5-a075-773e9e801a69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:861","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":0},{"failures":[],"tindex":"31d3f807-2410-11e5-a075-ede51ff3d1f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:427","type":"CtReturnImpl","sourcecode":"return super.getEntry(java.lang.Object)"},"status":-2},{"failures":[0],"tindex":"31d3f808-2410-11e5-a075-0f81b93c5770","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:161","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"31d3f809-2410-11e5-a075-c5dadeca62ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29],"tindex":"31d3f80a-2410-11e5-a075-fdb1f6499673","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"31d41f1b-2410-11e5-a075-0baab651a5cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[4,8,30,16],"tindex":"31d41f1c-2410-11e5-a075-f3f052274716","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"variableMap":{"coll":"coll","modified":"modified","it":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"31d4462d-2410-11e5-a075-5bf2c11ab089","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[31,32,33],"tindex":"31d4462e-2410-11e5-a075-5796797869b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"31d46d3f-2410-11e5-a075-31bd02f5aa53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:748","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"31d46d40-2410-11e5-a075-33aaede719f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:891","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":0},{"failures":[],"tindex":"31d46d41-2410-11e5-a075-f5079e7af572","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"leftChild","rightChild":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:869","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[34,35,36,21,23,24],"tindex":"31d49452-2410-11e5-a075-8f125b1c4285","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"status":-1},{"failures":[37,38,39,40,41,42],"tindex":"31d49453-2410-11e5-a075-fdc8981f6974","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"end1","d":"end1","offset":"delta","vDown":"vUp","delta":"delta","this":"this","sequence1":"sequence1","sequence2":"sequence2","vUp":"vDown","end2":"start1","equator":"equator","end1":"end2","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,32,33,55,56,57,58,59,60,61,62,63,64,65],"tindex":"31d4bb64-2410-11e5-a075-f574924598aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:616","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[66],"tindex":"31d4e275-2410-11e5-a075-19a357c30061","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl","sourcecode":"return java.util.SortedSet<E>"},"status":-1},{"failures":[],"tindex":"31d4e276-2410-11e5-a075-553322624b77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:348","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>(this , this.java.util.List<K>)"},"status":-2},{"failures":[67,68,69,70],"tindex":"31d4e277-2410-11e5-a075-83c4c8e37ad3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:201","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[],"tindex":"31d4e278-2410-11e5-a075-b536e425be1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:209","type":"CtReturnImpl","sourcecode":"return java.util.Collection<T> == null ? org.apache.commons.collections4.CollectionUtils.java.util.Collection : java.util.Collection<T>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"31d41f1b-2410-11e5-a075-0baab651a5cf","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_boolean_isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":["org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap$Node) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"}]}]}