{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":112,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":140,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":232,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":44,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":271,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":199,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":171,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":88,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":275,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":254,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":310,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":252,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":158,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":192,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":90,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":283,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":45,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":11,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":241,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":215,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":246,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":58,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":216,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":235,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":308,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":230,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":97,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":66,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":131,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":185,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":156,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":116,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":194,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":279,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":133,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":48,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":302,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":99,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":167,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":206,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":144,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":67,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":237,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":286,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":276,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":293,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":280,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":46,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":33,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":282,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":263,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":170,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":172,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":222,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":77,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":303,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":137,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":292,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":164,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":74,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":155,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":265,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":249,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":236,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":296,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":221,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":247,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":256,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":168,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":41,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":284,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":106,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":21,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":20,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":261,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":178,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":181,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":16,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":83,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":255,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":7,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":87,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":18,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":314,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":70,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":61,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":153,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":274,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":297,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":240,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":82,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":166,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":146,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":269,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":198,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":207,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":316,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":94,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":57,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":38,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":162,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":169,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":118,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":13,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":143,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":113,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":212,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":214,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":89,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":37,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":272,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":288,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":259,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":231,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":250,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":117,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":124,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":17,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":190,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":72,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":148,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":285,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":264,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":253,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":42,"org.apache.commons.collections4.ListUtilsTest.testSubtract":317,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":304,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":56,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":138,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":193,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":262,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":73,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":165,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":96,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":19,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":307,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":266,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":225,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":196,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":228,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":108,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":103,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":213,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":294,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":34,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":84,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":95,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":125,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":289,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":234,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":62,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":139,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":50,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":101,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":163,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":210,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":60,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":159,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":22,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":258,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":315,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":149,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":132,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":195,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":270,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":114},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"0e270a0c-4170-11e5-8bf7-4999ac83f124","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:109","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[46],"tindex":"0e270a0d-4170-11e5-8bf7-bd4261a5a892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0e27311e-4170-11e5-8bf7-498ff2daadcd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":0},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"tindex":"0e27311f-4170-11e5-8bf7-057279b7cb38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"0e275730-4170-11e5-8bf7-b9a2f35d7338","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)"},"status":-2},{"failures":[],"tindex":"0e275731-4170-11e5-8bf7-f73e2ee78550","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:127","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"0e275732-4170-11e5-8bf7-cb49ea458dc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:231","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()"},"status":-2},{"failures":[],"tindex":"0e275733-4170-11e5-8bf7-a781ce788edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2141","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<V, K>>"},"variableMap":{"inverseEntrySet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":0},{"failures":[],"tindex":"0e275734-4170-11e5-8bf7-fd5892e2f06a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"variableMap":{"this":"map","newSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-2},{"failures":[],"tindex":"0e275735-4170-11e5-8bf7-610775f27522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:541","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int"},"status":-2},{"failures":[],"tindex":"0e277e46-4170-11e5-8bf7-7b1bac078f1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)"},"status":-2},{"failures":[],"tindex":"0e277e47-4170-11e5-8bf7-f56e4c2c8b6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":-2},{"failures":[],"tindex":"0e277e48-4170-11e5-8bf7-9ffda868b5d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"0e277e49-4170-11e5-8bf7-99ba4831bd32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"0e277e4a-4170-11e5-8bf7-37452ac7e461","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"0e27cc6b-4170-11e5-8bf7-8b9ba15b045e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1020","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[319],"tindex":"0e27cc6c-4170-11e5-8bf7-47db309941b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:551","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"0e27cc6d-4170-11e5-8bf7-d1b660704747","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:344","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()"},"status":-2},{"failures":[],"tindex":"0e27cc6e-4170-11e5-8bf7-57f321f9d016","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"next","key2":"key2","key5":"key2","hashCode":"hashCode","key3":"key2","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"0e27cc6f-4170-11e5-8bf7-35a5923bc59f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"newCapacity","newCapacity":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}