{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":28,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":17,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":84,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":71,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":95,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":56,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":55,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":26,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":70,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":0,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":44,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":45,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":68,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":38,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":46,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":54,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":62,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":85,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":86,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":101,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":47,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":18,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":81,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":29,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":49,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":65,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":51,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":80,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":89,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":97,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":15,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":57,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":14,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":16,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":64,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":20,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":78,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":39,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":66,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":75,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":76,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":94,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":21,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":19,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":7,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":4,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":34,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":35,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":59,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":12,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":23,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":48,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":79,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":52,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":69,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":24,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":36,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":53,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":1},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"0f50bd54-24dd-11e5-8724-f35f2507e33d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:385","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size())"},"variableMap":{"coll":"coll","values":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:263","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1)"},"status":-1},{"failures":[],"tindex":"0f50e465-24dd-11e5-8724-6dd6380e1a19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().poll()"},"status":-2},{"failures":[],"tindex":"0f50e466-24dd-11e5-8724-15f6fd3ac3a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[54,55,56],"tindex":"0f50e467-24dd-11e5-8724-9f726e91ada6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"j","currentIndex":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:273","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)))"},"status":-1},{"failures":[57,58],"tindex":"0f50e468-24dd-11e5-8724-79aea85d0834","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)"},"variableMap":{"this":"this","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"0f50e469-24dd-11e5-8724-312cf433dc43","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"0f50e46a-24dd-11e5-8724-9fbcee2a8837","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:54","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<java.lang.Class<? extends T>, T>)(org.apache.commons.collections4.functors.InstantiateTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[],"tindex":"0f510b7b-24dd-11e5-8724-1beea2509bb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"variableMap":{"data":"key3","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"0f510b7c-24dd-11e5-8724-574a98b9148a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"obj","type":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:152","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[71],"tindex":"0f510b7d-24dd-11e5-8724-3308f55b516f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:316","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>)"},"status":-1},{"failures":[72,73],"tindex":"0f510b7e-24dd-11e5-8724-ffdc9a96edc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1331","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"0f510b7f-24dd-11e5-8724-e1c74e889c89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[74,75,76,77,78],"tindex":"0f510b80-24dd-11e5-8724-ab1175f44b69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[],"tindex":"0f513291-24dd-11e5-8724-f92f34a5d36e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:368","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"0f513292-24dd-11e5-8724-51ce2780baae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"0f513293-24dd-11e5-8724-1bf7945f28e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()"},"status":-2},{"failures":[],"tindex":"0f513294-24dd-11e5-8724-4dcc1f07072e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:108","type":"CtReturnImpl","sourcecode":"return ((K) == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : K.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))"},"status":-2},{"failures":[100,101],"tindex":"0f513295-24dd-11e5-8724-ed0ef8159fc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getKey()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0f50e466-24dd-11e5-8724-15f6fd3ac3a1","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"type":"graph"}]}]}