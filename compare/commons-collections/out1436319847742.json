{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":31,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":20,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":73,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":97,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":50,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":55,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":71,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":75,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":25,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":7,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":45,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":96,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":95,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":15,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":3,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":34,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":6,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":12,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":40,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":54,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":46,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":11,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":13},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"d29a8877-2512-11e5-9425-1339cefcd172","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:213","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.this(-1L)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:224","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.this(org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy<K, V>, new java.util.HashMap<K, V>())"},"status":-1},{"failures":[],"tindex":"d29aaf88-2512-11e5-9425-bb5cca248e2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"d29aaf89-2512-11e5-9425-c53a76e747e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"d29ad69a-2512-11e5-9425-05510310bc38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.isEmpty()"},"status":-1},{"failures":[],"tindex":"d29ad69b-2512-11e5-9425-2bd0b60fc12c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"d29ad69c-2512-11e5-9425-e906202265f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[57,58,59,60],"tindex":"d29afdad-2512-11e5-9425-d95464091668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")"},"status":-1},{"failures":[],"tindex":"d29afdae-2512-11e5-9425-c39a144c08bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:750","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"d29afdaf-2512-11e5-9425-b5454c84cec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2279","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int"},"variableMap":{"modCount":"modCount","expectedModCount":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:637","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"d29afdb0-2512-11e5-9425-c73b7769e31b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1177","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"i":"startIndex","hashIndex":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:171","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":-2},{"failures":[],"tindex":"d29afdb1-2512-11e5-9425-9b3e916da0de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"status":-2},{"failures":[],"tindex":"d29b24c2-2512-11e5-9425-c7dbb3bfd659","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"siblingNode","this":"this","rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[61,62,63],"tindex":"d29b24c3-2512-11e5-9425-c1da6036418c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)"},"status":-1},{"failures":[64,65,66,67,68,69],"tindex":"d29b4bd4-2512-11e5-9425-85e811976555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[70],"tindex":"d29b4bd5-2512-11e5-9425-0133ba09dcc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>._putAll(java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"d29b4bd6-2512-11e5-9425-2573467bb33b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:752","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[96],"tindex":"d29b4bd7-2512-11e5-9425-59b83db48d4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"status":-1},{"failures":[],"tindex":"d29b72e8-2512-11e5-9425-cb49a2220c8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[97],"tindex":"d29b72e9-2512-11e5-9425-b3d646137824","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"d29ad69c-2512-11e5-9425-e906202265f6","diffs":[{"branches":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().t1","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.EmptyOrderedIterator_<E>_org.apache.commons.collections4.OrderedIterator_emptyOrderedIterator().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"edges":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()_return entrySet","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()_entrySet = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this)","org.apache.commons.collections4.map.AbstractHashedMap.int size()_return size","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)_this.threshold = calculateThreshold(initialCapacity, loadFactor)"]},"type":"variable"}]},{"transformation":"d29afdaf-2512-11e5-9425-b5454c84cec2","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}