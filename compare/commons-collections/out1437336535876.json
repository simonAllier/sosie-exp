{"failureDictionary":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":43,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesClearChangesMap":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":22,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":24,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":29,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":13,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetClearChangesMap":41,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":14,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":15,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetClearChangesMap":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":20,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetClearChangesMap":46,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":9,"org.apache.commons.collections4.CollectionUtilsTest.filter":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":34,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":17,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":27,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesClearChangesMap":40,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":7,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":36,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetClearChangesMap":45},"transformations":[{"failures":[0,1],"tindex":"fc18f1b4-2e51-11e5-96b3-656c00fe1296","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:752","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<T>.remove()"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"fc1918c5-2e51-11e5-96b3-97db7cbb3beb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"fc193fd6-2e51-11e5-96b3-01d8b37ed888","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:455","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"fc193fd7-2e51-11e5-96b3-676f2b33347a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1601","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapEntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:447","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator<E>)"},"status":-2},{"failures":[],"tindex":"fc193fd8-2e51-11e5-96b3-01d7e2a07c36","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:452","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:104","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>)"},"status":-2},{"failures":[24],"tindex":"fc193fd9-2e51-11e5-96b3-e55279ce6de8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"fc1966ea-2e51-11e5-96b3-c12cea5b16e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"fc1966eb-2e51-11e5-96b3-674f166afbbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:223","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"fc1966ec-2e51-11e5-96b3-5f2a34f39787","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}"},"status":-2},{"failures":[],"tindex":"fc198dfd-2e51-11e5-96b3-9fd50f3b4f4f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"fc198dfe-2e51-11e5-96b3-214d6397b035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1608","type":"CtLocalVariableImpl","sourcecode":"O O = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:82","type":"CtLocalVariableImpl","sourcecode":"final O O = this.org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"fc198dff-2e51-11e5-96b3-b9d12844f5e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[38],"tindex":"fc19b510-2e51-11e5-96b3-4d3a9037ab74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"retval":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:311","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[39,40,41,42,43,44,45,46],"tindex":"fc19b511-2e51-11e5-96b3-4f6a5de43593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:277","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"status":-1},{"failures":[],"tindex":"fc19b512-2e51-11e5-96b3-9ba2f3b9311c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"newNode","replacement":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"fc19dc23-2e51-11e5-96b3-31f2816d614e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"fc19dc24-2e51-11e5-96b3-b996c02f2bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"variableMap":{"indexOfLargestMobileInteger":"length","keys":"keys","largestKey":"indexOfLargestMobileInteger","i":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"fc19dc25-2e51-11e5-96b3-31f7844e5ff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[],"tindex":"fc1a0336-2e51-11e5-96b3-b12d1a441280","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"right","tree":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:697","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"fc1a0337-2e51-11e5-96b3-874bf19d03d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:568","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"fc1a0337-2e51-11e5-96b3-874bf19d03d1","diffs":[{"branches":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)"]},"edges":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"]},"type":"graph"}]}]}