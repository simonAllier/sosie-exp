{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":72,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":60,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":50,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":65,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":95,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":69,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":64,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":14,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":83},"transformations":[{"failures":[],"tindex":"0899178b-24d6-11e5-bc75-ada854207948","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"08993e9c-24d6-11e5-bc75-7f14cb3c1bb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:337","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Object, java.lang.Long>.clear()"},"status":-2},{"failures":[],"tindex":"08993e9d-24d6-11e5-bc75-6fbdfd8f3a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.firstKey()"},"status":-2},{"failures":[0],"tindex":"08993e9e-24d6-11e5-bc75-8b8963c449d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"status":-1},{"failures":[],"tindex":"08993e9f-24d6-11e5-bc75-e12bfabe0a75","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key4","entry":"next","key2":"key5","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"089965b0-24d6-11e5-bc75-3936cb5cf1ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:291","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[],"tindex":"089965b1-24d6-11e5-bc75-e7b6a6bdcea1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:103","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Collection<E>.size()"},"status":0},{"failures":[],"tindex":"089965b2-24d6-11e5-bc75-11cec4e6851a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"089965b3-24d6-11e5-bc75-31f2cf6d3ccb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"siblingNode","rightChild":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[1,2],"tindex":"089965b4-24d6-11e5-bc75-fbbbe49a9cad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:103","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[],"tindex":"08998cc5-24d6-11e5-bc75-bdbe0aefac5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:298","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[3],"tindex":"08998cc6-24d6-11e5-bc75-c129a2af41ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"08998cc7-24d6-11e5-bc75-5f3d8e9f3bdc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:109","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"08998cc8-24d6-11e5-bc75-e995c51fbfc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"08998cc9-24d6-11e5-bc75-ad61241ec4f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:104","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103],"tindex":"08998cca-24d6-11e5-bc75-0707b69f0c11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"0899b3db-24d6-11e5-bc75-d51ffaddb897","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:690","type":"CtReturnImpl","sourcecode":"return C"},"status":-2},{"failures":[],"tindex":"0899b3dc-24d6-11e5-bc75-77b59be64a14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:89","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.V = null"},"status":0},{"failures":[],"tindex":"0899b3dd-24d6-11e5-bc75-ddbd54c87dda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:411","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"0899b3de-24d6-11e5-bc75-dd79723518f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:65","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:187","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(java.util.Map<? extends J, ? extends U>.size())"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0899b3de-24d6-11e5-bc75-dd79723518f2","diffs":[{"nodes":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"]},"edges":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t1","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"]},"type":"branch"}]}]}