{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":87,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":53,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":92,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":90,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":99,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":150,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":159,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":85,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testPreviousKey":145,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":148,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":129,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":112,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":5,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":59,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":126,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":17,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":131,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":68,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":153,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":1,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":79,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":105,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":38,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":67,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":144,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":55,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":118,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":136,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":22,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":69,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":70,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":15,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":34,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":132,"org.apache.commons.collections4.map.LRUMapTest.testLRU":139,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":36,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":125,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":76,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":7,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":106,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":11,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":21,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":140,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":16,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":157,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":3,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":102,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":47,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":141,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":35,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":155,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":64,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":44},"transformations":[{"failures":[],"tindex":"234ce2d0-2446-11e5-846c-5d359d548ad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:51","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)"},"status":-2},{"failures":[],"tindex":"234d09e1-2446-11e5-846c-679d3ab30e38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"status":-2},{"failures":[0],"tindex":"234d09e2-2446-11e5-846c-35522f4c03ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:730","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\")"},"status":-1},{"failures":[],"tindex":"234d09e3-2446-11e5-846c-7f57c6a50ecc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedMap<K, V>"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.TransformedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"status":-2},{"failures":[],"tindex":"234d30f4-2446-11e5-846c-b5a63bfb9d68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:107","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , org.apache.commons.collections4.Predicate<E>[] , org.apache.commons.collections4.Closure<E>[] , org.apache.commons.collections4.Closure<? super E>)"},"variableMap":{"defaultClosure":"def","closures":"trs","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(org.apache.commons.collections4.Predicate<E>[], org.apache.commons.collections4.Closure<? super E>[], org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"234d30f5-2446-11e5-846c-85948da04a90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"status":0},{"failures":[],"tindex":"234d30f6-2446-11e5-846c-fd644c84ee29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[],"tindex":"234d30f7-2446-11e5-846c-41f48db3f90e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:378","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = new org.apache.commons.collections4.bag.HashBag<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:61","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>))"},"status":-2},{"failures":[],"tindex":"234d30f8-2446-11e5-846c-236679851214","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"234d5809-2446-11e5-846c-0167ccbced47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:603","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<K, V>>"},"variableMap":{"entrySet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":0},{"failures":[],"tindex":"234d580a-2446-11e5-846c-4f47e55f463b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:380","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"234d580b-2446-11e5-846c-4b94369a5c2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:62","type":"CtInvocationImpl","sourcecode":"java.util.StringTokenizer.countTokens()"},"status":0},{"failures":[],"tindex":"234d580c-2446-11e5-846c-b78f5e464dac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)"},"status":-2},{"failures":[],"tindex":"234d7f1d-2446-11e5-846c-050b3aa78fbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"234d7f1e-2446-11e5-846c-1f49d0d6c7e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","data":"newEntries","hashIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[144],"tindex":"234d7f1f-2446-11e5-846c-63e48ee5c7c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:141","type":"CtAssignmentImpl","sourcecode":"boolean = int == (int)"},"variableMap":{"size":"comparison","maxElements":"comparison","full":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:174","type":"CtAssignmentImpl","sourcecode":"boolean = int > 0"},"status":-1},{"failures":[145,146,147],"tindex":"234d7f20-2446-11e5-846c-679f79bd0cbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.SortedMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"234da631-2446-11e5-846c-0dde91fde02e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:319","type":"CtInvocationImpl","sourcecode":"java.lang.Math.min(java.util.Collection<E>.size(), java.util.Collection<?>.size())"},"status":0},{"failures":[148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"234da632-2446-11e5-846c-2597a2d44621","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"234da633-2446-11e5-846c-77e7d63f2ffd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:264","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"link":"before","header":"before","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"234d5809-2446-11e5-846c-0167ccbced47","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.FixedSizeMap.java.util.Set entrySet()":["org.apache.commons.collections4.map.FixedSizeMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.FixedSizeMap.java.util.Set entrySet()","org.apache.commons.collections4.map.FixedSizeMap.java.util.Set entrySet() -> org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set)"]},"graph":"branch"}]},{"transformation":"234d7f1d-2446-11e5-846c-050b3aa78fbd","diffs":[{"nodes":{"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":["org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object)","org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object)","org.apache.commons.collections4.keyvalue.TiedMapEntry.V getValue()","org.apache.commons.collections4.keyvalue.TiedMapEntry.K getKey()"]},"edges":{"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":["org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object)","org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object)","org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.K getKey()","org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object)","org.apache.commons.collections4.keyvalue.TiedMapEntry.V getValue() -> org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object)"],"org.apache.commons.collections4.keyvalue.TiedMapEntry.boolean equals(java.lang.Object)":["org.apache.commons.collections4.keyvalue.TiedMapEntry.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.TiedMapEntry.V getValue()","org.apache.commons.collections4.keyvalue.TiedMapEntry.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.TiedMapEntry.K getKey()"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":["org.apache.commons.collections4.map.SingletonMap_boolean_isEqualKey(java.lang.Object).b","org.apache.commons.collections4.map.SingletonMap_V_get(java.lang.Object).t1","org.apache.commons.collections4.keyvalue.TiedMapEntry_K_getKey().b","org.apache.commons.collections4.map.SingletonMap_V_get(java.lang.Object).b","org.apache.commons.collections4.keyvalue.TiedMapEntry_V_getValue().b"]},"type":"branch"}]},{"transformation":"234d30f6-2446-11e5-846c-fd644c84ee29","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.functors.NonePredicate.<T> org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection)":["org.apache.commons.collections4.functors.NonePredicate.<T> org.apache.commons.collections4.Predicate nonePredicate(java.util.Collection) -> org.apache.commons.collections4.functors.TruePredicate.<T> org.apache.commons.collections4.Predicate truePredicate()"]},"graph":"branch"}]},{"transformation":"234d30f8-2446-11e5-846c-236679851214","diffs":[{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void setParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_boolean_isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).l8","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_boolean_isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap$Node_boolean_isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).l8","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2"]},"type":"branch"}]},{"transformation":"234d30f5-2446-11e5-846c-85948da04a90","diffs":[{"variables":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"],"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Set uniqueSet()_return uniqueSet"]},"type":"variable"}]}]}