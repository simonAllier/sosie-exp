{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":10,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testFullIterator":16,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":20,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testEmptyIterator":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":7,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":28,"org.apache.commons.collections4.ListUtilsTest.testEquals":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":6},"transformations":[{"failures":[0,1,2,3,4],"tindex":"ba2d2d4d-2537-11e5-af87-cbfa6ce4807c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:462","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)"},"variableMap":{"total":"h","v":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:229","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"ba2d545e-2537-11e5-af87-8f54229bc8d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:189","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1202","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"))"},"status":-2},{"failures":[5,6,7],"tindex":"ba2d545f-2537-11e5-af87-c3ef7c7cc23d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(E)"},"status":-1},{"failures":[],"tindex":"ba2d5460-2537-11e5-af87-81e14b15da9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:150","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.iterators.IteratorChain<E> org.apache.commons.collections4.iterators.IteratorChain<E> = new org.apache.commons.collections4.iterators.IteratorChain<E>()"},"status":-2},{"failures":[],"tindex":"ba2d5461-2537-11e5-af87-fbddd0795877","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl","sourcecode":"return ((this.int) - (this.int)) - 1"},"variableMap":{"startIndex":"hash","index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:312","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"ba2d5462-2537-11e5-af87-576ce8756b39","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:211","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, true)"},"status":-2},{"failures":[8,9,10,10],"tindex":"ba2d5463-2537-11e5-af87-8f6c8b92da2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:87","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.Predicate<T>[])"},"status":-1},{"failures":[],"tindex":"ba2d7b74-2537-11e5-af87-3f73f4217398","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"leastIndex","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[11],"tindex":"ba2d7b75-2537-11e5-af87-53979d377309","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:258","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Iterator<?>.next()"},"status":-1},{"failures":[],"tindex":"ba2d7b76-2537-11e5-af87-4166dfa59af6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:400","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, null, null)"},"status":-2},{"failures":[],"tindex":"ba2d7b77-2537-11e5-af87-4d261abb5225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:383","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.Bag<?>.getCount(E)"},"status":-2},{"failures":[12,13],"tindex":"ba2d7b78-2537-11e5-af87-c9e377e979cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[14,15,16],"tindex":"ba2d7b79-2537-11e5-af87-1d94dc683a9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:366","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:123","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"ba2d7b7a-2537-11e5-af87-4d0a1bded6dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-2},{"failures":[],"tindex":"ba2da28b-2537-11e5-af87-67c648e06415","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:385","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"ba2da28c-2537-11e5-af87-2f79e0d6e3ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:189","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"ba2da28d-2537-11e5-af87-13ba7d485ebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:483","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"ba2da28e-2537-11e5-af87-1dec0ef31dd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))"},"status":-2},{"failures":[],"tindex":"ba2da28f-2537-11e5-af87-d3df5b0b42ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"ba2dc9a0-2537-11e5-af87-95cf42109040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:237","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"ba2dc9a0-2537-11e5-af87-95cf42109040","diffs":[{"variables":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_if ((currentIterator) == null) {    updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator.remove()","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_if ((currentIterator) == null) {    updateCurrentIterator()","org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator.remove()","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"]},"edges":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.FilterIterator.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.FilterIterator.void remove()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.FilterIterator.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.FilterIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.FilterIterator.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.FilterIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.void remove()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.V next()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.V next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()"]},"type":"graph"}]}]}