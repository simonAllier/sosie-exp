{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":6,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutNullValue":40,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":25,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":13,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":21,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":17,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":32,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":16,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":14,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":37,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":1,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":18,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":33},"transformations":[{"failures":[0],"tindex":"3e46a8c5-2436-11e5-a61d-dfd1b4cfada6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"result","i":"size","j":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"status":-1},{"failures":[1,2],"tindex":"3e46cfd6-2436-11e5-a61d-2d86e846ae57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().set(int, E)"},"status":-1},{"failures":[3,4,5,0,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"3e46cfd7-2436-11e5-a61d-dba56f4eca43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:121","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"3e46cfd8-2436-11e5-a61d-23fd77416115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:586","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"entry","entry":"entry","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:285","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"3e46cfd9-2436-11e5-a61d-f74c877bd938","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:98","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"3e46f6ea-2436-11e5-a61d-47b2d5c94da5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:145","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[19,20,21,22,23],"tindex":"3e46f6eb-2436-11e5-a61d-633013d3582d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:131","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' does not exist\"))"},"status":-1},{"failures":[],"tindex":"3e46f6ec-2436-11e5-a61d-ebd490db8b89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:49","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<T, T>)(org.apache.commons.collections4.functors.CloneTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[],"tindex":"3e46f6ed-2436-11e5-a61d-d1e2427efbd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[24],"tindex":"3e46f6ee-2436-11e5-a61d-f1d9198e12cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()"},"status":-1},{"failures":[],"tindex":"3e47932f-2436-11e5-a61d-b9512824bb8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.CloneTransformer.org.apache.commons.collections4.Transformer"},"status":-2},{"failures":[],"tindex":"3e479330-2436-11e5-a61d-5d23081894cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:73","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"3e479331-2436-11e5-a61d-6390ddb8097d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"rightChild","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:838","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"3e479332-2436-11e5-a61d-2785f5f745ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:230","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O))"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34],"tindex":"3e479333-2436-11e5-a61d-f18a36a26e4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"3e479334-2436-11e5-a61d-b3935c72f6a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"key","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key","keyType":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"3e47ba45-2436-11e5-a61d-0f7ffe72dd2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","key3":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"3e47ba46-2436-11e5-a61d-b5506c9dd6c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[35,36],"tindex":"3e47ba47-2436-11e5-a61d-a159e9bdc2ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:115","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[37,38,39,40],"tindex":"3e47ba48-2436-11e5-a61d-09b5ac9a64e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"found","h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3e479331-2436-11e5-a61d-6390ddb8097d","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t2"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":[],"org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"}]}]}