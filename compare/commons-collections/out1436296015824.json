{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":47,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":33,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":27,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":14,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":20,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":51,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":29,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":61,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":60,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":15,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":2,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":7,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":50,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":32,"org.apache.commons.collections4.map.LRUMapTest.testLRU":6,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":13,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":48,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":3,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":38,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":19,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":21,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":31,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":11,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":39,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":1,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":8,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":12,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":62,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":45,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":44,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":43,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.map.LRUMapTest.testReset":5,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":58,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":41,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":10,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":37,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":23,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":35,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":17,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":0,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":24,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":18,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":34,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":16,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":9,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":36,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":59,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":28,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":30},"transformations":[{"failures":[],"tindex":"55ada81c-24db-11e5-a106-edb992ddb87d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:211","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, true)"},"status":-2},{"failures":[],"tindex":"55adcf2d-24db-11e5-a106-cd2b6dbc8721","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"count","index":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    int++;\n} "},"status":0},{"failures":[],"tindex":"55adcf2e-24db-11e5-a106-69d29478b30f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:824","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"55adf63f-24db-11e5-a106-23a8efaa08d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:255","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ArrayList<E>.get(int)"},"status":-2},{"failures":[],"tindex":"55adf640-24db-11e5-a106-2fbd897b4897","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:137","type":"CtReturnImpl","sourcecode":"return E"},"status":-2},{"failures":[],"tindex":"55adf641-24db-11e5-a106-81d991be29f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"nodeList must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:75","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[0,1],"tindex":"55ae1d52-24db-11e5-a106-8b40b17fbd28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:207","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-1},{"failures":[],"tindex":"55ae1d53-24db-11e5-a106-7f7ab6e3b777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<V>)"},"status":-2},{"failures":[2],"tindex":"55ae1d54-24db-11e5-a106-35c5edf6262a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:344","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.addAll(java.util.List<E>)"},"variableMap":{"subSet":"item","list":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:306","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"55ae1d55-24db-11e5-a106-e70e90433900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[3,4],"tindex":"55ae4466-24db-11e5-a106-6f2defb11ac0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:268","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity()"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"55ae4467-24db-11e5-a106-bbcbf6273a7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"55ae6b78-24db-11e5-a106-7dd99d693967","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"55ae6b79-24db-11e5-a106-fd00f4645be7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[],"tindex":"55ae6b7a-24db-11e5-a106-c139335e34df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:634","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"status":-2},{"failures":[],"tindex":"55ae928b-24db-11e5-a106-d3b6f81c996e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"sm":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"status":-2},{"failures":[59,60,61,62,63],"tindex":"55ae928c-24db-11e5-a106-4d62bcb28176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:227","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"55aeb99d-24db-11e5-a106-557663fdc358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1169","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])))"},"status":-2},{"failures":[],"tindex":"55aeb99e-24db-11e5-a106-ff06ef92988b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-2},{"failures":[],"tindex":"55aeb99f-24db-11e5-a106-8dcacd13215e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}