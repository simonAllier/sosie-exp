{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":210,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":112,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":91,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":78,"org.apache.commons.collections4.map.LinkedMapTest.testReset":0,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":89,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":93,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":222,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":307,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":281,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":282,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":309,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":128,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":331,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":352,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":156,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":346,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":269,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":351,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":220,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":261,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":262,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":367,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":263,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":234,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":357,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":212,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":297,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":40,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":32,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":149,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":226,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":22,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":288,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":317,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":129,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":313,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":161,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":135,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":159,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":87,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":154,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":273,"org.apache.commons.collections4.CollectionUtilsTest.select":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":248,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":31,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":270,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":46,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":61,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":180,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":237,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":238,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":236,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":375,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":372,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":117,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":370,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":62,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":278,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":365,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":291,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":230,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":76,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":298,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":310,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":175,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":95,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":142,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":284,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":360,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":285,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":103,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":36,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":211,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":345,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":215,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":12,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":179,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":15,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":259,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":324,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":228,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":287,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":361,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":302,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":152,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":2,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":322,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":141,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":1,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":33,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":81,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":178,"org.apache.commons.collections4.map.LinkedMapTest.testClone":6,"org.apache.commons.collections4.ListUtilsTest.testSelect":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":323,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":353,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":54,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":306,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":344,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":349,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":294,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":204,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":243,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":293,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":292,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":4,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":5,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":194,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":225,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":340,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":339,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":79,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":299,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":231,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":191,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":373,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":246,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":72,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":279,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":169,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":316,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":29,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":85,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":185,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":363,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":195,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":383,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":229,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":359,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":378,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":188,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":11,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":300,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":232,"org.apache.commons.collections4.map.LRUMapTest.testClone":75,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":34,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":69,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":8,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":350,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":318,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":99,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":335,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":80,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":296,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":327,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":255,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":326,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":369,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":368,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":174,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":333,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":223,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":268,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":245,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":126,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":328,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":14,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":219,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":358,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":97,"org.apache.commons.collections4.map.LRUMapTest.testLRU":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":207,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":190,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":338,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":218,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":283,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":119,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":20,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":155,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":274,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":304,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":275,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":209,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":332,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":67,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":176,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":59,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":303,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":110,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":109,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":214,"org.apache.commons.collections4.map.LRUMapTest.testReset":64,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":125,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":170,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":276,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":202,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":74,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":277,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":173,"org.apache.commons.collections4.CollectionUtilsTest.filter":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":17,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":68,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":101,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":342,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":43,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":213,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":377,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":94,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":136},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"7728c298-234a-11e5-bc86-d7f18b01581b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"last":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"7728e9a9-234a-11e5-bc86-37d3b3c91292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[254,255,256,257,258,259,260,261,262,263,264,265,266,267],"tindex":"7728e9aa-234a-11e5-bc86-3369ad5f87ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"status":-1},{"failures":[],"tindex":"7728e9ab-234a-11e5-bc86-914d54d5d068","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:286","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.indexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"7728e9ac-234a-11e5-bc86-d5fe08b9ec1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1174","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"7728e9ad-234a-11e5-bc86-cd9b2d2bf5e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:291","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[268],"tindex":"772910be-234a-11e5-bc86-dd7f30c3afc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:260","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1"},"status":-1},{"failures":[],"tindex":"772910bf-234a-11e5-bc86-619ec60996a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1384","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[269],"tindex":"772910c0-234a-11e5-bc86-33a7c4893068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"status":-1},{"failures":[270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"772910c1-234a-11e5-bc86-3b82b722802c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"))"},"status":-1},{"failures":[284],"tindex":"772910c2-234a-11e5-bc86-d184cbd1400f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"variableMap":{"predicate":"predicate","falseClosure":"trueClosure","trueClosure":"trueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[],"tindex":"772910c3-234a-11e5-bc86-79ee6f5d0ff5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:410","type":"CtReturnImpl","sourcecode":"return java.util.Collection<V>"},"status":-2},{"failures":[],"tindex":"772937d4-234a-11e5-bc86-d51948985d01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl","sourcecode":"return java.util.Collection<? extends E>.size()"},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:608","type":"CtReturnImpl","sourcecode":"return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0"},"status":-2},{"failures":[285],"tindex":"772937d5-234a-11e5-bc86-fffeb9a697f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:267","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"772937d6-234a-11e5-bc86-e75af225abe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().peek()"},"status":-2},{"failures":[],"tindex":"772937d7-234a-11e5-bc86-cb566110144a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, float, false)"},"variableMap":{"loadFactor":"org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR","this":"this","maxSize":"org.apache.commons.collections4.map.LRUMap.DEFAULT_MAX_SIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(org.apache.commons.collections4.map.LRUMap.int, org.apache.commons.collections4.map.AbstractHashedMap.float, false)"},"status":0},{"failures":[],"tindex":"772937d8-234a-11e5-bc86-b779518be689","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-2},{"failures":[286,287,288,289,290,291,292,293,294],"tindex":"772937d9-234a-11e5-bc86-87e3ee04cb62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:519","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"77295eea-234a-11e5-bc86-0fc8f4bb6e82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[295,296,297,298],"tindex":"772985fb-234a-11e5-bc86-954695c84521","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[299],"tindex":"772985fc-234a-11e5-bc86-fdadb07b3577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null nonNullComparator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[300],"tindex":"772985fd-234a-11e5-bc86-933071bb402a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:115","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().offer(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-1},{"failures":[],"tindex":"772985fe-234a-11e5-bc86-bde0fbba994a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:343","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"772985ff-234a-11e5-bc86-0d74036c487d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1359","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(\"ROOT\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1386","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[],"tindex":"77298600-234a-11e5-bc86-c3078db064c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[301,302],"tindex":"7729ad11-234a-11e5-bc86-516690df9085","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[303,304,305,306,307,308],"tindex":"7729ad12-234a-11e5-bc86-5fb3aef3185c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"i","start":"start1","end":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"status":-1},{"failures":[],"tindex":"7729ad13-234a-11e5-bc86-e5dbefbecc3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator())"},"status":-2},{"failures":[],"tindex":"7729ad14-234a-11e5-bc86-2dba46302fdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7729ad15-234a-11e5-bc86-0d6988ac764e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))"},"variableMap":{"closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.WhileClosure.<E>whileClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>, false)"},"status":-2},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,254,325,326,255,256,327,258,328,329,330,331],"tindex":"7729ad16-234a-11e5-bc86-bbd968ebecb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[303,304,305,306,307,308],"tindex":"7729ad17-234a-11e5-bc86-2174cc7ae92b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"n","index":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:179","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-1},{"failures":[],"tindex":"7729ad18-234a-11e5-bc86-2bb9c75d0625","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:806","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"removed":"modified","org.apache.commons.collections4.map.AbstractHashedMap.GETKEY_INVALID":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:717","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[303,304,305,306,307,308],"tindex":"7729d429-234a-11e5-bc86-89a2959ab630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"delta","d":"start2","vDown":"vUp","delta":"delta","end2":"end2","this":"this","i":"offset","end1":"end2","k":"start1","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"7729d42a-234a-11e5-bc86-575557f8ca66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"7729d42b-234a-11e5-bc86-9fb3d5ec1be5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:296","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[332],"tindex":"7729d42c-234a-11e5-bc86-4bde368e0bd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:62","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BoundedCollection<E>"},"status":-1},{"failures":[],"tindex":"7729d42d-234a-11e5-bc86-dbed75672007","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"end","proposedCapacity":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:142","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int = 0;\n} else {\n    int = int;\n}"},"status":0},{"failures":[],"tindex":"7729d42e-234a-11e5-bc86-05734b152678","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-2},{"failures":[333,334,335,336,337,338],"tindex":"7729d42f-234a-11e5-bc86-cfd46f8fff5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:287","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"7729d430-234a-11e5-bc86-db40716036ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"7729fb41-234a-11e5-bc86-c34b7973f8ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:523","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object)"},"variableMap":{"key":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1159","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-2},{"failures":[],"tindex":"7729fb42-234a-11e5-bc86-89bb8acdee5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"variableMap":{"iterator":"it","this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[339,261,265,266,267],"tindex":"7729fb43-234a-11e5-bc86-8d7398999bd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"variableMap":{"root":"h","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"7729fb44-234a-11e5-bc86-9970f57c21f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[383],"tindex":"7729fb45-234a-11e5-bc86-c70341abb1b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1146","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"7729fb46-234a-11e5-bc86-5fe2662171d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:301","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"7729fb47-234a-11e5-bc86-392de48f21a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"entry","e":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"7729fb48-234a-11e5-bc86-f5e3a0418f02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1233","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next())"},"status":-2},{"failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"7729fb49-234a-11e5-bc86-4787e1e4e316","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:903","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}