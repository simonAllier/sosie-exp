{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":61,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":62,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":18,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":35,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":54,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":69,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":45,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":80,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":55,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":57,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":100,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":9,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":38},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"1e788967-24d8-11e5-9020-1b31c9707901","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:247","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,0,35,1,36,2,37,38,39,3,4,5,6,7,8,9,10,11,40,41,12,13,14,42,43,15,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,16,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"1e78b078-24d8-11e5-9020-4f2038917c90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:90","type":"CtInvocationImpl","sourcecode":"super.init()"},"status":-1},{"failures":[],"tindex":"1e78d789-24d8-11e5-9020-79b9316bcacb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:561","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"1e78d78a-24d8-11e5-9020-e7bbcd20dc94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Bag<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>));\n    return org.apache.commons.collections4.Bag<E>;\n} "},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2},{"failures":[],"tindex":"1e78d78b-24d8-11e5-9020-7737a85c7a5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:321","type":"CtReturnImpl","sourcecode":"return "},"status":0},{"failures":[],"tindex":"1e78d78c-24d8-11e5-9020-ef3452f3f1af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","bitIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:626","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int"},"status":-2},{"failures":[],"tindex":"1e78fe9d-24d8-11e5-9020-8f032678b343","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()"},"status":-2},{"failures":[92,93,94,95],"tindex":"1e78fe9e-24d8-11e5-9020-6f8aca2d0767","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:731","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet()"},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)"},"status":-1},{"failures":[96],"tindex":"1e78fe9f-24d8-11e5-9020-6bcabcb333a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":-1},{"failures":[],"tindex":"1e78fea0-24d8-11e5-9020-77451c53384e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"1e78fea1-24d8-11e5-9020-bbdea7656bfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[97],"tindex":"1e7925b2-24d8-11e5-9020-73717deca918","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:135","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":-1},{"failures":[],"tindex":"1e7925b3-24d8-11e5-9020-ffdef060cb85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ComparatorPredicate<T>.org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T, java.util.Comparator<T>, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)"},"status":-2},{"failures":[],"tindex":"1e7925b4-24d8-11e5-9020-0d5f26810d95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"status":-2},{"failures":[],"tindex":"1e7925b5-24d8-11e5-9020-a7bbd1e20138","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:972","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int)"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106,107,108],"tindex":"1e794cc6-24d8-11e5-9020-a73beb4b3416","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"1e794cc7-24d8-11e5-9020-7b441848318e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:203","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"1e794cc8-24d8-11e5-9020-15c0eea4bdc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"1e7973d9-24d8-11e5-9020-d9bb29fbbe5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[109],"tindex":"1e7973da-24d8-11e5-9020-c1b78a712904","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"1e78d78b-24d8-11e5-9020-7737a85c7a5c","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"]},"type":"variable"}]},{"transformation":"1e7973d9-24d8-11e5-9020-d9bb29fbbe5f","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRight(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1"],"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1"]},"type":"branch"}]}]}