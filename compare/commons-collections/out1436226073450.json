{"failureDictionary":{"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":37,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":31,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":67,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":66,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":60,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":9,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":29,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":71,"org.apache.commons.collections4.map.LRUMapTest.testLRU":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":32,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":44,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":40,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":22,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":56,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":27,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":57,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":24,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":11,"org.apache.commons.collections4.map.LRUMapTest.testClone":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":16,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":61,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":6,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":79,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":3,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":15,"org.apache.commons.collections4.CollectionUtilsTest.select":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":43,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":65,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":45},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"7cc6cd73-2438-11e5-bca1-fd7fbd650164","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)"},"status":-1},{"failures":[9],"tindex":"7cc71b94-2438-11e5-bca1-0bb3a3be4091","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"7cc71b95-2438-11e5-bca1-4d6e27a5e0a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1569","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"next":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:458","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"7cc742a6-2438-11e5-bca1-8574462d9098","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[10,11],"tindex":"7cc742a7-2438-11e5-bca1-93f626fe1a05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:326","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"7cc742a8-2438-11e5-bca1-adc877447a85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:378","type":"CtAssignmentImpl","sourcecode":"int = (31 * int) + (E == null ? 0 : E.hashCode())"},"status":-1},{"failures":[],"tindex":"7cc769b9-2438-11e5-bca1-af47889aa43d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"variableMap":{"entry":"entry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:254","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":0},{"failures":[53,54,55,56,57,58,59,60,61,62],"tindex":"7cc769ba-2438-11e5-bca1-9f706dd937da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, float, false)"},"status":-1},{"failures":[],"tindex":"7cc769bb-2438-11e5-bca1-e128e0050d68","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:612","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"status":-2},{"failures":[],"tindex":"7cc769bc-2438-11e5-bca1-d1318482e1a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-2},{"failures":[],"tindex":"7cc7b7dd-2438-11e5-bca1-9b315b6c67df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:78","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.isEmpty()"},"status":-2},{"failures":[63],"tindex":"7cc7b7de-2438-11e5-bca1-5fd0182bf395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"variableMap":{"predicate":"predicate","answer":"answer","this":"this","inputCollection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:902","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"status":-1},{"failures":[],"tindex":"7cc7b7df-2438-11e5-bca1-87d25f12cdac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":0},{"failures":[],"tindex":"7cc7def0-2438-11e5-bca1-b91bfe32db4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[64,65,66,67,68,69],"tindex":"7cc7def1-2438-11e5-bca1-3f5880250b21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"lastReturnedIndex":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (int + int) - int"},"status":-1},{"failures":[],"tindex":"7cc7def2-2438-11e5-bca1-8f8807c7f810","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78,79],"tindex":"7cc7def3-2438-11e5-bca1-858151ed24b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"7cc80604-2438-11e5-bca1-1d687164a7cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:426","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"p","root":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:545","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"7cc80605-2438-11e5-bca1-a3ded5f0346a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{')"},"status":0},{"failures":[],"tindex":"7cc80606-2438-11e5-bca1-c7a67cc753dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, org.apache.commons.collections4.map.AbstractHashedMap.float)"},"variableMap":{"this":"this","maxSize":"maxSize","org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR":"loadFactor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, float, false)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"7cc769b9-2438-11e5-bca1-af47889aa43d","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.ListOrderedMap.void putAll(int,java.util.Map)":["org.apache.commons.collections4.map.ListOrderedMap.void putAll(int,java.util.Map) -> org.apache.commons.collections4.map.ListOrderedMap.V put(K,V)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":["org.apache.commons.collections4.map.ListOrderedMap_V_put(K,V).t1"]},"type":"branch"}]},{"transformation":"7cc7def0-2438-11e5-bca1-b91bfe32db4d","diffs":[{"nodes":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":[],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":[],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map)":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"}]},{"transformation":"7cc7b7df-2438-11e5-bca1-87d25f12cdac","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.MultiKeyMap.void putAll(java.util.Map)":["org.apache.commons.collections4.map.MultiKeyMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.MultiKeyMap.void checkKey(org.apache.commons.collections4.keyvalue.MultiKey)","org.apache.commons.collections4.map.MultiKeyMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.MultiKeyMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.java.util.Set keySet()","org.apache.commons.collections4.map.MultiKeyMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.MultiKeyMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator.K next()"]},"graph":"branch"}]}]}