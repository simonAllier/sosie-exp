{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":57,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":35,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":53,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":3,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":6,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":7,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":40,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":52,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":58,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":41,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":46,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":0,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":50,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":21,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":32,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":13,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":8,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":10,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":23,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":45,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":19},"transformations":[{"failures":[],"tindex":"a4d3041b-46dc-11e5-849f-2dab0e399e11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:90","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"a4d32b2c-46dc-11e5-849f-374baab6c8c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:324","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet<K>"},"variableMap":{"keys":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"a4d32b2d-46dc-11e5-849f-a755baa3c206","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-2},{"failures":[],"tindex":"a4d3523e-46dc-11e5-849f-85191d05632c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Bag<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>));\n    return org.apache.commons.collections4.Bag<E>;\n} "},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"a4d3523f-46dc-11e5-849f-db05198f501e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"a4d35240-46dc-11e5-849f-ef10b5b171d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()"},"variableMap":{"normalMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:145","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V>[][((java.util.Map<K, V>[].int) - 1)] = java.util.Map<K, V>"},"status":-2},{"failures":[8],"tindex":"a4d35241-46dc-11e5-849f-53ea9edba115","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[9],"tindex":"a4d37952-46dc-11e5-849f-a94437fc260b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":-1},{"failures":[10,11],"tindex":"a4d37953-46dc-11e5-849f-197618a8f260","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:209","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:139","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20],"tindex":"a4d37954-46dc-11e5-849f-cd2918e9b1be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"yFormerParent","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a4d37955-46dc-11e5-849f-ed1ee9af4bca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:308","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(java.util.Map.Entry<K, V>)"},"status":-2},{"failures":[],"tindex":"a4d37956-46dc-11e5-849f-2f5814cf5bfd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:735","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"status":-2},{"failures":[],"tindex":"a4d3a067-46dc-11e5-849f-515c6e5790ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1398","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[8],"tindex":"a4d3a068-46dc-11e5-849f-efb05966d4cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:536","type":"CtAssignmentImpl","sourcecode":"K = K"},"status":-1},{"failures":[],"tindex":"a4d3a069-46dc-11e5-849f-d3c04542dc60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":0},{"failures":[21],"tindex":"a4d3a06a-46dc-11e5-849f-396f401cdebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"a4d3a06b-46dc-11e5-849f-a9865b693fdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:139","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-1},{"failures":[],"tindex":"a4d3a06c-46dc-11e5-849f-0374f3df56ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"a4d3c77d-46dc-11e5-849f-4d1b1eedf690","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":0},{"failures":[56,57,58,59],"tindex":"a4d3c77e-46dc-11e5-849f-0d15630cf5c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:234","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}