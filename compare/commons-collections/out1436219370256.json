{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":288,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":72,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":87,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":186,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":260,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":249,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":304,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":4,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":5,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":305,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":117,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":44,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":296,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":145,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":43,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":151,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":83,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":300,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":13,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":32,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":163,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testBagEqualsSelf":211,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":28,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":7,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":80,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":45,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":99,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":68,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":8,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":261,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":218,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":139,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":286,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":149,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":309,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":205,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectEqualsSelf":208,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":195,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":268,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":242,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":229,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":307,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":246,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":152,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":155,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":234,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":294,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":187,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":262,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":226,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":166,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":219,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":306,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":272,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":136,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":47,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":21,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":150,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":100,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":158,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":134,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":170,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":212,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":0,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":167,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":36,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":295,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":120,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":241,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":221,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":275,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":147,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":265,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectEqualsSelf":220,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":303,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":6,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":203,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":169,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":148,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":193,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":23,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":258,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":104,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":278,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":86,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":284,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":137,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":282,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":9,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":199,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":174,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":236,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":210,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":63,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":190,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":92,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":69,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":252,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":189,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":89,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":277,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":41,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":164,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":283,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":291,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":182,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":181,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":135,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":15,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":264,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectEqualsSelf":194,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":66,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":232,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":124,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":130,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":266,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":114,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":231,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":115,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":216,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":298,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":101,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":48,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":81,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectEqualsSelf":191,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":297,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRetainAll":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":233,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":17,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":57,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":177,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":204,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":121,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":209,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":200,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":224,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":140,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":29,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":156,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":215,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":285,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":96,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":127,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":280,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":207,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":107,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":146,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":301,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":178,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":103,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":49,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":116,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":26,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":95,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":88,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":128,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":131,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":197,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":213,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":173,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":39,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectEqualsSelf":183,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate":1,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":106,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":292,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":287,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":118,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":176,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":274,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":71,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":138,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":82,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":251,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":162,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":14,"org.apache.commons.collections4.map.LRUMapTest.testLRU":308,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":196,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":93,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":10,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":62,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":20,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":153,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":293,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":42,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":273,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":74,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":125,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":157,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":192,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":243,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":230,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":184,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":58,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":35,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":119,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":132,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveAll":171,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":78,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":180,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":179,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":19,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectEqualsSelf":223,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":46,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":76,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":98,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":185,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":267,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":227,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":94,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectEqualsSelf":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":228,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":144,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":165,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":255,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":253,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":67,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":108,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":37,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":56,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":250},"transformations":[{"failures":[0],"tindex":"e15fecb2-2428-11e5-851f-23336324cfb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[1],"tindex":"e1603ad3-2428-11e5-851f-119086a15210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:64","type":"CtReturnImpl","sourcecode":"return T != null"},"status":-1},{"failures":[],"tindex":"e1603ad4-2428-11e5-851f-f309e8f19d10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} "},"status":-2},{"failures":[],"tindex":"e1603ad5-2428-11e5-851f-a382a9262d3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated()"},"status":0},{"failures":[],"tindex":"e1603ad6-2428-11e5-851f-3d45c6b803fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"e16061e7-2428-11e5-851f-e310dfd56d27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"lastReturnedIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1251","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"e1612538-2428-11e5-851f-c3e41f1c697a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"e1614c49-2428-11e5-851f-5d24dc84124f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"e1614c4a-2428-11e5-851f-519c8aac9b33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"e1614c4b-2428-11e5-851f-993197b6145c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)"},"variableMap":{"this":"this","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))"},"status":-1},{"failures":[],"tindex":"e161735c-2428-11e5-851f-61be23a13ee0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"e161735d-2428-11e5-851f-15811fb8f5f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:182","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"e161735e-2428-11e5-851f-b5de4bb31929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"e161735f-2428-11e5-851f-59164035064c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:97","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.size()"},"status":-2},{"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"tindex":"e1619a70-2428-11e5-851f-17d07f565fb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e1619a71-2428-11e5-851f-af060dd26851","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"right","prior":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e1619a72-2428-11e5-851f-f10b34d8cf12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"newNode","y":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e161c183-2428-11e5-851f-fb4fc426c34a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e161c184-2428-11e5-851f-e576e42e7d52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:196","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.java.util.Collection"},"status":-2},{"failures":[308,309,310],"tindex":"e161c185-2428-11e5-851f-557e3f692bf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e161735c-2428-11e5-851f-61be23a13ee0","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}