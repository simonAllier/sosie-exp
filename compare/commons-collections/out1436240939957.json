{"failureDictionary":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor":5,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":16,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEmptyListSort":12,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testRandomListSort":10,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":40,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":30,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorIsSerializable":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":31,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":15,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":32,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":38,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":27,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsSelfHashCode":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":28,"org.apache.commons.collections4.CollectionUtilsTest.transform1":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":24,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testReverseListSort":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":35,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":1,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorCompatibility":13,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":18,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":6,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSimpleSerialization":17,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":26},"transformations":[{"failures":[],"tindex":"19e4fff1-245b-11e5-9eee-917d54aeb716","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":0},{"failures":[],"tindex":"19e52702-245b-11e5-9eee-73c225daac8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:119","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[0],"tindex":"19e52703-245b-11e5-9eee-958e638b5c62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-1},{"failures":[1],"tindex":"19e52704-245b-11e5-9eee-6df8ab85ca64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"19e52705-245b-11e5-9eee-b59ffd3b1172","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"19e54e16-245b-11e5-9eee-57cb2ffac06a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[2],"tindex":"19e54e17-245b-11e5-9eee-0f372250b9f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K), V)"},"status":-1},{"failures":[],"tindex":"19e54e18-245b-11e5-9eee-4530ff44ecd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:236","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"19e54e19-245b-11e5-9eee-f58899a81f3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)"},"status":-2},{"failures":[],"tindex":"19e54e1a-245b-11e5-9eee-9b1b25129fc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":-2},{"failures":[],"tindex":"19e5752b-245b-11e5-9eee-c7fa89aa5594","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"19e5752c-245b-11e5-9eee-8d1a77d3bd44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:310","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[3],"tindex":"19e5752d-245b-11e5-9eee-47a61fe373c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:382","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"19e5752e-245b-11e5-9eee-27e0cdced477","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":-2},{"failures":[],"tindex":"19e5752f-245b-11e5-9eee-bdf177bbcd7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])"},"variableMap":{"iArgs":"iArgs","iConstructor":"iConstructor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"19e57530-245b-11e5-9eee-e31fcf4a43b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"19e57531-245b-11e5-9eee-3191befbc3fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[42],"tindex":"19e59c42-245b-11e5-9eee-57ab68f32cc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"19e59c43-245b-11e5-9eee-572d3c79b10d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:296","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:135","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = boolean[][int]"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"19e4fff1-245b-11e5-9eee-917d54aeb716","diffs":[{"branches":{"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.iterators.EmptyOrderedMapIterator_org.apache.commons.collections4.iterators.EmptyOrderedMapIterator().b","org.apache.commons.collections4.iterators.AbstractEmptyIterator_org.apache.commons.collections4.iterators.AbstractEmptyIterator().b","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator_org.apache.commons.collections4.iterators.AbstractEmptyMapIterator().b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.iterators.AbstractEmptyIterator_org.apache.commons.collections4.iterators.AbstractEmptyIterator().b","org.apache.commons.collections4.iterators.EmptyMapIterator_org.apache.commons.collections4.iterators.EmptyMapIterator().b","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator_org.apache.commons.collections4.iterators.AbstractEmptyMapIterator().b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.org.apache.commons.collections4.iterators.EmptyOrderedMapIterator()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()"]},"edges":{"org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.OrderedMapIterator mapIterator()":["org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.OrderedMapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.org.apache.commons.collections4.iterators.EmptyOrderedMapIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.OrderedMapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.OrderedMapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":[],"org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":[],"org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString()":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"graph":"branch"}]}]}