{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":21,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":87,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":34,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":24,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":45,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":7,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray":61,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":66,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":95,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned":60,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":28,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":86,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":16,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":92,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":93,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":90,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor":57,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":91,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":26,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":82,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":23,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":76,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":100,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":77,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":83,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":53},"transformations":[{"failures":[],"tindex":"e6317d0e-4175-11e5-a902-0b96cfe35d6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"e631cb2f-4175-11e5-a902-b97700ded982","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"lastUsedIterator":"currentIterator","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:224","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()"},"status":-2},{"failures":[],"tindex":"e631cb30-4175-11e5-a902-37e5e007b75a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[0,1,2],"tindex":"e631cb31-4175-11e5-a902-e16d0e8786fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:439","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"e631cb32-4175-11e5-a902-4f9ec1a3ba4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"e631f243-4175-11e5-a902-65e5ef673d3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:105","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"e631f244-4175-11e5-a902-3b49bceb0b3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())).append('}').toString()"},"status":0},{"failures":[3],"tindex":"e631f245-4175-11e5-a902-979dd441a5b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"e6321956-4175-11e5-a902-7de67780dc91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:227","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Attempted to add null object to queue\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\")"},"status":-2},{"failures":[],"tindex":"e6321957-4175-11e5-a902-8950a825f969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:571","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue()"},"status":-2},{"failures":[],"tindex":"e6321958-4175-11e5-a902-5bfc3a0ad553","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:727","type":"CtInvocationImpl","sourcecode":"C.execute(T)"},"status":-2},{"failures":[],"tindex":"e6321959-4175-11e5-a902-11704ff4373d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"modified","changed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:803","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"e632195a-4175-11e5-a902-b5a8cf33b57f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionFactory invoked\")"},"status":-2},{"failures":[],"tindex":"e632406b-4175-11e5-a902-1d12a2919e68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:135","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"e632406c-4175-11e5-a902-13d75dd2c570","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[66],"tindex":"e632406d-4175-11e5-a902-4518574db06c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1343","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"e632677e-4175-11e5-a902-835d0ce5c829","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:169","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"status":0},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"e632677f-4175-11e5-a902-21fbb4ccae89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:292","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V)"},"status":-1},{"failures":[],"tindex":"e6326780-4175-11e5-a902-87b59e603b30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"e6328e91-4175-11e5-a902-63d7e5c62db2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"child","parent":"child","predecessor":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:519","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}