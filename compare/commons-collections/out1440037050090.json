{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":50,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":63,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":120,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":81,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":103,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":118,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":44,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":80,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":16,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":94,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":129,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":99,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":115,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":66,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":53,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":28,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":51,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":96,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":71,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":27,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":112},"transformations":[{"failures":[0,1,2,3,4],"tindex":"9bdb3ad7-46e1-11e5-91c7-d31716d6a0b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":-1},{"failures":[],"tindex":"9bdb61e8-46e1-11e5-91c7-3bb0d249a0ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"right","start":"path","this":"this","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"9bdb61e9-46e1-11e5-91c7-cfc3e3a8b176","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:96","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.LinkedHashMap<V, K>()"},"variableMap":{"reverseMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:101","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.HashMap<V, K>()"},"status":0},{"failures":[],"tindex":"9bdb61ea-46e1-11e5-91c7-6761c5dd5a2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"status":-2},{"failures":[],"tindex":"9bdb61eb-46e1-11e5-91c7-d9a6fbe5d8bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:600","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object = null"},"status":0},{"failures":[],"tindex":"9bdb61ec-46e1-11e5-91c7-9b9376637dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13],"tindex":"9bdb88fd-46e1-11e5-91c7-99c0c4c4fdc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:298","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[14],"tindex":"9bdb88fe-46e1-11e5-91c7-757e6a605cd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"9bdb88ff-46e1-11e5-91c7-d1a206d59f78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()"},"variableMap":{"this":"hm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:175","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>.lastKey()"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"9bdbb010-46e1-11e5-91c7-81fe123ca3ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:417","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView()"},"status":-1},{"failures":[76,77],"tindex":"9bdbb011-46e1-11e5-91c7-7972d29fa2af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"9bdbb012-46e1-11e5-91c7-378de364514a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"9bdbb013-46e1-11e5-91c7-b3a13373fd15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[118,119,120,121,122,123,124,125,126,127],"tindex":"9bdbd724-46e1-11e5-91c7-5563359d2c5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"9bdbd725-46e1-11e5-91c7-7700ca830813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:273","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:139","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.lang.Boolean.booleanValue()"},"status":-2},{"failures":[],"tindex":"9bdbd726-46e1-11e5-91c7-5fc61731ccf3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:333","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[128,129,130],"tindex":"9bdbd727-46e1-11e5-91c7-49c51143d1f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:470","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"9bdbd728-46e1-11e5-91c7-3de266a274c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:281","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[131,132,133],"tindex":"9bdbd729-46e1-11e5-91c7-3323cd5a5bd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:264","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"9bdbfe3a-46e1-11e5-91c7-ff02ea9f7a1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}