{"failureDictionary":{"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":66,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":33,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":46,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":57,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":42,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":29,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":40,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":39,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":62,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":36,"org.apache.commons.collections4.map.LRUMapTest.testLRU":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":67,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":63,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":28,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":21,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":25,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":20,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":68,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":7,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":24,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":8,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":6,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":35,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":45,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":55,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":16,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":26,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":18,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":17,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":52,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":56,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":31,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":30,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":34,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":75,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":59,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":47,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":14,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":13,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":0,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":12,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":37,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":32,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":54,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":3,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":69,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":49,"org.apache.commons.collections4.CollectionUtilsTest.isFull":76,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":44,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":4,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":60,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":61,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":71,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":51,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":38,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":65,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":5},"transformations":[{"failures":[],"tindex":"13d83dcc-4200-11e5-89f9-2f2f575bbd0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:291","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[],"tindex":"13d864dd-4200-11e5-89f9-dd00bb1b013e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"13d864de-4200-11e5-89f9-6767f31d8a7e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:145","type":"CtReturnImpl","sourcecode":"return (this.int) - (this.int)"},"status":-2},{"failures":[0],"tindex":"13d864df-4200-11e5-89f9-53550b10dcb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:240","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"13d864e0-4200-11e5-89f9-3fe061cb3aa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"child","e":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:517","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"13d88bf1-4200-11e5-89f9-db8cc6554bb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:735","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"13d88bf2-4200-11e5-89f9-7d33a68288bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)"},"status":-1},{"failures":[63],"tindex":"13d88bf3-4200-11e5-89f9-4bd36b41a50c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    int = ((java.util.Map<?, ?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"total":"lastItemIndex","length":"lastItemIndex","object":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:192","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Array.set(this.java.lang.Object, this.int, java.lang.Object)"},"status":-1},{"failures":[64],"tindex":"13d8b304-4200-11e5-89f9-7b071c73d29b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[65,66,67,68],"tindex":"13d8b305-4200-11e5-89f9-6f7cc6ff788c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"total":"h","hashCode":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-1},{"failures":[],"tindex":"13d8b306-4200-11e5-89f9-5b90a1506aec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key4","key5":"key3","previous":"entry","hashCode":"hashCode","key3":"key4","key4":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"13d8da17-4200-11e5-89f9-27feecbde89d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"13d8da18-4200-11e5-89f9-a3993335d488","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:539","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"13d8da19-4200-11e5-89f9-4d187f6b5ff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"status":-2},{"failures":[69,70,71,72],"tindex":"13d8da1a-4200-11e5-89f9-65a6090db296","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"variableMap":{"size":"size","start":"size","maxElements":"maxSize","end":"maxSize","full":"scanUntilRemovable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"13d9012b-4200-11e5-89f9-85db1b7f44e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[73,74,75],"tindex":"13d9012c-4200-11e5-89f9-9fe3233dffbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:89","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[76],"tindex":"13d9012d-4200-11e5-89f9-614231095979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1468","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":-1},{"failures":[],"tindex":"13d9283e-4200-11e5-89f9-eb0abd9c8525","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"13d9283f-4200-11e5-89f9-619b3aa061c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:256","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.list()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}