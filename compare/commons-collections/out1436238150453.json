{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":10,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":60,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":5,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":13,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":88,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":68,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":93,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":27,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":87,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":71,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":53,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":50,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":29,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":14,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":11,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":73,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":89,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":22,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":58,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":83,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":49,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":44,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":85,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":75,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":54,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":46,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":7,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":39,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":15,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":67,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":74,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":8,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":78,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":36,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":52,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":82,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":65,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":86,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":42,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":47},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"9b3b84e3-2454-11e5-9c63-fd13864eee54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1037","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":-1},{"failures":[8],"tindex":"9b3bd304-2454-11e5-9c63-ebea98e3fa95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:226","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex();\n} "},"status":-1},{"failures":[9,10,11,12],"tindex":"9b3bd305-2454-11e5-9c63-01fa39191ec7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:519","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"9b3bfa16-2454-11e5-9c63-7df2380d51bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NotPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"9b3bfa17-2454-11e5-9c63-0b136d03ef31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[86],"tindex":"9b3c2128-2454-11e5-9c63-0d8d8e9f4c34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:101","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.HashMap<V, K>()"},"status":-1},{"failures":[87],"tindex":"9b3c2129-2454-11e5-9c63-03e53599bf5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"status":-1},{"failures":[],"tindex":"9b3c212a-2454-11e5-9c63-c5b8f472758f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:287","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"9b3c483b-2454-11e5-9c63-b7574a8e396f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:565","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"9b3c483c-2454-11e5-9c63-73dfe1afbd02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:192","type":"CtReturnImpl","sourcecode":"return V"},"status":-2},{"failures":[],"tindex":"9b3c483d-2454-11e5-9c63-ad3b2a436c24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:305","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:181","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.set.CompositeSet<E>.size()"},"status":-2},{"failures":[],"tindex":"9b3c483e-2454-11e5-9c63-0d91c285b8d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.lang.Object)"},"status":-2},{"failures":[88,89],"tindex":"9b3c6f4f-2454-11e5-9c63-270668d78270","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"iDoLoop","beforeFirst":"iDoLoop"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} "},"status":-1},{"failures":[],"tindex":"9b3c6f50-2454-11e5-9c63-9ff135e70074","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"9b3c6f51-2454-11e5-9c63-a151d7c575da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:410","type":"CtReturnImpl","sourcecode":"return java.util.Collection<V>"},"status":-2},{"failures":[90,21,22,91,92,79],"tindex":"9b3c9662-2454-11e5-9c63-bb6071740391","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"9b3c9663-2454-11e5-9c63-5dcbe7ce152f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"status":-2},{"failures":[93],"tindex":"9b3c9664-2454-11e5-9c63-47c244fe1f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[93],"tindex":"9b3cbd75-2454-11e5-9c63-a9fb95f72f83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:169","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"9b3cbd76-2454-11e5-9c63-797e0843438e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"next","hashCode":"index","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}