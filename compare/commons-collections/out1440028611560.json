{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":72,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":71,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":78,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":2,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":11,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":115,"org.apache.commons.collections4.CollectionUtilsTest.reverse":160,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":27,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":95,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":165,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":54,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":82,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":62,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":127,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":23,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":147,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":124,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":113,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":83,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":152,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":16,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":153,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":46,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":150,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":22,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":81,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":53,"org.apache.commons.collections4.map.HashedMapTest.testClone":93,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":159,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":44,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":125,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":10,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":103,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":49,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":137,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":76,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":145,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":107,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":109,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":143,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":111,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":141,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":60,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":18,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":64,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":167,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":132,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":116,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":131,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":163,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":168,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":118,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":50},"transformations":[{"failures":[],"tindex":"f6199622-46cd-11e5-87e9-55bde2254444","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:453","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"f6199623-46cd-11e5-87e9-ff1f6f2fac64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:357","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int)"},"status":-1},{"failures":[],"tindex":"f619bd34-46cd-11e5-87e9-b9770b24b2c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.w3c.dom.NodeList) {\n    return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.NodeList)(java.lang.Object)));\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:405","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.(containsKey(java.lang.Object))) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"f619bd35-46cd-11e5-87e9-9b586023a67e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[12,13,14,15],"tindex":"f619bd36-46cd-11e5-87e9-a74844032ced","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[16],"tindex":"f619bd37-46cd-11e5-87e9-ffec501c9205","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:373","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n    continue;\n} "},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"f619bd38-46cd-11e5-87e9-594a57778687","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f619e449-46cd-11e5-87e9-254c8ac81479","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"f619e44a-46cd-11e5-87e9-a9ba2ff3c1dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:97","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.size()"},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,17,80,81,82,83,18,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,19,100,101,102,103,20,104,105,106,107,108,109,110,111,21,112,113,114,115,116,117,118,119,120,121,122,26,123,124,125,126,27,127,128,129,130,131,132,133,134,28,135,136,137,138,139,140,141,142,29,143,144,145,146,30,147,148,149,150,151,152,153,154,31,35,155,36,37,39,40,41,42,43,44,45,46,47,48,49],"tindex":"f619e44b-46cd-11e5-87e9-579a0d23d520","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1183","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"last":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:536","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K) , V)"},"status":-1},{"failures":[],"tindex":"f619e44c-46cd-11e5-87e9-012e79bbb33d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[156,157,158,159],"tindex":"f619e44d-46cd-11e5-87e9-01a8a449a185","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:138","type":"CtAssignmentImpl","sourcecode":"E[][int] = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[],"tindex":"f61a0b5e-46cd-11e5-87e9-b9af1f93ae2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:645","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"variableMap":{"next":"entry","entry":"next","newEntries":"data","index":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:584","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"f61a0b5f-46cd-11e5-87e9-a799089fd91f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:207","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"f61a0b60-46cd-11e5-87e9-931af4c5c3ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1650","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:814","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[160],"tindex":"f61a0b61-46cd-11e5-87e9-edcd974be8c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1445","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object"},"status":-1},{"failures":[],"tindex":"f61a0b62-46cd-11e5-87e9-136f2ffd5e00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"f61a3273-46cd-11e5-87e9-6f6bd75dd9f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rightChild","node":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170],"tindex":"f61a3274-46cd-11e5-87e9-138a9cafbdc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}