{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":69,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":65,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":4,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":76,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":47,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":29,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":73,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":49,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":34,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":60,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":64,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":68,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":9,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":80,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":24,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":67,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":19,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":25,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":30,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":31,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":11,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":27,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":63,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":15,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":59,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":35,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":3,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":14,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":79,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":78,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":0,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":81,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":74,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":56,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":72,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":57,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":18,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":1,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":58,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":62},"transformations":[{"failures":[0],"tindex":"1ce106ff-250d-11e5-9df3-017496990d81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"1ce12e10-250d-11e5-9df3-21614c16c91b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"1ce15521-250d-11e5-9df3-67eea246f0b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.NULL":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:347","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[74],"tindex":"1ce17c32-250d-11e5-9df3-df859f3474f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[],"tindex":"1ce17c33-250d-11e5-9df3-fd55ea97f750","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"1ce17c34-250d-11e5-9df3-c3a03277b1db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"status":-2},{"failures":[],"tindex":"1ce17c35-250d-11e5-9df3-79438055c596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:84","type":"CtReturnImpl","sourcecode":"return java.util.Map<? super I, ? extends O>"},"variableMap":{"iMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:68","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[75,53],"tindex":"1ce17c36-250d-11e5-9df3-e995ba3c30ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:385","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(this, this.java.util.Map<K, V>[], java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[],"tindex":"1ce17c37-250d-11e5-9df3-c112d4c077b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"1ce1a348-250d-11e5-9df3-a389ccf6c49e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"1ce1a349-250d-11e5-9df3-7755ee47b309","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int)"},"status":-2},{"failures":[76,77,78],"tindex":"1ce1a34a-250d-11e5-9df3-ebbc1ab837be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:114","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.PredicatedList<E>.decorated().add(int, E)"},"status":-1},{"failures":[79],"tindex":"1ce1a34b-250d-11e5-9df3-e9fa14a4fa88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))"},"status":-1},{"failures":[],"tindex":"1ce1ca5c-250d-11e5-9df3-3f069636f70f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"last":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:201","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[80],"tindex":"1ce1ca5d-250d-11e5-9df3-d99f78432ae4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"1ce1ca5e-250d-11e5-9df3-7900b783acfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"modCount","modifications":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":0},{"failures":[],"tindex":"1ce1ca5f-250d-11e5-9df3-f91ea9b13516","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1171","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"hashIndex":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:178","type":"CtLocalVariableImpl","sourcecode":"final int int = int - int"},"status":-2},{"failures":[81],"tindex":"1ce1f170-250d-11e5-9df3-69f09a16aa34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:218","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[],"tindex":"1ce1f171-250d-11e5-9df3-b73329f11474","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:140","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).firstKey()"},"status":-2},{"failures":[],"tindex":"1ce1f172-250d-11e5-9df3-0155a60b9a1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1291","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = null"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"1ce1f172-250d-11e5-9df3-0155a60b9a1f","diffs":[{"nodes":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"]},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"}]}]}