{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":44,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":2,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":34,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":23,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":69,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":24,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":22,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":25,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":40,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":72,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":20,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":14,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":48,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":45,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":51,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":56,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":66,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":1,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":57,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":11,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":52,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":71,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":18,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":33,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":38,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":5,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":28,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":29,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":6,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":8,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":39,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":17,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":31,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":27,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":58,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":62},"transformations":[{"failures":[],"tindex":"c704e439-25ab-11e5-bc2f-03b46b9b577a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"c7050b4a-25ab-11e5-bc2f-852a9cc9b6a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:139","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"c7050b4b-25ab-11e5-bc2f-1bbc9f1fa27d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"c705325c-25ab-11e5-bc2f-bf1a253926bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:198","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"c705325d-25ab-11e5-bc2f-df7d27b57260","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30],"tindex":"c705325e-25ab-11e5-bc2f-6b626d365979","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"c705325f-25ab-11e5-bc2f-cb230be2301e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:439","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"c7055970-25ab-11e5-bc2f-059fa885ff8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(this, java.util.List<java.util.Collection<E>>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"c7055971-25ab-11e5-bc2f-dbce4cdb6f8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map<K, V>, org.apache.commons.collections4.Predicate<? super K>, org.apache.commons.collections4.Predicate<? super V>)"},"status":-2},{"failures":[],"tindex":"c7055972-25ab-11e5-bc2f-b3c628e606a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"c7055973-25ab-11e5-bc2f-7f9732d4f8ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:204","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"c7055974-25ab-11e5-bc2f-e10240a51995","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1103","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap()"},"status":0},{"failures":[],"tindex":"c7055975-25ab-11e5-bc2f-0fcb752fae89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:272","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(K)"},"status":-2},{"failures":[],"tindex":"c7058086-25ab-11e5-bc2f-91953e914e81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"c7058087-25ab-11e5-bc2f-b32872ff59c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"c7058088-25ab-11e5-bc2f-9f7d0c7a5816","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1123","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.add(java.util.Iterator<? extends C>.next())"},"status":0},{"failures":[63,64,65,66,67],"tindex":"c7058089-25ab-11e5-bc2f-474317aa527c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ClosureUtils.org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E,java.lang.Object>invokerTransformer(java.lang.String))"},"status":-1},{"failures":[68,69,70,71,72],"tindex":"c705a79a-25ab-11e5-bc2f-8f425d85a5dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"status":-1},{"failures":[],"tindex":"c705a79b-25ab-11e5-bc2f-51f3e00aa952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE":"org.apache.commons.collections4.functors.ExceptionPredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.Predicate"},"status":0},{"failures":[],"tindex":"c705a79c-25ab-11e5-bc2f-eb9e03220e21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator"},"variableMap":{"org.apache.commons.collections4.comparators.BooleanComparator.FALSE_FIRST":"org.apache.commons.collections4.comparators.BooleanComparator.FALSE_FIRST"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:97","type":"CtReturnImpl","sourcecode":"return boolean ? org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator : org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"c7055972-25ab-11e5-bc2f-b3c628e606a0","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractHashedMap.int hashCode() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractHashedMap.int hashCode() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()_return (next) != (parent.header)"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()_return (next) != (parent.header)"]},"type":"variable"}]},{"transformation":"c7055974-25ab-11e5-bc2f-e10240a51995","diffs":[{"branches":{"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.Flat3Map_V_put(K,V).t1"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.Flat3Map.void readObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.Flat3Map.org.apache.commons.collections4.map.AbstractHashedMap createDelegateMap()"]},"type":"graph"}]}]}