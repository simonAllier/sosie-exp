{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":79,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":166,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":76,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":55,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":132,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":167,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":120,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":8,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":169,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":170,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":15,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":177,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":131,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":98,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":117,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":105,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":93,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":84,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":71,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":72,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":116,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":69,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":91,"org.apache.commons.collections4.map.HashedMapTest.testClone":31,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":144,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":1,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":165,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":119,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":30,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":83,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":63,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":182,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":140,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":78,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":65,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":160,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":85,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":57,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":94,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":176,"org.apache.commons.collections4.functors.NullPredicateTest.ensurePredicateCanBeTypedWithoutWarning":13,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":24,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":125,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":90,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":3,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":163,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":159,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":172,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":7,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":113,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":155},"transformations":[{"failures":[],"tindex":"d0c7b41e-24d9-11e5-8a40-171bbdcd840c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"total":"length","hashCode":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:164","type":"CtOperatorAssignmentImpl","sourcecode":"int %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int"},"status":-2},{"failures":[0],"tindex":"d0c7b41f-24d9-11e5-8a40-dfb160a568be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:235","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[1],"tindex":"d0c7db30-24d9-11e5-8a40-3d3f762e55de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:296","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue())"},"status":-1},{"failures":[],"tindex":"d0c7db31-24d9-11e5-8a40-e5c4d4ea8ee5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:523","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V)"},"status":-2},{"failures":[],"tindex":"d0c7db32-24d9-11e5-8a40-797690a292be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<java.util.Map.Entry<K, V>>)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":0},{"failures":[],"tindex":"d0c7db33-24d9-11e5-8a40-a1b1c51fd89f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:209","type":"CtReturnImpl","sourcecode":"return java.util.Collection<T> == null ? org.apache.commons.collections4.CollectionUtils.java.util.Collection : java.util.Collection<T>"},"status":-2},{"failures":[2],"tindex":"d0c7db34-24d9-11e5-8a40-7b4113598d7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"size","modifications":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12],"tindex":"d0c7db35-24d9-11e5-8a40-fb11b6857d67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"variableMap":{"root":"h","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"d0c80246-24d9-11e5-8a40-67bde44f6094","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"status":0},{"failures":[13],"tindex":"d0c80247-24d9-11e5-8a40-1145b70d4e51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullPredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.Predicate))"},"status":-1},{"failures":[14],"tindex":"d0c80248-24d9-11e5-8a40-9f7a2b471153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.BagUtils:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedSortedBag.synchronizedSortedBag(org.apache.commons.collections4.SortedBag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(org.apache.commons.collections4.SortedBag<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-1},{"failures":[],"tindex":"d0c80249-24d9-11e5-8a40-1db7b734f63a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtConstructorCallImpl","sourcecode":"new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1228","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"d0c8024a-24d9-11e5-8a40-35f6828a7a54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"d0c8295b-24d9-11e5-8a40-63756e97a10a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:201","type":"CtReturnImpl","sourcecode":"return super.isEmpty()"},"status":-2},{"failures":[],"tindex":"d0c8295c-24d9-11e5-8a40-9139b9286fa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:989","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this)"},"status":0},{"failures":[15],"tindex":"d0c8295d-24d9-11e5-8a40-15d321ff6ef4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"changed","changed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1123","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next())"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"d0c8295e-24d9-11e5-8a40-4d1b09edd988","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:364","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null"},"variableMap":{"data":"data","i":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:549","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-1},{"failures":[175],"tindex":"d0c8295f-24d9-11e5-8a40-e14a18ae87da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:801","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-1},{"failures":[],"tindex":"d0c85070-24d9-11e5-8a40-39fb001a47bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:807","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.addAll(java.util.Collection<C>)"},"variableMap":{"resultCollection":"collection","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1140","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement())"},"status":-2},{"failures":[176,177,178,179,180,181,182],"tindex":"d0c85071-24d9-11e5-8a40-95f154bbec7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"modCount","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:303","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"d0c8295c-24d9-11e5-8a40-9139b9286fa2","diffs":[{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"}]},{"transformation":"d0c8024a-24d9-11e5-8a40-35f6828a7a54","diffs":[{"nodes":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"edges":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()_return entrySet","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()_entrySet = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this)","org.apache.commons.collections4.map.AbstractHashedMap.int size()_return size","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)_this.threshold = calculateThreshold(initialCapacity, loadFactor)"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().t1","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.EmptyOrderedIterator_<E>_org.apache.commons.collections4.OrderedIterator_emptyOrderedIterator().b"]},"type":"branch"}]},{"transformation":"d0c7db32-24d9-11e5-8a40-797690a292be","diffs":[{"nodes":{"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)"]},"edges":{"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.set.AbstractSetDecorator.org.apache.commons.collections4.set.AbstractSetDecorator(java.util.Set)","org.apache.commons.collections4.set.UnmodifiableSet.java.util.Iterator iterator() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractIteratorDecorator.org.apache.commons.collections4.iterators.AbstractIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.java.util.Set entrySet() -> org.apache.commons.collections4.set.UnmodifiableSet.<E> java.util.Set unmodifiableSet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator(java.util.Map$Entry)","org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey() -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.java.util.Iterator getIterator()","org.apache.commons.collections4.iterators.UnmodifiableIterator.E next() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator(java.util.Iterator)","org.apache.commons.collections4.map.UnmodifiableEntrySet.<K,V> java.util.Set unmodifiableEntrySet(java.util.Set) -> org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet(java.util.Set)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry.org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry(java.util.Map$Entry)","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.UnmodifiableEntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.set.AbstractSetDecorator.java.util.Set decorated()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.iterators.UnmodifiableIterator_E_next().b","org.apache.commons.collections4.set.UnmodifiableSet_org.apache.commons.collections4.set.UnmodifiableSet(java.util.Set).b","org.apache.commons.collections4.set.UnmodifiableSet_<E>_java.util.Set_unmodifiableSet(java.util.Set).b","org.apache.commons.collections4.iterators.UnmodifiableIterator_<E>_java.util.Iterator_unmodifiableIterator(java.util.Iterator).e1","org.apache.commons.collections4.iterators.UnmodifiableIterator_<E>_java.util.Iterator_unmodifiableIterator(java.util.Iterator).e2","org.apache.commons.collections4.iterators.UnmodifiableIterator_boolean_hasNext().b","org.apache.commons.collections4.set.UnmodifiableSet_java.util.Iterator_iterator().b","org.apache.commons.collections4.iterators.UnmodifiableIterator_<E>_java.util.Iterator_unmodifiableIterator(java.util.Iterator).b","org.apache.commons.collections4.iterators.UnmodifiableIterator_org.apache.commons.collections4.iterators.UnmodifiableIterator(java.util.Iterator).b","org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator_java.util.Iterator_getIterator().b","org.apache.commons.collections4.set.UnmodifiableSet_<E>_java.util.Set_unmodifiableSet(java.util.Set).e1","org.apache.commons.collections4.iterators.AbstractIteratorDecorator_E_next().b","org.apache.commons.collections4.set.AbstractSerializableSetDecorator_org.apache.commons.collections4.set.AbstractSerializableSetDecorator(java.util.Set).b"]},"type":"branch"}]}]}