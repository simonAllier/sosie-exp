{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":11,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":3,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":17,"org.apache.commons.collections4.CollectionUtilsTest.transform2":14,"org.apache.commons.collections4.CollectionUtilsTest.collect":16,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":6,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":18,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":12,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testIterator":2,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":7,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":10,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":20,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":19,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":15,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testIterator":4,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":5,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":13,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":9,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testSelfReferenceHandling":1},"transformations":[{"failures":[0,1],"tindex":"ce713eab-276b-11e5-a699-19dc4f5a5066","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:73","type":"CtAssignmentImpl","sourcecode":"this.V = V"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"ce7165bc-276b-11e5-a699-9dc7acc547dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"ce718ccd-276b-11e5-a699-65bf9a5a2772","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","leftChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:903","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"ce718cce-276b-11e5-a699-093f0f1dee38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:119","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.addIterator(java.util.Iterator<? extends E>)"},"status":0},{"failures":[],"tindex":"ce718ccf-276b-11e5-a699-3789f52f4812","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"status":-2},{"failures":[7,8,9,10,11,12],"tindex":"ce71b3e0-276b-11e5-a699-9f7a5ccd99d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.NodeList == null) {\n    throw new java.lang.NullPointerException(\"NodeList must not be null\");\n} "},"variableMap":{"nodeList":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"ce7388a1-276b-11e5-a699-dfaab51c5b38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:220","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0},{"failures":[13],"tindex":"ce73afb2-276b-11e5-a699-737b99e1fe5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"ce73afb3-276b-11e5-a699-915f686a8681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:95","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2},{"failures":[],"tindex":"ce73afb4-276b-11e5-a699-bdb27e827b8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:231","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ce73afb5-276b-11e5-a699-85ce5a6e9605","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[14,15,16],"tindex":"ce73afb6-276b-11e5-a699-0791475c699c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends I> != null) {\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable<? extends I>.iterator(), org.apache.commons.collections4.Transformer<? super I, ? extends O>, R);\n} "},"status":-1},{"failures":[],"tindex":"ce73afb7-276b-11e5-a699-67a524adcd56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")"},"status":-2},{"failures":[],"tindex":"ce73d6c8-276b-11e5-a699-9354f72d7123","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:308","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<K, V>>"},"status":-2},{"failures":[],"tindex":"ce73d6c9-276b-11e5-a699-abd0a620df2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"ce73d6ca-276b-11e5-a699-1995f5e34844","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"ce73d6cb-276b-11e5-a699-2f93cf0cf03a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:189","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ce73d6cc-276b-11e5-a699-857219ba6a6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"x","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[17,18,19,20],"tindex":"ce73d6cd-276b-11e5-a699-ab50ee58795b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:184","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":-1},{"failures":[],"tindex":"ce73fdde-276b-11e5-a699-f9ae090a7169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"ce7388a1-276b-11e5-a699-dfaab51c5b38","diffs":[{"branches":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().t2","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e3","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().t2","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e3","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"]},"edges":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.FilterIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.FilterIterator.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.FilterIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.V next()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.E next()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.E next()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.E next()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator","org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next()_currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator"]},"type":"variable"}]},{"transformation":"ce73d6cc-276b-11e5-a699-857219ba6a6a","diffs":[{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap.void swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap$Node_void_swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t5"]},"type":"branch"}]}]}