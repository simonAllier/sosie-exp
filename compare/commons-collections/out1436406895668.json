{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":123,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":170,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":178,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":111,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":60,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":39,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":106,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":125,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":182,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":88,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":101,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":92,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":76,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":155,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":149,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":148,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":46,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":150,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":52,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":137,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":144,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":160,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":159,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":162,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":161,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":156,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":173,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":95,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":83,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":58,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":75},"transformations":[{"failures":[],"tindex":"7f37c6ba-25dd-11e5-8d5a-35d0acdfb024","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1314","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"7f37edcb-25dd-11e5-8d5a-fbe906e21afd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:203","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"7f3814dc-25dd-11e5-8d5a-7971e6a21c41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"7f3814dd-25dd-11e5-8d5a-b519181a38a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl","sourcecode":"return java.util.Set<T>.add(T)"},"status":-2},{"failures":[0,1],"tindex":"7f3814de-25dd-11e5-8d5a-db054aab9733","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-1},{"failures":[],"tindex":"7f38ff3f-25dd-11e5-8d5a-9d98356b1221","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:208","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-2},{"failures":[2,3],"tindex":"7f38ff40-25dd-11e5-8d5a-4f6271ddb299","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[4,5,6,7],"tindex":"7f38ff41-25dd-11e5-8d5a-433a5f2a8cd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:110","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"7f394d62-25dd-11e5-8d5a-e3e941232329","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:830","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:169","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"status":-2},{"failures":[],"tindex":"7f394d63-25dd-11e5-8d5a-670c4c669629","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:345","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"status":-2},{"failures":[],"tindex":"7f397474-25dd-11e5-8d5a-63a04fd54cfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:122","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"7f397475-25dd-11e5-8d5a-bd4ad13c323e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:267","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null values not allowed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"status":-1},{"failures":[],"tindex":"7f397476-25dd-11e5-8d5a-174be85264dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:279","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"7f397477-25dd-11e5-8d5a-c7817bf8de22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"7f397478-25dd-11e5-8d5a-95e29faff892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:495","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"previous":"header","insertBeforeNode":"header","nodeToInsert":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:98","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createHeaderNode()"},"status":-1},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"7f3a37c9-25dd-11e5-8d5a-e741c5224417","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:234","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"7f3a37ca-25dd-11e5-8d5a-15a7dc2ae83e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:165","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"before","header":"after","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:266","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"7f3a37cb-25dd-11e5-8d5a-056d57fb7830","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-2},{"failures":[],"tindex":"7f3a37cc-25dd-11e5-8d5a-ad8539c421d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"7f3a37cd-25dd-11e5-8d5a-4d2a17fcd62f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rightChild","y":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"7f397477-25dd-11e5-8d5a-c7817bf8de22","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}