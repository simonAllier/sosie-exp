{"failureDictionary":{"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":15,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":34,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":29,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":35,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":23,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":21,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":44,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":24,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":28,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":9,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":36,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":37,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":48,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":3,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":38,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":32,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":51,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":46,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":40,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":49,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":13,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":50,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":47},"transformations":[{"failures":[0,1],"tindex":"df13ccb7-250c-11e5-a0b9-39633eace6c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"df13f3c8-250c-11e5-a0b9-3da54407f86b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"j","index":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:274","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"df13f3c9-250c-11e5-a0b9-7797494e115c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MultiMap<K, C>.clear()"},"status":-2},{"failures":[],"tindex":"df13f3ca-250c-11e5-a0b9-f9d85a79ac40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1804","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive()"},"variableMap":{"this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:231","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.util.Set<E>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"df141adb-250c-11e5-a0b9-d3534476c947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashIndex","newCapacity":"hashCode","proposedCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:276","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V)"},"status":-2},{"failures":[8,9],"tindex":"df141adc-250c-11e5-a0b9-8910630c68ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"df141add-250c-11e5-a0b9-8fe8d8630e6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[10,11,12,13,14,15],"tindex":"df1441ee-250c-11e5-a0b9-5f37c76b5753","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"variableMap":{"this":"this","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"df1441ef-250c-11e5-a0b9-45f7f0347a2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"df1441f0-250c-11e5-a0b9-a70643e4c5ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[34,35],"tindex":"df146901-250c-11e5-a0b9-e7b50e3193ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"df146902-250c-11e5-a0b9-35e7f7f6827f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.StringValueTransformer:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.org.apache.commons.collections4.Transformer<java.lang.Object, java.lang.String>"},"status":-2},{"failures":[36,37,38],"tindex":"df146903-250c-11e5-a0b9-31d5eb17dc9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtInvocationImpl","sourcecode":"java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"next","b":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:259","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.Object>.add(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"df146904-250c-11e5-a0b9-73914100972e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":0},{"failures":[39,40,41,42,43,44],"tindex":"df149015-250c-11e5-a0b9-c3fe01c2919e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"status":-1},{"failures":[],"tindex":"df149016-250c-11e5-a0b9-f748f0018736","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:227","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[45,46,47,48],"tindex":"df149017-250c-11e5-a0b9-81d0850fd398","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"df149018-250c-11e5-a0b9-7b2af9e5e7e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"counter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"status":0},{"failures":[],"tindex":"df14b729-250c-11e5-a0b9-b9d6870aee70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:182","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[49,50,51],"tindex":"df14b72a-250c-11e5-a0b9-01db535df4c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"i","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}