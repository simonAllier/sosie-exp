{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":24,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":63,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":40,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":70,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":26,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":23,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":54,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":74,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":56,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":66,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":79,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":14,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":52},"transformations":[{"failures":[],"tindex":"4ab31659-2467-11e5-882b-b90d3a1e059c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:588","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null"},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1103","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap()"},"status":0},{"failures":[],"tindex":"4ab33d6a-2467-11e5-882b-7d141af41a4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"4ab33d6b-2467-11e5-882b-47b037c878b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-1},{"failures":[45],"tindex":"4ab3647c-2467-11e5-882b-fd92cb94ef1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:89","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"4ab3647d-2467-11e5-882b-ff7af404b39f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:117","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:52","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>))"},"status":-2},{"failures":[],"tindex":"4ab3647e-2467-11e5-882b-396d7b95f881","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"path","parent":"current","left":"current","h":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1105","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"4ab3647f-2467-11e5-882b-bd1750e7cf77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[46,1,2,3,5,6,7,8,4,9,10,11,13,14,15,16,17,18,19,21,22,23,24,28,29,30,31,27,25,26,32,33,34,36,37,38,39,40,41,42,44],"tindex":"4ab36480-2467-11e5-882b-0f4b692a2da3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"4ab36481-2467-11e5-882b-1f8ffdecccd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:351","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"4ab36482-2467-11e5-882b-91e54091c595","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.bitsPerElement()"},"variableMap":{"keyAnalyzer":"keyAnalyzer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.bitIndex(K, 0, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K), K, 0, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K))"},"status":-2},{"failures":[47,48,49,50,51,52,53],"tindex":"4ab38b93-2467-11e5-882b-599afdac6cdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"4ab38b94-2467-11e5-882b-dd4b2c579019","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:380","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"4ab38b95-2467-11e5-882b-6da497809993","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[78],"tindex":"4ab38b96-2467-11e5-882b-8d9d74583c5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"4ab38b97-2467-11e5-882b-fddaa05df7a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1027","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[79,80,81,82],"tindex":"4ab38b98-2467-11e5-882b-3d781d847d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:371","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[83,84],"tindex":"4ab3b2a9-2467-11e5-882b-0be10019135d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-1},{"failures":[85],"tindex":"4ab3b2aa-2467-11e5-882b-79b933b2bc4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:76","type":"CtReturnImpl","sourcecode":"return java.util.List<T> == null ? java.util.List<T> : java.util.List<T>"},"variableMap":{"list":"list","defaultList":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:62","type":"CtReturnImpl","sourcecode":"return java.util.List<T> == null ? java.util.Collections.<T>emptyList() : java.util.List<T>"},"status":-1},{"failures":[],"tindex":"4ab3b2ab-2467-11e5-882b-973c6f7d554f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-2},{"failures":[],"tindex":"4ab3b2ac-2467-11e5-882b-3dc8e71538d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"previous","entry":"previous","key2":"key1","previous":"entry","hashCode":"hashCode","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"4ab38b97-2467-11e5-882b-fddaa05df7a6","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1"]},"type":"branch"}]},{"transformation":"4ab31659-2467-11e5-882b-b90d3a1e059c","diffs":[{"branches":{"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.Flat3Map_V_put(K,V).t1"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.Flat3Map.void readObject(java.io.ObjectInputStream)":["org.apache.commons.collections4.map.Flat3Map.void readObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.Flat3Map.org.apache.commons.collections4.map.AbstractHashedMap createDelegateMap()"]},"graph":"branch"}]}]}