{"failureDictionary":{"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":2,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":6,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":8,"org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":9,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":10,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":12},"transformations":[{"failures":[0],"tindex":"336153b4-253c-11e5-b044-fb4c0a7913a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.EqualPredicate:54","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{"this":"org.apache.commons.collections4.functors.ExceptionPredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.Predicate))"},"status":-1},{"failures":[],"tindex":"33617ac5-253c-11e5-b044-abd6ab2db550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:813","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>"},"status":-2},{"failures":[1,2,3],"tindex":"33617ac6-253c-11e5-b044-9fb29638eb4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"3361a1d7-253c-11e5-b044-098f00da3dd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"nextNode":"rval","lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:702","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[4,5],"tindex":"3361a1d8-253c-11e5-b044-c32e7db14c57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:722","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"ListIterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[6,7,8,9,10,11,12],"tindex":"3361a1d9-253c-11e5-b044-cd504c9e4964","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[],"tindex":"33628c3a-253c-11e5-b044-e7bd2ba899cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"status":-2},{"failures":[13],"tindex":"33628c3b-253c-11e5-b044-5b188ce3cbb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":-1},{"failures":[14],"tindex":"33628c3c-253c-11e5-b044-690157b1bb1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"3362b34d-253c-11e5-b044-e111865e01f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:139","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.lang.Boolean.booleanValue()"},"status":-2},{"failures":[],"tindex":"3362da5e-253c-11e5-b044-ff2c164d705c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:157","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(org.apache.commons.collections4.OrderedMapIterator<K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"3362da5f-253c-11e5-b044-5f0ff124f428","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"p","parent":"parent","left":"parent","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"33630170-253c-11e5-b044-81296ccd7c4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:126","type":"CtAssignmentImpl","sourcecode":"java.util.List<E> = null"},"variableMap":{"nextPermutation":"nextP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:148","type":"CtAssignmentImpl","sourcecode":"java.util.List<E> = java.util.List<E>"},"status":-2},{"failures":[],"tindex":"33630171-253c-11e5-b044-e968708f382f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:707","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.lang.Iterable<T>.iterator(), C)"},"status":0},{"failures":[],"tindex":"33630172-253c-11e5-b044-edf800ec8b2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection<C>, java.lang.Iterable<? extends C>.iterator())"},"status":-2},{"failures":[],"tindex":"33630173-253c-11e5-b044-73fa2d3be3b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[],"tindex":"33630174-253c-11e5-b044-3d0f76b802dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:368","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"33630175-253c-11e5-b044-e5d438a5c47d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:115","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[15],"tindex":"33630176-253c-11e5-b044-a9c8d713cb65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1335","type":"CtAssignmentImpl","sourcecode":"int = ((java.util.Map<?, ?>)(java.lang.Object)).size()"},"status":-1},{"failures":[],"tindex":"33639db7-253c-11e5-b044-d7e7f09d5ecd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"sm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"33630173-253c-11e5-b044-73fa2d3be3b7","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"type":"graph"}]}]}