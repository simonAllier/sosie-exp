{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":61,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":102,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":24,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":74,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":55,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":85,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":11,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":62,"org.apache.commons.collections4.CollectionUtilsTest.reverse":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":72,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":88,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":51,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":50,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":59,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":13,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":43,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":71,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":29,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":26,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":32,"org.apache.commons.collections4.FactoryUtilsTest.testExceptionFactory":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":56,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":41,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":91,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":49,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":84,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":40,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":39,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":22,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":37,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":20,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":48,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":67},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"c67c6de7-2413-11e5-8005-e5e4f9008bc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:349","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-1},{"failures":[23,24,25,26,27,28],"tindex":"c67c94f8-2413-11e5-8005-ef41e59b34ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1202","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"))"},"status":-1},{"failures":[],"tindex":"c67c94f9-2413-11e5-8005-abe9f7577b72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:156","type":"CtLocalVariableImpl","sourcecode":"final V V = this.V"},"status":-2},{"failures":[],"tindex":"c67c94fa-2413-11e5-8005-23ca5619ee70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"c67c94fb-2413-11e5-8005-6f5f2d7685e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.hasPrevious()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-2},{"failures":[29],"tindex":"c67c94fc-2413-11e5-8005-b9ca1f1d09e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:156","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[30],"tindex":"c67c94fd-2413-11e5-8005-8b11a8d12b95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory))"},"status":-1},{"failures":[31,32,33,34,35,36,37],"tindex":"c67c94fe-2413-11e5-8005-c9c638b38695","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:368","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[38],"tindex":"c67cbc0f-2413-11e5-8005-7f3fb1af8095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:327","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"nCopies":"j","size":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1446","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"c67cbc10-2413-11e5-8005-e9b593d619a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:325","type":"CtLocalVariableImpl","sourcecode":"final java.util.Collection<V> java.util.Collection<V> = java.util.Collection<V>"},"status":-2},{"failures":[39],"tindex":"c67cbc11-2413-11e5-8005-5bd11719d13c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"No Collection associated with this Iterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1291","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-1},{"failures":[],"tindex":"c67cbc12-2413-11e5-8005-3baec2d295aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:215","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.util.Collection<V>.remove(java.lang.Object)"},"status":-2},{"failures":[40,41],"tindex":"c67cbc13-2413-11e5-8005-37f5bfd9902d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,9,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,10,74,75,76,77,78,79,80,81,82,83,84,12,85,86,87,88,89,90,91,92,93,94,18],"tindex":"c67cbc14-2413-11e5-8005-21fdb0846512","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:468","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1004","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.ValuesIterator<V>(this)"},"status":-1},{"failures":[95,96,97,98,99,100],"tindex":"c67cbc15-2413-11e5-8005-7b8f4b4557f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"c67ce326-2413-11e5-8005-fd6bd8ec946e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:216","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()"},"status":0},{"failures":[],"tindex":"c67ce327-2413-11e5-8005-1f212426e765","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"object","dataElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:214","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"c67ce328-2413-11e5-8005-756ec413ef67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"c67ce329-2413-11e5-8005-759da48b806a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:310","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.hashCode()"},"status":0},{"failures":[101,102,103,104],"tindex":"c67ce32a-2413-11e5-8005-4f0585a387d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"c67ce326-2413-11e5-8005-fd6bd8ec946e","diffs":[{"nodes":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()","org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"]},"edges":{"org.apache.commons.collections4.iterators.IteratorChain.E next()":["org.apache.commons.collections4.iterators.IteratorChain.E next() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.E next()"],"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":[],"org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator()":["org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator)","org.apache.commons.collections4.iterators.IteratorChain.void updateCurrentIterator() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChain.void remove()":["org.apache.commons.collections4.iterators.IteratorChain.void remove() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":[],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":[],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.iterators.FilterIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.iterators.FilterIterator.E next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.iterators.FilterIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.void remove()","org.apache.commons.collections4.iterators.ListIteratorWrapper.E next() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.V next()","org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext() -> org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.boolean hasNext()"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":[],"org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()":["org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext() -> org.apache.commons.collections4.iterators.ListIteratorWrapper.boolean hasNext()"]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator = currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator = currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator = currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain.void remove()_lastUsedIterator.remove()","org.apache.commons.collections4.iterators.IteratorChain.boolean hasNext()_lastUsedIterator = currentIterator","org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain.E next()_lastUsedIterator = currentIterator"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().t2","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e3","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().t2","org.apache.commons.collections4.iterators.ListIteratorWrapper_void_remove().e3","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).b","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().b","org.apache.commons.collections4.iterators.ListIteratorWrapper_org.apache.commons.collections4.iterators.ListIteratorWrapper(java.util.Iterator).e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e1","org.apache.commons.collections4.iterators.ListIteratorWrapper_boolean_hasNext().t1","org.apache.commons.collections4.iterators.ListIteratorWrapper_E_next().e2"]},"type":"branch"}]}]}