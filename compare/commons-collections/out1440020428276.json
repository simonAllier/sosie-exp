{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":34,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":4,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":1,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":5,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":67,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":72,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":74,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":76,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":8,"org.apache.commons.collections4.CollectionUtilsTest.reverse":0,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":29,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":56,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":68,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":16,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":33,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":3,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":59,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":27,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":35,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":73,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":7,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":43},"transformations":[{"failures":[],"tindex":"e87bfff3-46ba-11e5-bf98-778deb6bb866","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"variableMap":{"this":"this","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":0},{"failures":[0],"tindex":"e87c2704-46ba-11e5-bf98-371a603a63f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1445","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"e87c2705-46ba-11e5-bf98-53d50c9a7a00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:331","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E> = org.apache.commons.collections4.set.CompositeSet.SetMutator<E>"},"status":-1},{"failures":[20,21],"tindex":"e87c2706-46ba-11e5-bf98-1d21403a04bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:188","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[22,23],"tindex":"e87c2707-46ba-11e5-bf98-a3ca2f6f814d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"a":"collection","b":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"e87c2708-46ba-11e5-bf98-13ad834384a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.NodeList == null) {\n    throw new java.lang.NullPointerException(\"NodeList must not be null\");\n} "},"variableMap":{"nodeList":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[65],"tindex":"e87c4e19-46ba-11e5-bf98-b11d14fad01b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[66],"tindex":"e87c4e1a-46ba-11e5-bf98-a7403f419663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"object","value1":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"status":-1},{"failures":[],"tindex":"e87c4e1b-46ba-11e5-bf98-07559b8dd7ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:577","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>, 0)"},"status":-2},{"failures":[67],"tindex":"e87c4e1c-46ba-11e5-bf98-f7cff1458bb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[68,69,70,71],"tindex":"e87c4e1d-46ba-11e5-bf98-635a2ae6382b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:341","type":"CtReturnImpl","sourcecode":"return java.util.Collection<V>.contains(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"e87c4e1e-46ba-11e5-bf98-2b073d02635a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"e87c752f-46ba-11e5-bf98-119fa6fa185c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"left","this":"this","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[72,73],"tindex":"e87c7530-46ba-11e5-bf98-5be167ea10af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"e87c7531-46ba-11e5-bf98-57921d4cff08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1229","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeFloat(float)"},"status":-2},{"failures":[],"tindex":"e87c9c42-46ba-11e5-bf98-f3d6343508fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e87c9c43-46ba-11e5-bf98-b5ee4c12530e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:108","type":"CtReturnImpl","sourcecode":"return ((K) == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : K.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))"},"status":0},{"failures":[74,75,76],"tindex":"e87c9c44-46ba-11e5-bf98-e56247e91829","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)"},"status":-1},{"failures":[77],"tindex":"e87c9c45-46ba-11e5-bf98-7f277fc373c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"status":-1},{"failures":[],"tindex":"e87c9c46-46ba-11e5-bf98-49ec327f4e69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:256","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.list()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}